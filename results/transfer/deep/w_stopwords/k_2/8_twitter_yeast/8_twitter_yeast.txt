Starting experiment 8_twitter_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.92
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.12005369700427287;  // std dev = 4.935, 126.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=33 */
%   | | | else return 0.13087620782678386;  // std dev = 5.117, 132.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.3749436213663776;  // std dev = 0.944, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7267751356536563;  // std dev = 2.821, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | | else return -0.157831270746483;  // std dev = 0.009, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | | else if ( location(A, I) )
%   | | | then return 0.406494987946791;  // std dev = 1.314, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08846874527811718;  // std dev = 4.335, 124.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6911126584247492;  // std dev = 0.988, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.13860141154784902;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05459870859502493;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.015638799925217894;  // std dev = 1.435, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.41751358415830986;  // std dev = 3.65e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08248641584169003;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4499870706286508;  // std dev = 1.791, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | else return 0.05596631274644935;  // std dev = 4.949, 214.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6344298759065841;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return -0.040901893383092455;  // std dev = 1.796, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33742441942857665;  // std dev = 0.108, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.07165365903768306;  // std dev = 5.378, 234.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.47922166542970923;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.099774857501437;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.18158122701249044;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2524607879071539;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.1595749884052077;  // std dev = 0.858, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.362996282641494;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.012587548876828591;  // std dev = 2.304, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.07326215782166792;  // std dev = 4.669, 173.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=55 */
%   | | | else return 0.004141213459389827;  // std dev = 1.929, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2722493566145555;  // std dev = 0.351, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.28386311824369614;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4899539708588914;  // std dev = 1.805, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.18793453762698636;  // std dev = 0.615, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.040242284367464354;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.058263129902944626;  // std dev = 3.937, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.04268430779325234;  // std dev = 0.801, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.2166292771917116;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42409968915551843;  // std dev = 2.420, 78.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=71 */
%   | | else return -0.15022125276336767;  // std dev = 0.221, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.22983514494059687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.12690405903557456;  // std dev = 1.338, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19546933766427255;  // std dev = 0.202, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.7994839050711426;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.19343625751639082;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.004444444545746347;  // std dev = 1.422, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.35810936353861067;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.02711513263594401;  // std dev = 1.581, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18201223774202588;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.054889331600955917;  // std dev = 3.153, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
%   | | | else return -0.012580840500756574;  // std dev = 1.467, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14392732012986892;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3316848338721563;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16534244179910565;  // std dev = 0.067, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.005826651579715122;  // std dev = 2.319, 104.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.0935371957219196;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.021309474132825634;  // std dev = 3.434, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
%   | | | else return -0.010048388970455307;  // std dev = 1.468, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.094', 'seconds']
Parameter learned model CLL:-0.19925 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.935, 93, 33], 'false,false,true,false': [5.117, 96, 36], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 5], 'false,true,true': [0.944, 2, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.821, 9, 69], 'false,false,true,false': [0.009, 152, 0], 'false,false,false,true': [1.314, 3, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.335, 90, 34], 'false,true,false,true': [0.988, 1, 37], 'false,true,false,false': [0.0, 76, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.195, 5, 2], 'false,false,false,true': [1.435, 9, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [3.65e-08, 0, 10], 'true,false': [0.707, 1, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.791, 5, 14], 'false,true,false': [4.949, 157, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.796, 17, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.108, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 4], 'false,true': [5.378, 163, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.003, 0, 7], 'true,true,false': [0.858, 2, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.304, 36, 12], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [4.669, 118, 55], 'false,false,false,false': [1.929, 18, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.351, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.805, 4, 33], 'true,false': [0.615, 102, 0], 'false,true': [0.866, 1, 3], 'false,false,true': [3.937, 90, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.801, 1, 6], 'true,false': [0.068, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.42, 7, 71], 'false,true,false': [0.221, 136, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.338, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.202, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.076, 0, 3], 'false,true,true': [1.422, 31, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.581, 37, 17], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [3.153, 76, 40], 'false,false,false,false': [1.467, 11, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.053, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.067, 0, 3], 'false,true': [2.319, 75, 29], 'false,false,true': [0.866, 1, 3], 'false,false,false,true': [3.434, 78, 40], 'false,false,false,false': [1.468, 11, 4]}]
{'': [-1.6148698540002277e-16, 0.2004368906175079], 'false': [1.4802973661668753e-16, 0.1968110456012322], 'false,false': [0.19591671173607392, 0.21301775147928975], 'false,false,false': [0.22222222222222224, 0.20408163265306126], 'false,false,true': [0.19331065759637314, 0.19834710743801767], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [-8.074349270001139e-17, 0.2133709597806221], 'false': [0.17805116516911185, 0.2130704040590334], 'false,false': [0.2099892596530292, 0.24650169560812682], 'false,false,false': [0.24650169560812682, nan], 'false,false,true': [0.10204882534030055, 5.171991239669014e-07], 'false,true': [0.17805116516911185, nan], 'true': [7.401486830834377e-17, -1.7763568394002506e-16]}
{'': [-1.2111523905001707e-16, 0.15940583611871778], 'false': [0.15695038068685377, 0.18390832529715484], 'false,false': [0.2040816326530612, 0.17158134575788023], 'false,false,true': [nan, 0.2040816326530612], 'false,false,false': [0.17158134575788023, nan], 'false,true': [0.15155383195819463, 0.16154364815474595], 'false,true,false': [0.025680652523907044, -1.1686558153949016e-17], 'true': [0.0, 0.0]}
{'': [0.07638888888888899, 0.1343584600477851], 'false': [0.13050332392715594, 0.1663583119576784], 'false,false': [0.0, 0.1535495454906189], 'false,false,false': [0.1535495454906189, nan], 'false,true': [0.16874157084228714, 0.1144482758892527], 'false,true,true': [nan, 0.16874157084228725], 'true': [1.3322676295501878e-16, 0.25], 'false,false,true': [nan, 0.0]}
{'': [0.0011310903735158356, 0.1287921158436349], 'false': [0.12360428921808309, 0.22158053399975752], 'false,false': [0.0, 0.23196227379705825], 'false,false,false': [0.2222222222222223, 0.23999999999999994], 'true': [0.0016758604309643804, 0.0], 'true,true': [0.0016758604309643804, nan], 'false,false,true': [nan, 0.0]}
{'': [0.060099352513541184, 0.12563396465345403], 'false': [0.11063589814847331, 0.12864569919837765], 'false,false': [0.0, 0.13006138292764377], 'false,false,false': [0.12601147992915787, 0.1550587841841872], 'true': [0.06339440464833158, 0.0], 'true,true': [1.225331064320339e-06, 0.14711198883885493], 'true,false': [nan, 0.0]}
{'': [0.11359676131570368, 0.12157821039591991], 'false': [0.18750000000000006, 0.119260196395869], 'false,false': [0.119260196395869, nan], 'true': [0.07872807883654225, 0.0037062657740528225], 'true,true': [0.011217595744432677, 0.08804243357251461], 'true,true,false': [nan, 0.0880424335725149], 'true,true,true': [0.012327093549859714, 0.0]}
{'': [0.06115849230219183, 0.10718535880409455], 'false': [0.10399892264785827, 0.1635147857634587], 'false,false': [0.0, 0.17890309993566028], 'false,false,false': [0.17890309993566028, nan], 'false,true': [0.07508444695175938, 0.0003585124672227086], 'false,true,true': [nan, 0.07508444695175957], 'true': [0.09157060182023447, 0.0009317084224974515], 'false,false,true': [0.0, nan]}
{'': [0.07943679929895113, 0.07329583870472997], 'true': [0.005121713450085184, 0.18631255124339288], 'true,false': [0.0, 0.0019441226729770649], 'false': [0.0480652352864686, 0.09109357832923971], 'false,false': [0.0, 0.09277258370159139], 'false,false,false': [0.08570602529819435, 0.1433896582681285], 'false,true': [0.04814524828599122, 0.047392718329805586], 'false,true,false': [0.0, 0.04627841251836906]}
{'': [0.0034725572818436264, 0.08363944056848452], 'false': [0.05171018520250133, 0.10769900605359743], 'false,false': [0.18749999999999997, 0.10493722633840628], 'false,false,false': [0.09991269758365472, 0.143591103883918], 'true': [0.00420426438847769, 0.0015182683324110786], 'true,true': [0.00420426438847769, nan], 'true,true,true': [0.0003982630909959904, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 14.115
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A), phenotype(A, H) )
%   | | then if ( complex(A, I), complex(G, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.13433941128998855;  // std dev = 4.582, 105.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=29 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.3581489350995123;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.16445524140581744;  // std dev = 4.856, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7295448586903791;  // std dev = 2.708, 77.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=69 */
%   | | | else return -0.16371919665090234;  // std dev = 0.171, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.020215057170110424;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.4369277999727467;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5655379819307462;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5960526174841312;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.05116952803136999;  // std dev = 3.248, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | | | else return 0.12218954175805832;  // std dev = 2.842, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6070217602243313;  // std dev = 1.907, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.14241982492938385;  // std dev = 0.088, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.21111225507390788;  // std dev = 1.085, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.005076338116085899;  // std dev = 0.694, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.01827865675905235;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3406844880785289;  // std dev = 0.280, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.4559907657749296;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( enzyme(F, G) )
%   | | | then return -0.04340753244262371;  // std dev = 1.130, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.08106759491114432;  // std dev = 2.305, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.06837413700566085;  // std dev = 3.017, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | | | else return 0.12387085270869533;  // std dev = 3.775, 107.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=38 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.617146491810973;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14471048259970706;  // std dev = 1.141, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.04321084446358369;  // std dev = 1.258, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.3392516183831777;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3354037201496489;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.36817797748322834;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), interaction(A, I) )
%   | | | then return -0.007787957949777492;  // std dev = 2.074, 44.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=8 */
%   | | | else return 0.10001302289893776;  // std dev = 3.694, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.04277853367795095;  // std dev = 1.389, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.1575221611432006;  // std dev = 2.775, 61.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=26 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.46513355495266384;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.44150048758004606;  // std dev = 1.098, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.31330938220548193;  // std dev = 0.096, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3532403459622987;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.1412374369793925;  // std dev = 0.012, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 9.052260912803881E-4;  // std dev = 1.849, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.01006917817872044;  // std dev = 1.065, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.25310703307877197;  // std dev = 1.174, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.287889696940775;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.037142401558948095;  // std dev = 4.779, 195.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=57 */
%   | | | else return -0.10865379051773222;  // std dev = 1.772, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2548719800981371;  // std dev = 0.085, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.557609715252445;  // std dev = 0.202, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.1908886610674146;  // std dev = 0.064, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, E), interaction(H, H) )
%   | | | then return 0.6301012103907047;  // std dev = 0.134, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.34843446790382476;  // std dev = 1.550, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else return -0.17227683480036995;  // std dev = 0.031, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then return -0.0852106081550749;  // std dev = 0.273, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return -0.02334977365241385;  // std dev = 0.559, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.185174466938283;  // std dev = 1.874, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16956526477728898;  // std dev = 0.000625, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.17802332173602287;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.3413283882807531;  // std dev = 2.237, 48.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=41 */
%   | | | else return 0.42220660173377067;  // std dev = 0.943, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.1409544127980297;  // std dev = 0.210, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | | else return -0.17236890269951138;  // std dev = 0.262, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.22918155109301575;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.10119114283300079;  // std dev = 0.756, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.018977431545083856;  // std dev = 1.171, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1729971099872995;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.010342845727802502;  // std dev = 0.312, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.01434257940084203;  // std dev = 1.690, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.09695977876768397;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return -0.06882084615772817;  // std dev = 0.686, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.03218996928801682;  // std dev = 1.518, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.15187443640506584;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.03507618727766014;  // std dev = 2.140, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
%   | | | else return -0.010917879783681389;  // std dev = 2.407, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.1272565136070323;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.311545265486312;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.032235392344833;  // std dev = 0.766, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, A) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then return -0.09882135336539113;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.08705160876132402;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.35600926199926375;  // std dev = 1.018, 37.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | | else return -0.15102593573522932;  // std dev = 0.630, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.09923891064190007;  // std dev = 1.170, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return -0.0058176500096747425;  // std dev = 3.069, 101.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '32.762', 'seconds']
Refined model CLL: -0.189999


******************************************
Best model found
******************************************
Results 

CLL : -0.191604 

AUC ROC : 0.988745 

AUC PR : 0.273456 

Precision : 0.185582 

Recall : 0.921986 

F1 : 0.308972 

Total Learning Time : 14.115 

Total Inference Time : 20.653248071670532 

Total revision time: 55.53484908103943
Best scored revision CLL: -0.189999


Results 

CLL : -0.191604 

AUC ROC : 0.988745 

AUC PR : 0.273456 

Precision : 0.185582 

Recall : 0.921986 

F1 : 0.308972 

Total Learning Time : 55.5635451412201 

Total Inference Time : 20.653248071670532 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.911
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09299741994799608;  // std dev = 4.870, 132.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=31 */
%   | | | else return 0.14477313892116755;  // std dev = 5.666, 157.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.609733748384724;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.5604369136311727;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7372321343150519;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7579827177370432;  // std dev = 2.534, 83.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=76 */
%   | | | else return -0.15730849983597764;  // std dev = 0.044, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | | else if ( location(A, I) )
%   | | | then return 0.05896077285455137;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5153098851597971;  // std dev = 0.955, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.6095520609496101;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0873582633519765;  // std dev = 4.250, 125.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.610052661695348;  // std dev = 2.122, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.14033198353332885;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8285233599668184;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.29383006422768354;  // std dev = 1.338, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4090731931885849;  // std dev = 0.952, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return -0.20931474544901774;  // std dev = 0.828, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4977490108751357;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4804755145453044;  // std dev = 1.886, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | else return 0.02816660770738413;  // std dev = 5.064, 249.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4777119964534814;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.04240061328658416;  // std dev = 1.671, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.2503932443732572;  // std dev = 0.925, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20868915678387545;  // std dev = 1.324, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.044765778216368436;  // std dev = 5.866, 291.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.36194709921978685;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.09986341504196306;  // std dev = 1.592, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.21726186584240917;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.4170121605448311;  // std dev = 0.168, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2831539766870498;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.007276571214454873;  // std dev = 2.812, 76.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.33481335477356766;  // std dev = 0.142, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.047913168678856824;  // std dev = 4.630, 186.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=51 */
%   | | | else return 0.0497568274848713;  // std dev = 2.237, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2921182894394224;  // std dev = 0.179, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.22934308700274697;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.24903033580077416;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4579779879661516;  // std dev = 1.844, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | else return -0.16806530250648977;  // std dev = 0.639, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2753687598765523;  // std dev = 0.124, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04204353005724373;  // std dev = 4.491, 166.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.21838272077725168;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.07301447880007819;  // std dev = 1.125, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3604410257360006;  // std dev = 3.426, 97.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=82 */
%   | | else return -0.14396565255049976;  // std dev = 0.401, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.1913337047010556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.02407724903471868;  // std dev = 1.499, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19146353202035846;  // std dev = 0.077, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.039721804865390176;  // std dev = 0.481, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.12229750551340146;  // std dev = 0.456, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.03951900354651816;  // std dev = 1.863, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.19479872856972982;  // std dev = 0.733, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.023124884081761204;  // std dev = 1.356, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.212334048220126;  // std dev = 0.106, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.044423687900901926;  // std dev = 3.760, 152.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=47 */
%   | | | else return 0.08943495090997963;  // std dev = 1.350, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.15643949118974443;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.029237397649759807;  // std dev = 0.909, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20456988069824208;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.01586037874989223;  // std dev = 2.390, 132.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.02670539838706461;  // std dev = 0.842, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.04502792378597079;  // std dev = 3.688, 147.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=47 */
%   | | | else return 0.03574637454067383;  // std dev = 1.405, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.556', 'seconds']
Parameter learned model CLL:-0.197857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.87, 101, 31], 'false,false,true,false': [5.666, 112, 45], 'false,false,false,true': [1.664, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.935, 1, 7], 'true,false': [1.291, 2, 10], 'false,true,true': [0.074, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.534, 7, 76], 'false,false,true,false': [0.044, 166, 0], 'false,false,false,true': [1.764, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.955, 1, 11], 'true,false': [0.017, 0, 6], 'false,true,true': [4.25, 91, 34], 'false,true,false,true': [2.122, 5, 48], 'false,true,false,false': [0.0, 110, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.338, 4, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.952, 1, 16], 'true,false': [0.828, 2, 1], 'false,true,true,true': [0.039, 0, 3], 'false,true,true,false': [1.886, 6, 21], 'false,true,false': [5.064, 191, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.671, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.925, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.324, 2, 10], 'false,true': [5.866, 209, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.592, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.949, 1, 9], 'true,true,false': [0.168, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.812, 57, 19], 'false,false,true': [0.142, 0, 8], 'false,false,false,true': [4.63, 135, 51], 'false,false,false,false': [2.237, 23, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.179, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [1.844, 5, 33], 'true,false': [0.639, 100, 0], 'false,true': [0.124, 0, 5], 'false,false,true': [4.491, 119, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [1.125, 2, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.426, 15, 82], 'false,true,false': [0.401, 184, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.499, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.077, 0, 9], 'true,false,true': [0.481, 1, 2], 'true,false,false': [0.456, 1, 5], 'false,true,true': [1.863, 44, 13], 'false,true,false,true': [0.733, 1, 8], 'false,true,false,false': [1.356, 42, 11], 'false,false,true': [0.106, 0, 5], 'false,false,false,true': [3.76, 105, 47], 'false,false,false,false': [1.35, 7, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.909, 1, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.045, 0, 3], 'false,true': [2.39, 100, 32], 'false,false,true': [0.842, 1, 5], 'false,false,false,true': [3.688, 100, 47], 'false,false,false,false': [1.405, 8, 4]}]
{'': [0.05246913580246885, 0.2018834547346519], 'false': [0.10937499999999978, 0.194728301390291], 'false,false': [0.19381951844446346, 0.21301775147928975], 'false,false,false': [0.21301775147928975, nan], 'false,false,true': [0.179694674012857, 0.20447076960525884], 'false,true': [0.22222222222222224, 0.0], 'true': [0.07100591715976314, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.1277015077123665, 0.2133088631756687], 'false': [0.0007884305269265011, 0.20982298884804831], 'false,false': [0.21196455802267203, 0.17283950617283947], 'false,false,true': [0.07736508285516339, 1.162461766131156e-05], 'false,false,false': [0.17283950617283947, nan], 'true': [0.10937499999999989, 0.13894710835392288], 'false,true': [0.0007884305269265011, nan]}
{'': [0.052675774212652855, 0.1526867075238905], 'false': [0.14836484487144236, 0.22710969079688675], 'false,false': [0.22710969079688675, nan], 'false,false,true': [0.0, 0.22373207764556674], 'false,true': [0.14453096816325228, 0.15118961961856045], 'false,true,false': [0.08498870454460578, -7.670631806501082e-17], 'true': [0.07602960688520322, 4.705040248698111e-05]}
{'': [0.12836552030275702, 0.12777505709665368], 'true': [0.05333865396495539, 0.22847466662903906], 'false': [0.12446079349655685, 0.18551601632871806], 'false,false': [0.0, 0.18604025073096525], 'false,false,false': [0.18604025073096525, nan], 'false,true': [0.11859314277953877, 0.103001188592948], 'false,true,true': [0.0004971527972937873, 0.13168508207668697], 'false,false,true': [nan, 0.0]}
{'': [0.13074420883346338, 0.1219527660959748], 'true': [0.106849914677618, 0.1459780459020286], 'false': [0.11822820497673761, 0.19990407970054036], 'false,false': [0.0, 0.2112790716618248], 'false,false,false': [0.2112790716618248, nan], 'true,true': [0.106849914677618, nan], 'false,false,true': [nan, 0.0]}
{'': [0.06338164008483385, 0.11601444411737805], 'false': [0.104018404748304, 0.11937794304739643], 'false,false': [0.002524543107892463, 0.12075132213914695], 'false,false,false': [0.1152669635752007, 0.15166027442976546], 'true': [0.06733821278442474, 0.0], 'true,true': [0.08997200570276938, 0.004677611941118413], 'true,false': [nan, 0.0]}
{'': [0.10146146672684105, 0.11959718840044899], 'false': [0.0030537902988941545, 0.12151569946909323], 'false,false': [0.12151569946909323, nan], 'true': [0.06724836857952242, 0.004084356802098887], 'true,true': [0.0022435349433332363, 0.08591618221321791], 'true,true,false': [-9.25185853854297e-18, 0.08950446884919182], 'true,true,true': [0.002146808561995073, 0.0]}
{'': [0.07157553551875025, 0.101934148324416], 'false': [0.09984790029975253, 0.13478994823012674], 'false,false': [0.0, 0.14048479770101818], 'false,false,false': [0.14048479770101818, nan], 'false,true': [0.12098985360936808, 0.0008756118423535332], 'false,true,true': [nan, 0.12098985360936822], 'true': [-2.3790493384824782e-17, 0.1055424848996666], 'false,false,true': [0.0, nan]}
{'': [0.0314295053448235, 0.07916033135636985], 'false': [0.052784229396274765, 0.09598965409263759], 'false,false': [0.0022477953854970756, 0.09805615227191022], 'false,false,false': [0.09301935953567479, 0.16576618114154815], 'false,true': [0.060898045564951764, 0.04421985985128631], 'false,true,false': [0.0596448133992192, 0.03470671668834951], 'true': [0.000664067840024269, 0.054609214991941636], 'true,false': [0.07703886901839348, 0.03464430233350931]}
{'': [0.0538606955764824, 0.07494790470001397], 'false': [0.04328031810321589, 0.09870604239649612], 'false,false': [0.11803923636640852, 0.09796519568958685], 'false,false,false': [0.09252787426632576, 0.16449273764032296], 'true': [0.06305751369033988, 0.000661340813385101], 'true,true': [0.06305751369033988, nan], 'true,true,true': [0.0, 0.11802484108020227]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 24.346
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3930326560297439;  // std dev = 3.271, 43.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=23 */
%   | | | else return -0.14185106490048766;  // std dev = 6.50e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1895442839367229;  // std dev = 6.173, 172.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=57 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then return 0.7350122940520396;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then return 0.07352525466573477;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.7372321343150519;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6606779506824977;  // std dev = 3.534, 91.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=76 */
%   | | | else return -0.15565707021014083;  // std dev = 0.280, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.16610789769509204;  // std dev = 1.599, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.16107873252317875;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5080913057599963;  // std dev = 0.292, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5615605506688538;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10933925329023933;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.1030253752117352;  // std dev = 4.177, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.560546101416595;  // std dev = 2.644, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | | else return -0.13713841093846135;  // std dev = 0.160, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.7008013832860436;  // std dev = 0.183, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3091270332235381;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.17152325699925608;  // std dev = 0.087, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.17023070528767462;  // std dev = 0.827, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.4461801510820319;  // std dev = 0.176, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.2802824190290677;  // std dev = 0.778, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5044652614899173;  // std dev = 1.684, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( location(A, I), interaction(A, J) )
%   | | | then return -0.07513080883658202;  // std dev = 2.223, 107.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=10 */
%   | | | else return 0.06702482484881822;  // std dev = 4.560, 171.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=48 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.378438225097395;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.025725524808509266;  // std dev = 1.080, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.42346775580295065;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.40815501703813056;  // std dev = 0.169, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3338534559473943;  // std dev = 0.084, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(F, A) )
%   | then if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3222300015309509;  // std dev = 4.025, 111.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=76 */
%   | | | else return -0.13219953793765693;  // std dev = 0.302, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.10162185751139359;  // std dev = 0.828, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.03429689229514789;  // std dev = 1.337, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.29429374552301657;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.026471822997006116;  // std dev = 1.045, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2189795099388092;  // std dev = 0.904, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.29541390992581795;  // std dev = 0.168, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.23705126341146465;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( complex(A, F), interaction(G, A) )
%   | then if ( interaction(G, G), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4212607290697865;  // std dev = 0.181, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1769840618359124;  // std dev = 0.850, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( recursion_proteinclass(G, B), complex(G, F) )
%   | | | then return 0.24723461991814563;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.002674578132629154;  // std dev = 2.246, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then return 0.3794571017695605;  // std dev = 0.618, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.0892747840178137;  // std dev = 2.483, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
%   | | | else return 0.034959187666097215;  // std dev = 3.793, 132.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=39 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2691527742664584;  // std dev = 0.065, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2015243326472199;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4183162504587961;  // std dev = 1.345, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.1488462897183855;  // std dev = 0.086, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(G, H), interaction(G, I) )
%   | | | then return -0.04407151689003363;  // std dev = 2.086, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.35806677373657037;  // std dev = 2.157, 46.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=37 */
%   | | else return -0.13195481469722686;  // std dev = 0.038, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.32955864619074604;  // std dev = 0.580, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.09117175676196053;  // std dev = 0.315, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.20303179989831716;  // std dev = 0.043, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, E) )
%   | | then return -0.1890686986576412;  // std dev = 0.962, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.22559460398023798;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H), interaction(A, I) )
%   | | | then return 0.14385840012676113;  // std dev = 1.410, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | | else return 0.34382403349081486;  // std dev = 2.336, 72.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=64 */
%   | | else return -0.12882588817748747;  // std dev = 0.051, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.15774294763948593;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.033369925200626635;  // std dev = 1.102, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.016945980557151394;  // std dev = 0.535, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18643989226504026;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.10969140293162849;  // std dev = 0.629, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.19032002077105237;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.08435014230625242;  // std dev = 1.924, 48.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=30 */
%   | | | else return -0.09661027222080043;  // std dev = 0.590, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return 0.133676372706355;  // std dev = 0.509, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.20535887181509946;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.07618913073869962;  // std dev = 1.752, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   | | | else return -0.014424217600118512;  // std dev = 2.931, 109.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=31 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17543938880615695;  // std dev = 0.042, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( enzyme(E, D), phenotype(A, F) )
%   | | then if ( phenotype(E, F) )
%   | | | then return -0.218154064647525;  // std dev = 0.548, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.05642677563292856;  // std dev = 0.803, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( location(A, G) )
%   | | | then return -0.024117488764110184;  // std dev = 2.083, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
%   | | | else return -0.11273706656514493;  // std dev = 0.882, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(I, I), complex(I, J) )
%   | | | then return -0.09365863451120145;  // std dev = 1.443, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return -0.005046652329578746;  // std dev = 1.558, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.11611113624156306;  // std dev = 0.862, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.028137485095939285;  // std dev = 2.446, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5', 'minutes', 'and', '5.987', 'seconds']
Refined model CLL: -0.188427


******************************************
Best model found
******************************************
Results 

CLL : -0.17166 

AUC ROC : 0.990359 

AUC PR : 0.328041 

Precision : 0.25 

Recall : 0.890566 

F1 : 0.390405 

Total Learning Time : 24.346 

Total Inference Time : 157.42614889144897 

Total revision time: 204.26522281837464
Best scored revision CLL: -0.188427


Results 

CLL : -0.17166 

AUC ROC : 0.990359 

AUC PR : 0.328041 

Precision : 0.25 

Recall : 0.890566 

F1 : 0.390405 

Total Learning Time : 204.2939188785553 

Total Inference Time : 157.42614889144897 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.351
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11621345122854462;  // std dev = 2.436, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.17469569768943935;  // std dev = 5.484, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.12575456890232922;  // std dev = 3.730, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8367376551776826;  // std dev = 0.021, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16306751157690558;  // std dev = 0.036, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( location(A, K) )
%   | | | then return 0.15264629657369078;  // std dev = 3.523, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | | else return 0.17547436018390825;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06647013556336516;  // std dev = 2.059, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.676510392235406;  // std dev = 0.253, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14631651143130434;  // std dev = 0.300, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.18807013866659572;  // std dev = 0.519, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.11947529873976695;  // std dev = 3.693, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.3233490921999267;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4175135841583099;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3883786206718841;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5805914700633968;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.05443447758378207;  // std dev = 4.146, 190.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5085760373519609;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5257029120372331;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.07783363464286;  // std dev = 3.607, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | | | else return 0.46554454102665566;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3207118471601496;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.06985096104016374;  // std dev = 4.133, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3836064402628492;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.39584679578017246;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.08879177621893099;  // std dev = 3.632, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.0906496317038837;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3411016581539462;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.29778351778331225;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2551722425694892;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3060508645364264;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.10349883337636802;  // std dev = 1.143, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.09020349274760443;  // std dev = 3.785, 138.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=49 */
%   | | | else return 0.10608221046256508;  // std dev = 3.648, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.22961083597272605;  // std dev = 0.111, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2422989545496116;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6319402925467327;  // std dev = 0.815, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19096972680438742;  // std dev = 0.742, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0635585010338029;  // std dev = 3.212, 107.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17422175978018895;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.17637781325400526;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4060474165453945;  // std dev = 1.217, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.1468396994942045;  // std dev = 0.266, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.1335378990888113;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.03719126302489978;  // std dev = 3.098, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16091056506674;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.1543333212035986;  // std dev = 0.404, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.18113496828972991;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.06750469093596907;  // std dev = 0.397, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18650601350687157;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.03114162711646713;  // std dev = 1.237, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15283688854667066;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.013287181875914702;  // std dev = 2.822, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   | | | else return 0.03266475003438659;  // std dev = 3.087, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1310666383172889;  // std dev = 0.000220, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1805711474615985;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.13111572467418786;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.5381271221297885;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.1445316944614542;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.02190106268442975;  // std dev = 1.450, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.13407965325205484;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.011024442433489635;  // std dev = 2.666, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | | else return 0.05000421290397953;  // std dev = 2.992, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.057', 'seconds']
Parameter learned model CLL:-0.181458 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.436, 23, 8], 'false,false,true,false': [5.484, 95, 44], 'false,false,false,true': [3.73, 52, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.021, 0, 52], 'false,false,true,false': [0.036, 140, 0], 'false,false,false,true': [3.523, 40, 18], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.059, 25, 8], 'false,true,false,true': [0.253, 0, 48], 'false,true,false,false': [0.3, 99, 0], 'false,false,true,true': [0.519, 1, 1], 'false,false,true,false': [3.693, 46, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [1.05e-08, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.129, 0, 3], 'false,true,false': [4.146, 138, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.607, 47, 18], 'false,false,false,false': [0.816, 1, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 9], 'false,true': [4.133, 119, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.632, 43, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [1.29e-08, 0, 7], 'true,true,false': [0.063, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [1.143, 21, 3], 'false,false,true': [7.45e-09, 0, 6], 'false,false,false,true': [3.785, 89, 49], 'false,false,false,false': [3.648, 38, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.111, 0, 12], 'true,true,true,false': [0.004, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.815, 0, 36], 'true,false': [0.742, 103, 0], 'false,true': [0.0, 0, 5], 'false,false,true': [3.212, 71, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.004, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.217, 1, 56], 'false,true,false': [0.266, 151, 0], 'false,false,true,true': [0.819, 1, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.098, 44, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.067, 0, 9], 'true,false,true': [0.404, 1, 1], 'true,false,false': [0.055, 0, 4], 'false,true,true': [0.397, 9, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.237, 50, 14], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.822, 76, 36], 'false,false,false,false': [3.087, 43, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.00022, 0, 5], 'true,true,true,false': [0.035, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.018, 0, 4], 'false,true': [1.45, 46, 17], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.666, 85, 36], 'false,false,false,false': [2.992, 39, 20]}]
{'': [-2.5376526277146434e-16, 0.21418707639561332], 'false': [-1.4802973661668753e-16, 0.20751353602665693], 'false,false': [0.2123183391003467, 0.19555555555555507], 'false,false,true': [0.19146722164412083, 0.21634490968376466], 'false,false,false': [0.19599285855980905, 0.18750000000000003], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [2.5376526277146434e-16, 0.20560796672956844], 'false': [7.401486830834377e-17, 0.2021828480876883], 'false,false': [0.19741452449121635, 0.21482589203457375], 'false,false,false': [0.21401189938318682, 0.22222222222222218], 'false,false,true': [8.083135409692614e-06, 9.108055234891793e-06], 'true': [7.401486830834377e-17, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [-2.5376526277146434e-16, 0.16347770285900734], 'false': [0.1464571088860688, 0.2070797922331611], 'false,false': [0.20465326274947612, 0.24999999999999997], 'false,false,false': [0.24999999999999997, nan], 'false,false,true': [0.13490657058304362, 0.2066284091091261], 'false,true': [0.12841402971229904, 0.14993488789734022], 'false,true,false': [0.001334168904686554, 0.0009080924837552161], 'true': [-1.1102230246251565e-16, -1.1102230246251565e-16]}
{'': [1.2688263138573217e-16, 0.12379963204265605], 'false': [0.09345993659471907, 0.20654351629579168], 'false,false': [7.333245912127806e-05, 0.20752320762581633], 'false,false,false': [0.20021303802653784, 0.2222222222222223], 'false,true': [0.011078528301133761, 0.09048122585564916], 'false,true,true': [0.0, 0.00553492620037721], 'false,false,true': [0.0, 0.0], 'true': [1.6148698540002277e-16, 3.700743415417188e-17]}
{'': [0.0, 0.1287300986726385], 'false': [0.09760550972851914, 0.20945843579426388], 'false,false': [3.7456575797595315e-05, 0.21320036188138214], 'false,false,false': [0.21276366094612495, 0.2222222222222222], 'false,false,true': [0.0, 0.0], 'true': [0.0, -3.700743415417188e-17], 'true,true': [0.0, nan]}
{'': [0.001732778774095421, 0.13266570860497406], 'false': [0.0544780285561432, 0.13757218577571498], 'false,false': [9.25185853854297e-18, 0.14102061519418496], 'false,false,false': [0.10379452224721415, 0.22941552054999004], 'true': [0.0020698168160126233, 0.0004969671078820977], 'true,true': [2.3790493384824782e-17, 0.0009931734041433854], 'true,false': [0.0004539301938370349, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.1290751184896296, 0.09303948352476235], 'true': [0.046824560196034114, 0.005348466560990335], 'false': [-5.551115123125783e-18, 0.09643291712264276], 'false,false': [0.09643291712264276, nan], 'true,true': [0.0009088651988253736, 0.022636214156238916], 'true,true,false': [0.0, 0.01844775117334417], 'true,true,true': [0.0010359983317664485, 8.076384303605522e-06]}
{'': [2.023865722745282e-06, 0.08939119432735593], 'false': [0.06827037481390053, 0.1544923300146965], 'false,false': [0.2233310327049576, 0.149960361491939], 'false,false,true': [0.2233310327049576, nan], 'false,false,false': [0.149960361491939, nan], 'false,true': [0.02597114107944508, 0.00046841746239432465], 'false,true,true': [nan, 0.02597114107944514], 'true': [-4.625929269271485e-18, 1.5495221939894332e-06]}
{'': [0.023396856090813305, 0.07634519193163875], 'false': [0.02362187164944747, 0.09773582642313704], 'false,false': [0.0, 0.10004006172584318], 'false,false,false': [0.07110807740596277, 0.1512343868221905], 'false,true': [0.015758611761508758, 0.024570455168380696], 'false,true,false': [0.0, 0.02390281233272879], 'true': [0.0004947804719003986, 0.05271581379280426], 'true,false': [0.08161186574428729, 0.0007547967318695115]}
{'': [0.029527240499778118, 0.07416573376964235], 'false': [0.03337624881073139, 0.08745414903817784], 'false,false': [0.0, 0.08955474583732498], 'false,false,false': [0.05874789863376363, 0.15171350052882382], 'true': [0.03924813146912725, 8.475042855069642e-05], 'true,true': [0.0007236248722871097, 0.09953021955517571], 'true,true,false': [0.0, 0.0], 'true,true,true': [9.637881737134535e-09, 0.0003979649969508281]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.362
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, I), phenotype(H, J) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.10057317752375479;  // std dev = 3.482, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.21420954116011734;  // std dev = 5.501, 132.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=47 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.21947341221095448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8347728207337523;  // std dev = 0.051, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16173377987385;  // std dev = 0.143, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.09145896494019376;  // std dev = 2.598, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.15355243735316582;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.0649177299271786;  // std dev = 0.797, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.0979629239751406;  // std dev = 1.850, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6581936992594554;  // std dev = 0.992, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14656701656325336;  // std dev = 0.307, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, H), enzyme(A, I) )
%   | | | then return 0.11458783200022007;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.0037854710097998327;  // std dev = 1.612, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.3137369140460443;  // std dev = 1.588, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.13777512017175508;  // std dev = 2.724, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175135841583098;  // std dev = 1.29e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3927383719218692;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41836577595721935;  // std dev = 0.666, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4338390753029038;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0642728577239327;  // std dev = 4.035, 172.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5563010033657085;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.03871951494548931;  // std dev = 0.732, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.0877555652354073;  // std dev = 3.658, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | | else return -0.0484317097723988;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( enzyme(A, F) )
%   | | | then return -0.12542717538218112;  // std dev = 0.039, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.10955506151445818;  // std dev = 1.414, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( complex(A, G), enzyme(A, H) )
%   | | | then return 0.10717727484881709;  // std dev = 1.948, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0.04795113017276405;  // std dev = 3.328, 127.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=37 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return 0.41820707528963175;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5467241773203779;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.028635720908558728;  // std dev = 1.767, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.16963132067806663;  // std dev = 3.097, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.27709905513880817;  // std dev = 0.041, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.32916266915655457;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( enzyme(I, G), interaction(I, I) )
%   | | | then return -0.0258304109952213;  // std dev = 0.499, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.10157547122579191;  // std dev = 0.610, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.12233731322194837;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.07244942486249105;  // std dev = 0.533, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.030874390902082126;  // std dev = 3.974, 179.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=48 */
%   | | | else return 0.07179185977461815;  // std dev = 3.731, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.22320296416568985;  // std dev = 0.123, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.0073615377913456665;  // std dev = 0.741, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6084911519873121;  // std dev = 0.181, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else return -0.1910025949918183;  // std dev = 0.070, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( complex(H, I), location(G, J) )
%   | | | then return 0.05059062254692845;  // std dev = 2.455, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | | else return -0.041533672110829235;  // std dev = 1.656, 40.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=7 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.07221225661094655;  // std dev = 1.349, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.2756486874021238;  // std dev = 0.519, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17002916896958148;  // std dev = 0.013, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.3865022584741086;  // std dev = 0.964, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.44524256844347737;  // std dev = 0.558, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.110625806956182;  // std dev = 0.139, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.16241694300880322;  // std dev = 0.138, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return -0.06030722348153131;  // std dev = 1.433, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.1270404803120338;  // std dev = 0.938, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.005039269816433732;  // std dev = 1.792, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.05878138057288462;  // std dev = 2.100, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1581117112911602;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.24089660047976902;  // std dev = 0.538, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.21162049038362746;  // std dev = 0.170, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.05756848954028999;  // std dev = 0.110, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.03034645400496283;  // std dev = 0.391, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.007329487045396451;  // std dev = 1.243, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1536607098243391;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.045833599527017384;  // std dev = 2.429, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
%   | | | else return -0.008034518270515177;  // std dev = 3.361, 132.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15479372039382108;  // std dev = 0.056, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.02432237326633747;  // std dev = 0.550, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.25828545783924256;  // std dev = 0.183, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.09921400205687231;  // std dev = 0.079, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.003402354013273932;  // std dev = 0.767, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.035900301522499845;  // std dev = 0.438, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.13472239567151656;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, L), phenotype(A, M) )
%   | | | then return 0.0061916077940004114;  // std dev = 2.128, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.04438083833728583;  // std dev = 3.371, 137.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=47 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.113', 'seconds']
Refined model CLL: -0.175082


******************************************
Best model found
******************************************
Results 

CLL : -0.18938 

AUC ROC : 0.982484 

AUC PR : 0.239792 

Precision : 0.133225 

Recall : 0.891697 

F1 : 0.231816 

Total Learning Time : 7.362 

Total Inference Time : 7.630900859832764 

Total revision time: 26.66963571357727
Best scored revision CLL: -0.175082


Results 

CLL : -0.18938 

AUC ROC : 0.982484 

AUC PR : 0.239792 

Precision : 0.133225 

Recall : 0.891697 

F1 : 0.231816 

Total Learning Time : 26.698331773757936 

Total Inference Time : 7.630900859832764 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.482
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06127393509951237;  // std dev = 3.219, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | | else return 0.15585885876363392;  // std dev = 5.233, 131.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.08314893509951238;  // std dev = 2.641, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5944734122109544;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5944734122109545;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8040524149434185;  // std dev = 1.393, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15662736349983014;  // std dev = 0.072, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else if ( location(A, I) )
%   | | | then return 0.1563732934083665;  // std dev = 2.749, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.15288007360931785;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5637160055651471;  // std dev = 0.045, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.385981522415447;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05886743055776269;  // std dev = 2.766, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6673790852441207;  // std dev = 0.998, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.1417575410719655;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.4562017109027853;  // std dev = 0.753, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10015813760966512;  // std dev = 2.486, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.09554053338217867;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.28130793376064217;  // std dev = 1.526, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else return -0.509649769073503;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5716313715871599;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5973644062226562;  // std dev = 0.188, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.05336586947743548;  // std dev = 4.315, 182.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.47282080302178175;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5614920108862094;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.06298149211386966;  // std dev = 2.835, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.2798614284532319;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.35239251491281687;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4064961479111621;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.06449560627591082;  // std dev = 4.337, 190.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3585541990032136;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.039684161802328956;  // std dev = 0.860, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.030923679368881237;  // std dev = 2.614, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.048167980586450956;  // std dev = 1.464, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.275468709818263;  // std dev = 0.014, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.22665407332711043;  // std dev = 0.765, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2808601350968304;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3809512590750641;  // std dev = 0.045, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06768362317270621;  // std dev = 1.231, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3184267717854897;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.0516610984015202;  // std dev = 4.046, 158.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=46 */
%   | | | else return 0.09195599285205595;  // std dev = 3.014, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.26118841875407817;  // std dev = 0.202, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.27345402560465226;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.27808297685904054;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5957493423929795;  // std dev = 0.810, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.18152987341002333;  // std dev = 0.445, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24930701710280148;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06482589290673275;  // std dev = 3.294, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.0687018623349834;  // std dev = 0.950, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.21232523611338963;  // std dev = 0.056, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.37689381073397166;  // std dev = 2.137, 61.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | else return -0.14261765660670833;  // std dev = 0.207, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.22294101366436192;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.029770530043115306;  // std dev = 2.484, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17318404822882955;  // std dev = 0.046, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.2292849691873603;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19934390129451968;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.08765539929217274;  // std dev = 0.316, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.17650409627960334;  // std dev = 0.430, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.032772712219511155;  // std dev = 1.691, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17315529412646066;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04430272105592165;  // std dev = 2.824, 92.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | | else return 0.024196303923068305;  // std dev = 2.479, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.03648488141979738;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.15861844402190112;  // std dev = 0.039, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.13558330376190786;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.18671385651928524;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.00989276003455207;  // std dev = 0.578, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.00724089338471468;  // std dev = 1.598, 91.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.06482802049891914;  // std dev = 0.744, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.007676139304393573;  // std dev = 2.840, 114.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=31 */
%   | | | else return 0.02355393898233546;  // std dev = 2.476, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.735', 'seconds']
Parameter learned model CLL:-0.176087 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.219, 51, 13], 'false,false,true,false': [5.233, 92, 39], 'false,false,false,true': [2.641, 31, 9], 'false,false,false,false': [1.309, 4, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [0.935, 1, 7], 'false,true,true': [0.935, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.393, 2, 52], 'false,false,true,false': [0.072, 139, 0], 'false,false,false,true': [2.749, 24, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.045, 0, 11], 'true,false': [0.894, 1, 4], 'false,true,true': [2.766, 48, 14], 'false,true,false,true': [0.998, 1, 42], 'false,true,false,false': [0.0, 86, 0], 'false,false,true,true': [0.753, 1, 3], 'false,false,true,false': [2.486, 23, 9], 'false,false,false,true': [1.449, 7, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.526, 3, 15], 'true,false': [0.0, 1, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.188, 0, 6], 'false,true,false': [4.315, 133, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.835, 32, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.027, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.049, 0, 6], 'false,true': [4.337, 134, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.86, 1, 2], 'false,false,false,true': [2.614, 30, 9], 'false,false,false,false': [1.464, 7, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.014, 0, 9], 'true,true,false': [0.765, 1, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.045, 0, 2], 'false,true': [1.231, 30, 5], 'false,false,true': [0.034, 0, 5], 'false,false,false,true': [4.046, 112, 46], 'false,false,false,false': [3.014, 30, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.202, 0, 13], 'true,true,true,false': [0.068, 0, 3], 'true,true,false,true': [0.044, 0, 3], 'true,true,false,false': [0.81, 0, 33], 'true,false': [0.445, 92, 0], 'false,true': [0.027, 0, 3], 'false,false,true': [3.294, 68, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.95, 1, 8], 'true,false': [0.056, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.137, 5, 56], 'false,true,false': [0.207, 142, 0], 'false,false,true,true': [0.06, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.484, 32, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.046, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.054, 0, 5], 'false,true,true': [0.316, 15, 1], 'false,true,false,true': [0.43, 1, 6], 'false,true,false,false': [1.691, 52, 17], 'false,false,true': [0.02, 0, 3], 'false,false,false,true': [2.824, 61, 31], 'false,false,false,false': [2.479, 32, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.943, 1, 8], 'true,true,true,false': [0.039, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.006, 0, 2], 'true,false': [0.578, 1, 3], 'false,true': [1.598, 67, 24], 'false,false,true': [0.744, 1, 3], 'false,false,false,true': [2.84, 83, 31], 'false,false,false,false': [2.476, 31, 12]}]
{'': [-2.3684757858670006e-16, 0.2038354220093228], 'false': [-2.5376526277146434e-16, 0.1945222320879734], 'false,false': [0.1955555555555564, 0.19013128112267944], 'false,false,true': [0.16186523437499947, 0.20907872501602515], 'false,false,false': [0.17437500000000014, 0.24489795918367335], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.05859375000000022, 0.20395105902504804], 'false': [0.10937500000000006, 0.19967149982018406], 'false,false': [0.1960495444554086, 0.2164545718159012], 'false,false,false': [0.21595923841913442, 0.22222222222222224], 'false,false,true': [0.0359151408957093, 3.772967014376216e-05], 'false,true': [0.10937500000000006, nan], 'true': [1.1102230246251565e-16, 0.10937500000000006]}
{'': [0.05691462801330971, 0.1559012618048322], 'false': [0.14457729238416928, 0.2024331973693945], 'false,false': [0.19992278675057024, 0.2099432614964632], 'false,false,false': [0.2099432614964632, nan], 'false,false,true': [0.14184279947626197, 0.19309756003948836], 'false,true': [0.12338549867244326, 0.1532131297371181], 'false,true,false': [0.023171335847235314, -3.0982968129074136e-17], 'true': [0.00018590746522892135, 0.15999999999999998]}
{'': [0.15368993569700765, 0.12575707578792253], 'true': [0.12930120821202262, 0.0], 'false': [0.10912133745073972, 0.19071694299902023], 'false,false': [0.0017472406898081012, 0.19177171610526594], 'false,false,false': [0.1869728946405779, 0.25], 'false,true': [0.005134522376881469, 0.10230793093115868], 'false,true,true': [0.0, 0.005895677667568637], 'false,false,true': [0.0, 0.0]}
{'': [0.0009134079259837632, 0.11789355664676919], 'false': [0.09897540676342881, 0.18527635274415935], 'false,false': [0.20398005225038127, 0.18320476627316706], 'false,false,true': [0.0, 0.24655387784438498], 'false,false,false': [0.17514103825507216, 0.21441662654261906], 'true': [8.257053107753166e-05, 0.00040334215617134533], 'true,true': [8.257053107753166e-05, nan]}
{'': [0.0365676963634057, 0.1152551999196141], 'false': [0.0433257738339274, 0.12480652069485576], 'false,false': [0.00022841488281102328, 0.12628245357524737], 'false,false,false': [0.10359630635327009, 0.20647633990221265], 'true': [0.04236983752875108, 0.0028865990823294476], 'true,true': [2.0260624013230315e-05, 0.11706723177000282], 'true,false': [0.0, 0.000990487590418726], 'true,false,true': [0.0, nan]}
{'': [0.11487791895363343, 0.10734536021264719], 'true': [0.038782505806749794, 0.00214884389160422], 'false': [0.0002381082011818266, 0.10959005554000595], 'false,false': [0.10959005554000595, nan], 'true,true': [0.002871833560016454, 0.025971460955004036], 'true,true,false': [0.0006382998875984666, 0.019865148948200198], 'true,true,true': [0.003146328198685766, 0.0015601201394264224]}
{'': [0.06170594390758949, 0.08973701264227443], 'false': [0.07943282596353006, 0.13357773445931953], 'false,false': [0.0011884233003334559, 0.14022248037586282], 'false,false,false': [0.14022248037586282, nan], 'false,true': [0.07485113130162004, 0.0003004175260195155], 'false,true,true': [nan, 0.07485113130162006], 'true': [0.10032642987970854, 0.00044796703079371037], 'false,false,true': [0.0011884233003334559, nan]}
{'': [0.0005883471420308761, 0.07761750695092412], 'false': [0.03798859824303882, 0.1020528297599849], 'false,false': [0.00013803520280753398, 0.10390551834456797], 'false,false,false': [0.08669222199240698, 0.13962348075333827], 'false,true': [0.006260363736384208, 0.04371180290016052], 'false,true,false': [0.02645174952144597, 0.04142890862355368], 'true': [0.0002131980893278318, 0.0006071427917771303], 'true,false': [0.0, 0.0005791600923719442]}
{'': [0.07202003257849515, 0.06886430547628528], 'true': [0.0675443491589399, 0.08358775776360725], 'false': [0.028052822402639267, 0.0918228834257387], 'false,false': [0.13823533378608652, 0.09049365871197579], 'false,false,false': [0.07077291029019718, 0.14259351634538495], 'true,true': [0.08316404806986484, 0.0005949348087828608], 'true,true,true': [0.09876543209876543, 0.0007533232102723587], 'true,true,false': [0.0, 2.0957738082638677e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 8.511
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, F) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.19148226843284455;  // std dev = 4.163, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | | | else return 0.12575456890232864;  // std dev = 5.276, 142.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then return 0.4068585879990681;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7298326667716779;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then return 0.7401919213324014;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.783046572353616;  // std dev = 1.687, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.15798853925382525;  // std dev = 0.133, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.4421410268505749;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.09928388399343205;  // std dev = 2.586, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5740657652751383;  // std dev = 0.035, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(A, F), location(A, G) )
%   | | | then return -0.03621291568692327;  // std dev = 1.532, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | | else return 0.12437709374396218;  // std dev = 2.200, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6690818649843469;  // std dev = 1.016, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14140306780131673;  // std dev = 0.039, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5848865079591934;  // std dev = 1.221, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.18109313105630911;  // std dev = 0.085, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.19963587791574514;  // std dev = 1.550, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.4951564328163038;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4322435134703213;  // std dev = 0.035, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.564289790782326;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5899838463200432;  // std dev = 0.150, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.01790357625148646;  // std dev = 1.316, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | | | else return 0.08228838016439373;  // std dev = 3.982, 142.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=44 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5056851986690301;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.410352378785263;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.015090876788184507;  // std dev = 2.030, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.3623607035696428;  // std dev = 1.389, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.33562666801745394;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.18010029436847289;  // std dev = 0.355, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.030763998085971075;  // std dev = 0.219, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.03750558005299638;  // std dev = 3.043, 92.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=25 */
%   | | | else return 0.0935920152964875;  // std dev = 2.898, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return 0.38155731984867547;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.057295476749889405;  // std dev = 0.715, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.3051386895122146;  // std dev = 1.179, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.017344325918223404;  // std dev = 2.297, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.3020900659420086;  // std dev = 0.058, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.322714604986377;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( enzyme(G, H) )
%   | | | then return -0.1471089522806087;  // std dev = 0.150, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.06852346919892317;  // std dev = 0.506, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.0463578354092374;  // std dev = 0.607, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.19165354888609593;  // std dev = 0.704, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.11981785613024755;  // std dev = 0.926, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.02441776147000163;  // std dev = 2.326, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.09807222577619747;  // std dev = 4.092, 132.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2458019228587874;  // std dev = 0.048, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2719926552814676;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5017565329182928;  // std dev = 1.367, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.17382990415463867;  // std dev = 0.073, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2527781737730931;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5377487088328428;  // std dev = 0.270, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.16408836887535558;  // std dev = 0.071, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.16626875372533917;  // std dev = 0.642, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0013682768631006537;  // std dev = 2.339, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17548319105208968;  // std dev = 0.023, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(A, E) )
%   | | then return -0.10778067306834198;  // std dev = 0.839, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2003254409256785;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.3822287473365286;  // std dev = 0.202, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.09498026657248448;  // std dev = 0.090, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return -0.1480615815632688;  // std dev = 0.180, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.21291957148982796;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.06232918002306625;  // std dev = 2.086, 51.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else return 0.11269508386132383;  // std dev = 0.938, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15491501459895235;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1874445792849128;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.29342847616718765;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.11430346841621794;  // std dev = 0.032, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.06131918946945295;  // std dev = 0.835, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | | else return -0.023282100342870045;  // std dev = 1.159, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.1934468133319915;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, L) )
%   | | | then return 0.012021594711750074;  // std dev = 3.314, 136.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=41 */
%   | | | else return -0.10969214987613704;  // std dev = 0.895, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.14509226727384783;  // std dev = 0.023, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( complex(A, F), enzyme(A, G) )
%   | | then if ( interaction(A, H) )
%   | | | then return -8.703403671587423E-4;  // std dev = 0.553, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.11746120957043889;  // std dev = 0.612, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(A, I), interaction(D, D) )
%   | | | then return -0.09601534989223762;  // std dev = 0.822, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.009751528840454634;  // std dev = 2.742, 182.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=49 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.17733911731222457;  // std dev = 0.803, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.023839594015820677;  // std dev = 1.520, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.1928381323072798;  // std dev = 0.785, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.06637341271404876;  // std dev = 1.021, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '51.443', 'seconds']
Refined model CLL: -0.176265


******************************************
Best model found
******************************************
Results 

CLL : -0.186336 

AUC ROC : 0.98346 

AUC PR : 0.217875 

Precision : 0.147826 

Recall : 0.780919 

F1 : 0.248594 

Total Learning Time : 8.511 

Total Inference Time : 8.651751041412354 

Total revision time: 29.792428224563597
Best scored revision CLL: -0.176087


Results 

CLL : -0.186336 

AUC ROC : 0.98346 

AUC PR : 0.217875 

Precision : 0.147826 

Recall : 0.780919 

F1 : 0.248594 

Total Learning Time : 29.82112428474426 

Total Inference Time : 8.651751041412354 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.198
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21325097591583891;  // std dev = 7.490, 245.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.2094685666248129;  // std dev = 5.226, 116.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=44 */
%   | | | else return 0.14175242469577742;  // std dev = 5.441, 138.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1337771465900305;  // std dev = 4.839, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
%   | | | else return 0.13506674247245487;  // std dev = 5.902, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1270504204661574;  // std dev = 3.603, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | | else return 0.13217145439983483;  // std dev = 6.607, 192.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08922347867168232;  // std dev = 7.633, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10029918923653461;  // std dev = 7.469, 243.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7218272550969786;  // std dev = 0.037, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.27817274490302146;  // std dev = 0.052, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.073356919684184;  // std dev = 3.925, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
%   | | | else return 0.06608870368044518;  // std dev = 4.307, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06283763154563785;  // std dev = 3.684, 95.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=35 */
%   | | | else return 0.029096055063743572;  // std dev = 5.945, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.033919065983829357;  // std dev = 6.969, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02037938399532897;  // std dev = 7.004, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.263', 'seconds']
Parameter learned model CLL:-0.340426 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.49, 158, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.226, 72, 44], 'false,false,false,false': [5.441, 95, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.839, 71, 35], 'false,false,false,false': [5.902, 105, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.603, 37, 20], 'false,false,false,false': [6.607, 125, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.633, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.469, 156, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.037, 0, 35], 'true,false': [0.052, 70, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.925, 43, 24], 'false,false,false,false': [4.307, 55, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.684, 60, 35], 'false,false,false,false': [5.945, 110, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.969, 171, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.004, 176, 87]}]
{'': [nan, 0.22900458142440744], 'false': [nan, 0.2290045814244073], 'false,false': [nan, 0.22900458142440744], 'false,false,false': [nan, 0.2290045814244073]}
{'': [nan, 0.22519995039989985], 'false': [nan, 0.2251999503998995], 'false,false': [nan, 0.22519995039989985], 'false,false,false': [0.2354340071343636, 0.21450325561856753]}
{'': [nan, 0.22145269577406648], 'false': [nan, 0.22145269577406648], 'false,false': [nan, 0.22145269577406662], 'false,false,false': [0.22088852871327233, 0.2218329280938759]}
{'': [nan, 0.22745410834867544], 'false': [nan, 0.22745410834867544], 'false,false': [nan, 0.2274541083486752], 'false,false,false': [0.22776238842720867, 0.2273565843897292]}
{'': [nan, 0.2215119355664327], 'false': [nan, 0.2215119355664327], 'false,false': [nan, 0.22151193556643267], 'false,false,false': [nan, 0.22151193556643267]}
{'': [nan, 0.22959453546509404], 'false': [nan, 0.22959453546509404], 'false,false': [nan, 0.22959453546509312], 'false,false,false': [nan, 0.22959453546509428]}
{'': [0.22226074557405714, 0.22639440275825043], 'false': [nan, 0.22639440275825043], 'false,false': [nan, 0.22639440275825043], 'false,false,false': [0.22989529962129637, 0.22354478153578125], 'true': [3.852335183387774e-05, 3.8523351835108496e-05], 'true,true': [nan, 3.852335183387774e-05], 'true,true,false': [nan, 3.852335183387774e-05]}
{'': [nan, 0.19059925458730897], 'false': [nan, 0.19059925458730897], 'false,false': [nan, 0.1905992545873089], 'false,false,false': [0.14289752562549737, 0.21815164662739192]}
{'': [nan, 0.18824092777876084], 'false': [nan, 0.18824092777876159], 'false,false': [nan, 0.18824092777876159], 'false,false,false': [nan, 0.18824092777876159]}
{'': [nan, 0.1865451430369044], 'false': [nan, 0.1865451430369044], 'false,false': [nan, 0.18654514303690437], 'false,false,false': [nan, 0.18654514303690437]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 24.219
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.11937915478812813;  // std dev = 0.148, 89.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=2 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.1438632208137979;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( interaction(H, H) )
%   | | | then return -0.030739953789376686;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.1914822684328457;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.2411276585037677;  // std dev = 3.333, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | | else return 0.1539235829868361;  // std dev = 3.846, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.6897527551181648;  // std dev = 0.262, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | else return -0.1444553694566633;  // std dev = 0.191, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( complex(E, G) )
%   | | | then return 0.42171276873196645;  // std dev = 0.729, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7941365067928243;  // std dev = 0.166, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.03645795032679955;  // std dev = 1.549, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return 0.20221828072050416;  // std dev = 4.059, 73.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=27 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5670656802078702;  // std dev = 0.808, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.14815628887579604;  // std dev = 0.052, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.3170656802078702;  // std dev = 0.928, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, A) )
%   then return 0.049669683257390365;  // std dev = 0.301, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(D, F), complex(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.1669786683412099;  // std dev = 1.036, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.4171502958818675;  // std dev = 0.698, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, I), interaction(J, D) )
%   | | | then return 0.1140022914578455;  // std dev = 4.651, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   | | | else return 0.026442286011316974;  // std dev = 1.317, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( interaction(A, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.5836202210016701;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07217567950569878;  // std dev = 2.221, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.18455038125730594;  // std dev = 3.040, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return 0.05905139504191362;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), enzyme(E, F) )
%   | | then return 0.5690497718450855;  // std dev = 0.080, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.6477122504340468;  // std dev = 0.167, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.7669128541179207;  // std dev = 0.202, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.1719441021879732;  // std dev = 0.357, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5584374484726771;  // std dev = 0.051, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( complex(I, K), complex(A, K) )
%   | | | then return -0.05261609306583882;  // std dev = 0.900, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.11913386307571877;  // std dev = 2.362, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.08859439038380364;  // std dev = 1.893, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.22706729948020146;  // std dev = 3.360, 51.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.33115056985391883;  // std dev = 0.226, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.5498776164347935;  // std dev = 0.179, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.123656701129775;  // std dev = 0.667, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.1375560954664657;  // std dev = 0.074, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.08360513891847828;  // std dev = 3.922, 117.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=39 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(A, H) )
%   | | | then return -0.14904098548260303;  // std dev = 0.107, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.062168468422256394;  // std dev = 0.761, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.019930930708982067;  // std dev = 3.351, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | | | else return 0.08892629481713758;  // std dev = 1.603, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.32788282885043085;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.1894857386288331;  // std dev = 0.271, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return -0.046433168027906035;  // std dev = 0.208, 61.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=9 */
%   else if ( enzyme(A, F), phenotype(A, G) )
%   | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.47211013520335876;  // std dev = 0.077, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.1465008085634165;  // std dev = 0.172, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.338166205635242;  // std dev = 0.709, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.08952589071816279;  // std dev = 3.271, 70.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.03858498196736479;  // std dev = 1.025, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.08706834528420997;  // std dev = 3.417, 62.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.026406017255964198;  // std dev = 0.292, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(D, F), interaction(G, D) )
%   | | then if ( complex(G, F), interaction(A, H) )
%   | | | then return 0.29182937921167973;  // std dev = 0.870, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.0570491768597427;  // std dev = 2.091, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4293234286391226;  // std dev = 1.060, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.20431984642996848;  // std dev = 0.390, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(K, K) )
%   | | | then return 0.06284873022670272;  // std dev = 2.294, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.23420082404125683;  // std dev = 1.741, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.06653550232744157;  // std dev = 0.735, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.08994039708454296;  // std dev = 1.260, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( enzyme(C, D), location(A, E) )
%   | then return 0.06614112932140387;  // std dev = 0.221, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else if ( phenotype(A, F) )
%   | | then return -0.012312842953487628;  // std dev = 0.254, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | else if ( complex(C, G), interaction(A, H) )
%   | | | then return -0.13793984838675596;  // std dev = 1.175, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.03671447086111283;  // std dev = 1.675, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.2980078056824899;  // std dev = 0.121, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( location(A, K) )
%   | | | then return -0.008383324129305274;  // std dev = 3.927, 139.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=38 */
%   | | | else return 0.0795564164547428;  // std dev = 2.133, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.026735923198306467;  // std dev = 0.881, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.09223022309092878;  // std dev = 1.315, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.21635282555231086;  // std dev = 0.227, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(F, C), complex(F, G) )
%   | | then return -0.0747242447316109;  // std dev = 0.300, 53.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=10 */
%   | | else return 0.07365346543629127;  // std dev = 0.277, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   else if ( interaction(A, H), interaction(I, A) )
%   | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | then return 0.18437159620790508;  // std dev = 0.294, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.1173767249920944;  // std dev = 1.080, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.06592815207365087;  // std dev = 2.107, 52.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=9 */
%   | else if ( enzyme(A, L), phenotype(A, M) )
%   | | then return 0.010521660325702242;  // std dev = 0.211, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.11198956473739784;  // std dev = 2.098, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.05986179607008191;  // std dev = 3.039, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.22580900438757423;  // std dev = 0.134, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(E, D), enzyme(D, F) )
%   | | then if ( phenotype(A, G), enzyme(E, H) )
%   | | | then return -0.14849167215338496;  // std dev = 0.212, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.07463778042427635;  // std dev = 1.031, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( phenotype(E, I), complex(D, J) )
%   | | | then return 0.0033953694870219385;  // std dev = 1.966, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return -0.05361295031233531;  // std dev = 2.192, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( location(A, M), location(K, M) )
%   | | | then return 0.08469299547861901;  // std dev = 1.545, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.009991587984914809;  // std dev = 0.828, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return -0.007250122169948138;  // std dev = 3.764, 105.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
%   | | | else return 0.04227017188142243;  // std dev = 1.470, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.895', 'seconds']
Refined model CLL: -0.234472


******************************************
Best model found
******************************************
Results 

CLL : -0.236548 

AUC ROC : 0.975872 

AUC PR : 0.402333 

Precision : 0.375854 

Recall : 0.585106 

F1 : 0.457698 

Total Learning Time : 24.219 

Total Inference Time : 14.552512168884277 

Total revision time: 46.48403495979309
Best scored revision CLL: -0.234472


Results 

CLL : -0.236548 

AUC ROC : 0.975872 

AUC PR : 0.402333 

Precision : 0.375854 

Recall : 0.585106 

F1 : 0.457698 

Total Learning Time : 46.59064859580994 

Total Inference Time : 14.552512168884277 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.663
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20950028645086427;  // std dev = 8.213, 296.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16617026861322656;  // std dev = 5.878, 155.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=52 */
%   | | | else return 0.17055567869123628;  // std dev = 5.859, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13646760343442157;  // std dev = 5.239, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.146152244697547;  // std dev = 6.445, 185.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.08275413596147746;  // std dev = 4.509, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   | | | else return 0.09840382976358218;  // std dev = 7.159, 237.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11866051650344238;  // std dev = 8.204, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06605714441665682;  // std dev = 8.397, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7339011899373464;  // std dev = 0.011, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.26614661750137497;  // std dev = 0.016, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.017585362287129216;  // std dev = 4.048, 80.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
%   | | | else return 0.0169900828868445;  // std dev = 5.338, 139.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04283162553534693;  // std dev = 4.124, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.07423097973576233;  // std dev = 6.408, 181.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02910674125833415;  // std dev = 7.747, 325.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03851182296439769;  // std dev = 7.642, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.107', 'seconds']
Parameter learned model CLL:-0.330063 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.213, 192, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.878, 103, 52], 'false,false,false,false': [5.859, 101, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.239, 83, 41], 'false,false,false,false': [6.445, 122, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.509, 68, 29], 'false,false,false,false': [7.159, 162, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.204, 191, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.397, 219, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.011, 0, 41], 'true,false': [0.016, 82, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.048, 57, 23], 'false,false,false,false': [5.338, 99, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.124, 83, 41], 'false,false,false,false': [6.408, 118, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.747, 221, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.642, 205, 104]}]
{'': [nan, 0.22790357925493288], 'false': [nan, 0.2279035792549311], 'false,false': [nan, 0.22790357925493288], 'false,false,false': [nan, 0.2279035792549311]}
{'': [nan, 0.2236464833867458], 'false': [nan, 0.2236464833867415], 'false,false': [nan, 0.2236464833867458], 'false,false,false': [0.2229344432882391, 0.22435815284719324]}
{'': [nan, 0.22327490990876955], 'false': [nan, 0.22327490990876955], 'false,false': [nan, 0.2232749099087685], 'false,false,false': [0.22131430080501163, 0.22455140957812975]}
{'': [nan, 0.21438064351773867], 'false': [nan, 0.21438064351773867], 'false,false': [nan, 0.2143806435177379], 'false,false,false': [0.20958656605377868, 0.21627164908444102]}
{'': [nan, 0.22816047983052717], 'false': [nan, 0.22816047983052717], 'false,false': [nan, 0.22816047983052823], 'false,false,false': [nan, 0.22816047983052823]}
{'': [nan, 0.218290989132656], 'false': [nan, 0.218290989132656], 'false,false': [nan, 0.2182909891326556], 'false,false,false': [nan, 0.21829098913265577]}
{'': [0.22224670225005758, 0.20491655993627308], 'true': [3.181487266242057e-06, 3.2569104558112755e-06], 'false': [nan, 0.20491655993627308], 'false,false': [nan, 0.20491655993627308], 'false,false,false': [0.20484374999999977, 0.20495833548988138], 'true,true': [nan, 3.181487266242057e-06], 'true,true,false': [nan, 3.181487266242057e-06]}
{'': [nan, 0.19063356283682362], 'false': [nan, 0.19063356283682362], 'false,false': [nan, 0.1906335628368232], 'false,false,false': [0.13712513961077805, 0.226890434323162]}
{'': [nan, 0.18466491575634678], 'false': [nan, 0.18466491575634672], 'false,false': [nan, 0.18466491575634672], 'false,false,false': [nan, 0.18466491575634672]}
{'': [nan, 0.1889969211090859], 'false': [nan, 0.1889969211090859], 'false,false': [nan, 0.18899692110908636], 'false,false,false': [nan, 0.18899692110908636]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 34.695
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(C, D), complex(A, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, E), complex(A, F) )
%   | | | then return 0.35814893509951234;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.23745927992709853;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, I), location(A, J) )
%   | | | then return 0.048625125575702845;  // std dev = 3.117, 63.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=12 */
%   | | | else return 0.18265224635779073;  // std dev = 5.753, 151.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=49 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7306318776577894;  // std dev = 0.118, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( location(A, D), phenotype(A, E) )
%   | then if ( location(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, E) )
%   | | | then return 0.6861869485180158;  // std dev = 2.789, 63.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=54 */
%   | | | else return -0.1571398148427552;  // std dev = 0.058, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.16538850107382747;  // std dev = 0.158, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(A, G), complex(A, H) )
%   | | then if ( enzyme(G, I), complex(G, J) )
%   | | | then return -0.08402977101096973;  // std dev = 0.954, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.07477895826707634;  // std dev = 1.678, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06706152418370306;  // std dev = 4.291, 104.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=24 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5636231012629899;  // std dev = 0.146, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, A) )
%   | then return -0.14615755832900304;  // std dev = 0.118, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.631316783516671;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5526093512843442;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.07430437165950769;  // std dev = 4.203, 110.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=29 */
%   | | | else return 0.14843041937846366;  // std dev = 5.387, 153.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=51 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.4302754882917007;  // std dev = 0.046, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.1907182670791825;  // std dev = 0.390, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.3010517379368353;  // std dev = 0.863, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(A, G), location(A, H) )
%   | | | then return -0.01631755766237498;  // std dev = 2.802, 72.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=13 */
%   | | | else return 0.0791370500903069;  // std dev = 2.915, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5891814287431212;  // std dev = 0.794, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.16430143835878921;  // std dev = 0.041, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.1913223777840634;  // std dev = 3.191, 56.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=23 */
%   | | | else return 0.11803941457509784;  // std dev = 4.000, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), enzyme(A, E) )
%   | then return 0.09050956297765271;  // std dev = 0.620, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(C, F) )
%   | | then return 0.40108632548668127;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.32939806003941524;  // std dev = 0.079, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I), phenotype(H, I) )
%   | | | then return 0.5166075688254143;  // std dev = 2.601, 63.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=55 */
%   | | | else return 0.21499348394721535;  // std dev = 3.550, 59.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=26 */
%   | | else return -0.1795171737442975;  // std dev = 0.029, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else if ( interaction(A, J) )
%   | | then return 0.30163474336840357;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.07233481857145559;  // std dev = 1.189, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.19542508732276817;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41448939969383614;  // std dev = 0.265, 70.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=64 */
%   | else return -0.15717655326721017;  // std dev = 0.046, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E), interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5619701476156631;  // std dev = 0.595, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.0577544444644807;  // std dev = 1.319, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | else if ( enzyme(A, I), complex(E, J) )
%   | | | then return 0.3487965423139569;  // std dev = 1.230, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.14636632050174972;  // std dev = 2.808, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.3117189485372624;  // std dev = 1.304, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.17601703441884944;  // std dev = 0.060, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.0364620115382995;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.38880520658311873;  // std dev = 0.176, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.18590708671715053;  // std dev = 0.133, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.3669113434808156;  // std dev = 0.281, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3075532355442306;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.021745933602097273;  // std dev = 2.780, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.30395440414344865;  // std dev = 1.169, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return -0.15580262566378963;  // std dev = 0.234, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.14582758399871654;  // std dev = 2.683, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return -3.026091686108012E-4;  // std dev = 1.373, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, E) )
%   | | then return -0.17068328147500358;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3321804667996713;  // std dev = 0.124, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, A) )
%   | | then return -0.25544766028656973;  // std dev = 0.178, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.031355260382150855;  // std dev = 0.248, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   else if ( interaction(A, F), enzyme(A, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.488285460082578;  // std dev = 0.186, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.061425443162998104;  // std dev = 0.494, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( phenotype(A, I), complex(A, J) )
%   | | then return -0.018191179514983735;  // std dev = 0.249, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.22876485620031967;  // std dev = 0.202, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.01857582648389739;  // std dev = 4.290, 161.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(C, B), interaction(C, E) )
%   | then return 0.1603486268700162;  // std dev = 0.049, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(D, C), interaction(F, D) )
%   | | then return -0.045040554398132295;  // std dev = 0.234, 115.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=25 */
%   | | else return 0.04764711857025085;  // std dev = 0.325, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   else if ( phenotype(A, G), interaction(H, A) )
%   | then if ( interaction(I, H), enzyme(I, J) )
%   | | then return 0.06886128672143434;  // std dev = 0.244, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | else if ( interaction(H, K), recursion_proteinclass(K, B) )
%   | | | then return 0.31825955701498054;  // std dev = 0.656, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.17017058756811265;  // std dev = 0.559, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.20032052716682616;  // std dev = 0.173, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.018592669078624315;  // std dev = 1.801, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.10078769162517058;  // std dev = 2.704, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), phenotype(C, F) )
%   | then if ( enzyme(A, D), phenotype(A, F) )
%   | | then return -0.15717363436435167;  // std dev = 0.207, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(E, A), enzyme(E, G) )
%   | | | then return -0.014257559070316995;  // std dev = 1.385, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.07000185168388182;  // std dev = 2.203, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | else if ( location(A, H), location(C, H) )
%   | | then return -0.03851853080591691;  // std dev = 0.230, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else return -0.08778651066764187;  // std dev = 0.265, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   else if ( interaction(I, A), interaction(I, I) )
%   | then return -0.030419762417758758;  // std dev = 0.181, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | else if ( phenotype(A, J), location(A, K) )
%   | | then return 0.010665899173789394;  // std dev = 0.222, 85.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=30 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return -0.04694337068866385;  // std dev = 0.884, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.08275223125458316;  // std dev = 3.059, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '7.341', 'seconds']
Refined model CLL: -0.213946


******************************************
Best model found
******************************************
Results 

CLL : -0.209079 

AUC ROC : 0.973169 

AUC PR : 0.317617 

Precision : 0.199248 

Recall : 0.6 

F1 : 0.299153 

Total Learning Time : 34.695 

Total Inference Time : 37.10841488838196 

Total revision time: 81.17673679161072
Best scored revision CLL: -0.213946


Results 

CLL : -0.209079 

AUC ROC : 0.973169 

AUC PR : 0.317617 

Precision : 0.199248 

Recall : 0.6 

F1 : 0.299153 

Total Learning Time : 81.28335042762757 

Total Inference Time : 37.10841488838196 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.37
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19888967584025322;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15495832117254793;  // std dev = 5.877, 158.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=51 */
%   | | | else return 0.15248601104596565;  // std dev = 5.279, 128.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.145425931100025;  // std dev = 5.406, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
%   | | | else return 0.1574166342177006;  // std dev = 5.595, 138.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1922071543917941;  // std dev = 3.929, 64.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=26 */
%   | | | else return 0.09753311728100078;  // std dev = 6.735, 211.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09011627812902043;  // std dev = 7.874, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09407285596478165;  // std dev = 7.748, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.70143589473246;  // std dev = 0.999, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.2762549773140993;  // std dev = 0.090, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05294802532811444;  // std dev = 4.122, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
%   | | | else return 0.02405867500855972;  // std dev = 4.038, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.021991569275625084;  // std dev = 4.346, 141.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=44 */
%   | | | else return 0.056113860444609275;  // std dev = 5.665, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.034809521366594105;  // std dev = 7.135, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04483935958147981;  // std dev = 7.010, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.238', 'seconds']
Parameter learned model CLL:-0.32656 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.788, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.877, 107, 51], 'false,false,false,false': [5.279, 87, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.406, 87, 44], 'false,false,false,false': [5.595, 90, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.929, 38, 26], 'false,false,false,false': [6.735, 145, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.874, 189, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.748, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.999, 1, 44], 'true,false': [0.09, 89, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.122, 53, 25], 'false,false,false,false': [4.038, 56, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.346, 97, 44], 'false,false,false,false': [5.665, 97, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.135, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.01, 175, 92]}]
{'': [nan, 0.22463648834019337], 'false': [nan, 0.22463648834019292], 'false,false': [nan, 0.22463648834019337], 'false,false,false': [nan, 0.22463648834019292]}
{'': [nan, 0.21820137904053694], 'false': [nan, 0.2182013790405408], 'false,false': [nan, 0.21820137904053694], 'false,false,false': [0.21859477647813008, 0.21771240234374917]}
{'': [nan, 0.2250421454691256], 'false': [nan, 0.2250421454691256], 'false,false': [nan, 0.22504214546912543], 'false,false,false': [0.22307292995073377, 0.22684145546715928]}
{'': [nan, 0.22267010178456864], 'false': [nan, 0.22267010178456864], 'false,false': [nan, 0.22267010178456872], 'false,false,false': [0.24121093750000033, 0.21496036631066281]}
{'': [nan, 0.22065126252114367], 'false': [nan, 0.22065126252114367], 'false,false': [nan, 0.22065126252114237], 'false,false,false': [nan, 0.22065126252114237]}
{'': [nan, 0.22651813240218616], 'false': [nan, 0.22651813240218616], 'false,false': [nan, 0.2265181324021852], 'false,false,false': [nan, 0.226518132402186]}
{'': [0.22070658738176013, 0.212253079382902], 'true': [0.02216189179925697, 9.006482796435582e-05], 'false': [nan, 0.212253079382902], 'false,false': [nan, 0.212253079382902], 'false,false,false': [0.21778435239973695, 0.20637718314372708], 'true,true': [nan, 0.02216189179925697], 'true,true,false': [nan, 0.02216189179925697]}
{'': [nan, 0.1785630166376319], 'false': [nan, 0.1785630166376319], 'false,false': [nan, 0.17856301663763252], 'false,false,false': [0.13396170774930263, 0.22135992138691063]}
{'': [nan, 0.1818125742631325], 'false': [nan, 0.18181257426313116], 'false,false': [nan, 0.18181257426313116], 'false,false,false': [nan, 0.18181257426313116]}
{'': [nan, 0.18406056306134597], 'false': [nan, 0.18406056306134597], 'false,false': [nan, 0.18406056306134638], 'false,false,false': [nan, 0.18406056306134638]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 18.767
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then if ( interaction(D, A), enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(C, D), interaction(A, F) )
%   | | | then return -0.0607699838194067;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.15896194322959276;  // std dev = 5.086, 123.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=37 */
%   else if ( interaction(G, A), complex(A, H) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.13592671287729013;  // std dev = 2.687, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.26240425424844854;  // std dev = 3.364, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7367958249972436;  // std dev = 0.132, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13461332931136868;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( phenotype(D, E) )
%   | | | then return 0.027434914988913196;  // std dev = 1.299, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.16682402609813932;  // std dev = 1.776, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( interaction(A, F), complex(A, G) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.05881907523771878;  // std dev = 0.941, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.13056541313429051;  // std dev = 3.339, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.23940294814591168;  // std dev = 3.553, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | | | else return 0.15256920966945392;  // std dev = 4.595, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(C, C), complex(C, E) )
%   | then if ( complex(A, E) )
%   | | then return 0.005499165441985585;  // std dev = 0.686, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.06130294688497791;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.5912662869493194;  // std dev = 0.150, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(C, F) )
%   | | | then return -0.09482393149637647;  // std dev = 0.969, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.09340354709071925;  // std dev = 3.804, 70.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=21 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.6738743721560353;  // std dev = 0.104, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11968849731825301;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( complex(A, H), interaction(A, I) )
%   | | | then return 0.05888424753022722;  // std dev = 2.414, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.16213246094559675;  // std dev = 5.257, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.5016977233460006;  // std dev = 0.113, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, E), interaction(D, E) )
%   | | then return -0.059947070809273084;  // std dev = 0.276, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else return 0.1353272240928741;  // std dev = 0.461, 120.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=42 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G), phenotype(A, H) )
%   | | then return -0.12946521195668778;  // std dev = 0.750, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(F, I), complex(A, J) )
%   | | | then return 0.20246099892194103;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.02863940115351718;  // std dev = 2.733, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.48466140881711145;  // std dev = 2.308, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   | | | else return -0.21472959899017763;  // std dev = 0.100, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.005205325935096465;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then if ( phenotype(A, D), location(A, E) )
%   | | then return 0.3824594361410827;  // std dev = 0.166, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2831595330863114;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then return 0.3732134681102795;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5821408389320947;  // std dev = 0.236, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.10632240798145336;  // std dev = 0.016, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H), interaction(H, J) )
%   | | | then return 0.03763276842804709;  // std dev = 2.430, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.21625251857050262;  // std dev = 3.395, 49.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.4470357019380864;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04810353395148782;  // std dev = 5.312, 154.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=44 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.053988309787686435;  // std dev = 0.402, 133.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), phenotype(E, F) )
%   | | then if ( interaction(G, E), phenotype(G, F) )
%   | | | then return 0.050469233348447114;  // std dev = 2.110, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.19793506509886344;  // std dev = 2.092, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(H, D), complex(D, I) )
%   | | | then return -0.04105536170093538;  // std dev = 1.188, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.07264794209113848;  // std dev = 2.925, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7127648605382471;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.22111162123068448;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.23074621790460573;  // std dev = 1.375, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.042171718739570666;  // std dev = 1.852, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5851995661644227;  // std dev = 0.200, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.22880633174424433;  // std dev = 0.069, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( phenotype(A, E), interaction(A, F) )
%   | then if ( location(A, G), complex(F, H) )
%   | | then if ( location(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.11788130755682295;  // std dev = 1.357, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.19816272544517796;  // std dev = 0.112, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.041431857677595905;  // std dev = 0.328, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(J, J) )
%   | | | then return 0.1981341625002871;  // std dev = 1.506, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.016777759431788945;  // std dev = 3.232, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | | else if ( enzyme(A, L), location(A, M) )
%   | | | then return 0.003318142633430199;  // std dev = 1.707, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.1059353145001531;  // std dev = 2.550, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.22254855660793035;  // std dev = 0.083, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), complex(F, G) )
%   | | then if ( complex(A, H), location(E, I) )
%   | | | then return -0.05108621065609842;  // std dev = 2.476, 63.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=12 */
%   | | | else return 0.06389721186940527;  // std dev = 1.410, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(E, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5201525330376352;  // std dev = 0.261, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.22080461337227025;  // std dev = 0.452, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( phenotype(A, K), enzyme(A, L) )
%   | | then if ( enzyme(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.4244002907093857;  // std dev = 0.272, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.18309527130702966;  // std dev = 0.370, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, N), recursion_proteinclass(N, B) )
%   | | | then return 0.32229692440029195;  // std dev = 0.332, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.032716092653607136;  // std dev = 5.348, 163.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=49 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.20573417328715038;  // std dev = 0.124, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.0220394366700653;  // std dev = 0.322, 83.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( enzyme(A, G), complex(A, F) )
%   | | then return -0.0869244338339847;  // std dev = 0.269, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6357078970393916;  // std dev = 0.442, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.25844904541973523;  // std dev = 0.205, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( interaction(K, I), complex(A, L) )
%   | | | then return 0.12196124133469533;  // std dev = 1.293, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.028811954205839155;  // std dev = 3.130, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else if ( location(A, M), interaction(A, N) )
%   | | | then return 0.04158217810479612;  // std dev = 2.818, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | | else return 0.26512368656960966;  // std dev = 0.887, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( enzyme(A, E), complex(C, F) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1313761206114275;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.04044476403082266;  // std dev = 0.290, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then return 0.20441310987296496;  // std dev = 0.115, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.10324727298091156;  // std dev = 0.129, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.09137014238021296;  // std dev = 3.785, 89.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=36 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(J, I) )
%   | | | then return 0.06042560179323334;  // std dev = 2.354, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.44094656840337465;  // std dev = 1.630, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | else return -0.21917308878197428;  // std dev = 0.051, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return 0.2540836955580763;  // std dev = 0.641, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '447', 'milliseconds']
Refined model CLL: -0.24955


******************************************
Best model found
******************************************
Results 

CLL : -0.243059 

AUC ROC : 0.940065 

AUC PR : 0.22031 

Precision : 0.221649 

Recall : 0.465704 

F1 : 0.300349 

Total Learning Time : 18.767 

Total Inference Time : 10.741328001022339 

Total revision time: 37.53915826034546
Best scored revision CLL: -0.24955


Results 

CLL : -0.243059 

AUC ROC : 0.940065 

AUC PR : 0.22031 

Precision : 0.221649 

Recall : 0.465704 

F1 : 0.300349 

Total Learning Time : 37.645771896362305 

Total Inference Time : 10.741328001022339 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.184
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2091693432627782;  // std dev = 7.471, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14588445370643713;  // std dev = 5.968, 165.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=52 */
%   | | | else return 0.18489960522158697;  // std dev = 4.686, 96.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13324136891828234;  // std dev = 4.343, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
%   | | | else return 0.18105321392063922;  // std dev = 6.022, 155.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07138038603226206;  // std dev = 3.689, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | | else return 0.11086069869033545;  // std dev = 6.682, 201.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11440527591357777;  // std dev = 7.459, 244.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12112440703286631;  // std dev = 7.295, 226.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6921118449026695;  // std dev = 0.994, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.2725945507611485;  // std dev = 0.054, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07322862377056084;  // std dev = 4.600, 92.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=33 */
%   | | | else return 0.058621362840514994;  // std dev = 4.025, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.02726463754324305;  // std dev = 3.478, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   | | | else return 0.03856939808126326;  // std dev = 6.179, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.002000620921163556;  // std dev = 7.266, 284.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028351237223965445;  // std dev = 7.089, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.741', 'seconds']
Parameter learned model CLL:-0.348535 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.471, 159, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.968, 113, 52], 'false,false,false,false': [4.686, 62, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.343, 58, 28], 'false,false,false,false': [6.022, 97, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.689, 48, 19], 'false,false,false,false': [6.682, 134, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.459, 158, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.295, 140, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.994, 1, 28], 'true,false': [0.054, 58, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.6, 59, 33], 'false,false,false,false': [4.025, 46, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.478, 61, 28], 'false,false,false,false': [6.179, 112, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.266, 198, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.089, 172, 86]}]
{'': [nan, 0.22780508121616078], 'false': [nan, 0.22780508121616044], 'false,false': [nan, 0.22780508121616078], 'false,false,false': [nan, 0.22780508121616044]}
{'': [nan, 0.2209304032530333], 'false': [nan, 0.2209304032530332], 'false,false': [nan, 0.2209304032530333], 'false,false,false': [0.2158310376492169, 0.22873263888888917]}
{'': [nan, 0.22927568593986986], 'false': [nan, 0.22927568593986986], 'false,false': [nan, 0.22927568593986936], 'false,false,false': [0.21932476593714206, 0.2339811003221799]}
{'': [nan, 0.21767959475042445], 'false': [nan, 0.21767959475042445], 'false,false': [nan, 0.21767959475042445], 'false,false,false': [0.20316328803742453, 0.22212868988286233]}
{'': [nan, 0.22803891268655144], 'false': [nan, 0.22803891268655144], 'false,false': [nan, 0.22803891268655133], 'false,false,false': [nan, 0.22803891268655133]}
{'': [nan, 0.23549824001349326], 'false': [nan, 0.23549824001349326], 'false,false': [nan, 0.23549824001349318], 'false,false,false': [nan, 0.2354982400134934]}
{'': [0.21819944362218227, 0.2292563016447912], 'false': [nan, 0.2292563016447912], 'false,false': [nan, 0.2292563016447912], 'false,false,false': [0.23003308128544428, 0.22812933941678193], 'true': [0.03405754272571779, 5.0917458856616434e-05], 'true,true': [nan, 0.03405754272571779], 'true,true,false': [nan, 0.03405754272571779]}
{'': [nan, 0.19416773792445094], 'false': [nan, 0.19416773792445094], 'false,false': [nan, 0.19416773792445138], 'false,false,false': [0.13593557769504122, 0.22461007150601844]}
{'': [nan, 0.18588558912260109], 'false': [nan, 0.18588558912260097], 'false,false': [nan, 0.18588558912260097], 'false,false,false': [nan, 0.18588558912260097]}
{'': [nan, 0.19475730286237067], 'false': [nan, 0.19475730286237067], 'false,false': [nan, 0.1947573028623704], 'false,false,false': [nan, 0.1947573028623704]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 18.029
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, D), complex(D, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06710415898010937;  // std dev = 3.328, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.2775037738091898;  // std dev = 2.747, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.19428338888102406;  // std dev = 5.153, 119.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 5.96e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( complex(A, E) )
%   | | then if ( enzyme(D, F) )
%   | | | then return 0.0026640398600328574;  // std dev = 0.837, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.1303992197457741;  // std dev = 0.031, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8206215267129332;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.15430239925215575;  // std dev = 0.108, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.5768608065650931;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1501003630900369;  // std dev = 4.957, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.2148103904874101;  // std dev = 1.927, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.0729215708922646;  // std dev = 3.892, 85.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.7466612172953675;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3752840210448575;  // std dev = 1.113, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11029448194075017;  // std dev = 0.005, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( location(A, F) )
%   | | | then return 0.09460668477503169;  // std dev = 6.540, 218.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=61 */
%   | | | else return 0.3236124218899066;  // std dev = 1.228, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.46050329927481937;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(F, A), interaction(C, F) )
%   | | then return -0.06931218727155591;  // std dev = 0.294, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | | then return 0.44747561738238045;  // std dev = 1.154, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.047349980706573154;  // std dev = 3.898, 92.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=23 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5649404113005067;  // std dev = 0.140, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7920866204466546;  // std dev = 0.046, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.19746983328184115;  // std dev = 0.193, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( location(A, K) )
%   | | | then return 0.21045098486942138;  // std dev = 3.584, 54.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
%   | | | else return -0.0298457091733046;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, C) )
%   | then return 0.3142917967156271;  // std dev = 0.102, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3933631043471959;  // std dev = 0.092, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( recursion_proteinclass(E, B), interaction(F, G) )
%   | | then return 0.4602756775778755;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, E), location(A, H) )
%   | | | then return -0.08007928241083491;  // std dev = 1.307, 36.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=2 */
%   | | | else return 0.04471076929432062;  // std dev = 3.533, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(K, I), interaction(K, K) )
%   | | | then return 0.004925528756976841;  // std dev = 1.537, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.08092156161172633;  // std dev = 2.453, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( interaction(A, L), complex(A, M) )
%   | | | then return 0.18736954387942198;  // std dev = 1.751, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.11503940584518363;  // std dev = 3.874, 77.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=27 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(E, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.2780735731320685;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, E), complex(E, C) )
%   | | | then return -0.09896903746540163;  // std dev = 0.921, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.09323806450804309;  // std dev = 2.085, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | else return -0.05124644407827913;  // std dev = 0.350, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(G, H) )
%   | | | then return 0.5979484651425553;  // std dev = 1.338, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return 0.2423217986950592;  // std dev = 3.089, 48.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | else return -0.20492561439698653;  // std dev = 0.043, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( interaction(A, I) )
%   | | then return -0.009841363628385391;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.07860546272166574;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5397244858409013;  // std dev = 0.226, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.1862594301562948;  // std dev = 0.061, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, E) )
%   | | then return 0.004566388460667177;  // std dev = 0.288, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( location(A, G), location(E, G) )
%   | | | then return -0.13544097003209768;  // std dev = 1.454, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.05495262611005898;  // std dev = 1.144, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5629732460573192;  // std dev = 0.267, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.16663437334127756;  // std dev = 0.162, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( location(A, J) )
%   | | | then return 0.12289000339654817;  // std dev = 3.350, 65.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=27 */
%   | | | else return 0.42667295466948524;  // std dev = 0.806, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(C, E), interaction(E, E) )
%   | | then return 0.14879947467511237;  // std dev = 0.660, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.2677730460587323;  // std dev = 0.156, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), phenotype(F, G) )
%   | | then return -0.042591158177235106;  // std dev = 0.601, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.1320734753863644;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.08477008760114887;  // std dev = 0.061, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( complex(A, I) )
%   | | | then return -0.012015558424539191;  // std dev = 1.049, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.10590371164957056;  // std dev = 1.411, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return -0.014365966460368548;  // std dev = 2.434, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return 0.03174216454906292;  // std dev = 4.444, 150.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=50 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.20631721743340337;  // std dev = 0.201, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( recursion_proteinclass(C, B), interaction(E, D) )
%   | | then return -0.2918806841137839;  // std dev = 0.955, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, C), phenotype(C, F) )
%   | | | then return -0.16833105407096424;  // std dev = 0.583, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.004129017869826529;  // std dev = 4.045, 131.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=35 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then return 0.020486788898441646;  // std dev = 0.317, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( complex(J, K) )
%   | | | then return -0.04060941018145326;  // std dev = 0.765, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.035709819591508506;  // std dev = 0.517, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.13014291235192715;  // std dev = 1.815, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.34546488537946846;  // std dev = 1.069, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( enzyme(D, E), interaction(F, A) )
%   | then return 0.04276082621686359;  // std dev = 0.320, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.370072723486003;  // std dev = 0.207, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2515839859082186;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(J, D), recursion_proteinclass(J, B) )
%   | | | then return 0.4941755225235106;  // std dev = 0.150, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.18009568808715104;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( complex(A, K), phenotype(A, L) )
%   | then return -0.05610340028942237;  // std dev = 0.330, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | else if ( interaction(A, M), complex(M, N) )
%   | | then return -0.03144037490533883;  // std dev = 0.228, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( interaction(P, A), enzyme(P, Q) )
%   | | | then return 0.13002456274705299;  // std dev = 1.611, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.035728523429993546;  // std dev = 3.739, 102.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=37 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '56.733', 'seconds']
Refined model CLL: -0.24243


******************************************
Best model found
******************************************
Results 

CLL : -0.243152 

AUC ROC : 0.968886 

AUC PR : 0.244612 

Precision : 0.264479 

Recall : 0.484099 

F1 : 0.342072 

Total Learning Time : 18.029 

Total Inference Time : 10.296428918838501 

Total revision time: 35.75594800758362
Best scored revision CLL: -0.24243


Results 

CLL : -0.243152 

AUC ROC : 0.968886 

AUC PR : 0.244612 

Precision : 0.264479 

Recall : 0.484099 

F1 : 0.342072 

Total Learning Time : 35.862561643600465 

Total Inference Time : 10.296428918838501 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.813
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.13780995204866345;  // std dev = 4.876, 118.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=33 */
%   | | | else return 0.1393989350995111;  // std dev = 5.087, 128.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.058148935099512175;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7609104304538484;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6818886367776447;  // std dev = 3.307, 82.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=69 */
%   | | | else return -0.15957547426026525;  // std dev = 0.001, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | else if ( location(A, I) )
%   | | | then return 0.017684289605180196;  // std dev = 1.803, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.37164090904142316;  // std dev = 1.227, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.5960526174841312;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.10884751188073875;  // std dev = 4.273, 115.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6978777960153789;  // std dev = 0.989, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.13941269101103404;  // std dev = 5.96e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2785954652377301;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.24539949248160614;  // std dev = 1.226, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3755015638712001;  // std dev = 0.915, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.5043507427669758;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6203418273316246;  // std dev = 1.095, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.035956970625076974;  // std dev = 5.068, 238.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5668165694538748;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.14620613412037217;  // std dev = 1.571, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3730064825267719;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.37162146616216785;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.0614700561488671;  // std dev = 5.417, 245.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return -0.4548878534246292;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.4260606322794077;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.07469200302533502;  // std dev = 1.238, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.0769782489620764;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.28787242877959296;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.4070723080487939;  // std dev = 0.142, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3265121650140008;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.0410499923748089;  // std dev = 2.285, 63.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2937885779670662;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.07645951476096856;  // std dev = 4.666, 179.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=55 */
%   | | | else return 0.04905799224036719;  // std dev = 1.849, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25760949513762876;  // std dev = 0.174, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.25912623978522953;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5316534351023294;  // std dev = 1.357, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.16780639932154018;  // std dev = 0.374, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23682181704336136;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.09753409563548665;  // std dev = 3.840, 112.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19104207324457556;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.19032095429415122;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4286106302376143;  // std dev = 2.217, 77.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=71 */
%   | | else return -0.15674335447343135;  // std dev = 0.288, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21254690204890547;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.002906932910958815;  // std dev = 1.465, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.172280610997127;  // std dev = 0.080, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.8183985487367885;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.1789487637504232;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.047862427800115695;  // std dev = 1.437, 57.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.32528864355398346;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.004687241861849914;  // std dev = 1.729, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16846737328065006;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.025564789876566615;  // std dev = 3.417, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
%   | | | else return -0.014794587747659349;  // std dev = 1.478, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13969637269885385;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.21569933991856705;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15420068692298236;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.011124995796287925;  // std dev = 2.315, 106.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.14619838872018917;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.048170623487757476;  // std dev = 3.310, 108.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=40 */
%   | | | else return -0.038314196970481086;  // std dev = 1.501, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.527', 'seconds']
Parameter learned model CLL:-0.198592 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [4.876, 85, 33], 'false,false,true,false': [5.087, 92, 36], 'false,false,false,true': [0.816, 1, 2], 'false,false,false,false': [1.265, 8, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.913, 1, 5], 'false,true,true': [0.051, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.307, 13, 69], 'false,false,true,false': [0.001, 153, 0], 'false,false,false,true': [1.803, 15, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [1.227, 2, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.273, 81, 34], 'false,true,false,true': [0.989, 1, 37], 'false,true,false,false': [5.96e-08, 76, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.0, 2, 2], 'false,false,false,true': [1.226, 4, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.915, 1, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.095, 1, 14], 'false,true,false': [5.068, 181, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.571, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.008, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.046, 0, 4], 'false,true': [5.417, 174, 71], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.238, 7, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.011, 0, 7], 'true,true,false': [0.142, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.285, 51, 12], 'false,false,true': [0.039, 0, 3], 'false,false,false,true': [4.666, 124, 55], 'false,false,false,false': [1.849, 15, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.174, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.357, 2, 33], 'true,false': [0.374, 85, 0], 'false,true': [0.034, 0, 3], 'false,false,true': [3.84, 72, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.035, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.217, 6, 71], 'false,true,false': [0.288, 145, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.465, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.08, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.033, 0, 3], 'false,true,true': [1.437, 46, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.729, 42, 17], 'false,false,true': [0.026, 0, 3], 'false,false,false,true': [3.417, 83, 40], 'false,false,false,false': [1.478, 12, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.009, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.029, 0, 3], 'false,true': [2.315, 77, 29], 'false,false,true': [0.023, 0, 3], 'false,false,false,true': [3.31, 68, 40], 'false,false,false,false': [1.501, 15, 4]}]
{'': [-1.6148698540002277e-16, 0.20500459136822802], 'false': [0.23999999999999994, 0.2024120093618176], 'false,true': [0.0, 0.18750000000000006], 'false,false': [0.20181439619274275, 0.21301775147928975], 'false,false,false': [0.22222222222222224, 0.16000000000000003], 'false,false,true': [0.20145073254811968, 0.2021484375000012], 'false,true,false': [0.0, 0.22222222222222224], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.07638888888888906, 0.20789961333307766], 'false': [0.0008585132404309951, 0.20562958224799582], 'false,false': [0.20740362327994696, 0.17116119281993628], 'false,false,true': [0.13339495149417832, 1.135236990541899e-08], 'false,false,false': [0.17116119281993628, nan], 'true': [7.401486830834377e-17, 0.13888888888888884], 'false,true': [0.0008585132404309951, nan]}
{'': [0.12481098819537904, 0.16559149471316253], 'false': [0.16179288096253763, 0.22772429987222872], 'false,false': [0.25000000000000006, 0.2145946110589269], 'false,false,true': [nan, 0.25000000000000006], 'false,false,false': [0.2145946110589269, nan], 'false,true': [0.1587630900431953, 0.16437172404462855], 'false,true,false': [0.025744932357268924, 4.674623261579606e-17], 'true': [0.15063260429564465, 0.0]}
{'': [0.07102984951415159, 0.13008120597521813], 'false': [0.12529479348515918, 0.21930516012070758], 'false,false': [0.0, 0.22449923133300062], 'false,false,false': [0.22449923133300062, nan], 'false,true': [0.0799718629924478, 0.10790390951049787], 'false,true,true': [nan, 0.07997186299244774], 'true': [0.0761035993190497, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.00019857137158737795, 0.12496272242154285], 'false': [0.11975919290280156, 0.1911608786632563], 'false,false': [0.19401755861605893, 0.19079968988077722], 'false,false,true': [0.0, 0.0], 'false,false,false': [0.17040509886143643, 0.20408163265306117], 'true': [9.643086613933935e-06, 0.0005279751528080856], 'true,true': [9.643086613933935e-06, nan]}
{'': [0.004548257821948837, 0.11744930202539357], 'false': [0.08286284155271001, 0.12489157560552741], 'false,false': [0.0004951074419373888, 0.1260409101056304], 'false,false,false': [0.12165209237473994, 0.1627783516028385], 'true': [0.005002329686926954, 0.0], 'true,true': [1.6064508796653776e-05, 0.006690920583443061], 'true,false': [nan, 0.0]}
{'': [0.11171197252643425, 0.12875093947968888], 'false': [0.00037875205775292353, 0.13168336536198771], 'false,false': [0.13168336536198771, nan], 'true': [0.05431308452820356, 0.0016476051000570968], 'true,true': [0.0027524464724564064, 0.0525772088554399], 'true,true,false': [nan, 0.05257720885543985], 'true,true,true': [0.003027481982036062, 0.0]}
{'': [0.00010864380371940334, 0.10268121918042077], 'false': [0.10013490540750018, 0.13682078737135028], 'false,false': [0.0, 0.14304090100867495], 'false,false,false': [0.14304090100867495, nan], 'false,true': [0.06382880613890525, 0.0005713396071102677], 'false,true,true': [nan, 0.06382880613890518], 'true': [0.0, 0.00023873272497868526], 'false,false,true': [0.0, nan]}
{'': [0.07587332538036663, 0.07458538518250692], 'true': [0.0007942951555119475, 0.18677266182667224], 'true,false': [0.0, 0.0003548003375303162], 'false': [0.04490748834022784, 0.09823344601260378], 'false,false': [0.00022970878215271273, 0.09988869463222416], 'false,false,false': [0.09494225313607732, 0.13647308117664134], 'false,true': [0.03621815849656943, 0.051529519704157055], 'false,true,false': [0.0, 0.050689813747941986]}
{'': [0.0005476777501505391, 0.07993720711653718], 'false': [0.050572845457407846, 0.10280565974208654], 'false,false': [0.00018294227188764742, 0.1049456595620307], 'false,false,false': [0.10142884931966918, 0.11857532408255236], 'true': [0.000641454042012584, 0.0002793971303246684], 'true,true': [0.000641454042012584, nan], 'true,true,true': [1.1033955453578928e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 13.98
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( phenotype(A, J), complex(A, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.1387244746678575;  // std dev = 5.297, 139.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=39 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.21959471823204113;  // std dev = 4.377, 83.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=30 */
%   | | | else return 0.06867525088898598;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7480325422264149;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.5264592238267641;  // std dev = 0.775, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7091704303633731;  // std dev = 2.951, 79.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | | | else return -0.16187894086403015;  // std dev = 0.131, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.016248458428033918;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.3495817917613673;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( complex(A, E) )
%   | | then return 0.5733004682236713;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5539538519253371;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5888801916661459;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13045896214630526;  // std dev = 0.161, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.14926420009589586;  // std dev = 4.128, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5902046096232011;  // std dev = 2.089, 42.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=37 */
%   | | | else return -0.14445974089581703;  // std dev = 0.067, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.11942989730156595;  // std dev = 0.446, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.26645565643238406;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(A, E) )
%   | | then return 0.4143207652465515;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.46509025011658717;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.060699264663058305;  // std dev = 0.667, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B), interaction(A, G) )
%   | | | then return 0.6861965909695139;  // std dev = 0.026, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.052385351604266175;  // std dev = 4.959, 208.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=55 */
%   | | else return 0.2732884359067354;  // std dev = 0.348, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5371653713962993;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.21533102533767542;  // std dev = 1.315, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.03144978533148718;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3353681607181501;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3419144169916203;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.055184082344743264;  // std dev = 1.412, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | | else return 0.05580302921861859;  // std dev = 1.195, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.09570411678407688;  // std dev = 4.743, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
%   | | | else return 0.23066232833744094;  // std dev = 0.982, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.40414366052378603;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.28432997022919093;  // std dev = 0.971, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.013710611087601795;  // std dev = 1.216, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25036708288240433;  // std dev = 0.012, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.47205427926328136;  // std dev = 0.224, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3116594003116092;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( complex(G, I), interaction(A, G) )
%   | | | then return -0.006217323629250999;  // std dev = 1.375, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.13948175296602136;  // std dev = 1.393, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return -0.12536351224316447;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2795164954988997;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.07031819698559634;  // std dev = 4.628, 174.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=55 */
%   | | | else return -0.014149319050096466;  // std dev = 1.887, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2535918065918595;  // std dev = 0.095, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A), interaction(A, E) )
%   | | | then return 0.3782609408389183;  // std dev = 1.108, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.5889659096642136;  // std dev = 0.395, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.18541739339131713;  // std dev = 0.063, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return -0.022727446347587388;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), enzyme(H, I) )
%   | | | then return -0.009635925113021453;  // std dev = 2.504, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | | else return -0.10478223740527647;  // std dev = 0.744, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.0260851210391166;  // std dev = 1.909, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.09064962039550085;  // std dev = 2.427, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16915252907773692;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.21140957773421923;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.294097201759144;  // std dev = 1.331, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return 0.43178051682634067;  // std dev = 2.190, 56.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=51 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.09440631347687965;  // std dev = 0.044, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.1632394583558022;  // std dev = 0.294, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.20462672709454421;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.06586398316278466;  // std dev = 0.688, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1150734410671794;  // std dev = 1.082, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18162476953309858;  // std dev = 0.083, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.002177524726680452;  // std dev = 0.289, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.057850680792661764;  // std dev = 1.069, 35.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
%   | | | else return 0.007776128334619179;  // std dev = 0.950, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.3119755172220703;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.006092266891549394;  // std dev = 1.620, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.05476654137115283;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.04098866704522892;  // std dev = 1.227, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.04366737265292488;  // std dev = 3.282, 121.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=41 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15725862467604793;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.04081368346655451;  // std dev = 0.712, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return -0.008468282357004437;  // std dev = 1.575, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | | else return -0.08730197178706631;  // std dev = 0.696, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.09020976962953609;  // std dev = 0.751, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.03435337760114096;  // std dev = 1.049, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.20419329988075874;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.030128366129023587;  // std dev = 3.222, 111.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=37 */
%   | | | else return -0.11535006360962402;  // std dev = 1.864, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '30.763', 'seconds']
Refined model CLL: -0.200345


******************************************
Best model found
******************************************
Results 

CLL : -0.197891 

AUC ROC : 0.986031 

AUC PR : 0.249171 

Precision : 0.169267 

Recall : 0.769504 

F1 : 0.277494 

Total Learning Time : 13.98 

Total Inference Time : 19.541574001312256 

Total revision time: 54.52937390136719
Best scored revision CLL: -0.198592


Results 

CLL : -0.197891 

AUC ROC : 0.986031 

AUC PR : 0.249171 

Precision : 0.169267 

Recall : 0.769504 

F1 : 0.277494 

Total Learning Time : 54.57595397758484 

Total Inference Time : 19.541574001312256 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.145
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.14255260482428161;  // std dev = 4.710, 109.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=31 */
%   | | | else return 0.19148226843284485;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.08037115732173453;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.497251189988732;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.7356630398665784;  // std dev = 0.051, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6278617503117023;  // std dev = 0.973, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7859649336311821;  // std dev = 1.948, 80.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=76 */
%   | | | else return -0.16366392775080357;  // std dev = 0.048, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | | else if ( location(A, I) )
%   | | | then return 0.13379530847388582;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.6030978325455582;  // std dev = 0.027, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4226184183545323;  // std dev = 0.879, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07768538183789546;  // std dev = 4.275, 125.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6122540867949869;  // std dev = 1.917, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.14527122806046808;  // std dev = 3.65e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8300291027813623;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08512095420461782;  // std dev = 1.645, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4543349392708602;  // std dev = 0.046, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.4426921578750679;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.49688097648657453;  // std dev = 0.174, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.38828984115078846;  // std dev = 2.271, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | | else return 0.020861271703010918;  // std dev = 5.054, 245.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.636961816518562;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.06604891855464855;  // std dev = 1.685, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3514132469879406;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( location(A, E) )
%   | | | then return -0.6616745087860743;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3411766167001052;  // std dev = 0.038, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A) )
%   | then return 0.04733992551729573;  // std dev = 5.769, 287.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=82 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4813186694373026;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.06484596895028852;  // std dev = 1.657, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17437634911392957;  // std dev = 0.945, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.18874828809503214;  // std dev = 1.387, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.5186813305626974;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.36445523608237607;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.006681088133271372;  // std dev = 2.836, 86.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=19 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15800362842675092;  // std dev = 0.949, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.056239437264089934;  // std dev = 4.506, 173.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=51 */
%   | | | else return 5.33624718523757E-4;  // std dev = 2.305, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24327470419078268;  // std dev = 1.166, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.2927121941577508;  // std dev = 0.748, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.011708043201393875;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5533054083575365;  // std dev = 0.890, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1778192743837008;  // std dev = 0.894, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.07406236323795484;  // std dev = 0.918, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05138330805185056;  // std dev = 4.319, 156.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.20070447439934913;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.13327784675674315;  // std dev = 0.958, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3736701122076708;  // std dev = 3.098, 94.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=82 */
%   | | else return -0.14766350232688005;  // std dev = 0.384, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.16479230925234178;  // std dev = 0.725, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.03829437186703223;  // std dev = 1.483, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.20908967098614617;  // std dev = 0.233, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.16135524478034202;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.1385882666337507;  // std dev = 0.678, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0.0031468439426801634;  // std dev = 1.564, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.26710271895735127;  // std dev = 0.158, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.04559610927016057;  // std dev = 1.401, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20567705296762484;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04574012060248793;  // std dev = 3.671, 139.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=47 */
%   | | | else return 0.09290106386273826;  // std dev = 1.351, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14286548509830746;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.25326435211216;  // std dev = 0.217, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22665272839273357;  // std dev = 0.177, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.06686103727042565;  // std dev = 3.030, 133.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.17412218461083243;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.012315064153502394;  // std dev = 3.721, 162.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=47 */
%   | | | else return 0.21227174840780316;  // std dev = 1.163, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.909', 'seconds']
Parameter learned model CLL:-0.19858 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.866, 1, 3], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [4.71, 78, 31], 'false,false,true,false': [5.477, 90, 45], 'false,false,false,true': [1.764, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [1.247, 2, 7], 'true,false': [0.051, 0, 10], 'false,true,true': [0.973, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.948, 4, 76], 'false,false,true,false': [0.048, 203, 0], 'false,false,false,true': [1.69, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.027, 0, 11], 'true,false': [0.879, 1, 6], 'false,true,true': [4.275, 91, 34], 'false,true,false,true': [1.917, 4, 48], 'false,true,false,false': [3.65e-08, 76, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.645, 11, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.046, 0, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.174, 0, 3], 'false,true,true,false': [2.271, 9, 21], 'false,true,false': [5.054, 187, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.685, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'true,true,false': 'location(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'interaction(G, H), interaction(H, G)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.038, 0, 10], 'false,true': [5.769, 205, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.657, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.945, 1, 9], 'true,true,false': [1.387, 2, 6], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 1, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.836, 67, 19], 'false,false,true': [0.949, 1, 8], 'false,false,false,true': [4.506, 122, 51], 'false,false,false,false': [2.305, 35, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [1.166, 1, 15], 'true,true,true,false': [0.748, 2, 1], 'true,true,false,true': [0.861, 1, 3], 'true,true,false,false': [0.89, 1, 33], 'true,false': [0.894, 110, 0], 'false,true': [0.918, 1, 5], 'false,false,true': [4.319, 109, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.958, 1, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.098, 12, 82], 'false,true,false': [0.384, 177, 0], 'false,false,true,true': [0.725, 1, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.483, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.233, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.678, 2, 5], 'false,true,true': [1.564, 34, 13], 'false,true,false,true': [0.158, 0, 8], 'false,true,false,false': [1.401, 44, 11], 'false,false,true': [0.027, 0, 5], 'false,false,false,true': [3.671, 92, 47], 'false,false,false,false': [1.351, 8, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.217, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.177, 0, 3], 'false,true': [3.03, 101, 32], 'false,false,true': [0.024, 0, 5], 'false,false,false,true': [3.721, 115, 47], 'false,false,false,false': [1.163, 4, 4]}]
{'': [0.05246913580246885, 0.21797088819596733], 'false': [0.17283950617283939, 0.21210885146553338], 'false,false': [0.2144584789035208, 0.17283950617283936], 'false,false,true': [0.20351822237185552, 0.22222222222222338], 'false,true': [0.0, 0.20408163265306106], 'false,true,false': [0.18750000000000006, 0.22222222222222224], 'false,false,false': [0.17283950617283936, nan], 'true': [-1.4802973661668753e-16, 0.1388888888888887]}
{'': [0.09617998404000247, 0.2015875401239112], 'false': [0.11842273903625028, 0.19668843942577974], 'false,false': [0.19628302000290526, 0.2040816326530613], 'false,false,false': [0.2040816326530613, nan], 'false,false,true': [0.047452311299123015, 1.1141663693375525e-05], 'false,true': [0.11842273903625028, nan], 'true': [0.17283950617283964, 0.00026210404362796423]}
{'': [0.05072833771540254, 0.16115511523160142], 'false': [0.15858436081956642, 0.20168937946836452], 'false,false': [0.20168937946836452, nan], 'false,false,true': [0.0, 0.18045482873608673], 'false,true': [0.14618595654000324, 0.16714029345851308], 'false,true,false': [0.07070202799938287, 1.7529837230923523e-17], 'true': [6.850620967270193e-05, 0.11043103278870323]}
{'': [0.00013173981327252449, 0.12947046894292313], 'false': [0.1255437415800843, 0.19646628242163666], 'false,false': [0.0, 0.18919268851673202], 'false,false,false': [0.18919268851673202, nan], 'false,true': [0.1581889277965306, 0.10424830107796526], 'false,true,true': [0.01005340666190054, 0.17193047675785586], 'true': [0.00013199976580027806, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.05331561776898414, 0.11953718494337237], 'false': [0.11597283710880267, 0.18167741122067466], 'false,false': [0.0, 0.18294864424470214], 'false,false,false': [0.18294864424470214, nan], 'true': [0.11225668134835323, 0.00014107527773217222], 'true,true': [-3.172065784643304e-17, 0.0], 'false,false,true': [nan, 0.0], 'true,true,false': [0.0, nan]}
{'': [0.16626088991702315, 0.11175597580814198], 'true': [0.15641954364761376, 0.19498254883641206], 'true,false': [0.0, 0.0], 'true,true': [0.0892185506867689, 0.24030603338751616], 'false': [0.09352184854497364, 0.1178051096530247], 'false,false': [0.10004653345750633, 0.11802964177934726], 'false,false,false': [0.11738536819625216, 0.1180439341417828], 'true,false,true': [nan, 0.0]}
{'': [0.11565135120378345, 0.1203636347415052], 'false': [0.14046051088887074, 0.11957162835386075], 'false,false': [0.11957162835386075, nan], 'true': [0.11831237863061667, 0.0072654463475576745], 'true,true': [0.13914712460318154, 0.07044531870200217], 'true,true,true': [0.08495002988112502, 0.18627664996886048], 'true,true,false': [0.185365407193476, 0.023321076665710372]}
{'': [0.05209550257019626, 0.10187101540475234], 'false': [0.09753884534351832, 0.17485957876779107], 'false,false': [0.2629606641922533, 0.15711818441542902], 'false,false,true': [0.2629606641922533, nan], 'false,false,false': [0.15711818441542902, nan], 'false,true': [0.10212254390406565, 0.0008309804771195049], 'false,true,true': [nan, 0.10212254390406539], 'true': [-7.93016446160826e-18, 0.08347916097913627]}
{'': [0.02963796542535072, 0.0781000405333626], 'false': [0.046545433650369096, 0.09902895638234681], 'false,false': [0.0001434966332127141, 0.10152141778040437], 'false,false,false': [0.09697576755028862, 0.15212779904888094], 'false,true': [0.05205516540391077, 0.04240011877615352], 'false,true,false': [0.003138978977938703, 0.03569425133065924], 'true': [0.006028776602622996, 0.051105821600639256], 'true,false': [0.0, 0.06559229929423487]}
{'': [0.007524961366118202, 0.08263237234063069], 'false': [0.0690438414694303, 0.08922967475393917], 'false,false': [0.00011192295730015344, 0.09118721465117045], 'false,false,false': [0.08545567556187876, 0.16914974330561078], 'true': [0.006641553951131747, 0.010477131290502381], 'true,true': [0.006641553951131747, nan], 'true,true,true': [-7.93016446160826e-18, 0.007827312878816514]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;true,true;interaction(D, A).;true;true
4;false;interaction(F, A).;true;true
4;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 15.679
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return 0.10418068113125721;  // std dev = 4.835, 126.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=31 */
%   | | | else return 0.19148226843284585;  // std dev = 5.715, 147.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=49 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7359930932441973;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.22910989281367947;  // std dev = 0.981, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.724291652512317;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), enzyme(H, I) )
%   | | then return 0.7551805016408267;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.41589598673584804;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6824296043296536;  // std dev = 3.426, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.16083562594138004;  // std dev = 0.117, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.24498792482517043;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.15501207517482948;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.48135821405083506;  // std dev = 0.280, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.6012402061599375;  // std dev = 0.128, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( enzyme(A, G), complex(A, H) )
%   | | | then return 0.13980507530492356;  // std dev = 1.244, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.03324338832819279;  // std dev = 4.297, 139.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=30 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.557280374971237;  // std dev = 2.750, 57.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   | | | else return -0.14221934010542883;  // std dev = 0.049, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( recursion_proteinclass(J, B) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.7495973039341347;  // std dev = 0.148, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3101263533590781;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.18085725742986092;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3956698353763135;  // std dev = 0.220, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.00584084825494835;  // std dev = 0.606, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F), location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.27769289327559993;  // std dev = 2.757, 46.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=26 */
%   | | | else return -0.12995264788263075;  // std dev = 0.107, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( location(A, I) )
%   | | | then return 0.09553345376575369;  // std dev = 4.741, 163.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=50 */
%   | | | else return 0.203491942458698;  // std dev = 1.294, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4443213183629656;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.0729538253005033;  // std dev = 1.193, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.45067298646876125;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.23628711482438888;  // std dev = 0.323, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.2769391069452738;  // std dev = 0.272, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F) )
%   | | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5605142078410771;  // std dev = 0.450, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.1564698247823636;  // std dev = 0.802, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.12424338735104853;  // std dev = 2.568, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return 0.05728400905931018;  // std dev = 4.161, 140.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=40 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3389529872010142;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.019383035092650006;  // std dev = 1.402, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.14063993618352455;  // std dev = 0.667, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then return 0.29848460613726785;  // std dev = 0.106, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4041469628865217;  // std dev = 0.222, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, H), interaction(H, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.26758372395438523;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.3067698313503555;  // std dev = 0.129, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(J, A), complex(A, K) )
%   | | then if ( phenotype(A, L), enzyme(J, M) )
%   | | | then return 0.16778238512461413;  // std dev = 0.929, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.018481735986308298;  // std dev = 2.241, 88.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=17 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return 0.02755880824103804;  // std dev = 3.265, 80.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=21 */
%   | | | else return 0.10837952398284552;  // std dev = 3.735, 101.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=37 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( complex(A, D), complex(C, E) )
%   | then return 0.007855586005311159;  // std dev = 0.260, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
%   | else if ( interaction(F, C) )
%   | | then if ( recursion_proteinclass(F, B), interaction(A, G) )
%   | | | then return 0.5588281919644815;  // std dev = 0.606, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.037014076847911435;  // std dev = 4.356, 164.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=50 */
%   | | else if ( enzyme(C, H) )
%   | | | then return 0.17767429761606224;  // std dev = 0.685, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3204594900316432;  // std dev = 0.567, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, I), enzyme(I, J) )
%   | then if ( interaction(I, K) )
%   | | then return -0.17029538126502974;  // std dev = 0.899, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.00177028332803697;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( phenotype(A, L) )
%   | | then return 0.06558280934948081;  // std dev = 0.992, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.12395042825551102;  // std dev = 0.411, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.202916056039197;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.26397953689023673;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2247333861423946;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.42626884657818387;  // std dev = 2.528, 83.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=76 */
%   | | | else return 0.32552334455180265;  // std dev = 0.923, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.14609266057134795;  // std dev = 0.035, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, K), complex(K, J) )
%   | | | then return 0.0775784223446481;  // std dev = 1.067, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.04324273142016345;  // std dev = 0.773, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.033220622355199785;  // std dev = 0.795, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then return -0.05482267051502199;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.18609597806212133;  // std dev = 0.210, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.11278582539161999;  // std dev = 0.198, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I) )
%   | | | then return 0.031660705238973436;  // std dev = 1.821, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return -0.10658592717846324;  // std dev = 0.634, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return -0.02178652209040634;  // std dev = 0.256, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.1938680514304465;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, M), interaction(N, A) )
%   | | | then return 0.018500648469328765;  // std dev = 3.405, 141.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=43 */
%   | | | else return -0.08804959903284323;  // std dev = 2.106, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1765575256889835;  // std dev = 0.056, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.1584833466435035;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(A, I), interaction(I, G) )
%   | | | then return -0.010645463149663744;  // std dev = 1.692, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.11077705883184197;  // std dev = 1.336, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.017398403835272833;  // std dev = 1.932, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | | else return -0.10139883648923882;  // std dev = 3.23e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.16547220098315157;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.005028610166407023;  // std dev = 3.275, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
%   | | | else return -0.023842692257964187;  // std dev = 2.373, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '55.068', 'seconds']
Refined model CLL: -0.201233


******************************************
Best model found
******************************************
Results 

CLL : -0.177745 

AUC ROC : 0.989104 

AUC PR : 0.334208 

Precision : 0.264474 

Recall : 0.758491 

F1 : 0.392195 

Total Learning Time : 15.679 

Total Inference Time : 34.895406007766724 

Total revision time: 74.22004806900024
Best scored revision CLL: -0.19858


Results 

CLL : -0.177745 

AUC ROC : 0.989104 

AUC PR : 0.334208 

Precision : 0.264474 

Recall : 0.758491 

F1 : 0.392195 

Total Learning Time : 74.2666281452179 

Total Inference Time : 34.895406007766724 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.412
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.04419544672741935;  // std dev = 2.552, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | | else return 0.15148226843284462;  // std dev = 5.576, 150.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15502393509951232;  // std dev = 3.655, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7392070123615109;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7268735122674133;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8408433576011372;  // std dev = 0.036, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15944367448369517;  // std dev = 0.058, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | | else if ( location(A, K) )
%   | | | then return 0.16511959259871697;  // std dev = 3.480, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | | else return 0.3382108946667297;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5719988521761975;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5650663047861899;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.12120959433552704;  // std dev = 1.999, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6828026533790023;  // std dev = 0.206, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1408846887935216;  // std dev = 7.60e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5960526174841312;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.18362383086747927;  // std dev = 3.505, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.14231365455761733;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4288622466621297;  // std dev = 0.032, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.42037926479283466;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.42708401465504164;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.22650906722837347;  // std dev = 0.884, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.043205291287338785;  // std dev = 4.239, 203.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.44843194547397947;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.051175292444681886;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.15261390764307828;  // std dev = 3.374, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | | else return 0.08790427096664932;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33313446335588115;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3239313365845741;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.06105199592773528;  // std dev = 4.211, 192.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.34176464016165;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5384850276134387;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.14318231482137866;  // std dev = 3.415, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return 0.009231450683347638;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26451206655591114;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.36998873008804267;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2694913293690093;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.26687515803520223;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.40510470961349576;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.0703273928661235;  // std dev = 1.086, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.25270948959557854;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06697569309689794;  // std dev = 3.901, 159.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=49 */
%   | | | else return 0.055271120731801196;  // std dev = 3.685, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24069010995798523;  // std dev = 0.134, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.26606637845450365;  // std dev = 0.065, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2217336682900155;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6292627643230867;  // std dev = 0.655, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.2138218166306958;  // std dev = 0.692, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.20528538456787712;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.037093363422125096;  // std dev = 3.371, 128.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17782454175649423;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.07503519549378208;  // std dev = 0.865, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4443155722305456;  // std dev = 0.749, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.13871399076806523;  // std dev = 0.200, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2178886276748767;  // std dev = 0.057, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.005829074784542078;  // std dev = 3.087, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15846930250876148;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.13741966949213058;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18595881735717715;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.0774922971870823;  // std dev = 0.471, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.11078536056143595;  // std dev = 0.311, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0069526423618898265;  // std dev = 1.193, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16329651793056502;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.020766504701245136;  // std dev = 2.718, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | | else return -0.018969703244699005;  // std dev = 3.148, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1361390467654242;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16134793343901913;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.13508677242774603;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.44466262067720985;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.1428389233330487;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.019930108732860326;  // std dev = 1.362, 75.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.14219244941923798;  // std dev = 0.000900, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.026042805668478063;  // std dev = 2.645, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
%   | | | else return 0.01708977019110022;  // std dev = 3.060, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.349', 'seconds']
Parameter learned model CLL:-0.176352 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.949, 1, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.552, 35, 8], 'false,false,true,false': [5.576, 106, 44], 'false,false,false,true': [3.655, 45, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.027, 0, 8], 'false,true,true': [0.913, 1, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.036, 0, 52], 'false,false,true,false': [0.058, 150, 0], 'false,false,false,true': [3.48, 37, 18], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.02, 0, 6], 'true,false': [0.033, 0, 8], 'false,true,true': [1.999, 19, 8], 'false,true,false,true': [0.206, 0, 48], 'false,true,false,false': [7.6e-08, 107, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.505, 33, 20], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.032, 0, 11], 'true,false': [0.019, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.884, 3, 3], 'false,true,false': [4.239, 151, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [3.374, 31, 18], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.004, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.03, 0, 9], 'false,true': [4.211, 136, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.415, 30, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.006, 0, 7], 'true,true,false': [0.072, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [1.086, 23, 3], 'false,false,true': [0.017, 0, 6], 'false,false,false,true': [3.901, 110, 49], 'false,false,false,false': [3.685, 41, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.134, 0, 12], 'true,true,true,false': [0.065, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.655, 0, 36], 'true,false': [0.692, 97, 0], 'false,true': [0.001, 0, 5], 'false,false,true': [3.371, 92, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.003, 0, 6], 'true,false': [0.865, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.749, 0, 56], 'false,true,false': [0.2, 132, 0], 'false,false,true,true': [0.057, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.087, 50, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.037, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.042, 0, 4], 'false,true,true': [0.471, 15, 1], 'false,true,false,true': [0.311, 1, 2], 'false,true,false,false': [1.193, 38, 14], 'false,false,true': [0.001, 0, 5], 'false,false,false,true': [2.718, 84, 36], 'false,false,false,false': [3.148, 53, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.013, 0, 5], 'true,true,true,false': [0.043, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.029, 0, 4], 'false,true': [1.362, 58, 17], 'false,false,true': [0.0009, 0, 5], 'false,false,false,true': [2.645, 80, 36], 'false,false,false,false': [3.06, 44, 20]}]
{'': [0.06222222222222188, 0.20724744191305397], 'false': [-1.4802973661668753e-16, 0.20023668639053388], 'false,false': [0.19683749899326236, 0.2094007574069944], 'false,false,false': [0.2087402343749995, 0.22222222222222224], 'false,false,true': [0.15143320713899425, 0.20728888888888986], 'true': [0.08999999999999977, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16]}
{'': [8.940649933984548e-05, 0.2031814344066735], 'false': [0.12244897959183687, 0.19980182784663486], 'false,false': [0.1912908448315842, 0.22413551819541988], 'false,false,false': [0.2202232379324822, 0.25], 'false,false,true': [2.5488607356977537e-05, 2.262564459205585e-05], 'false,true': [0.13888888888888892, 0.0], 'true': [0.0, 9.126913474255538e-05], 'false,true,false': [nan, 0.0]}
{'': [0.0001180852704850212, 0.16686729668177167], 'false': [0.14571183610943853, 0.23030788545967665], 'false,false': [0.2306309899265102, 0.2222222222222222], 'false,false,true': [0.0, 0.23183256425999632], 'false,false,false': [0.2222222222222222, nan], 'false,true': [0.14796523061535302, 0.14531200492506122], 'false,true,false': [0.0008798462536696583, 5.395476381355901e-17], 'true': [6.936680898717018e-05, 0.0001340268823311619]}
{'': [0.00011162114085592836, 0.1226647429892597], 'false': [0.0909156145788048, 0.23020744824914346], 'false,false': [0.20173618852800881, 0.23168558103157577], 'false,false,false': [0.23238755925269663, 0.2222222222222222], 'false,false,true': [0.0, 0.24999999999999997], 'false,true': [0.11665460692105123, 0.08853053265472105], 'false,true,true': [0.0, 0.1303498543314344], 'true': [9.283044873711141e-05, 0.00012397957419552075]}
{'': [8.579097595245206e-05, 0.12434302305646862], 'false': [0.09237058558731225, 0.23057681090046064], 'false,false': [0.009674727709795466, 0.2354843406804262], 'false,false,false': [0.23804725356436873, 0.18750000000000003], 'false,false,true': [0.0, 0.0], 'true': [3.435931314244023e-06, 0.0001012946562546604], 'true,true': [3.435931314244023e-06, nan]}
{'': [0.0033112887419918407, 0.12159600339118236], 'false': [0.04534943395352918, 0.1283721479851151], 'false,false': [4.9400018031016867e-05, 0.13092372333489927], 'false,false,false': [0.09572160903510919, 0.22258104257226502], 'true': [0.0030521210215714856, 0.00416724913147994], 'true,false': [1.7110881119636323e-06, 0.0], 'true,true': [4.363004545284076e-06, 0.0013059442923588627], 'true,false,true': [0.0, 0.0]}
{'': [0.13714683422717028, 0.08648522443245973], 'true': [0.039893817714913425, 0.004936106047027703], 'false': [2.8945472077546164e-07, 0.08880006265701665], 'false,false': [0.08880006265701665, nan], 'true,true': [0.0016711174752739866, 0.015972848247170702], 'true,true,false': [0.0, 0.011927890797514686], 'true,true,true': [0.0015012402345212228, 0.0021384194888128677]}
{'': [0.05243207544879087, 0.09098734924094061], 'false': [0.07429143189206536, 0.1337181520289335], 'false,false': [0.001623991871254983, 0.13610200393520028], 'false,false,false': [0.13610200393520028, nan], 'false,true': [0.010022093793749505, 0.00030341172060740124], 'true': [1.2409922143426695e-06, 0.08315970520446225], 'false,true,true': [nan, 0.010022093793749536], 'false,false,true': [0.001623991871254983, nan]}
{'': [0.0004292625587963402, 0.07205345110111196], 'false': [0.02611674158254407, 0.08832479788041742], 'false,false': [2.0309794713790906e-07, 0.08998610382476209], 'false,false,false': [0.0615421639293652, 0.1357615246405293], 'false,true': [0.013845626093722804, 0.028351735837802934], 'false,true,false': [0.032158620323034376, 0.02737598585042058], 'true': [0.00015019928677923518, 0.0007283125212055541], 'true,false': [0.0, 0.00043918087641397346]}
{'': [0.02178975624462116, 0.07076429629022311], 'false': [0.02473406559948185, 0.08881442244288477], 'false,false': [1.6189183595638478e-07, 0.09089661086237616], 'false,false,false': [0.06029305002278794, 0.14631390825116275], 'true': [0.02889317218253997, 0.00020969170657081718], 'true,true': [0.00039638082263772703, 0.07469096862345881], 'true,true,false': [0.0, 0.0], 'true,true,true': [3.425675555028818e-05, 0.0006027409548737909]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 6.652
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995117;  // std dev = 1.98e-07, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.1418510649004877;  // std dev = 5.58e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.17158177092040727;  // std dev = 5.370, 134.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7628701369782859;  // std dev = 0.990, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.14240635392247786;  // std dev = 0.220, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.1649223506493203;  // std dev = 1.345, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.0839690711594039;  // std dev = 3.450, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.06023154941371149;  // std dev = 0.630, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.10689895080607395;  // std dev = 1.711, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6030665171052094;  // std dev = 1.060, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.12672198943228888;  // std dev = 0.189, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11007713096891723;  // std dev = 3.595, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | else return 0.1441059081719733;  // std dev = 0.684, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175135841583098;  // std dev = 1.29e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.405960762094839;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.506768435459366;  // std dev = 0.136, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.1027903673554534;  // std dev = 0.032, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.07530954551962865;  // std dev = 3.753, 163.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5280456620182894;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J) )
%   | | | then return 0.12332633671477836;  // std dev = 3.336, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | | else return 0.47424828097576305;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.25404518049348307;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(A, E) )
%   | | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.4519654859612204;  // std dev = 0.421, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.11520632542947742;  // std dev = 0.165, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( location(A, G) )
%   | | | then return 0.045893567592225265;  // std dev = 3.052, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | | | else return -0.09558440232044133;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return -0.1408764025948212;  // std dev = 0.653, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.3975353476502079;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.022563178453764227;  // std dev = 2.470, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.17616095149018743;  // std dev = 2.479, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2680482590565558;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.21139955051269615;  // std dev = 0.661, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.30912822283235936;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then return -0.06590777453122475;  // std dev = 0.091, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.009890115628279992;  // std dev = 0.524, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.0896959878132856;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2680482590565558;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.02332602716388424;  // std dev = 3.469, 183.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=49 */
%   | | | else return 0.13885340524604642;  // std dev = 3.353, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.25152480496145324;  // std dev = 0.045, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.21881321644684282;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5558515581467007;  // std dev = 1.115, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18024796358697187;  // std dev = 0.077, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.21881321644684282;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.04013046430622216;  // std dev = 1.201, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.010701261876501883;  // std dev = 0.937, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.0414329848229789;  // std dev = 2.121, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.060101804080420256;  // std dev = 1.372, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17885553948526467;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18175240155005118;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.2791178473572524;  // std dev = 0.453, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.4584178988388939;  // std dev = 0.509, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( complex(A, H), enzyme(A, I) )
%   | | | then return -0.09055099216704174;  // std dev = 0.087, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.12974617864356622;  // std dev = 0.237, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.21939481486861562;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(A, K) )
%   | | | then return 0.016825248334332594;  // std dev = 2.849, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.2466572273169311;  // std dev = 0.675, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16623394058312538;  // std dev = 0.025, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17649794347381803;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.15406815891186426;  // std dev = 0.071, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.07862776851514686;  // std dev = 0.066, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.07104114373291219;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.016298774713769747;  // std dev = 0.871, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.15800313374853914;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return -0.05312888259099408;  // std dev = 1.733, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.04156449713555171;  // std dev = 3.346, 144.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=49 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13263116658581472;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.07743980971054065;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.13363314783740599;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15401637193741352;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(H, A), enzyme(H, I) )
%   | | then return 0.0012163658512458289;  // std dev = 0.164, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else return -0.030484731280004115;  // std dev = 0.102, 57.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=12 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.13809959943752903;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.006077520490584645;  // std dev = 2.407, 120.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=35 */
%   | | | else return 0.07334109568991573;  // std dev = 2.788, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.448', 'seconds']
Refined model CLL: -0.160766


******************************************
Best model found
******************************************
Results 

CLL : -0.172773 

AUC ROC : 0.989175 

AUC PR : 0.293698 

Precision : 0.183866 

Recall : 0.913357 

F1 : 0.30611 

Total Learning Time : 6.652 

Total Inference Time : 7.610358953475952 

Total revision time: 25.96640788459778
Best scored revision CLL: -0.160766


Results 

CLL : -0.172773 

AUC ROC : 0.989175 

AUC PR : 0.293698 

Precision : 0.183866 

Recall : 0.913357 

F1 : 0.30611 

Total Learning Time : 26.01298796081543 

Total Inference Time : 7.610358953475952 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.612
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.02481560176617904;  // std dev = 3.291, 78.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=13 */
%   | | | else return 0.17014893509951173;  // std dev = 5.180, 125.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.24945328292559932;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5944734122109544;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7398727907934263;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7223234679497212;  // std dev = 2.483, 59.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=52 */
%   | | | else return -0.1577007838211111;  // std dev = 0.109, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else if ( location(A, I) )
%   | | | then return 0.1421011866030262;  // std dev = 2.747, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.17479229827352713;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.48223813196933873;  // std dev = 0.937, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.2526481890821136;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05203971116979168;  // std dev = 2.848, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6807511912324422;  // std dev = 1.002, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.1433731363279415;  // std dev = 9.06e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6347226187424232;  // std dev = 0.207, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.055166042520093835;  // std dev = 2.537, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.05047690201760836;  // std dev = 1.520, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4651233595724522;  // std dev = 0.144, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5374145721158645;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41089721697887566;  // std dev = 1.023, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.06517374759485939;  // std dev = 4.364, 177.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.3934711981723742;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5979215241237366;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.06310356935415543;  // std dev = 2.814, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.8090508474751228;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32941322408288026;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.390413027629692;  // std dev = 0.062, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.05577973069801474;  // std dev = 4.536, 201.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3044458678634907;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3771686587348786;  // std dev = 0.103, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06187574603836468;  // std dev = 2.514, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.141625692521818;  // std dev = 1.354, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2597652003607374;  // std dev = 0.012, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3930673251064899;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.24403906056419034;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.016822800165516332;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.03682462755419898;  // std dev = 1.316, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.04140031508957002;  // std dev = 1.123, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.05133819473751901;  // std dev = 4.183, 160.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=46 */
%   | | | else return 0.06779704177988224;  // std dev = 3.021, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2411122287431278;  // std dev = 0.158, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.26631559972504487;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.303228795628469;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.605264750121584;  // std dev = 0.699, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.17830183058235874;  // std dev = 0.725, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2939476552749371;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04799338520397898;  // std dev = 3.448, 111.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17432577271756833;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.10911348872474266;  // std dev = 0.922, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4301945722542766;  // std dev = 1.602, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.14190634291907658;  // std dev = 0.234, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21866756002021093;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.072900301718086;  // std dev = 2.333, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.14990619892277343;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.18129031254719397;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.012728220097651574;  // std dev = 0.820, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.10460453860907525;  // std dev = 0.396, 31.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.27343941136329925;  // std dev = 0.195, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.023563051966628015;  // std dev = 1.621, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.21780716088837535;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.027502556846593446;  // std dev = 3.025, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | | else return -0.032766730792547966;  // std dev = 2.521, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13244557242609079;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.12917714838863809;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.1661564466797011;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17475559196119855;  // std dev = 0.027, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.20253085291620154;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.014842623793140244;  // std dev = 1.722, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.20257075622369417;  // std dev = 1.060, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.036085646772719755;  // std dev = 2.787, 101.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=31 */
%   | | | else return 0.0032568851937228673;  // std dev = 2.459, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.001', 'seconds']
Parameter learned model CLL:-0.177526 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [3.291, 65, 13], 'false,false,true,false': [5.18, 86, 39], 'false,false,false,true': [2.341, 14, 9], 'false,false,false,false': [1.477, 8, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [0.935, 1, 7], 'false,true,true': [0.062, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.483, 7, 52], 'false,false,true,false': [0.109, 151, 0], 'false,false,false,true': [2.747, 24, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.937, 1, 11], 'true,false': [1.155, 2, 4], 'false,true,true': [2.848, 53, 14], 'false,true,false,true': [1.002, 1, 42], 'false,true,false,false': [9.06e-08, 87, 0], 'false,false,true,true': [0.207, 0, 3], 'false,false,true,false': [2.537, 26, 9], 'false,false,false,true': [1.52, 10, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.144, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.023, 2, 6], 'false,true,false': [4.364, 128, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.814, 30, 11], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.026, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.062, 0, 6], 'false,true': [4.536, 145, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.103, 0, 2], 'false,false,false,true': [2.514, 23, 9], 'false,false,false,false': [1.354, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.012, 0, 9], 'true,true,false': [0.048, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.769, 1, 2], 'false,true': [1.316, 24, 5], 'false,false,true': [1.123, 2, 5], 'false,false,false,true': [4.183, 114, 46], 'false,false,false,false': [3.021, 31, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.158, 0, 13], 'true,true,true,false': [0.121, 0, 3], 'true,true,false,true': [0.015, 0, 3], 'true,true,false,false': [0.699, 0, 33], 'true,false': [0.725, 102, 0], 'false,true': [0.038, 0, 3], 'false,false,true': [3.448, 80, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.922, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.602, 3, 56], 'false,true,false': [0.234, 136, 0], 'false,false,true,true': [0.106, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.333, 22, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.018, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.82, 2, 5], 'false,true,true': [0.396, 30, 1], 'false,true,false,true': [0.195, 0, 6], 'false,true,false,false': [1.621, 51, 17], 'false,false,true': [0.031, 0, 3], 'false,false,false,true': [3.025, 68, 31], 'false,false,false,false': [2.521, 37, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.016, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.027, 0, 2], 'true,false': [0.072, 0, 3], 'false,true': [1.722, 71, 24], 'false,false,true': [1.06, 2, 3], 'false,false,false,true': [2.787, 70, 31], 'false,false,false,false': [2.459, 31, 12]}]
{'': [-2.3684757858670006e-16, 0.2058142440649734], 'false': [0.10937499999999978, 0.19711940750236023], 'false,false': [0.19054090125943446, 0.22837370242214483], 'false,false,false': [0.23818525519848777, 0.1983471074380164], 'false,false,true': [0.13888888888888834, 0.21465600000000054], 'false,true': [0.0, 0.12244897959183662], 'false,true,false': [1.4802973661668753e-16, 0.18750000000000006], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.058593750000000056, 0.19669040428198878], 'false': [0.0005548461954012802, 0.19091640805321602], 'false,false': [0.18586597698186888, 0.21625232864467336], 'false,false,false': [0.21565625173491604, 0.22222222222222224], 'false,false,true': [0.10449419870668268, 7.87320655465583e-05], 'true': [1.1102230246251565e-16, 0.10937500000000006], 'false,true': [0.0005548461954012802, nan]}
{'': [0.13458474865902026, 0.15594402823258155], 'false': [0.14682515753236802, 0.19099131593828578], 'false,false': [0.19491198117139932, 0.177634965074413], 'false,false,true': [0.014246387206272582, 0.18388030153422408], 'false,false,false': [0.177634965074413, nan], 'false,true': [0.1210881770268255, 0.15806358934615417], 'false,true,false': [0.02333790444137439, 9.443276301409377e-17], 'true': [0.07319549791909967, 0.2222222222222222]}
{'': [0.0013854349967649781, 0.13042993878595094], 'false': [0.11406004538585338, 0.19764120993447878], 'false,false': [0.009288874618137396, 0.20142988416773905], 'false,false,false': [0.19309430003525727, 0.0], 'false,true': [0.11791134766210584, 0.10760087769773401], 'false,true,true': [0.0, 0.13087175043644034], 'false,false,true': [0.0, 0.0], 'true': [0.0013854349967649781, nan]}
{'': [0.001199808725825132, 0.11908209544491832], 'false': [0.1023789107925016, 0.19575881169279177], 'false,false': [0.004700981610776552, 0.20480807174340257], 'false,false,false': [0.1974345076199246, 0.22921428506602273], 'false,false,true': [0.0, 0.005288604312123635], 'true': [7.771408622074076e-05, 0.0006503650655819704], 'true,true': [7.771408622074076e-05, nan]}
{'': [0.05232879573429733, 0.12381583197873243], 'false': [0.059718831765701606, 0.13158014592683598], 'false,false': [0.1800432338699783, 0.12991924571741373], 'false,false,false': [0.10937816037717515, 0.20274278662894563], 'true': [0.003975034696599877, 0.16076676040538854], 'true,false': [0.0, 0.1973434529446768], 'true,true': [1.5313950064722705e-05, 0.0005824749797202211], 'true,false,true': [0.0, nan]}
{'': [0.11263284624831309, 0.10584166235776435], 'true': [0.038827157330291136, 0.005150949770156579], 'false': [0.0004870889743504396, 0.10709714897143623], 'false,false': [0.10709714897143623, nan], 'true,true': [0.0025734691983819447, 0.02056209424786252], 'true,true,false': [8.000547099575502e-05, 0.014821959167939592], 'true,true,true': [0.0019255182468548037, 0.004865148604057022]}
{'': [0.0541935566344402, 0.09348909340227951], 'false': [0.08250483627641365, 0.14897077081848156], 'false,false': [0.0037743725920029634, 0.1600593993213921], 'false,false,false': [0.1600593993213921, nan], 'false,true': [0.04348800341626455, 0.0004021898943282721], 'true': [-3.469446951953614e-18, 0.10626079227709992], 'false,true,true': [nan, 0.04348800341626455], 'false,false,true': [0.0037743725920029634, nan]}
{'': [0.04207015336070366, 0.07583048001317752], 'false': [0.03380867957641341, 0.1043189949471554], 'false,false': [0.0003242160909929607, 0.1055486788895002], 'false,false,false': [0.09240359465792669, 0.1296773419708866], 'true': [3.209121904776957e-05, 0.08712828547699487], 'true,false': [0.0, 0.09602353602590885], 'false,true': [0.005050875924835161, 0.042593251560746594], 'false,true,false': [0.006363491520562546, 0.03863779537283546]}
{'': [0.0011972784485886762, 0.07481255507127199], 'false': [0.03121059089425874, 0.10217694159673624], 'false,false': [0.22454632395350313, 0.09617049246197416], 'false,false,false': [0.0769035745786074, 0.14066943994036044], 'true': [0.00036364698868198624, 0.0017380285588490807], 'true,true': [2.5809990925917957e-05, 0.0002530047158794078], 'true,true,false': [0.0, 0.00035485864062833813], 'true,true,true': [0.0, 0.0001205038780786559]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
3;false,false,false;location(A, J), interaction(A, K).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 12.939
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( complex(A, I), location(A, J) )
%   | | | then return -0.04185106490048778;  // std dev = 1.643, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | | else return 0.1130508958838261;  // std dev = 3.112, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.15544623239680855;  // std dev = 5.560, 148.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=44 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7494500360496467;  // std dev = 2.118, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return -0.15947237776965761;  // std dev = 0.135, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.08424900367364163;  // std dev = 2.312, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.33815361731853055;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.3053664367462845;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.017692184971269447;  // std dev = 1.514, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | | else return 0.12896871981163532;  // std dev = 2.211, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6308292933292069;  // std dev = 1.674, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.14186180466410125;  // std dev = 0.104, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.09088681579437423;  // std dev = 2.414, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.20510425764541812;  // std dev = 1.562, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.41751358415830986;  // std dev = 1.05e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.19838914367484833;  // std dev = 0.434, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.6095419755837235;  // std dev = 0.071, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.1317020640570761;  // std dev = 0.165, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0.09410712152667677;  // std dev = 4.207, 150.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.08248641584169003;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.06342850163161083;  // std dev = 2.847, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return -0.028726984008387878;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32621003810304866;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3919084919802043;  // std dev = 0.102, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.38487179861180143;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.03789475868412367;  // std dev = 1.507, 48.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
%   | | | else return 0.04174681822609373;  // std dev = 4.175, 170.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=46 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3792058500996441;  // std dev = 0.083, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.11383106513875667;  // std dev = 2.169, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -3.911809374013674E-4;  // std dev = 1.980, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16016068123808508;  // std dev = 0.292, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.2986991445694278;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2823212987108728;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), interaction(A, G) )
%   | | then if ( interaction(G, H), interaction(H, I) )
%   | | | then return 0.003842621127353698;  // std dev = 2.960, 100.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=21 */
%   | | | else return 0.10937896977261632;  // std dev = 1.730, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( location(J, F), recursion_proteinclass(J, B) )
%   | | | then return 0.3689576229493305;  // std dev = 2.435, 53.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=40 */
%   | | | else return -0.15630560293389772;  // std dev = 0.178, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( interaction(A, K) )
%   | | then return 0.2922110466361419;  // std dev = 0.888, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.08359768130729035;  // std dev = 0.549, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23131179336447008;  // std dev = 0.020, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2537613823299258;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5499862211094069;  // std dev = 1.376, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.1542215948487227;  // std dev = 0.061, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2607172365055451;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5649615970161089;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.17140428085578638;  // std dev = 0.103, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.05886655976331979;  // std dev = 1.539, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return -0.013130301030425692;  // std dev = 2.167, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18721865990867725;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(A, E) )
%   | | then return -0.07853010097023787;  // std dev = 0.742, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20641579112838387;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.4085856941919745;  // std dev = 0.322, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.34733811032764506;  // std dev = 1.328, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | else return -0.13001423196522957;  // std dev = 0.033, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2708277152451623;  // std dev = 1.831, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | | else return -0.17686570775885382;  // std dev = 0.071, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.078943481707011;  // std dev = 0.758, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15644405558712296;  // std dev = 0.008, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.15852568855939062;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.18846672775390402;  // std dev = 0.618, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.0926154099938156;  // std dev = 0.025, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.024448259160539304;  // std dev = 1.351, 69.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=15 */
%   | | | else return -0.1457264340522985;  // std dev = 0.673, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return -0.045905642293070925;  // std dev = 0.840, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, M) )
%   | | | then return 0.008413600796268364;  // std dev = 3.245, 139.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=41 */
%   | | | else return 0.16964699229372673;  // std dev = 0.723, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.1368981332869235;  // std dev = 0.007, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( location(C, E), interaction(D, C) )
%   | | | then return -0.3415851987314999;  // std dev = 0.705, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.13159713468722928;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.13703507629509037;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), location(A, G) )
%   | then return -0.0038762656820563865;  // std dev = 0.200, 209.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=56 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J), enzyme(J, K) )
%   | | | then return -0.015301186782148668;  // std dev = 0.955, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.08967763189027324;  // std dev = 1.627, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -6.223891837513535E-4;  // std dev = 1.014, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.10011716885110533;  // std dev = 0.732, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '53.952', 'seconds']
Refined model CLL: -0.164318


******************************************
Best model found
******************************************
Results 

CLL : -0.182569 

AUC ROC : 0.984826 

AUC PR : 0.219761 

Precision : 0.155462 

Recall : 0.915194 

F1 : 0.265777 

Total Learning Time : 12.939 

Total Inference Time : 12.956806898117065 

Total revision time: 38.48779165840149
Best scored revision CLL: -0.164318


Results 

CLL : -0.182569 

AUC ROC : 0.984826 

AUC PR : 0.219761 

Precision : 0.155462 

Recall : 0.915194 

F1 : 0.265777 

Total Learning Time : 38.53437173461914 

Total Inference Time : 12.956806898117065 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.82
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.115961435099511;  // std dev = 4.949, 128.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=33 */
%   | | | else return 0.16849376268571792;  // std dev = 4.983, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7413433124639606;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7817820064569653;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.504142292933094;  // std dev = 0.746, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6518796506081465;  // std dev = 3.597, 85.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=69 */
%   | | | else return -0.1602502299371157;  // std dev = 0.044, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | | else if ( location(A, I) )
%   | | | then return 0.18127362867505808;  // std dev = 1.604, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5862925827234171;  // std dev = 0.079, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.22251858554035797;  // std dev = 1.117, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0666312429540376;  // std dev = 4.499, 138.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6051455172949476;  // std dev = 2.095, 42.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=37 */
%   | | | else return -0.1428575104465153;  // std dev = 6.50e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02912549419450093;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1566267255970552;  // std dev = 1.289, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.48365095527963564;  // std dev = 0.221, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.42186734983262464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.494689067933964;  // std dev = 1.752, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else return 0.050745722072366974;  // std dev = 5.143, 230.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5698114820355888;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.22378712165982714;  // std dev = 1.486, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.31967508386404025;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.4422079016253;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.09223145973905959;  // std dev = 5.423, 227.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4283149506689087;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1325629022253366;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1401657568769433;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2595810416961804;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.24871738779148292;  // std dev = 0.606, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3280441609425364;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.0049714219148448546;  // std dev = 2.312, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3531935043872197;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.07344055484706999;  // std dev = 4.788, 182.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=55 */
%   | | | else return 0.1092625390420804;  // std dev = 1.755, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.256221808698054;  // std dev = 0.291, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2601693492770727;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.7656947943761796;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.539631546219866;  // std dev = 1.418, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.1821629721162649;  // std dev = 0.557, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.27765837408285987;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08080402258859985;  // std dev = 3.972, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1688495689381656;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.05124619166772335;  // std dev = 0.872, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3588486750259588;  // std dev = 3.212, 87.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=71 */
%   | | else return -0.15500945700303778;  // std dev = 0.230, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2132814515153082;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.06665501297304709;  // std dev = 1.448, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1738959492084864;  // std dev = 0.185, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.02831524053656581;  // std dev = 0.800, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.02728571090871748;  // std dev = 1.543, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.04026705261701968;  // std dev = 0.469, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.015916080756363665;  // std dev = 1.734, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2169819687608481;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.056562681086518275;  // std dev = 3.439, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
%   | | | else return 0.1582989928100947;  // std dev = 1.183, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12851982436063702;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.30797926206751325;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06389399452003323;  // std dev = 0.497, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return 0.007151415343854494;  // std dev = 2.435, 96.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.18251688599953075;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.04006843211520628;  // std dev = 3.496, 115.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=40 */
%   | | | else return -0.11976453032818675;  // std dev = 1.480, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.537', 'seconds']
Parameter learned model CLL:-0.203904 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.943, 1, 8], 'true,false': [1.225, 3, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.949, 95, 33], 'false,false,true,false': [4.983, 80, 36], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.074, 0, 5], 'false,true,true': [0.746, 1, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.597, 16, 69], 'false,false,true,false': [0.044, 157, 0], 'false,false,false,true': [1.604, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.079, 0, 8], 'true,false': [1.117, 2, 3], 'false,true,true': [4.499, 104, 34], 'false,true,false,true': [2.095, 5, 37], 'false,true,false,false': [6.5e-08, 69, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.225, 6, 2], 'false,false,false,true': [1.289, 5, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.221, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.752, 4, 14], 'false,true,false': [5.143, 173, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.486, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.004, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.093, 0, 4], 'false,true': [5.423, 156, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.037, 0, 7], 'true,true,false': [0.606, 1, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.312, 42, 12], 'false,false,true': [0.066, 0, 3], 'false,false,false,true': [4.788, 127, 55], 'false,false,false,false': [1.755, 9, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.291, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [1.418, 2, 33], 'true,false': [0.557, 93, 0], 'false,true': [0.058, 0, 3], 'false,false,true': [3.972, 82, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.872, 1, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.212, 16, 71], 'false,true,false': [0.23, 158, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.448, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.185, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.8, 1, 3], 'false,true,true': [1.543, 39, 11], 'false,true,false,true': [0.469, 1, 1], 'false,true,false,false': [1.734, 42, 17], 'false,false,true': [0.048, 0, 3], 'false,false,false,true': [3.439, 76, 40], 'false,false,false,false': [1.183, 4, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.016, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.497, 1, 3], 'false,true': [2.435, 67, 29], 'false,false,true': [0.042, 0, 3], 'false,false,false,true': [3.496, 75, 40], 'false,false,false,false': [1.48, 15, 4]}]
{'': [0.1955555555555553, 0.20826961801087093], 'false': [1.4802973661668753e-16, 0.2048019096038205], 'false,false': [0.2028184627788232, 0.23999999999999985], 'false,false,false': [0.25, 0.22222222222222224], 'false,false,true': [0.19134521484375125, 0.2140309155766957], 'true': [0.09876543209876527, 0.24999999999999992], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0]}
{'': [0.0009009851084625224, 0.20635974751088912], 'false': [0.13910247278836857, 0.20521457221964196], 'false,false': [0.2037698484543672, 0.23396967269915467], 'false,false,false': [0.23396967269915467, nan], 'false,false,true': [0.15222867447033375, 1.244560633619533e-05], 'false,true': [0.13910247278836857, nan], 'true': [0.0, 0.0010901919812398297]}
{'': [0.12771045780933904, 0.16152007307079339], 'false': [0.15893988723316976, 0.20163405345999644], 'false,false': [0.18750000000000008, 0.20763982491540908], 'false,false,false': [0.20763982491540908, nan], 'false,false,true': [nan, 0.18750000000000008], 'false,true': [0.14670564865340535, 0.17115279126797947], 'false,true,false': [0.1045297774971381, 6.114271729819703e-17], 'true': [0.0007714341179502204, 0.2493781135453826]}
{'': [0.004764829820708805, 0.13728240270878753], 'false': [0.13229057368298905, 0.23149958406909382], 'false,false': [0.0, 0.24524847427942545], 'false,false,false': [0.24524847427942545, nan], 'false,true': [0.17049787950665607, 0.11499582985860503], 'false,true,true': [nan, 0.170497879506656], 'true': [0.004894293357140445, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.004256190619095394, 0.13420470318008496], 'false': [0.12956248899579506, 0.22523918384445443], 'false,false': [0.0, 0.24001445084971343], 'false,false,false': [0.24000000000000005, 0.24], 'true': [2.6531575673751007e-06, 0.0021453320858969838], 'true,true': [2.6531575673751007e-06, nan], 'false,false,true': [nan, 0.0]}
{'': [0.031124754947662082, 0.12536805117460037], 'false': [0.09897416566856496, 0.1312872801461758], 'false,false': [0.001468673192777677, 0.1321130672689262], 'false,false,false': [0.12597165028608065, 0.20544341880086908], 'true': [0.03351730140734727, 0.0], 'true,true': [0.0001946877723760787, 0.09175677228371716], 'true,false': [nan, 0.0]}
{'': [0.12057023716696888, 0.12713125175026327], 'false': [0.0011101650281287827, 0.1293000916751017], 'false,false': [0.1293000916751017, nan], 'true': [0.09075221208610038, 0.003333792632776811], 'true,true': [0.007685956837313283, 0.10187892644925602], 'true,true,false': [0.0, 0.05745984026773847], 'true,true,true': [0.008453135877715245, 0.0]}
{'': [0.06680345204808193, 0.10476581950753282], 'false': [0.10278833261098526, 0.127626488663521], 'false,false': [0.0, 0.1309934721961534], 'false,false,false': [0.1309934721961534, nan], 'false,true': [0.11856910351298769, 0.00033416304171877314], 'false,true,true': [nan, 0.11856910351298744], 'true': [0.0, 0.12669162692345684], 'false,false,true': [0.0, nan]}
{'': [0.06523800450570123, 0.08121761204148897], 'false': [0.05103206142632807, 0.10532369714497487], 'false,false': [0.0007840447464206868, 0.10729371151662216], 'false,false,false': [0.10196062077153656, 0.17494101001164128], 'true': [0.004284059356285671, 0.1598863179657927], 'true,false': [nan, 0.1598863179657927], 'false,true': [0.04764161937704296, 0.05293903291327966], 'false,true,false': [0.10986114067215293, 0.0509900283046138]}
{'': [0.024632884692557422, 0.08948572105775088], 'false': [0.06175670337694856, 0.10883701431368982], 'false,false': [0.000599142144480642, 0.1106632775538337], 'false,false,false': [0.1062888987149163, 0.11521548085407733], 'true': [0.0035551067797582603, 0.06173568014711228], 'true,true': [0.0035551067797582603, nan], 'true,true,true': [3.726795410805006e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 10.549
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.21153239374612923;  // std dev = 5.513, 133.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=47 */
%   | | | else return 0.1470378239884008;  // std dev = 4.300, 90.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=26 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5528067455442878;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6543691391708932;  // std dev = 3.516, 84.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=69 */
%   | | | else return -0.16256049163365863;  // std dev = 0.169, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.017851861950643526;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.11201826791948634;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5655379819307462;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5960526174841312;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.02576400703634164;  // std dev = 3.280, 86.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=18 */
%   | | | else return 0.1569871914769491;  // std dev = 2.817, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6687291411500004;  // std dev = 1.382, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.14383442308195035;  // std dev = 0.034, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( phenotype(A, I) )
%   | | then if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.015283221741963605;  // std dev = 1.278, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.07360189978725626;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.17357129189578796;  // std dev = 0.961, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4291538603088888;  // std dev = 0.017, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4559907657749296;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), location(F, G) )
%   | | then if ( interaction(F, A), enzyme(F, H) )
%   | | | then return -0.03672001030630101;  // std dev = 1.145, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.07528433514053487;  // std dev = 3.554, 93.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=27 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.07020186931857579;  // std dev = 2.523, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return 0.1529490525648501;  // std dev = 3.147, 69.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=27 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5121991686977203;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.25652515937285475;  // std dev = 1.302, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.05200721672918526;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.31597871333272187;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.32630161383855966;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.147668783889435;  // std dev = 0.895, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11620599121062872;  // std dev = 0.005, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( location(A, G) )
%   | | | then return 0.07762447433667144;  // std dev = 5.322, 218.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=68 */
%   | | | else return -0.017809746984693745;  // std dev = 1.264, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.38618126478758685;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.1584147399974387;  // std dev = 1.372, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.041447987368366156;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26017899841930003;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.38085290987923043;  // std dev = 0.168, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.29952221313124494;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(A, G), phenotype(A, H) )
%   | | | then return -0.03174624112014276;  // std dev = 1.333, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return 0.06449589758704069;  // std dev = 2.215, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else return -0.10464466967357171;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.06679697107652849;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, J), location(J, K) )
%   | | | then return 0.017410702076928783;  // std dev = 3.127, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | | | else return 0.08315275562584566;  // std dev = 4.002, 117.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=42 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23921146441557983;  // std dev = 0.061, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6334109748628981;  // std dev = 0.489, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.17230767923613363;  // std dev = 0.064, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.052520384814246424;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(G, H), enzyme(A, I) )
%   | | | then return 0.14901366733827923;  // std dev = 1.959, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.03380156580187144;  // std dev = 3.149, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.02855340328053533;  // std dev = 0.595, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.0056109972059178795;  // std dev = 0.818, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1692268709327817;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2518950420309737;  // std dev = 0.111, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( location(A, G) )
%   | | | then return 0.3864097237724626;  // std dev = 2.764, 78.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=68 */
%   | | | else return 0.4503913228512518;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.13123801230151977;  // std dev = 0.203, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | | else return -0.19090902241837954;  // std dev = 0.227, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.19967805231159008;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.10709196778454488;  // std dev = 0.792, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.06999968862553341;  // std dev = 1.184, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then return 0.1455191329737103;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.19760488874118992;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), enzyme(H, I) )
%   | | | then return -0.0027818517933656537;  // std dev = 1.868, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return -0.13487912024318072;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.009828701235829343;  // std dev = 1.263, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.06679054863502241;  // std dev = 0.858, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.2414368088825651;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -0.02516730660217941;  // std dev = 3.487, 142.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=37 */
%   | | | else return 0.10783285698451367;  // std dev = 1.499, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.1279781713486592;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.19791917287011193;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2385993066846167;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return -0.05804300801618367;  // std dev = 0.704, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, H), interaction(I, A) )
%   | then if ( interaction(J, A), phenotype(J, K) )
%   | | then return 0.028131440089575636;  // std dev = 0.248, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   | | else return -0.05527569861409486;  // std dev = 0.134, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.20000765534799114;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return -0.08979223493661603;  // std dev = 1.874, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.029095531055395182;  // std dev = 3.221, 115.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=37 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.208', 'seconds']
Refined model CLL: -0.200473


******************************************
Best model found
******************************************
Results 

CLL : -0.194123 

AUC ROC : 0.985234 

AUC PR : 0.242205 

Precision : 0.175851 

Recall : 0.769504 

F1 : 0.28628 

Total Learning Time : 10.549 

Total Inference Time : 14.062781810760498 

Total revision time: 45.1369500579834
Best scored revision CLL: -0.200473


Results 

CLL : -0.194123 

AUC ROC : 0.985234 

AUC PR : 0.242205 

Precision : 0.175851 

Recall : 0.769504 

F1 : 0.28628 

Total Learning Time : 55.90940741920471 

Total Inference Time : 14.062781810760498 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.09
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10033643509951119;  // std dev = 4.847, 128.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=31 */
%   | | | else return 0.1622029891535655;  // std dev = 5.596, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09344305274657114;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6285643213018635;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.49725118998873225;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7455350735990115;  // std dev = 2.686, 84.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=76 */
%   | | | else return -0.15841278521461577;  // std dev = 0.056, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | | else if ( location(A, I) )
%   | | | then return 0.21002553462972517;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.563483119587289;  // std dev = 0.036, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.43483017170190363;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09523849301657417;  // std dev = 4.250, 122.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6446507248927288;  // std dev = 1.678, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.1423130705254483;  // std dev = 2.98e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.31705657872992354;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.29109382406206463;  // std dev = 1.353, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.38104684853859644;  // std dev = 0.977, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return -0.06222483511932486;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4955898467139181;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3799848973439645;  // std dev = 2.459, 30.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=21 */
%   | | else return 0.02403466204250496;  // std dev = 5.087, 247.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5383013308437614;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.2134198738640893;  // std dev = 1.489, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32691920459320084;  // std dev = 1.49e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( location(A, E) )
%   | | | then return -0.6527713061118836;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.28215023602080885;  // std dev = 0.985, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(F, A) )
%   | then return 0.04275935005710118;  // std dev = 5.838, 302.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=82 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4049708564436676;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.12897089403285453;  // std dev = 1.547, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2713802483481858;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.15901811340555413;  // std dev = 1.257, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12834827844999375;  // std dev = 0.623, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.01163205745712743;  // std dev = 2.851, 80.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3120877010516247;  // std dev = 0.085, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.04665115860226176;  // std dev = 4.609, 187.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=51 */
%   | | | else return 0.002817095709143109;  // std dev = 2.235, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.29607630214690567;  // std dev = 0.433, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.3404211813768647;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2503346632311425;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.46843639351547256;  // std dev = 2.017, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.1780132384618285;  // std dev = 0.559, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24901969430816448;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06465280059914083;  // std dev = 4.329, 152.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16568424843648377;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.12803232638719522;  // std dev = 0.819, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40779386058601824;  // std dev = 2.855, 92.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=82 */
%   | | else return -0.14401676845107922;  // std dev = 0.292, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.17570437460623328;  // std dev = 0.628, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.011819971159033152;  // std dev = 1.435, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.09556046456429812;  // std dev = 0.820, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.18916625348335314;  // std dev = 0.774, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2585944603099609;  // std dev = 0.151, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.016038575578275645;  // std dev = 1.863, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.28014020271325024;  // std dev = 0.189, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.0576604544783036;  // std dev = 1.534, 66.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18560773012016407;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.019594711497127826;  // std dev = 3.844, 159.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=47 */
%   | | | else return -0.019185132658255364;  // std dev = 1.447, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.029447699686827117;  // std dev = 0.772, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.23683445627062075;  // std dev = 0.120, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2002293492138224;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.018523601763233373;  // std dev = 2.544, 124.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.11957359825116196;  // std dev = 1.168, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.01924251162502928;  // std dev = 3.818, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
%   | | | else return 0.12081561976929692;  // std dev = 1.278, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.753', 'seconds']
Parameter learned model CLL:-0.1984 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.847, 97, 31], 'false,false,true,false': [5.596, 103, 45], 'false,false,false,true': [1.749, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [0.953, 1, 10], 'false,true,true': [1.247, 2, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.686, 8, 76], 'false,false,true,false': [0.056, 184, 0], 'false,false,false,true': [1.595, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.036, 0, 11], 'true,false': [0.926, 1, 6], 'false,true,true': [4.25, 88, 34], 'false,true,false,true': [1.678, 3, 48], 'false,true,false,false': [2.98e-08, 99, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [1.353, 4, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.977, 1, 16], 'true,false': [0.707, 1, 1], 'false,true,true,true': [0.111, 0, 3], 'false,true,true,false': [2.459, 9, 21], 'false,true,false': [5.087, 189, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.489, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'true,true,false': 'location(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'interaction(G, H), interaction(H, G)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [1.49e-08, 0, 7], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.985, 1, 10], 'false,true': [5.838, 220, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.547, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.067, 0, 9], 'true,true,false': [1.257, 3, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.623, 1, 1], 'false,true': [2.851, 61, 19], 'false,false,true': [0.085, 0, 8], 'false,false,false,true': [4.609, 136, 51], 'false,false,false,false': [2.235, 33, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.433, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [2.017, 4, 33], 'true,false': [0.559, 88, 0], 'false,true': [0.075, 0, 5], 'false,false,true': [4.329, 105, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.819, 1, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.855, 10, 82], 'false,true,false': [0.292, 175, 0], 'false,false,true,true': [0.628, 1, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.435, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.82, 1, 9], 'true,false,true': [0.774, 2, 2], 'true,false,false': [0.151, 0, 5], 'false,true,true': [1.863, 37, 13], 'false,true,false,true': [0.189, 0, 8], 'false,true,false,false': [1.534, 55, 11], 'false,false,true': [0.062, 0, 5], 'false,false,false,true': [3.844, 112, 47], 'false,false,false,false': [1.447, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.772, 1, 7], 'true,true,true,false': [0.12, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.124, 0, 3], 'false,true': [2.544, 92, 32], 'false,false,true': [1.168, 2, 5], 'false,false,false,true': [3.818, 108, 47], 'false,false,false,false': [1.278, 5, 4]}]
{'': [-2.0898315757650005e-16, 0.2059000000000005], 'false': [-2.5376526277146434e-16, 0.1984880429591503], 'false,false': [0.199537912203319, 0.1799307958477507], 'false,false,true': [0.18353271484375117, 0.2116051862673496], 'false,false,false': [0.1799307958477507, nan], 'true': [-1.4802973661668753e-16, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.05246913580246929, 0.20731254907951774], 'false': [0.17283950617283964, 0.20416998068595058], 'false,false': [0.20276652347284718, 0.23140495867768587], 'false,false,false': [0.23140495867768587, nan], 'false,false,true': [0.08587560058581326, 1.6989377371350216e-05], 'false,true': [0.17283950617283964, nan], 'true': [6.344131569286608e-17, 0.08264462809917356]}
{'': [0.05162305794064467, 0.1576059298217201], 'false': [0.15362292239073574, 0.233112408534187], 'false,false': [0.233112408534187, nan], 'false,false,true': [0.25, 0.2287556977417451], 'false,true': [0.1480516788005098, 0.1577500899202061], 'false,true,false': [0.055224922609158844, 8.971499188890155e-18], 'true': [0.00011529094559739858, 0.12244897959183677]}
{'': [0.09507698350909156, 0.13275157763568923], 'false': [0.12813431214065174, 0.23120819212283256], 'false,false': [0.0, 0.2463431951386683], 'false,false,false': [0.2463431951386683, nan], 'false,true': [0.1847022659285345, 0.10474928841010382], 'false,true,true': [0.004128938380004203, 0.201544643745312], 'true': [0.05616761095561145, 0.24999999999999997], 'false,false,true': [nan, 0.0]}
{'': [0.09672109229418532, 0.11717203231391418], 'false': [0.11284859059007107, 0.22391729363489343], 'false,false': [0.0, 0.23938393397558552], 'false,false,false': [0.23938393397558552, nan], 'true': [0.10497741370873635, 0.08817497889635667], 'true,true': [3.172065784643304e-17, 0.0], 'false,false,true': [nan, 0.0], 'true,true,false': [0.0, nan]}
{'': [0.11207447524767924, 0.11037328049330032], 'true': [0.09115810604119819, 0.19409942697706017], 'true,false': [nan, 0.19409942697706017], 'false': [0.10163546712614187, 0.11298392901222863], 'false,false': [0.0009070222622030999, 0.1143654744888802], 'false,false,false': [0.11358124733350489, 0.11621374860082002], 'true,true': [0.0005020542606432526, 0.1755015331373201]}
{'': [0.1162245376349062, 0.12042511404793105], 'false': [0.0011324069840546569, 0.12326669550570209], 'false,false': [0.12326669550570209, nan], 'true': [0.08319998961362828, 0.0035551468136766503], 'true,true': [0.011856909142244146, 0.10502873301607836], 'true,true,false': [-9.25185853854297e-18, 0.10997694887712166], 'true,true,true': [0.012524465482107136, 0.0]}
{'': [0.03755937551075144, 0.1037729839346489], 'false': [0.09961200323828559, 0.1795828413573206], 'false,false': [0.19738860371120331, 0.17159158854766995], 'false,false,true': [0.19738860371120331, nan], 'false,false,false': [0.17159158854766995, nan], 'false,true': [0.08858919765735605, 0.00048723436006363686], 'false,true,true': [nan, 0.08858919765735643], 'true': [-7.93016446160826e-18, 0.06090948125487387]}
{'': [0.09184968048577151, 0.07889276796610717], 'true': [0.06722236984331793, 0.11853236108142423], 'true,false': [0.14959619512543745, 0.004574779705458909], 'false': [0.05384735738157536, 0.09567356085794079], 'false,false': [0.0007599920149955475, 0.09761301543054354], 'false,false,false': [0.09291679429211833, 0.14956649444894055], 'false,true': [0.06944903644670397, 0.04329518254907516], 'false,true,false': [0.004450765661240391, 0.035667457906589914]}
{'': [0.04648473857433694, 0.08262280747848448], 'false': [0.052195121907952606, 0.10409844564613832], 'false,false': [0.1949983147100436, 0.09936512407701122], 'false,false,false': [0.09403882229537412, 0.18134496279881573], 'true': [0.05415746114416142, 0.005154568482150919], 'true,true': [0.05415746114416142, nan], 'true,true,true': [0.07454764335181387, 0.0023938276446178095]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;true,true;interaction(D, A).;true;true
4;false;interaction(F, A).;true;true
4;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 16.194
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( phenotype(I, J) )
%   | | | then return 0.07554023944733847;  // std dev = 3.426, 69.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=15 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.09727936988212063;  // std dev = 4.091, 92.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
%   | | | else return 0.21648226843284504;  // std dev = 5.253, 120.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7609104304538484;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.4068585879990681;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6547008631520156;  // std dev = 3.731, 93.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=76 */
%   | | | else return -0.16055326981752108;  // std dev = 0.135, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.12627371059911288;  // std dev = 1.193, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.08920226399488994;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5740854263908867;  // std dev = 0.033, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5679131595030299;  // std dev = 0.069, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14183714198062589;  // std dev = 0.123, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.08143771803511424;  // std dev = 4.325, 132.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6937813775664512;  // std dev = 1.030, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14151048134076308;  // std dev = 0.085, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.06672511732190031;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.22943122963423052;  // std dev = 1.178, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.03176470788574563;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.15344373001200684;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, F) )
%   | | then return 0.4127161223228343;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.4441807269915463;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.45973041403501136;  // std dev = 0.185, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, I) )
%   | | | then return 0.07639487321293692;  // std dev = 5.547, 251.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=70 */
%   | | | else return -0.020895199800707618;  // std dev = 1.741, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.49823661307496103;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.0010275148182882499;  // std dev = 1.274, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.2899805595471733;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.22387258696683518;  // std dev = 0.347, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23738992324226577;  // std dev = 0.292, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.35183261225518403;  // std dev = 0.169, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.03510203003090945;  // std dev = 5.452, 242.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=61 */
%   | | | else return 0.1062987113838095;  // std dev = 2.194, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.37629826227489194;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.10877440432051727;  // std dev = 1.405, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.04501210605491073;  // std dev = 0.917, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.289252600144846;  // std dev = 0.056, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.29284872073829493;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6478216487143148;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1672423255213038;  // std dev = 0.173, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.01689785712386822;  // std dev = 2.376, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.14587637187809643;  // std dev = 1.705, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.28157483654858584;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.03560424183490262;  // std dev = 2.622, 79.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=13 */
%   | | | else return 0.07864961702599814;  // std dev = 4.386, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2344210842087599;  // std dev = 0.048, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.007972906796409662;  // std dev = 0.783, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5527021834443298;  // std dev = 1.480, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.17734736426259065;  // std dev = 0.081, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.23464893232456766;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5826678390642166;  // std dev = 0.234, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.16326169263722284;  // std dev = 0.312, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.07987195682065569;  // std dev = 3.478, 93.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=32 */
%   | | | else return 0.04693641496551768;  // std dev = 1.515, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.20723117387857753;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E) )
%   | | then return 0.20345702035062682;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, F) )
%   | | | then return -0.062117293358344566;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.14127061653140527;  // std dev = 0.837, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.38647978834592484;  // std dev = 0.303, 92.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=82 */
%   | | else return -0.14706849651770434;  // std dev = 0.028, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return -0.07607672875605449;  // std dev = 0.754, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.3699292482855932;  // std dev = 0.658, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15556920625101694;  // std dev = 0.707, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.2039481543646604;  // std dev = 0.067, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.14187027436383903;  // std dev = 0.025, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( location(A, I), complex(A, J) )
%   | | | then return 0.04971479333469539;  // std dev = 1.553, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return 9.122528664139366E-4;  // std dev = 1.835, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.01056170582393609;  // std dev = 0.529, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.1455312963305292;  // std dev = 0.169, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | then return 0.0605191571848682;  // std dev = 0.824, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( phenotype(A, N), enzyme(A, P) )
%   | | | then return 0.07243796457402445;  // std dev = 1.869, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0.004155479029980562;  // std dev = 3.413, 129.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=38 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13740490427384108;  // std dev = 0.032, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.37578718515079595;  // std dev = 0.521, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.553295208130652;  // std dev = 0.141, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return -0.1766756094948381;  // std dev = 0.901, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | | else return -0.280255128938827;  // std dev = 0.390, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( phenotype(I, K), enzyme(J, L) )
%   | | | then return 0.060261225838552805;  // std dev = 1.427, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.028980655483678952;  // std dev = 1.789, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | else if ( complex(A, M), interaction(N, A) )
%   | | | then return -0.03457621303582456;  // std dev = 0.959, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.08382313140008732;  // std dev = 2.633, 72.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '51.587', 'seconds']
Refined model CLL: -0.195307


******************************************
Best model found
******************************************
Results 

CLL : -0.174152 

AUC ROC : 0.991027 

AUC PR : 0.393657 

Precision : 0.314483 

Recall : 0.860377 

F1 : 0.460606 

Total Learning Time : 16.194 

Total Inference Time : 53.07290816307068 

Total revision time: 93.0177770462036
Best scored revision CLL: -0.195307


Results 

CLL : -0.174152 

AUC ROC : 0.991027 

AUC PR : 0.393657 

Precision : 0.314483 

Recall : 0.860377 

F1 : 0.460606 

Total Learning Time : 103.79023440742492 

Total Inference Time : 53.07290816307068 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.383
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08672036367094095;  // std dev = 2.484, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.14573063444591652;  // std dev = 5.599, 153.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.21663950113724814;  // std dev = 3.491, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7392070123615109;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5253934922561214;  // std dev = 1.275, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.821775753839214;  // std dev = 0.992, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15945555433395162;  // std dev = 0.030, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else if ( location(A, K) )
%   | | | then return 0.15247034682611774;  // std dev = 3.495, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | | else return 0.32967992018274295;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5882182205826706;  // std dev = 0.048, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.49066577247576465;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07099892444086428;  // std dev = 2.074, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6850889746097767;  // std dev = 0.271, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1401885378156212;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1774534062136662;  // std dev = 3.489, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.33516909063757694;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.46180732675720826;  // std dev = 0.098, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.22553638640203247;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38634282035893586;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41094635321729195;  // std dev = 0.631, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.06942440666582535;  // std dev = 4.146, 178.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return -0.08248641584169003;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.03562862135383382;  // std dev = 0.773, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.12965252210339506;  // std dev = 3.421, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | | else return -0.004220652996121607;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3423573776325129;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.279905524468598;  // std dev = 0.938, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.055738530150573784;  // std dev = 4.210, 194.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.4376998530391385;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5201273346729953;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.013583875492807509;  // std dev = 3.752, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | | else return 0.010949549067528458;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.271559825148969;  // std dev = 0.071, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3398587095075295;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.3344331173358617;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3453246642168517;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3918423699562953;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.062361331300726644;  // std dev = 1.011, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3240135768109155;  // std dev = 0.048, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.05830147133647513;  // std dev = 3.973, 163.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=49 */
%   | | | else return 0.0850224357561753;  // std dev = 3.652, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24130868236364356;  // std dev = 0.115, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.28392997867589465;  // std dev = 0.027, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.26116260770964594;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6359302798988337;  // std dev = 0.715, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.1994239354289926;  // std dev = 0.589, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.0848118937880381;  // std dev = 0.943, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04229905041210842;  // std dev = 3.429, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1754591988272143;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.12651415838678245;  // std dev = 0.913, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3972837174362236;  // std dev = 1.692, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.14002914502801436;  // std dev = 0.199, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.22996878981191543;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.03796495702359211;  // std dev = 3.029, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16270065828024935;  // std dev = 0.059, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.13201673017926563;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18928091030487584;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.06504804528433336;  // std dev = 0.438, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.02505056249526188;  // std dev = 0.382, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.008587203651615454;  // std dev = 1.201, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.21863727884534878;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.030966650924693934;  // std dev = 2.735, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
%   | | | else return -0.01242127282708513;  // std dev = 3.135, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1364758219667017;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16086653181047042;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.14420895254173616;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14704067516573918;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.026475332028935004;  // std dev = 1.395, 80.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18363356796832916;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.006367022145687929;  // std dev = 2.780, 133.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=36 */
%   | | | else return 0.03178319785090064;  // std dev = 3.030, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.205', 'seconds']
Parameter learned model CLL:-0.177195 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.949, 1, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.484, 27, 8], 'false,false,true,false': [5.599, 109, 44], 'false,false,false,true': [3.491, 34, 19], 'false,false,false,false': [0.913, 5, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [0.0, 0, 6], 'true,false': [1.275, 2, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.992, 1, 52], 'false,false,true,false': [0.03, 123, 0], 'false,false,false,true': [3.495, 38, 18], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.048, 0, 6], 'true,false': [0.943, 1, 8], 'false,true,true': [2.074, 25, 8], 'false,true,false,true': [0.271, 0, 48], 'false,true,false,false': [0.0, 116, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.489, 33, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.098, 0, 11], 'true,false': [0.859, 1, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.631, 1, 3], 'false,true,false': [4.146, 126, 52], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [0.773, 1, 1], 'false,false,false,true': [3.421, 33, 18], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.094, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.938, 1, 9], 'false,true': [4.21, 138, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.752, 54, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.071, 0, 7], 'true,true,false': [0.06, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [1.011, 20, 3], 'false,false,true': [0.048, 0, 6], 'false,false,false,true': [3.973, 114, 49], 'false,false,false,false': [3.652, 40, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.115, 0, 12], 'true,true,true,false': [0.027, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.715, 0, 36], 'true,false': [0.589, 98, 0], 'false,true': [0.943, 1, 5], 'false,false,true': [3.429, 85, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.027, 0, 6], 'true,false': [0.913, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.692, 3, 56], 'false,true,false': [0.199, 131, 0], 'false,false,true,true': [0.024, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.029, 42, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.059, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.033, 0, 4], 'false,true,true': [0.438, 9, 1], 'false,true,false,true': [0.382, 2, 2], 'false,true,false,false': [1.201, 32, 14], 'false,false,true': [0.038, 0, 5], 'false,false,false,true': [2.735, 80, 36], 'false,false,false,false': [3.135, 54, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.049, 0, 5], 'true,true,true,false': [0.02, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.041, 0, 4], 'false,true': [1.395, 63, 17], 'false,false,true': [0.033, 0, 5], 'false,false,false,true': [2.78, 97, 36], 'false,false,false,false': [3.03, 42, 20]}]
{'': [0.06222222222222188, 0.21325126154134635], 'false': [-1.4802973661668753e-16, 0.20652690586634898], 'false,false': [0.2000905387052973, 0.22407354208560717], 'false,false,false': [0.22997508009967915, 0.13888888888888892], 'false,false,true': [0.17632653061224507, 0.20487846554743988], 'true': [0.08999999999999977, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16]}
{'': [0.11224587011265175, 0.21471566502399708], 'false': [7.401486830834377e-17, 0.21194123166079995], 'false,false': [0.20822290833183865, 0.22225291873425534], 'false,false,false': [0.21817743549884824, 0.25], 'false,false,true': [0.018564105258258815, 7.235357094658917e-06], 'true': [0.0, 0.16244980916279625], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.061760889246657825, 0.16112329324960004], 'false': [0.13971292285943274, 0.22962543731006585], 'false,false': [0.22805954876985698, 0.24999999999999994], 'false,false,false': [0.24999999999999994, nan], 'false,false,true': [0.0, 0.2297177765564803], 'false,true': [0.1303363691279471, 0.14144529574970735], 'false,true,false': [0.0015298124390676164, -8.039546040389065e-17], 'true': [0.0003915094867178078, 0.09886721703395748]}
{'': [0.06079579652481136, 0.1329288484432876], 'false': [0.09911477326249278, 0.23078899857889426], 'false,false': [0.2750756369221278, 0.22593953401116904], 'false,false,true': [0.25, 0.29905344739212236], 'false,false,false': [0.22953915947899603, 0.18749999999999992], 'false,true': [0.07975450235448674, 0.09656296189600556], 'false,true,true': [0.0, 0.09957206117728598], 'true': [0.0008705966969596075, 0.1846525273967698]}
{'': [0.06015713009192936, 0.12100903292122701], 'false': [0.09137502935494633, 0.1931197593240849], 'false,false': [0.0016985724321249562, 0.19260669707732492], 'false,false,false': [0.192886155592626, 0.18749999999999997], 'true': [0.001758166853627663, 0.08805653372321112], 'true,true': [0.001758166853627663, nan], 'false,false,true': [0.0, 0.0]}
{'': [0.0022204816081345786, 0.12278782549267502], 'false': [0.04440731463267117, 0.12900591915568632], 'false,false': [0.00038591910081760733, 0.1307154393874558], 'false,false,false': [0.09683663233214795, 0.22223096557915165], 'true': [0.00186477839971012, 0.0006198161141287942], 'true,true': [0.0007231601644912386, 0.0008941409265824513], 'true,false': [2.9656448365208976e-05, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.13369141506787846, 0.09966201083870296], 'true': [0.04155351863586814, 0.003535903237692402], 'false': [0.14819236300217084, 0.097170160865836], 'false,false': [0.097170160865836, nan], 'true,true': [0.0012211201169070357, 0.017507483807435067], 'true,true,false': [0.0, 0.014197835015110528], 'true,true,true': [0.0011023018998627492, 0.0003769652197414125]}
{'': [0.05624979406261177, 0.09413779828425838], 'false': [0.07709087082347621, 0.14452599396790392], 'false,false': [0.0002858341858554339, 0.14802685635405097], 'false,false,false': [0.14802685635405097, nan], 'false,true': [0.048533735226574684, 0.00030194668057166086], 'true': [0.00012298407427938549, 0.09270942059468047], 'false,true,true': [nan, 0.04853373522657472], 'false,false,true': [0.0002858341858554339, nan]}
{'': [0.0005656829795488348, 0.07624651680580351], 'false': [0.030444113663469614, 0.09022670072423673], 'false,false': [0.0002837401769393566, 0.09152058203381633], 'false,false,false': [0.06446635131054258, 0.13278059360958996], 'false,true': [0.01918268285711196, 0.03176009150472064], 'false,true,false': [0.03639691392261847, 0.03133520618058501], 'true': [0.0003850039167343962, 0.0007437946902292047], 'true,false': [0.0, 0.0002739060976948357]}
{'': [0.00040139424011218346, 0.06837394080346924], 'false': [0.02433246986363064, 0.08540801594372661], 'false,false': [0.0002195067445996568, 0.08687674331197641], 'false,false,false': [0.058120052610565534, 0.14812389019968072], 'true': [0.0003913786024418775, 0.0004243665849497473], 'true,true': [0.0004888237212722218, 0.0], 'true,true,true': [0.0004763070778876138, 0.00013786808940308148], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.141
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.04564893509951222;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.08891816586874314;  // std dev = 2.148, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.1914822684328454;  // std dev = 6.481, 189.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=63 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7385128322212614;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.24327268722383807;  // std dev = 0.741, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8359076480942625;  // std dev = 0.043, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16134081960110022;  // std dev = 0.129, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.03320549123154835;  // std dev = 2.000, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.22794233333681216;  // std dev = 3.013, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.44425532563517345;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.008026388019898115;  // std dev = 1.323, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.15661985825582664;  // std dev = 1.489, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6609668718438835;  // std dev = 0.988, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14279823557094184;  // std dev = 0.061, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.18959985950171562;  // std dev = 0.511, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.08407364508810594;  // std dev = 3.751, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | else return 0.32853959197931726;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4330812668940421;  // std dev = 0.013, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.387548527104445;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.603260418892757;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.11603727526897248;  // std dev = 0.059, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.07838599893085597;  // std dev = 4.097, 167.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=52 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.3120627274876258;  // std dev = 1.364, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.13818682160494014;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.0040870383799997655;  // std dev = 1.767, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.10624732341034421;  // std dev = 2.190, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.33135446142291486;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( complex(A, E), interaction(A, F) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.02710029610615647;  // std dev = 1.363, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return -0.018283667518503563;  // std dev = 1.303, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.10991402543889582;  // std dev = 1.372, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.07292129747792157;  // std dev = 3.400, 117.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=37 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return 0.4259671597115806;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5142965669782789;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, K) )
%   | | | then return 0.0640654776899313;  // std dev = 3.558, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.45122229093021476;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2594019557905714;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.23785383415055125;  // std dev = 0.758, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.3214489011494516;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then return -0.07959216333715818;  // std dev = 0.131, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.053193654179305036;  // std dev = 0.495, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.012465891769952425;  // std dev = 0.448, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.268071182866767;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.05304555605985103;  // std dev = 3.855, 159.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=48 */
%   | | | else return 0.129345423945785;  // std dev = 3.559, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.26105749310245074;  // std dev = 0.076, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.5979342987308823;  // std dev = 0.180, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else return -0.1952190114483352;  // std dev = 0.072, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.46534010980252805;  // std dev = 0.092, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.163494078560129;  // std dev = 0.019, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4573510040008538;  // std dev = 0.295, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.16098090243944402;  // std dev = 0.045, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.027577841241202095;  // std dev = 0.933, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.08050781830900264;  // std dev = 1.631, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17080378608968305;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, E) )
%   | | then return -0.006107385253029507;  // std dev = 0.923, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.1727982038893109;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), complex(A, I) )
%   | | | then return 0.33200462150444354;  // std dev = 0.176, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.40778973449728717;  // std dev = 0.479, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else return -0.13179056495114233;  // std dev = 0.028, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return -0.08153911195405199;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return -0.06399249094395643;  // std dev = 1.315, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.07299830322984444;  // std dev = 2.713, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16101090412244481;  // std dev = 0.029, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.23120945116628092;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.25727110691662447;  // std dev = 0.164, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.09657626680466407;  // std dev = 0.093, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.008496326835518741;  // std dev = 0.611, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.052836544175045214;  // std dev = 0.787, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1620203914189831;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.055948623021945414;  // std dev = 1.471, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return -0.0033589297348257325;  // std dev = 3.613, 184.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=52 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1498302057118418;  // std dev = 0.037, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.18330658627308094;  // std dev = 0.105, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.20475175456966324;  // std dev = 0.137, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.08419774150568103;  // std dev = 0.048, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( location(A, J) )
%   | | | then return -0.02036893926045008;  // std dev = 1.147, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | | else return -0.06552750246460676;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.14127182903469637;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.035837500978589835;  // std dev = 2.354, 83.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=20 */
%   | | | else return 0.03498196526390201;  // std dev = 3.163, 99.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '20.337', 'seconds']
Refined model CLL: -0.170912


******************************************
Best model found
******************************************
Results 

CLL : -0.185961 

AUC ROC : 0.983007 

AUC PR : 0.198808 

Precision : 0.138361 

Recall : 0.920578 

F1 : 0.240566 

Total Learning Time : 7.141 

Total Inference Time : 7.80385684967041 

Total revision time: 26.782146047592164
Best scored revision CLL: -0.170912


Results 

CLL : -0.185961 

AUC ROC : 0.983007 

AUC PR : 0.198808 

Precision : 0.138361 

Recall : 0.920578 

F1 : 0.240566 

Total Learning Time : 37.55460340881348 

Total Inference Time : 7.80385684967041 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.442
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10814893509951237;  // std dev = 3.122, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | | else return 0.17522210583121905;  // std dev = 5.161, 123.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16849376268571928;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7398727907934262;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7322259441501945;  // std dev = 0.083, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8187961686806545;  // std dev = 0.993, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.16191200608737363;  // std dev = 0.047, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else if ( location(A, I) )
%   | | | then return 0.16922884607090966;  // std dev = 2.708, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return 0.8332054912315484;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5595171078416127;  // std dev = 0.054, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3867951317632047;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.02101598612249116;  // std dev = 2.838, 74.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6363182085291357;  // std dev = 1.388, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14347903103890053;  // std dev = 6.32e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3671315974282219;  // std dev = 0.965, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10322523090017578;  // std dev = 2.450, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2877319086217029;  // std dev = 1.179, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3232817606367873;  // std dev = 1.302, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6656574504354482;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.46746310299517385;  // std dev = 0.848, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.03196237819459187;  // std dev = 4.387, 204.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.46070458493257915;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.526574906122862;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.09291313226814363;  // std dev = 2.756, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.11953625490424599;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3401375733280341;  // std dev = 0.004, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3921582717815659;  // std dev = 0.087, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.06640739270868846;  // std dev = 4.460, 183.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3501884267920129;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.37333164891448856;  // std dev = 0.033, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1530567727863534;  // std dev = 2.359, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return -0.07573549366973911;  // std dev = 1.518, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2672766185177021;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.16860764547438417;  // std dev = 1.044, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.27519963303789463;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2910118439677089;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.08247861869058576;  // std dev = 1.322, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.31379808280947435;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.09002200433715937;  // std dev = 3.868, 136.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=46 */
%   | | | else return 0.022904271659642744;  // std dev = 3.099, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2624096389472802;  // std dev = 0.259, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2311925690403003;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.24639209412240135;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.542838903710982;  // std dev = 1.305, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.18645522992477276;  // std dev = 0.727, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.009489832571364154;  // std dev = 0.886, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.042863157885364614;  // std dev = 3.371, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17795783537603893;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.22401505961047902;  // std dev = 0.106, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44341595978186116;  // std dev = 1.158, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.14290619724612746;  // std dev = 0.520, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.19271075654850767;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.0032060799822117856;  // std dev = 2.530, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15838291804651372;  // std dev = 0.042, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.2853882299304046;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17384458130057118;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09353356157889685;  // std dev = 0.295, 27.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.19437685519007417;  // std dev = 0.439, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.03168257677943557;  // std dev = 1.608, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.02542423085203338;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03489393990996163;  // std dev = 2.653, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   | | | else return 0.0154945444353969;  // std dev = 2.465, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13393726842367204;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.15634018884450562;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.11914783612174529;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20131670459465556;  // std dev = 0.042, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1536301331505484;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.024308822170036902;  // std dev = 1.763, 99.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.02097002819867272;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.015691138197263824;  // std dev = 2.782, 103.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=31 */
%   | | | else return 0.06898883004362888;  // std dev = 2.344, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.306', 'seconds']
Parameter learned model CLL:-0.182772 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.707, 1, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.122, 39, 13], 'false,false,true,false': [5.161, 84, 39], 'false,false,false,true': [2.491, 20, 9], 'false,false,false,false': [1.414, 6, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [0.062, 0, 7], 'false,true,true': [0.083, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.993, 1, 52], 'false,false,true,false': [0.047, 130, 0], 'false,false,false,true': [2.708, 22, 11], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.054, 0, 11], 'true,false': [0.869, 1, 4], 'false,true,true': [2.838, 60, 14], 'false,true,false,true': [1.388, 2, 42], 'false,true,false,false': [6.32e-08, 81, 0], 'false,false,true,true': [0.965, 1, 3], 'false,false,true,false': [2.45, 21, 9], 'false,false,false,true': [1.179, 3, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.302, 2, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.848, 1, 6], 'false,true,false': [4.387, 155, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.756, 25, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.004, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.087, 0, 6], 'false,true': [4.46, 127, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.033, 0, 2], 'false,false,false,true': [2.359, 15, 9], 'false,false,false,false': [1.518, 11, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.013, 0, 9], 'true,true,false': [1.044, 1, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.029, 0, 2], 'false,true': [1.322, 36, 5], 'false,false,true': [0.055, 0, 5], 'false,false,false,true': [3.868, 90, 46], 'false,false,false,false': [3.099, 35, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.259, 0, 13], 'true,true,true,false': [0.027, 0, 3], 'true,true,false,true': [0.043, 0, 3], 'true,true,false,false': [1.305, 2, 33], 'true,false': [0.727, 98, 0], 'false,true': [0.886, 1, 3], 'false,false,true': [3.371, 76, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.106, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.158, 1, 56], 'false,true,false': [0.52, 144, 0], 'false,false,true,true': [0.023, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.53, 30, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.042, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.053, 0, 5], 'false,true,true': [0.295, 26, 1], 'false,true,false,true': [0.439, 1, 6], 'false,true,false,false': [1.608, 52, 17], 'false,false,true': [0.858, 1, 3], 'false,false,false,true': [2.653, 69, 31], 'false,false,false,false': [2.465, 30, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.025, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.042, 0, 2], 'true,false': [0.028, 0, 3], 'false,true': [1.763, 75, 24], 'false,false,true': [0.858, 1, 3], 'false,false,false,true': [2.782, 72, 31], 'false,false,false,false': [2.344, 22, 12]}]
{'': [0.05859374999999978, 0.21805450338854676], 'false': [0.10937499999999978, 0.2101875730124107], 'false,false': [0.20884897959183743, 0.21606648199445933], 'false,false,false': [0.2140309155766945, 0.2222222222222221], 'false,false,true': [0.1874999999999995, 0.21653777513384942], 'false,true': [0.25, -1.4802973661668753e-16], 'true': [-1.4802973661668753e-16, 0.18750000000000006], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.0003624995143289548, 0.21219641061052913], 'false': [0.0009757624251681537, 0.20777248167588347], 'false,false': [0.20327943989068195, 0.2282106104440023], 'false,false,false': [0.22215946627250174, 0.0], 'false,false,true': [0.01861040598460601, 1.680975631737593e-05], 'false,true': [0.0009757624251681537, nan], 'true': [1.1102230246251565e-16, 0.0005548461954013437]}
{'': [0.05383277324659397, 0.15362573070545832], 'false': [0.14009639564361914, 0.21717586519270463], 'false,false': [0.2111135510592531, 0.23151179757864163], 'false,false,false': [0.23151179757864163, nan], 'false,false,true': [0.23260060252968687, 0.2000548967109558], 'false,true': [0.1088366998154573, 0.1541031607356392], 'false,true,false': [0.0437548100967241, 4.9343245538895844e-17], 'true': [0.0002698762520947766, 0.15116104093294644]}
{'': [0.09968963589190712, 0.11989168756640003], 'false': [0.10203151191163361, 0.2077275422951639], 'false,false': [0.0009641998252691112, 0.21301583726028214], 'false,false,false': [0.21092385678099912, 0.25], 'false,true': [0.09416619954774716, 0.09434549921649445], 'true': [0.09968963589190712, nan], 'false,true,true': [0.0, 0.10270838884919442], 'false,false,true': [0.0, 0.0]}
{'': [0.0011512799545870145, 0.12718404045092227], 'false': [0.1086936952780359, 0.2092404669711501], 'false,false': [0.00047609664907583005, 0.2192739630551552], 'false,false,false': [0.23193884637730247, 0.16450216533019804], 'true': [2.0598352386238773e-06, 0.0012514182930536781], 'false,false,true': [0.0, 0.0005356087302102741], 'true,true': [2.0598352386238773e-06, nan]}
{'': [0.06649425623923894, 0.11964882797717033], 'false': [0.042654733406812376, 0.13165806390624468], 'false,false': [0.0006005505621833884, 0.13366468643689225], 'false,false,false': [0.11003268555550808, 0.19594391659139904], 'true': [0.0801626914608679, 0.0003331202899456894], 'true,true': [1.934301646961462e-05, 0.21816214036272724], 'true,false': [0.0, 0.0004163384300888834], 'true,false,true': [0.0, nan]}
{'': [0.11219854240016025, 0.10948301601736826], 'true': [0.051768436885603515, 0.005386465667384267], 'false': [0.19606341644496456, 0.1062062293595886], 'false,false': [0.1062062293595886, nan], 'true,true': [0.004370694254527588, 0.05124975221731426], 'true,true,false': [0.0006060586415047217, 0.04865268937636813], 'true,true,true': [0.005141737696157145, 0.00023772032643471866]}
{'': [0.0012711711949992728, 0.09005191689745098], 'false': [0.07785928557309142, 0.14446607518905683], 'false,false': [0.00018280085753302291, 0.15237788852622783], 'false,false,false': [0.15237788852622783, nan], 'false,true': [0.023528958482027785, 0.001876983858322051], 'false,true,true': [nan, 0.023528958482027726], 'true': [0.0, 0.0015925953927683003], 'false,false,true': [0.00018280085753302291, nan]}
{'': [0.0012085171570532481, 0.0699702777755607], 'false': [0.032303851996966976, 0.0950443940717561], 'false,false': [0.1839944455716268, 0.09245714206525996], 'false,false,false': [0.07039880815154861, 0.1447119589811941], 'false,true': [0.0032333500718179416, 0.04083990975791776], 'false,true,false': [0.02748139789509141, 0.03748827811320671], 'true': [0.00017603091735238774, 0.0022046043161115803], 'true,false': [0.0, 0.0005718609210579428]}
{'': [0.0007184038554069704, 0.07215272957211316], 'false': [0.03138009010297587, 0.09967298440256171], 'false,false': [0.1839464234902967, 0.09714184048753055], 'false,false,false': [0.07516743763061375, 0.16157568840069406], 'true': [0.0008141334395509672, 0.00026355993327164634], 'true,true': [0.00014233210873811907, 0.002083544006759632], 'true,true,false': [0.0, 0.0008747416947666314], 'true,true,true': [0.0, 0.0003101478689848669]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
1;false,false,false;location(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 8.693
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.0793510649004878;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.24276431971489695;  // std dev = 3.922, 65.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=25 */
%   | | else if ( interaction(J, A), location(A, K) )
%   | | | then return 0.06476050534744562;  // std dev = 4.454, 121.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=25 */
%   | | | else return 0.13474467978036342;  // std dev = 3.067, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7816289395752953;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(H, G) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.819990623773684;  // std dev = 0.983, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15543184989450468;  // std dev = 0.184, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( location(A, K) )
%   | | | then return 0.06543200240409203;  // std dev = 2.921, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | | else return 0.09094220648572482;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5849696780925986;  // std dev = 0.032, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return -0.03364423177499765;  // std dev = 1.551, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | | else return 0.11515520599724871;  // std dev = 2.207, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6646208293025754;  // std dev = 1.027, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.1386119623733896;  // std dev = 0.105, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4048202663491081;  // std dev = 1.826, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return -0.1680063100867422;  // std dev = 1.67e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.20255581438542894;  // std dev = 1.549, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.4974616625169716;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.440463500052391;  // std dev = 0.032, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6432171890448879;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6051329888088016;  // std dev = 0.230, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, G), location(A, H) )
%   | | | then return 0.015007780804994783;  // std dev = 2.392, 79.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=17 */
%   | | | else return 0.09529869290545193;  // std dev = 3.400, 98.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=32 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.5049552973302174;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.020264631029025648;  // std dev = 0.671, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.03393095408939132;  // std dev = 2.068, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.23662115593741767;  // std dev = 1.730, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3161174869617958;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.22511193850757186;  // std dev = 0.349, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then if ( interaction(H, A), phenotype(H, G) )
%   | | | then return 0.057310568870431434;  // std dev = 1.302, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.2235001386485479;  // std dev = 1.415, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( complex(A, I), location(A, J) )
%   | | | then return -0.015557294364717533;  // std dev = 1.921, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
%   | | | else return 0.057355433862094435;  // std dev = 3.254, 109.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=32 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4072084913727543;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.12662694565581906;  // std dev = 1.965, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.0554422739730862;  // std dev = 2.029, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.3062392744809668;  // std dev = 0.083, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.07072904148451897;  // std dev = 0.423, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then return -0.12275964990224342;  // std dev = 0.172, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.09648011072252384;  // std dev = 0.868, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.019347376626990404;  // std dev = 0.467, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( enzyme(A, K) )
%   | | | then return -0.01708995057608072;  // std dev = 0.818, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0843679808023142;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.027719290363924617;  // std dev = 3.192, 104.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=29 */
%   | | | else return 0.07692492317726894;  // std dev = 3.720, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.25683931016439243;  // std dev = 0.072, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.3136444546627227;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5484732871962298;  // std dev = 1.221, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1658301282357632;  // std dev = 0.083, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.5026913964106906;  // std dev = 0.056, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.1537047900017573;  // std dev = 0.012, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3282630526818461;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.13559701448403685;  // std dev = 1.542, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.01987771100799634;  // std dev = 2.487, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.15679755046588262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(A, E) )
%   | | then return -0.07932331523984333;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2466013132823195;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), location(A, I) )
%   | | | then return 0.3107734590410768;  // std dev = 0.949, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.46658590825702745;  // std dev = 0.949, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | else return -0.1404741265139327;  // std dev = 0.034, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.24852705188913296;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.1969790049968076;  // std dev = 1.113, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.007193611639419352;  // std dev = 1.975, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1766893856747465;  // std dev = 0.046, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( complex(A, E), interaction(F, A) )
%   | | then if ( interaction(F, D) )
%   | | | then return -0.07894109128674634;  // std dev = 0.784, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | | else return -0.20751089079928997;  // std dev = 0.322, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(D, G) )
%   | | | then return -0.021838533138596447;  // std dev = 1.854, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | | else return 0.12304170619030567;  // std dev = 0.920, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3788921818996919;  // std dev = 0.357, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.139518172623295;  // std dev = 0.168, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.009285719641781657;  // std dev = 2.700, 131.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=37 */
%   | | | else return -0.04605478423239517;  // std dev = 1.270, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.1285838002994523;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.2043689273980249;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.004363677593655718;  // std dev = 0.615, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, A) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then return -0.0766207429776377;  // std dev = 0.009, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.12373136571990662;  // std dev = 0.136, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, G), location(A, I) )
%   | | | then return -0.04776757152920809;  // std dev = 0.991, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.01567120047275837;  // std dev = 1.686, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return -0.01172342738584943;  // std dev = 0.709, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.06055680861422847;  // std dev = 2.962, 101.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '32.975', 'seconds']
Refined model CLL: -0.170425


******************************************
Best model found
******************************************
Results 

CLL : -0.181561 

AUC ROC : 0.985756 

AUC PR : 0.270334 

Precision : 0.160948 

Recall : 0.911661 

F1 : 0.273595 

Total Learning Time : 8.693 

Total Inference Time : 8.018070936203003 

Total revision time: 29.240486154556272
Best scored revision CLL: -0.170425


Results 

CLL : -0.181561 

AUC ROC : 0.985756 

AUC PR : 0.270334 

Precision : 0.160948 

Recall : 0.911661 

F1 : 0.273595 

Total Learning Time : 40.012943515777586 

Total Inference Time : 8.018070936203003 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.018
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.12214893509951097;  // std dev = 4.928, 125.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=33 */
%   | | | else return 0.2110901115700993;  // std dev = 4.826, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.011995088945666036;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4337591264966688;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.508243899526118;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7330398286689489;  // std dev = 2.661, 77.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=69 */
%   | | | else return -0.16231354501884643;  // std dev = 0.070, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else if ( location(A, I) )
%   | | | then return 0.09200936898173104;  // std dev = 1.739, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.572614596029985;  // std dev = 0.084, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6243590738810859;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0753004374545475;  // std dev = 4.357, 132.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6480775218587531;  // std dev = 1.377, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.14789295375414244;  // std dev = 3.33e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2948861608011265;  // std dev = 1.053, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.3973557438698795;  // std dev = 1.027, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3509633991839653;  // std dev = 0.914, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.48387492949397637;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5509785438127558;  // std dev = 1.518, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return 0.06107660288930178;  // std dev = 4.878, 207.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5090618629988355;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.11452028313994406;  // std dev = 1.628, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33650188028759714;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1815448872688858;  // std dev = 0.925, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.057152287439689954;  // std dev = 5.372, 244.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.383951265874819;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.15158842479554732;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.051401980644171126;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.14369639733585632;  // std dev = 0.973, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.4231601166160508;  // std dev = 0.189, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.29801636150927746;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.015781257407220143;  // std dev = 2.286, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.34718478427515054;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05066116324600281;  // std dev = 4.745, 188.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=55 */
%   | | | else return 0.13139114775810595;  // std dev = 1.722, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.270715754813662;  // std dev = 0.221, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.23961743172867178;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5437101404590371;  // std dev = 1.246, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17864434025881662;  // std dev = 0.478, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2731741467588412;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.03319831501409801;  // std dev = 4.084, 143.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.053265580478814564;  // std dev = 0.884, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.21897536515819951;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38962052302965194;  // std dev = 2.778, 81.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=71 */
%   | | else return -0.1486247457158222;  // std dev = 0.181, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.19870696726524606;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.025876144407776417;  // std dev = 1.443, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1915859168117004;  // std dev = 0.122, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.3529855428388971;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.19379626578568718;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.02545414591583407;  // std dev = 1.396, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.0792318631853976;  // std dev = 0.595, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.026820370622375824;  // std dev = 1.899, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18684002630037244;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.034388549792093714;  // std dev = 3.396, 128.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=40 */
%   | | | else return -0.02068362517578859;  // std dev = 1.445, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.04279110427038928;  // std dev = 0.802, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.2621150335496275;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1653605464914529;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.016370539180766565;  // std dev = 2.339, 120.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.16009800942123553;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.03509390496220919;  // std dev = 3.463, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
%   | | | else return -0.0570358829057887;  // std dev = 1.497, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.577', 'seconds']
Parameter learned model CLL:-0.192964 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.928, 92, 33], 'false,false,true,false': [4.826, 66, 36], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.301, 11, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.195, 2, 5], 'false,true,true': [0.732, 1, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.661, 8, 69], 'false,false,true,false': [0.07, 138, 0], 'false,false,false,true': [1.739, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.084, 0, 8], 'true,false': [1.49e-08, 0, 3], 'false,true,true': [4.357, 98, 34], 'false,true,false,true': [1.377, 2, 37], 'false,true,false,false': [3.33e-08, 77, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.053, 2, 2], 'false,false,false,true': [1.027, 2, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.914, 1, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.518, 2, 14], 'false,true,false': [4.878, 150, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.628, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.032, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.925, 1, 4], 'false,true': [5.372, 173, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.973, 1, 7], 'true,true,false': [0.189, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.286, 44, 12], 'false,false,true': [0.01, 0, 3], 'false,false,false,true': [4.745, 133, 55], 'false,false,false,false': [1.722, 9, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.221, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.246, 1, 33], 'true,false': [0.478, 84, 0], 'false,true': [0.008, 0, 3], 'false,false,true': [4.084, 103, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.884, 1, 6], 'true,false': [0.062, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.778, 10, 71], 'false,true,false': [0.181, 154, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.443, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.122, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.034, 0, 3], 'false,true,true': [1.396, 40, 11], 'false,true,false,true': [0.595, 1, 1], 'false,true,false,false': [1.899, 49, 17], 'false,false,true': [0.006, 0, 3], 'false,false,false,true': [3.396, 88, 40], 'false,false,false,false': [1.445, 11, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.802, 1, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.03, 0, 3], 'false,true': [2.339, 91, 29], 'false,false,true': [0.006, 0, 3], 'false,false,false,true': [3.463, 78, 40], 'false,false,false,false': [1.497, 14, 4]}]
{'': [-1.6148698540002277e-16, 0.21158400000000016], 'false': [0.18750000000000006, 0.20868861127635796], 'false,false': [0.2115701837800076, 0.16620498614958432], 'false,false,true': [0.19430400000000128, 0.2283737024221466], 'false,true': [0.0, 1.4802973661668753e-16], 'false,false,false': [0.22222222222222224, 0.13017751479289943], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.13017751479289957, 0.2162841123385204], 'false': [0.13385372108722043, 0.21557252039458435], 'false,false': [0.2172380120547664, 0.1890964933974308], 'false,false,true': [0.0919574399078158, 3.5637151798922666e-05], 'false,false,false': [0.1890964933974308, nan], 'false,true': [0.13385372108722043, nan], 'true': [7.401486830834377e-17, 0.20408163265306128]}
{'': [0.0011801613170613447, 0.1562718758387953], 'false': [0.15083711522339457, 0.24291843424743823], 'false,false': [0.2770332770800322, 0.21095988644612587], 'false,false,true': [nan, 0.2770332770800322], 'false,false,false': [0.21095988644612587, nan], 'false,true': [0.14384478902112058, 0.157743806707517], 'false,true,false': [0.048627975667538494, 1.4418480839287746e-17], 'true': [0.0008924969960275031, 7.401486830834377e-17]}
{'': [0.0710197368159148, 0.13765090767106117], 'false': [0.13301973281097265, 0.21485755478196294], 'false,false': [0.0, 0.22078826961090478], 'false,false,false': [0.22078826961090478, nan], 'false,true': [0.14398984094638678, 0.11495179014409632], 'false,true,true': [nan, 0.14398984094638673], 'true': [0.07600395361900678, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.07721449549094865, 0.12308537681686336], 'false': [0.11825815741728248, 0.2104545593873492], 'false,false': [0.0, 0.2214872463094898], 'false,false,false': [0.24, 0.20408163265306126], 'true': [0.00014735556478394165, 0.17110168407109533], 'true,true': [0.00014735556478394165, nan], 'false,false,true': [nan, 0.0]}
{'': [0.0964686499321706, 0.11946384470740569], 'false': [0.0933219360284346, 0.12531496662433023], 'false,false': [3.072085370777374e-05, 0.1259369799487992], 'false,false,false': [0.1197383161755396, 0.19759114497887592], 'true': [0.10473019270129487, 0.0], 'true,true': [0.11822360953028375, 0.011947769355686163], 'true,false': [nan, 0.0]}
{'': [0.11652001035121887, 0.11538729725271141], 'true': [0.04964444183585554, 0.002717650022791372], 'false': [2.363573741190339e-05, 0.11662419064385249], 'false,false': [0.11662419064385249, nan], 'true,true': [0.004523131159168126, 0.04564578994951235], 'true,true,false': [nan, 0.045645789949512565], 'true,true,true': [0.004887525575203289, 0.0]}
{'': [0.07211998577175213, 0.10076286496383381], 'false': [0.09841605454604854, 0.13300768880838248], 'false,false': [0.0, 0.13872251968422855], 'false,false,false': [0.13872251968422855, nan], 'false,true': [0.09527105517531637, 0.00021345309919320254], 'false,true,true': [nan, 0.0952710551753166], 'true': [0.11164742904770553, 0.0007633877546326274], 'false,false,true': [0.0, nan]}
{'': [0.024049753046603364, 0.07500560622131196], 'false': [0.049690514765480934, 0.09407710074125612], 'false,false': [1.3880215084902114e-05, 0.09553601279918715], 'false,false,false': [0.09010322339330411, 0.13918101230051713], 'false,true': [0.038190241399021704, 0.05831209624151718], 'false,true,false': [0.17709997743269223, 0.054631670403069335], 'true': [0.001871601001950468, 0.0563485618172985], 'true,false': [0.0, 0.0003888291957051121]}
{'': [0.05909810345250666, 0.07723718988536407], 'false': [0.04559014189073262, 0.10373203495327513], 'false,false': [1.0882463380814297e-05, 0.105613744932432], 'false,false,false': [0.10161200335355632, 0.12448288459902902], 'true': [0.07628565392798098, 0.00030300482944769597], 'true,true': [0.07628565392798098, nan], 'true,true,true': [0.08047658445181366, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 13.499
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I), interaction(I, G) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.13640980466472835;  // std dev = 4.806, 115.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=32 */
%   | | | else return 0.2486251255757023;  // std dev = 4.999, 105.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7609104304538484;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7480325422264149;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5352200566152644;  // std dev = 0.783, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7274995069798595;  // std dev = 2.685, 77.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=69 */
%   | | | else return -0.16432578789070929;  // std dev = 0.170, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2407193555621739;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.16624911997335232;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.6002548730577462;  // std dev = 0.089, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5888801916661459;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.0062198212248962105;  // std dev = 1.942, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | | else return 0.11043819669985998;  // std dev = 3.789, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5822236221002756;  // std dev = 2.104, 42.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=37 */
%   | | | else return -0.14742201368523256;  // std dev = 0.059, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.4275296983681847;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.19591909857629183;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.30659701589805843;  // std dev = 1.227, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4549005402420037;  // std dev = 0.028, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.06821751609116;  // std dev = 0.662, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( complex(A, H), complex(F, H) )
%   | | | then return -0.0877163948445447;  // std dev = 0.674, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.057325722143788255;  // std dev = 4.802, 171.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=47 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.024432539149864627;  // std dev = 1.513, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.12172012694047382;  // std dev = 2.449, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5774794184196694;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.1575988679072456;  // std dev = 1.301, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.07529726135896146;  // std dev = 0.893, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3602094891455358;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.14285041995309045;  // std dev = 0.883, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( enzyme(A, F), location(A, G) )
%   | | | then return -0.15308159698888615;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10500624756116209;  // std dev = 0.017, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.06952444928600471;  // std dev = 5.380, 222.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=67 */
%   | | | else return 0.13789009399820257;  // std dev = 1.080, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.43412399758821185;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.05767003493920775;  // std dev = 0.817, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.17696329501861593;  // std dev = 1.291, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.29752770778461635;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.362422399113175;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.36683431825170115;  // std dev = 0.301, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.331996547369801;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then if ( interaction(I, A), phenotype(I, J) )
%   | | then return 0.08752760878155055;  // std dev = 0.382, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | else return -0.09985116906046941;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.32156280114952646;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.09483947036863871;  // std dev = 2.935, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
%   | | | else return 0.029702005766257106;  // std dev = 4.134, 140.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2776686662493994;  // std dev = 0.296, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.26285824493472454;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.5983777993752709;  // std dev = 0.341, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.6999056684215313;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.1701825041094287;  // std dev = 0.046, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2557531652831311;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.323145474799863;  // std dev = 1.442, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.07140880918698847;  // std dev = 3.253, 87.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=30 */
%   | | else return 0.30492192549153047;  // std dev = 0.545, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19194413965089804;  // std dev = 0.124, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.03712826097314594;  // std dev = 0.906, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.2493385697673303;  // std dev = 1.365, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return 0.4442569909831361;  // std dev = 1.870, 64.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=60 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.1363146341044251;  // std dev = 0.232, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return -0.18802514034392984;  // std dev = 0.202, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.2151725593305952;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.052434960413133384;  // std dev = 1.166, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.02283063545968474;  // std dev = 0.660, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18627253000922644;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.5155414696057604;  // std dev = 0.429, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.19886912411765903;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( enzyme(H, J), phenotype(A, I) )
%   | | | then return -0.10924165772987239;  // std dev = 0.038, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.05345888560944633;  // std dev = 2.022, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
%   | | else return -0.037987283964783486;  // std dev = 0.165, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.20407134180108422;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, L), complex(A, M) )
%   | | | then return -0.05513433938827241;  // std dev = 1.822, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | | else return 0.011329315742341473;  // std dev = 3.077, 113.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.16019847076851101;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.16936983994054844;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3691075021802395;  // std dev = 0.206, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1637478649752274;  // std dev = 0.729, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.10042629383955576;  // std dev = 0.965, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.00397002201098983;  // std dev = 1.391, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.1729145665875149;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.05241754110268101;  // std dev = 1.697, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -0.01795017820030176;  // std dev = 3.215, 122.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '2.134', 'seconds']
Refined model CLL: -0.19816


******************************************
Best model found
******************************************
Results 

CLL : -0.193684 

AUC ROC : 0.986004 

AUC PR : 0.240866 

Precision : 0.171677 

Recall : 0.769504 

F1 : 0.280724 

Total Learning Time : 13.499 

Total Inference Time : 37.8550009727478 

Total revision time: 72.25818304252624
Best scored revision CLL: -0.192964


Results 

CLL : -0.193684 

AUC ROC : 0.986004 

AUC PR : 0.240866 

Precision : 0.171677 

Recall : 0.769504 

F1 : 0.280724 

Total Learning Time : 72.32014898490905 

Total Inference Time : 37.8550009727478 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.052
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10033643509951119;  // std dev = 4.847, 128.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=31 */
%   | | | else return 0.1818899422937562;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6368881410330106;  // std dev = 0.946, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7372321343150519;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return -0.21837106042470464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6745151849758902;  // std dev = 3.532, 91.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=76 */
%   | | | else return -0.1598180159543402;  // std dev = 0.076, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | | else if ( location(A, K) )
%   | | | then return 0.13664383521132725;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5723978801153506;  // std dev = 0.008, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.591215801322524;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07978326584776047;  // std dev = 4.351, 132.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5707926106034856;  // std dev = 2.608, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | | else return -0.14455916361180055;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8086977911835793;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09656542217359182;  // std dev = 1.573, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3249500290516854;  // std dev = 1.327, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0.4335369175808902;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5049165838868984;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5093911043517362;  // std dev = 1.915, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | else return 0.04524683613517081;  // std dev = 5.146, 229.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5269871247266946;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.07943938096720206;  // std dev = 1.642, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3513050785577327;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.26866628138034765;  // std dev = 0.958, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.07238306088291692;  // std dev = 5.791, 263.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3967719545234265;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.05533629199576511;  // std dev = 1.634, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2833867482956827;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4129644765467375;  // std dev = 0.157, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3066760076259215;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.030692170751054692;  // std dev = 2.731, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.0987820877123122;  // std dev = 1.263, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05892629710296227;  // std dev = 4.660, 176.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=51 */
%   | | | else return 0.0763787595662632;  // std dev = 2.145, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2653714914770552;  // std dev = 0.225, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.24556979246419908;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.10882194992286993;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5487875275324403;  // std dev = 0.899, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1888181851046878;  // std dev = 0.894, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.27191955848037896;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.1002717784552342;  // std dev = 4.168, 136.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return -0.02020271752270644;  // std dev = 1.127, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.08236328382427306;  // std dev = 1.273, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.34291507480885763;  // std dev = 3.481, 98.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=82 */
%   | | else return -0.15787020237172802;  // std dev = 0.681, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20295103492912903;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.08384987568809475;  // std dev = 1.300, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1924431768275991;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.23881404465220082;  // std dev = 0.814, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.026145456190162102;  // std dev = 0.966, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.05357420240716928;  // std dev = 1.914, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.21678252246537832;  // std dev = 0.552, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.04955696250886785;  // std dev = 1.565, 63.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20766184571810115;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01410458148027352;  // std dev = 4.054, 156.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=47 */
%   | | | else return 0.1771415163714245;  // std dev = 1.147, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.0313538700400723;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.06703921837815398;  // std dev = 0.793, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.7627110645821286;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.030958257110488357;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.03121705551467116;  // std dev = 2.632, 136.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17556571197539195;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04046554624939067;  // std dev = 3.686, 151.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=47 */
%   | | | else return -0.03033972995414101;  // std dev = 1.350, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.043', 'seconds']
Parameter learned model CLL:-0.202399 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.847, 97, 31], 'false,false,true,false': [5.516, 94, 45], 'false,false,false,true': [1.595, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.946, 1, 10], 'false,true,true': [0.074, 0, 7], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,true': [3.532, 15, 76], 'false,false,true,false': [0.076, 194, 0], 'false,false,false,true': [1.664, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.008, 0, 11], 'true,false': [0.017, 0, 6], 'false,true,true': [4.351, 98, 34], 'false,true,false,true': [2.608, 8, 48], 'false,true,false,false': [0.0, 86, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.573, 9, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.327, 2, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.032, 0, 3], 'false,true,true,false': [1.915, 5, 21], 'false,true,false': [5.146, 171, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.642, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.958, 1, 10], 'false,true': [5.791, 181, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.634, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.042, 0, 9], 'true,true,false': [0.157, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.731, 51, 19], 'false,false,true': [1.263, 2, 8], 'false,false,false,true': [4.66, 125, 51], 'false,false,false,false': [2.145, 22, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.225, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [1.093, 2, 3], 'true,true,false,false': [0.899, 1, 33], 'true,false': [0.894, 107, 0], 'false,true': [0.018, 0, 5], 'false,false,true': [4.168, 89, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [1.127, 2, 7], 'true,false': [1.273, 2, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.481, 16, 82], 'false,true,false': [0.681, 179, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.3, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.078, 0, 9], 'true,false,true': [0.814, 2, 2], 'true,false,false': [0.966, 1, 5], 'false,true,true': [1.914, 45, 13], 'false,true,false,true': [0.552, 1, 8], 'false,true,false,false': [1.565, 52, 11], 'false,false,true': [0.015, 0, 5], 'false,false,false,true': [4.054, 109, 47], 'false,false,false,false': [1.147, 4, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.935, 1, 7], 'true,true,true,false': [0.793, 1, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.846, 1, 3], 'false,true': [2.632, 104, 32], 'false,false,true': [0.013, 0, 5], 'false,false,false,true': [3.686, 104, 47], 'false,false,false,false': [1.35, 10, 4]}]
{'': [0.05246913580246885, 0.2116607169054727], 'false': [0.10937499999999978, 0.20495833548988254], 'false,false': [0.2036218771479474, 0.2314049586776858], 'false,false,false': [0.2314049586776858, nan], 'false,false,true': [0.18353271484375117, 0.21893276745510168], 'false,true': [0.22222222222222224, 0.0], 'true': [0.07100591715976314, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.05204485709620757, 0.2000445130997038], 'false': [0.1005686620325889, 0.1959180120866957], 'false,false': [0.19509860312660193, 0.21301775147928984], 'false,false,false': [0.21301775147928984, nan], 'false,false,true': [0.13711459438378795, 2.998235620126149e-05], 'false,true': [0.0007884305269265646, 0.0], 'true': [-1.2688263138573217e-16, 0.08144118160385458], 'false,true,false': [0.0, nan]}
{'': [0.00010188514849647093, 0.16068292844329668], 'false': [0.15807713831686274, 0.21032900904191318], 'false,false': [0.21032900904191318, nan], 'false,false,true': [0.0, 0.19028441279847194], 'false,true': [0.14340122974070876, 0.17011185083958205], 'false,true,false': [0.12143517826523872, -1.8073398075293247e-17], 'true': [6.063283905218113e-06, 4.842587608104113e-05]}
{'': [0.09325350645626651, 0.14177126803621945], 'false': [0.13828882866699316, 0.2057606480227023], 'false,false': [0.0, 0.2072813199679939], 'false,false,false': [0.2072813199679939, nan], 'false,true': [0.12642786766465816, 0.11562415693705339], 'false,true,true': [0.00034458022185353726, 0.14097386812025445], 'true': [0.09781367195387143, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.05259256925528203, 0.13060725112866897], 'false': [0.12749080464074675, 0.18521804070675071], 'false,false': [0.0, 0.19067601331418607], 'false,false,false': [0.19067601331418607, nan], 'true': [-3.172065784643304e-17, 0.08340477922825341], 'false,false,true': [nan, 0.0], 'true,true': [-3.172065784643304e-17, nan]}
{'': [0.005483976170338856, 0.12308436233882758], 'false': [0.10655726541535107, 0.12813253490882753], 'false,false': [0.1596200249253303, 0.12655533400260044], 'false,false,false': [0.12336457295332554, 0.14384679108850768], 'true': [0.005798659820931403, 0.0], 'true,true': [0.00019327543304844172, 0.004132503807533309], 'true,false': [nan, 0.0]}
{'': [0.11145537501200388, 0.12423116713731705], 'false': [6.785082856555213e-05, 0.12775120911343973], 'false,false': [0.12775120911343973, nan], 'true': [0.07989870941315877, 0.007476478845589199], 'true,true': [0.0031878448365283557, 0.09969332052947003], 'true,true,false': [0.23909543316194112, 0.023750673330398108], 'true,true,true': [0.003375861120393031, 0.0]}
{'': [0.140280850214512, 0.1046023186722368], 'true': [0.14117435488504199, 0.13510224258348222], 'false': [0.10275865590683134, 0.1418444027677875], 'false,false': [0.0, 0.15355725796290348], 'false,false,false': [0.15355725796290348, nan], 'false,true': [0.12365727917549929, 0.00259125625357872], 'false,true,true': [nan, 0.12365727917549942], 'false,false,true': [0.0, nan]}
{'': [0.11159918878397314, 0.08498755659313793], 'true': [0.0006801104313176598, 0.17630872561835748], 'true,false': [0.1655713373213341, 0.1553855696483861], 'false': [0.054002097726684635, 0.10723325580008372], 'false,false': [4.65130433079719e-05, 0.10948194503757144], 'false,false,false': [0.10537361779403503, 0.16430992034971792], 'false,true': [0.06318048481882904, 0.04598734555610679], 'false,true,false': [0.033842442100673144, 0.03885524160698255]}
{'': [0.1421205617492598, 0.07472219031842438], 'true': [0.1327577701760486, 0.17893122392226612], 'true,true': [0.10052929861934048, 0.0], 'true,true,true': [0.109375, 0.089740755433667], 'false': [0.05092820792998345, 0.09159046669677307], 'false,false': [3.58588935274573e-05, 0.0937792182946992], 'false,false,false': [0.08998759303418279, 0.13008659619750781], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 20.67
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7277141524908164;  // std dev = 1.615, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return -0.043636779186201964;  // std dev = 3.150, 112.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=11 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.1953582374250924;  // std dev = 4.384, 86.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=29 */
%   | | | else return 0.13983907594458259;  // std dev = 3.790, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7372321343150519;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7480941453394466;  // std dev = 0.022, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6808643295851725;  // std dev = 3.213, 88.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | | | else return -0.15325819227990478;  // std dev = 0.190, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.18356193567625534;  // std dev = 1.362, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.1133782554213475;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5794662465028289;  // std dev = 0.030, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5819360239687513;  // std dev = 0.089, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.037949474463189956;  // std dev = 2.547, 69.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=16 */
%   | | | else return 0.09795598586800534;  // std dev = 3.105, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5388298112713044;  // std dev = 2.832, 58.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   | | | else return -0.13701140854605556;  // std dev = 0.106, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( recursion_proteinclass(J, B) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.5436496464563886;  // std dev = 0.820, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.30734272788463735;  // std dev = 0.939, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.15557129778561463;  // std dev = 0.005, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4363979615283566;  // std dev = 0.034, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.44545723945606763;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4630193503541285;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.40497524390092227;  // std dev = 1.763, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | else if ( location(A, H), interaction(A, I) )
%   | | | then return -0.0745748995858;  // std dev = 2.439, 119.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=10 */
%   | | | else return 0.09176267456941863;  // std dev = 4.525, 156.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=48 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5030152983372684;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.12008765777832194;  // std dev = 1.496, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.16576911605040345;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3290880873172369;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.24723108074293795;  // std dev = 0.288, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F), location(A, G) )
%   | | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.49918671706693635;  // std dev = 0.538, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.14372276319074695;  // std dev = 0.631, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.03219609981010791;  // std dev = 1.524, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.10485920621273082;  // std dev = 4.464, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.37966886511170483;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.08672504488424966;  // std dev = 1.523, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.113890917207218;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3012822812096959;  // std dev = 0.096, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12558025897522065;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.03781076282592698;  // std dev = 1.133, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( phenotype(D, F), phenotype(A, F) )
%   | | | then return -0.16367236569444185;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.028848536101088285;  // std dev = 2.379, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( enzyme(H, I), interaction(G, H) )
%   | | | then return 0.07892612846312629;  // std dev = 2.654, 65.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=22 */
%   | | | else return 0.03277038599195964;  // std dev = 3.593, 137.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=39 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.011413551150917588;  // std dev = 1.338, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.21368216063844858;  // std dev = 1.240, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24425179970180028;  // std dev = 0.088, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( complex(A, E), interaction(F, A) )
%   | | | then return 0.2330990689300378;  // std dev = 1.051, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return 0.5406752821026812;  // std dev = 0.880, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return -0.1519033014300122;  // std dev = 0.104, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.28115221745972163;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( location(A, H) )
%   | | then if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.06915745850843237;  // std dev = 3.869, 121.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
%   | | | else return 0.21172776714375732;  // std dev = 0.715, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.06388696247217669;  // std dev = 0.914, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.07834236055068212;  // std dev = 0.921, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.17036957875683323;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.22618170583703204;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( enzyme(A, G), complex(F, H) )
%   | | | then return -0.09883942436858999;  // std dev = 1.191, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.003156704827355351;  // std dev = 1.404, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.06862719423292668;  // std dev = 3.483, 105.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=36 */
%   | | | else return 0.012085986380504636;  // std dev = 2.955, 88.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=25 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.19526476673547621;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.00937319534506094;  // std dev = 1.340, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.10973148585340058;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18884013834138022;  // std dev = 0.102, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.06587374985562801;  // std dev = 0.501, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.19948909116339034;  // std dev = 0.120, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.12148301427217323;  // std dev = 2.027, 53.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=30 */
%   | | | else return -0.09860878382287294;  // std dev = 0.144, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return 0.25742321200838986;  // std dev = 0.483, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.024272699255471503;  // std dev = 0.911, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.028391400595107846;  // std dev = 2.607, 68.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | | else return 0.059047032116595816;  // std dev = 3.507, 99.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1600524376552037;  // std dev = 0.079, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.02765320468731336;  // std dev = 0.529, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( phenotype(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.15851370396042636;  // std dev = 0.868, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.1525318349635686;  // std dev = 0.721, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.08747323925273036;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.010672652963657223;  // std dev = 1.942, 96.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=27 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.18688806540912986;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return -0.029739564581722378;  // std dev = 1.665, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.020305842164922223;  // std dev = 4.111, 138.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=42 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '53.838', 'seconds']
Refined model CLL: -0.202654


******************************************
Best model found
******************************************
Results 

CLL : -0.186025 

AUC ROC : 0.98944 

AUC PR : 0.298717 

Precision : 0.271255 

Recall : 0.758491 

F1 : 0.399602 

Total Learning Time : 20.67 

Total Inference Time : 151.01452803611755 

Total revision time: 194.9892917842865
Best scored revision CLL: -0.202399


Results 

CLL : -0.186025 

AUC ROC : 0.98944 

AUC PR : 0.298717 

Precision : 0.271255 

Recall : 0.758491 

F1 : 0.399602 

Total Learning Time : 195.05125772666932 

Total Inference Time : 151.01452803611755 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.488
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10814893509951237;  // std dev = 2.449, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.16584124279181892;  // std dev = 5.519, 143.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1460277229783002;  // std dev = 3.678, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7392070123615109;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6351212652285619;  // std dev = 0.950, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8190372505875627;  // std dev = 0.992, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.16157278493666993;  // std dev = 0.035, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else if ( location(A, K) )
%   | | | then return 0.12860979353072946;  // std dev = 3.564, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.12514147827879732;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4475761663482612;  // std dev = 0.899, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.6019417287168036;  // std dev = 0.048, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06236442604993124;  // std dev = 2.080, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6817136783400707;  // std dev = 0.264, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1423714562140309;  // std dev = 2.11e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12035048689457506;  // std dev = 3.693, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.026133102498809253;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.45574598370345903;  // std dev = 0.050, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4880508023555204;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3871433488468361;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5862701389257529;  // std dev = 0.130, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.047811543812774485;  // std dev = 4.214, 198.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.525484688287571;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.10933084160271134;  // std dev = 3.515, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | | else return 0.0892404239778294;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.35750568537294924;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.34842713296600963;  // std dev = 0.059, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.06101361023063515;  // std dev = 4.230, 185.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3956896921119144;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.10223449611271813;  // std dev = 3.603, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return -0.0034242271894536027;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2680300767392119;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.1872261729074211;  // std dev = 0.700, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return -0.24482775743051055;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.29185270941652364;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3059447125406065;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07345559318278654;  // std dev = 0.948, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.28330115600165623;  // std dev = 0.029, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06614474493026527;  // std dev = 3.946, 157.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=49 */
%   | | | else return 0.04345997663226088;  // std dev = 3.800, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24807303676838935;  // std dev = 0.149, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2747388408242722;  // std dev = 0.042, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.21709331955146294;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6424667367380793;  // std dev = 0.808, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19281768495030022;  // std dev = 0.764, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.06379455137862615;  // std dev = 0.921, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05926903846041866;  // std dev = 3.305, 114.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1792824814447672;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.20752631468451066;  // std dev = 0.054, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42102052255591155;  // std dev = 1.221, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.14085020583956057;  // std dev = 0.251, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.22368603703799317;  // std dev = 0.037, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.046534277623889335;  // std dev = 3.092, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16597456858649862;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.14631346671259915;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17603096907087282;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.0640862088100126;  // std dev = 0.391, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18184344414343556;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.009799041434269512;  // std dev = 1.210, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18717221815924978;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0016174968154860254;  // std dev = 2.832, 133.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=36 */
%   | | | else return 0.01637096355900271;  // std dev = 3.135, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13996524841490604;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16500991447367933;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.12294517758662071;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.4363344098315457;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.14875084886195497;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.02784273827312043;  // std dev = 1.356, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1603559514608763;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04306991122091449;  // std dev = 2.623, 106.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=36 */
%   | | | else return 0.013661160387726393;  // std dev = 3.140, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.673', 'seconds']
Parameter learned model CLL:-0.174879 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.949, 1, 9], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.449, 24, 8], 'false,false,true,false': [5.519, 99, 44], 'false,false,false,true': [3.678, 47, 19], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.95, 1, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.992, 1, 52], 'false,false,true,false': [0.035, 119, 0], 'false,false,false,true': [3.564, 43, 18], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.899, 1, 6], 'true,false': [0.048, 0, 8], 'false,true,true': [2.08, 26, 8], 'false,true,false,true': [0.264, 0, 48], 'false,true,false,false': [2.11e-08, 104, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.693, 46, 20], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.05, 0, 11], 'true,false': [0.027, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.13, 0, 3], 'false,true,false': [4.214, 146, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.515, 40, 18], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.015, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.059, 0, 9], 'false,true': [4.23, 129, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.603, 41, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.033, 0, 7], 'true,true,false': [0.7, 1, 4], 'true,false,true,true': [0.707, 1, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.948, 19, 3], 'false,false,true': [0.029, 0, 6], 'false,false,false,true': [3.946, 108, 49], 'false,false,false,false': [3.8, 51, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.149, 0, 12], 'true,true,true,false': [0.042, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.808, 0, 36], 'true,false': [0.764, 100, 0], 'false,true': [0.921, 1, 5], 'false,false,true': [3.305, 78, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.024, 0, 6], 'true,false': [0.054, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.221, 1, 56], 'false,true,false': [0.251, 152, 0], 'false,false,true,true': [0.037, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.092, 44, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.063, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.037, 0, 4], 'false,true,true': [0.391, 8, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.21, 39, 14], 'false,false,true': [0.019, 0, 5], 'false,false,false,true': [2.832, 97, 36], 'false,false,false,false': [3.135, 50, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.002, 0, 5], 'true,true,true,false': [0.03, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.038, 0, 4], 'false,true': [1.356, 59, 17], 'false,false,true': [0.016, 0, 5], 'false,false,false,true': [2.623, 70, 36], 'false,false,false,false': [3.14, 49, 20]}]
{'': [0.10937499999999967, 0.2155957336108226], 'false': [-1.4802973661668753e-16, 0.209002117341713], 'false,false': [0.20884897959183743, 0.2094007574069944], 'false,false,false': [0.2050045913682272, 0.0], 'false,false,true': [0.18750000000000014, 0.21301775147929095], 'true': [0.08999999999999977, 0.1388888888888887], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16]}
{'': [0.06281978747257368, 0.21288180064190487], 'false': [7.401486830834377e-17, 0.20993156172291616], 'false,false': [0.21072947648474855, 0.20780419049555757], 'false,false,true': [0.01856360521407075, 1.0199909351136593e-05], 'false,false,false': [0.20823013096326853, 0.20408163265306126], 'true': [0.0, 0.10036610868513307], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.05994802953689137, 0.16139265886199508], 'false': [0.14399848956236316, 0.20745216338001313], 'false,false': [0.20635613733540956, 0.22222222222222224], 'false,false,false': [0.22222222222222224, nan], 'false,false,true': [0.0, 0.2066582846317001], 'false,true': [0.1272017941446924, 0.1471925576475176], 'false,true,false': [0.0014512386780320223, 4.270088556250602e-18], 'true': [0.11542865437096353, 0.0002824102792454153]}
{'': [0.0004109415172914537, 0.12258072321802783], 'false': [0.09278913615822416, 0.20964658944596162], 'false,false': [0.0029144398317229314, 0.21204525874341767], 'false,false,false': [0.21296291873537881, 0.20408163265306123], 'false,true': [0.011642995764716613, 0.08969963806158526], 'false,true,true': [0.0, 0.005611124721172089], 'false,false,true': [0.0, 0.0], 'true': [0.00023143614522009253, 0.0002491554251546531]}
{'': [0.00027995224642064976, 0.12722020213420332], 'false': [0.09673434609789802, 0.21254062227401885], 'false,false': [0.0014054193084027111, 0.21714733424502528], 'false,false,false': [0.21636198195045858, 0.22222222222222224], 'false,false,true': [0.0, 0.0], 'true': [4.401298900742478e-05, 0.00038159385671966543], 'true,true': [4.401298900742478e-05, nan]}
{'': [0.08968746183428139, 0.12348800670731715], 'false': [0.04087082695081541, 0.12961206221494573], 'false,false': [0.00014304301898365734, 0.1317300430787756], 'false,false,false': [0.09916569987049335, 0.20338416944601204], 'true': [0.04252575268932277, 0.1989344411811575], 'true,false': [0.23067242744336677, 0.0], 'true,false,true': [0.25, 0.0], 'true,true': [0.000151134966554421, 0.09804147615776507]}
{'': [0.13505379687340452, 0.09810711131466136], 'true': [0.04536286670427098, 0.0058413725713857235], 'false': [0.14146889406469002, 0.09582388820919595], 'false,false': [0.09582388820919595, nan], 'true,true': [0.001807223988522566, 0.022394262552960616], 'true,true,false': [0.0, 0.01812598637330239], 'true,true,true': [0.0018601208439575727, 0.0008803584793866392]}
{'': [0.0004439727666310987, 0.0885074727064016], 'false': [0.07005084208755961, 0.14576676404649855], 'false,false': [0.0006678642492355669, 0.1493501123662687], 'false,false,false': [0.1493501123662687, nan], 'false,true': [0.026150208902110686, 0.00041392987001384753], 'false,true,true': [nan, 0.026150208902110686], 'false,false,true': [0.0006678642492355669, nan], 'true': [9.826392836077835e-05, 0.00036137691701620955]}
{'': [0.00043781422450279, 0.07263650705324069], 'false': [0.026840356675023394, 0.08660864594721945], 'false,false': [6.916868428348266e-05, 0.08795726465509303], 'false,false,false': [0.06028503129973044, 0.14039190007034785], 'false,true': [0.016964299508881703, 0.0279287721736089], 'false,true,false': [0.0, 0.027647166567292086], 'true': [0.0004438999557289812, 0.00041598537125054903], 'true,false': [0.0, 0.0003433557247803816]}
{'': [0.021373294783663305, 0.07384105460206104], 'false': [0.024184612574354065, 0.09363265173771756], 'false,false': [5.437563932401135e-05, 0.09584491569656824], 'false,false,false': [0.06488342425888376, 0.14288507910506834], 'true': [0.028132000419422796, 0.00036727158663953444], 'true,true': [0.0002607725596891104, 0.06950970153391876], 'true,true,false': [0.0, 0.0], 'true,true,true': [9.087566480936448e-07, 0.00030185683684363457]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,false;interaction(A, J), interaction(J, K).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.443
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, A), interaction(A, I) )
%   | | | then return -0.005487428536851416;  // std dev = 1.610, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.15156210875220716;  // std dev = 5.884, 167.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=49 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15973623668681391;  // std dev = 3.643, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.42405077188448576;  // std dev = 0.724, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7384287587143868;  // std dev = 0.104, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8209516523004632;  // std dev = 0.992, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15748479642058227;  // std dev = 0.096, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.21257082454190454;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.08697555181776509;  // std dev = 2.873, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4629260409040136;  // std dev = 0.286, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5711127165328536;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.08058809296052942;  // std dev = 0.830, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.16722013073144834;  // std dev = 1.760, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.68800231240709;  // std dev = 0.221, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13967331331539626;  // std dev = 0.052, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5960526174841312;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11940407091319824;  // std dev = 3.694, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | else return 0.15409879548385472;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4453644154809609;  // std dev = 0.050, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4258122301854683;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6302860852657065;  // std dev = 0.139, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.11203890356707916;  // std dev = 0.017, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0.0935117520486483;  // std dev = 4.024, 155.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.44843194547397947;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5670045843518694;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return -0.08777331931569766;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.12006724903768189;  // std dev = 3.592, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3486741869453713;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return 0.09832157717395926;  // std dev = 0.733, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.34933785618451063;  // std dev = 0.152, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.2225375666117137;  // std dev = 0.681, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.02740238848898219;  // std dev = 2.885, 103.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=25 */
%   | | | else return 0.04873306157602066;  // std dev = 2.942, 97.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=27 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3839832797063563;  // std dev = 0.042, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.07263898511329744;  // std dev = 3.148, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.15364502439633967;  // std dev = 1.933, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.29516803432337657;  // std dev = 0.033, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return -0.10761327107457183;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.07032847342993112;  // std dev = 0.612, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.001174501452225557;  // std dev = 0.455, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.06962773801415681;  // std dev = 0.418, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.1056420852499036;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.2665024469334564;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.09034560739215884;  // std dev = 3.454, 67.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   | | | else return 0.035627038938897446;  // std dev = 4.190, 169.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5227397186454904;  // std dev = 0.210, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else return -0.17733267864522592;  // std dev = 0.058, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( location(A, G), location(E, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.24811013220789122;  // std dev = 1.451, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return -0.14951040685402506;  // std dev = 0.070, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4926891654126639;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1448666953233938;  // std dev = 0.004, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then return 0.0023453978539278147;  // std dev = 0.281, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.09508233514593184;  // std dev = 0.874, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.013231862963284595;  // std dev = 1.102, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.14142719186321584;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then return -0.030832844879716603;  // std dev = 0.644, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20507089559222913;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.4034956651434866;  // std dev = 0.153, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.11163589879619125;  // std dev = 0.195, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return -0.14610272666467553;  // std dev = 0.201, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.15877551299309622;  // std dev = 0.034, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(A, K) )
%   | | | then return 0.031051948629315353;  // std dev = 3.055, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return 0.13514489710356692;  // std dev = 0.944, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1315830039104745;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.12904959943670108;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( complex(A, G), enzyme(A, H) )
%   | | | then return 0.0067842606153743264;  // std dev = 0.392, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.07519465521034133;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.2088115217717516;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.017082448452775664;  // std dev = 1.324, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.18337436314869077;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.25728777679395337;  // std dev = 1.132, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.029805119362044077;  // std dev = 3.809, 168.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=52 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.11991340418234012;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1082260133824452;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2786147720180529;  // std dev = 0.127, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.08988898301159368;  // std dev = 0.057, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return -0.009988433183758475;  // std dev = 1.104, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return -0.11142217907909745;  // std dev = 0.598, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.1575799268993852;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.0039042042715381926;  // std dev = 2.619, 128.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=36 */
%   | | | else return 0.0605315322645456;  // std dev = 3.093, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '634', 'milliseconds']
Refined model CLL: -0.176273


******************************************
Best model found
******************************************
Results 

CLL : -0.19765 

AUC ROC : 0.982027 

AUC PR : 0.213269 

Precision : 0.13541 

Recall : 0.815884 

F1 : 0.232271 

Total Learning Time : 7.443 

Total Inference Time : 7.847765922546387 

Total revision time: 27.364822870254514
Best scored revision CLL: -0.174879


Results 

CLL : -0.19765 

AUC ROC : 0.982027 

AUC PR : 0.213269 

Precision : 0.13541 

Recall : 0.815884 

F1 : 0.232271 

Total Learning Time : 27.426788812637326 

Total Inference Time : 7.847765922546387 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.515
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.05217878584578103;  // std dev = 3.237, 67.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | | | else return 0.10814893509951187;  // std dev = 5.408, 156.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.12285481745245355;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5184061011112955;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8462700240301909;  // std dev = 0.023, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1523952365739291;  // std dev = 0.041, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | | else if ( location(A, I) )
%   | | | then return 0.08574450617940076;  // std dev = 2.866, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return -0.007205816422951206;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5553664367462844;  // std dev = 1.49e-08, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0498116675181466;  // std dev = 2.774, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6955902370454573;  // std dev = 0.106, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.13654986354216433;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.46756019101121893;  // std dev = 0.758, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.05159960310140281;  // std dev = 2.596, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.11863081285049569;  // std dev = 1.411, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3550135841583098;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5923366183016272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3895850772426094;  // std dev = 1.016, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.026923305922500456;  // std dev = 4.395, 215.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.48897298149216906;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.1979234834143587;  // std dev = 0.640, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.08347343518208276;  // std dev = 2.816, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.023893137517188683;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33447760361752854;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1916204607603857;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.06071128191932631;  // std dev = 4.444, 196.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3697969008534149;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.487109119789677;  // std dev = 0.166, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.12982572778608084;  // std dev = 2.452, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.25092344660611315;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2677347614905022;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4466938212704864;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2884579675041906;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04388359371156603;  // std dev = 0.825, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.05273235257214956;  // std dev = 1.283, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.29325594410591616;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.0726363300584815;  // std dev = 3.919, 150.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=46 */
%   | | | else return 0.0589303544383771;  // std dev = 3.045, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.18404175048929364;  // std dev = 0.996, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.3209356685122114;  // std dev = 0.187, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2492002878019647;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5417069331729524;  // std dev = 1.582, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.1801069816853906;  // std dev = 0.881, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23633502675144435;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05655467574531808;  // std dev = 3.341, 102.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1862965113226167;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2021136620306815;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4161487224331888;  // std dev = 1.648, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.13301780998877072;  // std dev = 0.188, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2584694368261938;  // std dev = 0.167, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.05482848162347959;  // std dev = 2.440, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16197122728244912;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.19406558619941228;  // std dev = 0.571, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.2305673864529642;  // std dev = 0.136, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.1082701636114691;  // std dev = 0.453, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2720715156795185;  // std dev = 0.182, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.02739724918143521;  // std dev = 1.534, 78.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.06979443155216505;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03622768220107483;  // std dev = 2.828, 95.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
%   | | | else return -0.0038292769093632487;  // std dev = 2.543, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13913126187549285;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1494304518837115;  // std dev = 0.032, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.14628003602292494;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.22179963994048507;  // std dev = 0.031, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return -0.049394704737038275;  // std dev = 0.892, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.01840357412384641;  // std dev = 1.896, 87.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.07368747221374805;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02160856497337671;  // std dev = 2.743, 105.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
%   | | | else return 0.0185625872260947;  // std dev = 2.531, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.699', 'seconds']
Parameter learned model CLL:-0.173446 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [3.237, 54, 13], 'false,false,true,false': [5.408, 117, 39], 'false,false,false,true': [2.572, 25, 9], 'false,false,false,false': [1.095, 2, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [0.0, 0, 7], 'false,true,true': [1.245, 2, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.023, 0, 52], 'false,false,true,false': [0.041, 131, 0], 'false,false,false,true': [2.866, 33, 11], 'false,false,false,false': [0.894, 4, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 11], 'true,false': [1.49e-08, 0, 4], 'false,true,true': [2.774, 50, 14], 'false,true,false,true': [0.106, 0, 42], 'false,true,false,false': [0.0, 89, 0], 'false,false,true,true': [0.758, 1, 3], 'false,false,true,false': [2.596, 31, 9], 'false,false,false,true': [1.411, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.968, 1, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.016, 2, 6], 'false,true,false': [4.395, 166, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.64, 1, 1], 'false,false,false,true': [2.816, 29, 11], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.926, 1, 6], 'false,true': [4.444, 140, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.166, 0, 2], 'false,false,false,true': [2.452, 19, 9], 'false,false,false,false': [1.225, 3, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.027, 0, 9], 'true,true,false': [0.054, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.825, 1, 2], 'false,true': [1.283, 28, 5], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [3.919, 104, 46], 'false,false,false,false': [3.045, 34, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.996, 1, 13], 'true,true,true,false': [0.187, 0, 3], 'true,true,false,true': [0.032, 0, 3], 'true,true,false,false': [1.582, 2, 33], 'true,false': [0.881, 114, 0], 'false,true': [0.0, 0, 3], 'false,false,true': [3.341, 71, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [7.45e-09, 0, 8], 'true,false': [0.031, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.648, 3, 56], 'false,true,false': [0.188, 137, 0], 'false,false,true,true': [0.167, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.44, 27, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.039, 0, 10], 'true,false,true': [0.571, 1, 1], 'true,false,false': [0.136, 0, 5], 'false,true,true': [0.453, 19, 1], 'false,true,false,true': [0.182, 0, 6], 'false,true,false,false': [1.534, 61, 17], 'false,false,true': [0.818, 1, 3], 'false,false,false,true': [2.828, 64, 31], 'false,false,false,false': [2.543, 35, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [5.27e-09, 0, 8], 'true,true,true,false': [0.032, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.031, 0, 2], 'true,false': [0.892, 1, 3], 'false,true': [1.896, 63, 24], 'false,false,true': [0.866, 1, 3], 'false,false,false,true': [2.743, 74, 31], 'false,false,false,false': [2.531, 29, 12]}]
{'': [-2.3684757858670006e-16, 0.19381344307270287], 'false': [0.10937499999999978, 0.18460462677000294], 'false,false': [0.1788091455689848, 0.21301775147928945], 'false,false,false': [0.19463667820069216, 0.23999999999999994], 'false,false,true': [0.15638226776564884, 0.18750000000000056], 'false,true': [0.0, 0.12244897959183662], 'false,true,false': [1.4802973661668753e-16, 0.18750000000000006], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [2.3684757858670006e-16, 0.20424584390993863], 'false': [0.17222364616345154, 0.199552677093064], 'false,false': [0.20287935572960125, 0.18473213955536233], 'false,false,true': [9.747950965259652e-06, 1.2778387326603757e-05], 'false,false,false': [0.18666100154388252, 0.15999999999999995], 'false,true': [0.17222364616345154, nan], 'true': [1.1102230246251565e-16, -1.2688263138573217e-16]}
{'': [-2.9605947323337506e-16, 0.15197373611187426], 'false': [0.14227594192461532, 0.18758379023174437], 'false,false': [0.18057805135185054, 0.22112541155150994], 'false,false,false': [0.22112541155150994, nan], 'false,false,true': [0.1436997731446126, 0.1685364963821852], 'false,true': [0.12024465581157379, 0.15091608628072514], 'false,true,false': [0.0002664742194086771, -6.736184643793085e-17], 'true': [-2.0185873175002846e-16, 5.551115123125783e-17]}
{'': [0.05859375000000011, 0.11486974748276717], 'false': [0.09671512590891619, 0.19684257625143411], 'false,false': [0.12365272848080448, 0.19762682522178168], 'false,false,false': [0.19831679757397463, 0.18750000000000003], 'false,false,true': [0.0, 0.20495055179593638], 'false,true': [0.11868258213332705, 0.08983421830515527], 'false,true,true': [0.0, 0.1289503285220144], 'true': [0.05859375000000011, nan]}
{'': [0.0585937499999999, 0.12028757142391541], 'false': [0.10077120091872177, 0.2126335438201587], 'false,false': [0.012233028188221806, 0.22317305077391378], 'false,false,false': [0.21479882455258342, 0.2501759963726046], 'true': [-2.4671622769447922e-17, 0.12244897959183672], 'false,false,true': [0.0, 0.013762156711749518], 'true,true': [-2.4671622769447922e-17, nan]}
{'': [0.0566166599113816, 0.11436750671269837], 'false': [0.04986401735694172, 0.1225779703176135], 'false,false': [0.0, 0.12443814842510448], 'false,false,false': [0.10238271125791032, 0.19321907611220968], 'true': [0.007099520818920897, 0.1812814909062548], 'true,false': [0.0, 0.22675449846265947], 'true,true': [8.141634526119083e-05, 0.0007181708311150004], 'true,false,true': [0.0, nan]}
{'': [0.11362758260410427, 0.10717914990707625], 'true': [0.08993349950753042, 0.006812983829055916], 'false': [0.0, 0.10940802142815148], 'false,false': [0.10940802142815148, nan], 'true,true': [0.06317514260852986, 0.07212116258556495], 'true,true,false': [0.00033102988379607456, 0.07151985482725795], 'true,true,true': [0.07089994840401082, 0.011693153185502217]}
{'': [0.00012514884383407014, 0.0896294829330973], 'false': [0.07749117920714171, 0.14514250169840243], 'false,false': [0.009330147550322743, 0.15262748881821978], 'false,false,false': [0.15262748881821978, nan], 'false,true': [0.0460307912104653, 0.00025691070077804335], 'false,true,true': [nan, 0.04603079121046533], 'false,false,true': [0.009330147550322743, nan], 'true': [6.938893903907228e-18, 0.00013474555711862863]}
{'': [0.03619256847007897, 0.07443696213192903], 'false': [0.03135410550360474, 0.10424200964120181], 'false,false': [0.16736965630796205, 0.1022280091654434], 'false,false,false': [0.08418278965493911, 0.13762891580561046], 'true': [0.00015249970704581117, 0.0860429726096144], 'true,false': [0.1630849816820845, 0.0037081228481709804], 'false,true': [0.010279007657919058, 0.03436086445961852], 'false,true,false': [0.005547993997802332, 0.030171414744288524]}
{'': [0.05499988481978481, 0.07755315136582243], 'false': [0.041308410197038785, 0.09808233314649847], 'false,false': [0.1875, 0.09539469303495407], 'false,false,false': [0.07165424349375285, 0.15618673275443848], 'true': [0.0010064116286554502, 0.19884826195515565], 'true,true': [0.00012259299360370401, 0.0015885685276805506], 'true,true,false': [0.0, 0.00048178259956576514], 'true,true,true': [3.469446951953614e-18, 0.0005281063161581868]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 10.13
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( complex(A, H), interaction(I, A) )
%   | | | then return 0.04932540568774767;  // std dev = 3.243, 68.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=13 */
%   | | | else return 0.15814893509951228;  // std dev = 5.975, 170.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7398727907934262;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A) )
%   | | then return 0.7561337978940017;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3634658750306111;  // std dev = 1.044, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8224143108124514;  // std dev = 0.995, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15371791124297224;  // std dev = 0.144, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.21278665478297892;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.11903665478297923;  // std dev = 2.543, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5595171078416127;  // std dev = 0.016, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return -0.11634306215507595;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.3459130135761082;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G), interaction(H, A) )
%   | | then return 0.016057345630095622;  // std dev = 0.323, 76.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=14 */
%   | | else if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6929776875628956;  // std dev = 0.178, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.14001991454573584;  // std dev = 0.049, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4337417195991712;  // std dev = 0.819, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.40675549816821366;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05172177374577016;  // std dev = 2.631, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then return 0.19284924993428318;  // std dev = 0.820, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.4363237127246852;  // std dev = 0.041, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5423135312225543;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.456911646222351;  // std dev = 0.848, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(I, A), interaction(A, I) )
%   | | | then return -0.12066878595685504;  // std dev = 0.064, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.0736765354938069;  // std dev = 4.224, 163.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=49 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5683626172094861;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.3034982419329095;  // std dev = 1.388, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0951120525137867;  // std dev = 2.361, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.29819218751717486;  // std dev = 0.222, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( location(A, E), interaction(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.09973428883118791;  // std dev = 5.27e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.03232097967650819;  // std dev = 2.714, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
%   | | else if ( enzyme(A, G), location(A, H) )
%   | | | then return 0.2034273191339908;  // std dev = 1.863, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.11644237596307558;  // std dev = 2.604, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return 0.3956271343494392;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.055151187196874896;  // std dev = 1.005, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.0032578896362849053;  // std dev = 1.448, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.13490455748307018;  // std dev = 2.419, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.30285740396253114;  // std dev = 0.076, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.30590244384726184;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.45837223070896105;  // std dev = 0.070, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( complex(A, H) )
%   | | then return -0.08275610672971324;  // std dev = 0.080, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.04866294438828829;  // std dev = 0.485, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.20407506776071616;  // std dev = 0.791, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.36016367771332086;  // std dev = 0.119, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, L) )
%   | | | then return 0.04129021219267128;  // std dev = 4.823, 199.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=57 */
%   | | | else return 0.2468283508081449;  // std dev = 0.996, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(F, E) )
%   | | | then return 0.2288725088314222;  // std dev = 0.195, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.32073995698966706;  // std dev = 0.125, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.2872129842708136;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5292798713685923;  // std dev = 1.550, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.15803240534593108;  // std dev = 0.065, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.022671834003344826;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), interaction(J, A) )
%   | | | then return 0.03568779099024798;  // std dev = 2.889, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
%   | | | else return 0.0783386619863589;  // std dev = 1.387, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else return -0.06150344994855872;  // std dev = 0.542, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16750900859464024;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.008835426083908554;  // std dev = 0.767, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.24616810555107366;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.4006502476353967;  // std dev = 0.201, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.13932743465492628;  // std dev = 0.034, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5381615325732475;  // std dev = 0.391, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.24590673551196085;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.07692279335411256;  // std dev = 1.445, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.027767533801050716;  // std dev = 1.317, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1760387711554011;  // std dev = 0.049, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( enzyme(E, F), location(A, G) )
%   | | then if ( interaction(A, E), location(D, G) )
%   | | | then return -0.0894210184443597;  // std dev = 1.177, 40.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=4 */
%   | | | else return -0.024127460583723448;  // std dev = 1.384, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( location(A, H), location(E, H) )
%   | | | then return -0.004631702344464117;  // std dev = 1.490, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.038368159086851414;  // std dev = 1.007, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( complex(A, K), complex(I, L) )
%   | | | then return 0.05676486718399625;  // std dev = 1.166, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.01639016269729029;  // std dev = 2.484, 93.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=25 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return 0.040891176931380294;  // std dev = 0.734, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.22366749186598306;  // std dev = 1.047, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1202653375743236;  // std dev = 0.135, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( phenotype(F, H), location(A, I) )
%   | | | then return -0.004392256934906626;  // std dev = 1.208, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return 0.08611280910793793;  // std dev = 0.673, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(D, J), enzyme(J, K) )
%   | | | then return -0.0934688126278796;  // std dev = 1.106, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return -0.00866826402128389;  // std dev = 1.668, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | else if ( interaction(A, L), interaction(L, L) )
%   | | then if ( interaction(M, A) )
%   | | | then return -0.05835042815611809;  // std dev = 0.252, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.08415881096669577;  // std dev = 1.118, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( location(A, N), interaction(P, A) )
%   | | | then return 0.039440705916504705;  // std dev = 2.771, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   | | | else return 0.26656287748617186;  // std dev = 0.620, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.765', 'seconds']
Refined model CLL: -0.179109


******************************************
Best model found
******************************************
Results 

CLL : -0.182381 

AUC ROC : 0.983813 

AUC PR : 0.25232 

Precision : 0.148223 

Recall : 0.780919 

F1 : 0.249154 

Total Learning Time : 10.13 

Total Inference Time : 8.455857753753662 

Total revision time: 31.378933687210086
Best scored revision CLL: -0.173446


Results 

CLL : -0.182381 

AUC ROC : 0.983813 

AUC PR : 0.25232 

Precision : 0.148223 

Recall : 0.780919 

F1 : 0.249154 

Total Learning Time : 31.4408996295929 

Total Inference Time : 8.455857753753662 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.29
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1500952438243443;  // std dev = 7.849, 298.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18262817753305177;  // std dev = 5.374, 128.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
%   | | | else return 0.22626556492043912;  // std dev = 5.132, 111.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11981480217566057;  // std dev = 4.913, 113.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
%   | | | else return 0.14239316424300566;  // std dev = 5.888, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12158320236365296;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0.10810382917322656;  // std dev = 6.741, 208.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10735067315396823;  // std dev = 7.585, 257.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0775036360611621;  // std dev = 7.643, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7365370409044998;  // std dev = 0.017, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2630445341912543;  // std dev = 0.023, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.029971907285686532;  // std dev = 4.120, 82.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
%   | | | else return 0.04335635725889747;  // std dev = 4.381, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.039633795540795075;  // std dev = 3.834, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | | | else return 0.025657893082166133;  // std dev = 6.033, 173.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.029209618548046417;  // std dev = 7.093, 281.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08197386238263063;  // std dev = 6.755, 232.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.330', 'seconds']
Parameter learned model CLL:-0.332508 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.849, 211, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.374, 84, 44], 'false,false,false,false': [5.132, 68, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.913, 78, 35], 'false,false,false,false': [5.888, 104, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.666, 41, 20], 'false,false,false,false': [6.741, 141, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.585, 170, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.643, 178, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.017, 0, 35], 'true,false': [0.023, 70, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.12, 58, 24], 'false,false,false,false': [4.381, 61, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.834, 73, 35], 'false,false,false,false': [6.033, 121, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.093, 194, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.755, 145, 87]}]
{'': [nan, 0.20671366154677795], 'false': [nan, 0.20671366154677814], 'false,false': [nan, 0.20671366154677795], 'false,false,false': [nan, 0.20671366154677814]}
{'': [nan, 0.23150855202114762], 'false': [nan, 0.23150855202114887], 'false,false': [nan, 0.23150855202114762], 'false,false,false': [0.2255859375000009, 0.23731839948056244]}
{'': [nan, 0.21871820663434563], 'false': [nan, 0.21871820663434563], 'false,false': [nan, 0.2187182066343459], 'false,false,false': [0.2136093119563028, 0.222204733819271]}
{'': [nan, 0.21893036723088807], 'false': [nan, 0.21893036723088807], 'false,false': [nan, 0.21893036723088835], 'false,false,false': [0.22037086804622472, 0.21846671079274194]}
{'': [nan, 0.22386245892850454], 'false': [nan, 0.22386245892850454], 'false,false': [nan, 0.22386245892850434], 'false,false,false': [nan, 0.22386245892850434]}
{'': [nan, 0.22045828811933407], 'false': [nan, 0.22045828811933407], 'false,false': [nan, 0.22045828811933307], 'false,false,false': [nan, 0.2204582881193348]}
{'': [0.2220443481570693, 0.21154541838213178], 'true': [8.40381122303922e-06, 7.878573022220995e-06], 'false': [nan, 0.21154541838213178], 'false,false': [nan, 0.21154541838213178], 'false,false,false': [0.2070196311719214, 0.2156293397298321], 'true,true': [nan, 8.40381122303922e-06], 'true,true,false': [nan, 8.40381122303922e-06]}
{'': [nan, 0.18189200950964815], 'false': [nan, 0.18189200950964815], 'false,false': [nan, 0.18189200950964862], 'false,false,false': [0.13608333540130998, 0.21041426021763177]}
{'': [nan, 0.1790394096898474], 'false': [nan, 0.17903940968984772], 'false,false': [nan, 0.17903940968984772], 'false,false,false': [nan, 0.17903940968984772]}
{'': [nan, 0.19665707399948557], 'false': [nan, 0.19665707399948557], 'false,false': [nan, 0.19665707399948562], 'false,false,false': [nan, 0.19665707399948562]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 25.002
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, D) )
%   | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(F, D), complex(F, C) )
%   | | | then return -0.026466449515872396;  // std dev = 1.629, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return 0.18542166237223964;  // std dev = 3.480, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.35814893509951234;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.17633075328132966;  // std dev = 5.351, 132.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.6865295387373742;  // std dev = 0.223, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( interaction(A, C) )
%   | | then return -0.15560949196779594;  // std dev = 0.161, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.3340460584707281;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.1467224949104786;  // std dev = 5.005, 118.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=37 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7478467781843479;  // std dev = 0.127, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return 0.16863387566828567;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.13110826112568572;  // std dev = 0.017, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.10734355113628458;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.27974498677939674;  // std dev = 3.333, 45.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.48932657455859974;  // std dev = 0.293, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else if ( interaction(A, F), interaction(F, C) )
%   | | then return -0.11794362413939569;  // std dev = 0.159, 35.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=1 */
%   | | else return 0.09936865516690523;  // std dev = 0.451, 138.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=40 */
%   else if ( interaction(G, A) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.5483495198089953;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, G) )
%   | | | then return -0.07318310965110301;  // std dev = 0.918, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.22762689689004195;  // std dev = 3.525, 51.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=22 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( enzyme(H, J) )
%   | | | then return 0.06163311121689917;  // std dev = 1.051, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.13528669179110295;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.01999678321479652;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( interaction(A, C), recursion_proteinclass(C, B) )
%   | then return 0.42704667420794284;  // std dev = 0.036, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.10981066723832521;  // std dev = 0.069, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.6617047026258706;  // std dev = 0.402, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, E), interaction(A, F) )
%   | | then if ( location(F, G), location(A, G) )
%   | | | then return 0.03655746849474749;  // std dev = 3.157, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | | | else return 0.13962638977390354;  // std dev = 1.379, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.14624860321305572;  // std dev = 4.179, 79.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=29 */
%   | | | else return 0.06929081964730768;  // std dev = 4.228, 89.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=27 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.32192900829389487;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6456677640645111;  // std dev = 0.155, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.746849840600508;  // std dev = 0.066, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( interaction(F, A), interaction(A, F) )
%   | | | then return -0.14077206537004383;  // std dev = 0.155, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.23736895810084804;  // std dev = 0.368, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6259208088066502;  // std dev = 0.775, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.1737089264263702;  // std dev = 0.313, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.006328377322803174;  // std dev = 4.216, 102.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=25 */
%   | | | else return 0.07658679194965917;  // std dev = 1.637, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.3060769518754076;  // std dev = 0.279, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | else if ( interaction(D, F), interaction(C, F) )
%   | | then return -0.119884458870958;  // std dev = 0.139, 36.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=1 */
%   | | else if ( complex(D, G), enzyme(A, H) )
%   | | | then return 0.06349538858652772;  // std dev = 1.343, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.30150338122559;  // std dev = 2.036, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   else if ( interaction(I, A) )
%   | then if ( interaction(J, I), interaction(J, A) )
%   | | then if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.15193270996634364;  // std dev = 1.037, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.02452088691719199;  // std dev = 2.948, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | else if ( interaction(I, M), recursion_proteinclass(M, B) )
%   | | | then return 0.6754483745985838;  // std dev = 0.475, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.22472153312062873;  // std dev = 0.173, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.01512473858923892;  // std dev = 0.337, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.2240307611857686;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.334704519892854;  // std dev = 0.219, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5488950014748442;  // std dev = 0.612, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.15827368488829824;  // std dev = 0.050, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( interaction(G, A), location(G, H) )
%   | then if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, I) )
%   | | | then return -0.07843970647192688;  // std dev = 0.288, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.012527437400554387;  // std dev = 1.639, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( phenotype(G, K), interaction(G, G) )
%   | | | then return -0.015167989888149956;  // std dev = 1.745, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.07053749940923479;  // std dev = 3.748, 91.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=34 */
%   | else return 0.22953846531036629;  // std dev = 1.069, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.23979565886512688;  // std dev = 0.105, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( enzyme(A, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.1567386227091745;  // std dev = 0.742, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.13704097761733902;  // std dev = 0.194, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( phenotype(A, G), phenotype(D, G) )
%   | | | then return -0.052551433889007654;  // std dev = 0.680, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.0694161629816865;  // std dev = 1.268, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( enzyme(A, I), complex(H, J) )
%   | | | then return 0.23279179163983413;  // std dev = 1.130, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.044899367927367775;  // std dev = 1.904, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.01827028091850526;  // std dev = 4.072, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   | | | else return 0.09571907451943781;  // std dev = 1.459, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return -0.17325926095984043;  // std dev = 0.832, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2179681148681466;  // std dev = 0.265, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | else if ( phenotype(C, G), complex(C, H) )
%   | | then return -0.03350616201445081;  // std dev = 0.285, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.07866139367172294;  // std dev = 1.494, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return -0.16270399408947644;  // std dev = 1.428, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   else if ( enzyme(A, J) )
%   | then return 0.01251399858579125;  // std dev = 0.293, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | else if ( interaction(K, A), location(K, L) )
%   | | then if ( interaction(K, K) )
%   | | | then return 0.21492119598232093;  // std dev = 1.270, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.08924597669975237;  // std dev = 2.931, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | else return -0.04403025586124287;  // std dev = 0.339, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.23918553980670662;  // std dev = 0.120, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(D, F), phenotype(D, C) )
%   | | then return -0.14389282022391947;  // std dev = 0.169, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else return -0.012742069582736597;  // std dev = 0.301, 105.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=31 */
%   else if ( interaction(A, G), phenotype(G, H) )
%   | then if ( interaction(G, I), complex(I, J) )
%   | | then return 0.041554594690183;  // std dev = 0.261, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.024863905625571024;  // std dev = 1.268, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.06187194140510308;  // std dev = 1.437, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( complex(A, M), enzyme(A, N) )
%   | | then return 0.17526452416268115;  // std dev = 0.266, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(P, A), location(P, Q) )
%   | | | then return 0.06717062704847232;  // std dev = 3.098, 68.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=26 */
%   | | | else return -0.07380143106016866;  // std dev = 0.687, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '31.480', 'seconds']
Refined model CLL: -0.2384


******************************************
Best model found
******************************************
Results 

CLL : -0.22149 

AUC ROC : 0.950628 

AUC PR : 0.294897 

Precision : 0.289225 

Recall : 0.542553 

F1 : 0.377312 

Total Learning Time : 25.002 

Total Inference Time : 17.16325092315674 

Total revision time: 50.139554206848146
Best scored revision CLL: -0.2384


Results 

CLL : -0.22149 

AUC ROC : 0.950628 

AUC PR : 0.294897 

Precision : 0.289225 

Recall : 0.542553 

F1 : 0.377312 

Total Learning Time : 50.21352333259583 

Total Inference Time : 17.16325092315674 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.591
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2059750220560347;  // std dev = 8.236, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17328689908432343;  // std dev = 5.849, 152.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
%   | | | else return 0.1623918270092313;  // std dev = 5.897, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1287174815610727;  // std dev = 5.270, 127.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=41 */
%   | | | else return 0.12958685711745577;  // std dev = 6.531, 195.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10671122209005747;  // std dev = 4.433, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
%   | | | else return 0.11314891742485854;  // std dev = 7.102, 229.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09609903660661162;  // std dev = 8.347, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08265437233703554;  // std dev = 8.320, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7087854559925004;  // std dev = 0.988, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.26738875666420864;  // std dev = 0.004, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08475703071693762;  // std dev = 3.855, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
%   | | | else return 0.0582515749876969;  // std dev = 5.195, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07254781851744001;  // std dev = 4.050, 111.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=41 */
%   | | | else return 0.03183725960941278;  // std dev = 6.580, 201.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02580546734785531;  // std dev = 7.774, 326.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02163241043290126;  // std dev = 7.751, 327.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.432', 'seconds']
Parameter learned model CLL:-0.326895 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.236, 195, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.849, 100, 52], 'false,false,false,false': [5.897, 105, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.27, 86, 41], 'false,false,false,false': [6.531, 132, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.433, 61, 29], 'false,false,false,false': [7.102, 154, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.347, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.32, 207, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.988, 1, 41], 'true,false': [0.004, 92, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.855, 42, 23], 'false,false,false,false': [5.195, 83, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.05, 70, 41], 'false,false,false,false': [6.58, 138, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.774, 222, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.751, 223, 104]}]
{'': [nan, 0.22684310018903814], 'false': [nan, 0.22684310018903642], 'false,false': [nan, 0.22684310018903814], 'false,false,false': [nan, 0.22684310018903642]}
{'': [nan, 0.22329049758591016], 'false': [nan, 0.22329049758590636], 'false,false': [nan, 0.22329049758591016], 'false,false,false': [0.2250692520775608, 0.2215100004056943]}
{'': [nan, 0.21869243325592366], 'false': [nan, 0.21869243325592366], 'false,false': [nan, 0.21869243325592255], 'false,false,false': [0.2186577134772613, 0.21871474752409228]}
{'': [nan, 0.21973434348459328], 'false': [nan, 0.21973434348459328], 'false,false': [nan, 0.2197343434845946], 'false,false,false': [0.21839506172839596, 0.2202490061176045]}
{'': [nan, 0.22116102228233767], 'false': [nan, 0.22116102228233767], 'false,false': [nan, 0.22116102228233794], 'false,false,false': [nan, 0.22116102228233794]}
{'': [nan, 0.22260263776446154], 'false': [nan, 0.22260263776446154], 'false,false': [nan, 0.22260263776446224], 'false,false,false': [nan, 0.22260263776446168]}
{'': [0.21234946561250737, 0.2227834307451358], 'false': [nan, 0.2227834307451358], 'false,false': [nan, 0.2227834307451358], 'false,false,false': [0.2286390532544378, 0.21944609689999364], 'true': [0.0232546608153596, 1.6128776553938823e-07], 'true,true': [nan, 0.0232546608153596], 'true,true,false': [nan, 0.0232546608153596]}
{'': [nan, 0.1917332702137891], 'false': [nan, 0.1917332702137891], 'false,false': [nan, 0.19173327021378986], 'false,false,false': [0.14779104619438566, 0.21541023754328129]}
{'': [nan, 0.18536154886505304], 'false': [nan, 0.18536154886505296], 'false,false': [nan, 0.18536154886505296], 'false,false,false': [nan, 0.18536154886505296]}
{'': [nan, 0.1837020101853229], 'false': [nan, 0.1837020101853229], 'false,false': [nan, 0.18370201018532292], 'false,false,false': [nan, 0.18370201018532292]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 32.115
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( complex(A, G), phenotype(A, H) )
%   | | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.14185106490048768;  // std dev = 4.94e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.10567368757475913;  // std dev = 4.337, 101.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=25 */
%   | | | else return 0.2036034805540565;  // std dev = 4.987, 110.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.06113376969862717;  // std dev = 0.386, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   else if ( phenotype(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, D) )
%   | | | then return 0.7540315814929062;  // std dev = 1.374, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.1498167484538571;  // std dev = 0.090, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.15121067868086327;  // std dev = 0.149, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.21046619746387343;  // std dev = 3.318, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.1037127114356724;  // std dev = 2.007, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.2108218756062777;  // std dev = 1.709, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, D) )
%   | | then return 0.750672044537919;  // std dev = 0.136, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5972358781446502;  // std dev = 0.123, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.149263039184813;  // std dev = 0.051, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(E, A) )
%   | | then if ( enzyme(E, F), complex(E, G) )
%   | | | then return 0.2426282309664055;  // std dev = 2.982, 48.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=22 */
%   | | | else return 0.11786122348145708;  // std dev = 5.836, 197.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=62 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.05418019294970919;  // std dev = 1.335, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.2001151796288949;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.4448390237881858;  // std dev = 0.093, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, F), phenotype(A, G) )
%   | | | then return 0.5392991040268623;  // std dev = 0.125, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.7192768256947969;  // std dev = 0.351, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.1770017051862308;  // std dev = 0.278, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( interaction(A, I), location(I, J) )
%   | | then return 0.446280265227623;  // std dev = 0.137, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5634117385909279;  // std dev = 0.134, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1230682510725927;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(K, A), interaction(A, K) )
%   | | | then return 0.1622727107084417;  // std dev = 2.836, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | | else return 0.06308926341937836;  // std dev = 4.895, 150.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=42 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then if ( complex(E, F) )
%   | | then return 0.5157030627634777;  // std dev = 0.152, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.20883774908340155;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, D) )
%   | | then return -0.15257194587900128;  // std dev = 0.193, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.010118059323777016;  // std dev = 0.276, 67.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=16 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.4441375036721675;  // std dev = 0.369, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.07291141831019274;  // std dev = 1.672, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.27025428987927946;  // std dev = 2.150, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.10592662257272455;  // std dev = 3.146, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   | | | else return 0.04976078549585582;  // std dev = 3.265, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.22036696340945472;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, D) )
%   | | then return 0.4558892274228494;  // std dev = 0.316, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.30607673900913873;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.14895355684024905;  // std dev = 0.496, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3569900427535533;  // std dev = 0.245, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( location(A, G), complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4852511814784229;  // std dev = 0.525, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.15518414938627412;  // std dev = 0.462, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return 0.010637247807004131;  // std dev = 3.038, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | | | else return 0.09517677435258967;  // std dev = 4.421, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(E, F) )
%   | | | then return -0.011957296144227284;  // std dev = 0.560, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2719330470331085;  // std dev = 0.352, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.2954204162845476;  // std dev = 0.096, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.3993192043029279;  // std dev = 0.652, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.13693878258082195;  // std dev = 0.054, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( interaction(A, A) )
%   | then return -0.09552021553902741;  // std dev = 0.108, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2712723427704603;  // std dev = 0.202, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A), interaction(A, I) )
%   | | | then return 0.13385686192720808;  // std dev = 2.112, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.048907348831963314;  // std dev = 4.883, 154.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=49 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, D), complex(D, F) )
%   | | then if ( recursion_proteinclass(C, B) )
%   | | | then return 0.011469935953646426;  // std dev = 0.875, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.48633609520345294;  // std dev = 0.772, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.05664432850815067;  // std dev = 0.293, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else return -0.10161751734766966;  // std dev = 0.241, 111.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=15 */
%   else if ( enzyme(A, G), location(A, H) )
%   | then return 0.014822032674264967;  // std dev = 0.267, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( complex(A, J) )
%   | | | then return -0.08983743520161556;  // std dev = 0.410, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.09199354247546504;  // std dev = 3.283, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.04221776977933951;  // std dev = 0.425, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2483777538321451;  // std dev = 1.748, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(A, C), phenotype(A, E) )
%   | | then return 0.1443078675171784;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.07596486200540882;  // std dev = 0.603, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, F), complex(C, F) )
%   | | then return 0.1977270521212244;  // std dev = 0.120, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.24102852100722139;  // std dev = 0.128, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.0809342634859065;  // std dev = 0.074, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( location(A, G), enzyme(A, H) )
%   | | then if ( location(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.2674360991353953;  // std dev = 1.619, 34.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | | | else return -0.15033870961941082;  // std dev = 0.428, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( location(A, J), complex(A, K) )
%   | | | then return -0.02281895591044453;  // std dev = 1.669, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | | else return 0.015832677446967452;  // std dev = 4.756, 136.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=42 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then return 0.22210703564440498;  // std dev = 0.095, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12476210410833409;  // std dev = 0.088, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( location(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, A) )
%   | | | then return -0.15720593462103982;  // std dev = 0.699, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4253539239644169;  // std dev = 0.344, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.18866811814968054;  // std dev = 0.056, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5000095039828969;  // std dev = 1.159, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.25413124466168685;  // std dev = 0.132, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return -0.036014871698500546;  // std dev = 1.698, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.03280254969015584;  // std dev = 3.346, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '27.194', 'seconds']
Refined model CLL: -0.204905


******************************************
Best model found
******************************************
Results 

CLL : -0.205129 

AUC ROC : 0.975221 

AUC PR : 0.490227 

Precision : 0.448276 

Recall : 0.637736 

F1 : 0.52648 

Total Learning Time : 32.115 

Total Inference Time : 34.38395595550537 

Total revision time: 75.8939518032074
Best scored revision CLL: -0.204905


Results 

CLL : -0.205129 

AUC ROC : 0.975221 

AUC PR : 0.490227 

Precision : 0.448276 

Recall : 0.637736 

F1 : 0.52648 

Total Learning Time : 75.96792092895508 

Total Inference Time : 34.38395595550537 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.369
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17870642638871098;  // std dev = 7.906, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1795680467607178;  // std dev = 5.781, 148.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=51 */
%   | | | else return 0.13424352515882254;  // std dev = 5.360, 137.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13266504112746658;  // std dev = 5.466, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
%   | | | else return 0.18413744571273166;  // std dev = 5.490, 129.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.08620647338789507;  // std dev = 4.270, 87.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=26 */
%   | | | else return 0.14237346937680798;  // std dev = 6.517, 185.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10143196928518407;  // std dev = 7.807, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09614633491853652;  // std dev = 7.732, 262.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.735134917496028;  // std dev = 0.007, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.26488467550269573;  // std dev = 0.010, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.11778604882140158;  // std dev = 3.863, 62.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=25 */
%   | | | else return 0.07219906913693988;  // std dev = 3.871, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07041312820306593;  // std dev = 4.177, 120.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | | | else return 0.02583056288815731;  // std dev = 5.685, 147.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04283538839109838;  // std dev = 6.998, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01610343500276992;  // std dev = 7.079, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.229', 'seconds']
Parameter learned model CLL:-0.336355 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.906, 195, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.781, 97, 51], 'false,false,false,false': [5.36, 96, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.466, 93, 44], 'false,false,false,false': [5.49, 81, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.27, 61, 26], 'false,false,false,false': [6.517, 119, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.807, 181, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.732, 170, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.007, 0, 44], 'true,false': [0.01, 98, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.863, 37, 25], 'false,false,false,false': [3.871, 43, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.177, 76, 44], 'false,false,false,false': [5.685, 99, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.998, 171, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.079, 189, 92]}]
{'': [nan, 0.21780038606757518], 'false': [nan, 0.2178003860675749], 'false,false': [nan, 0.21780038606757518], 'false,false,false': [nan, 0.2178003860675749]}
{'': [nan, 0.21860264696829693], 'false': [nan, 0.21860264696829804], 'false,false': [nan, 0.21860264696829693], 'false,false,false': [0.22584915997078137, 0.20970749640364458]}
{'': [nan, 0.22628182207052291], 'false': [nan, 0.22628182207052291], 'false,false': [nan, 0.22628182207052214], 'false,false,false': [0.21806444585462145, 0.23364425806776798]}
{'': [nan, 0.22387013680369883], 'false': [nan, 0.22387013680369883], 'false,false': [nan, 0.2238701368036979], 'false,false,false': [0.20953890870656613, 0.22960063718504087]}
{'': [nan, 0.22327823842256547], 'false': [nan, 0.22327823842256547], 'false,false': [nan, 0.22327823842256556], 'false,false,false': [nan, 0.22327823842256556]}
{'': [nan, 0.2281621444694186], 'false': [nan, 0.2281621444694186], 'false,false': [nan, 0.22816214446941957], 'false,false,false': [nan, 0.22816214446941882]}
{'': [0.21385592223249802, 0.23414562427809998], 'false': [nan, 0.23414562427809998], 'false,false': [nan, 0.23414562427809998], 'false,false,false': [0.2406347554630589, 0.22704315886134072], 'true': [1.0783999070698966e-06, 1.0855401803034247e-06], 'true,true': [nan, 1.0783999070698966e-06], 'true,true,false': [nan, 1.0783999070698966e-06]}
{'': [nan, 0.18689627582983276], 'false': [nan, 0.18689627582983276], 'false,false': [nan, 0.18689627582983265], 'false,false,false': [0.14541288196369767, 0.21986696514616527]}
{'': [nan, 0.18618732263751406], 'false': [nan, 0.18618732263751517], 'false,false': [nan, 0.18618732263751517], 'false,false,false': [nan, 0.18618732263751517]}
{'': [nan, 0.17835559542116616], 'false': [nan, 0.17835559542116616], 'false,false': [nan, 0.1783555954211655], 'false,false,false': [nan, 0.1783555954211655]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.034
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( phenotype(D, F) )
%   | | | then return 0.04419544672741935;  // std dev = 2.552, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.13771882757262968;  // std dev = 4.328, 93.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=26 */
%   | | | else return 0.2166395011372478;  // std dev = 4.937, 106.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return -0.06262055496169219;  // std dev = 1.339, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | | else return 0.11475680971042776;  // std dev = 4.419, 97.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=27 */
%   | | else if ( interaction(H, A), enzyme(A, I) )
%   | | | then return 0.22583907657952487;  // std dev = 2.462, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.13344929703103023;  // std dev = 4.809, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, D) )
%   | | then if ( interaction(A, A), complex(A, E) )
%   | | | then return -0.2273673407388249;  // std dev = 0.266, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.15678531637596174;  // std dev = 0.082, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(F, C), enzyme(F, D) )
%   | | | then return 0.21103725759564146;  // std dev = 1.363, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.045717756585933605;  // std dev = 1.518, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14300831985313459;  // std dev = 0.061, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, H), interaction(A, I) )
%   | | | then return 0.26126432046221204;  // std dev = 2.888, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.1531614213042332;  // std dev = 5.914, 160.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=55 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4973404389699012;  // std dev = 0.089, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( complex(F, H), interaction(F, F) )
%   | | | then return 0.08713756937744231;  // std dev = 1.880, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return -0.06971134235898732;  // std dev = 1.612, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return 0.16363084601401473;  // std dev = 2.818, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0.06142860524114583;  // std dev = 6.095, 188.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=51 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3763745662948241;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.6410981683231619;  // std dev = 0.374, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(E, F), interaction(A, G) )
%   | | | then return -0.09054196295089441;  // std dev = 1.439, 36.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | | else return 0.06278298027041117;  // std dev = 5.022, 125.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.6930929615769893;  // std dev = 0.409, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.22730233849454623;  // std dev = 0.065, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return -0.034771175634199916;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.1988828415649157;  // std dev = 3.891, 64.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=28 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.2551722425694894;  // std dev = 1.83e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.29330816811932114;  // std dev = 0.070, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.43618483078005904;  // std dev = 0.439, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.16614583078517223;  // std dev = 0.226, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.038935977162306554;  // std dev = 4.426, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(I, G), phenotype(I, J) )
%   | | | then return 0.02070132835804317;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.07683043265051576;  // std dev = 0.936, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.2669004044066278;  // std dev = 1.413, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.11095130845102749;  // std dev = 4.716, 101.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=36 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5525547496636531;  // std dev = 0.245, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.21978887872964903;  // std dev = 0.078, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( enzyme(A, F) )
%   | | then if ( complex(E, G) )
%   | | | then return 0.08534480147666094;  // std dev = 0.670, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.01943091975496549;  // std dev = 0.256, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.3185908153686779;  // std dev = 1.209, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5680880056604839;  // std dev = 1.537, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.25819952770073934;  // std dev = 0.089, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.0787651020569686;  // std dev = 2.829, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return -0.0351578618538424;  // std dev = 3.047, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.14858351894392066;  // std dev = 0.050, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( location(D, E), location(A, E) )
%   | | then if ( enzyme(D, F) )
%   | | | then return -0.07844948838662424;  // std dev = 0.015, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.007168125924714466;  // std dev = 0.719, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(D, D) )
%   | | | then return -0.11338313669882609;  // std dev = 0.491, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.1529306720352864;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( enzyme(A, I), complex(A, H) )
%   | | | then return -0.02760148137705249;  // std dev = 1.307, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.07843560385415357;  // std dev = 3.552, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return -0.04112460359545139;  // std dev = 1.901, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.023358421586917415;  // std dev = 4.612, 121.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=37 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.14141975853781782;  // std dev = 0.038, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(A, E), complex(A, F) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.002680322574980698;  // std dev = 0.738, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2522581946894905;  // std dev = 1.213, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( complex(A, I), complex(D, I) )
%   | | | then return -0.10477828842870175;  // std dev = 0.374, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.07093528139269907;  // std dev = 2.022, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(L, J), phenotype(L, M) )
%   | | | then return 0.12371079004354614;  // std dev = 1.309, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.09145656186229886;  // std dev = 1.235, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else if ( interaction(A, N), recursion_proteinclass(N, B) )
%   | | | then return 0.14954493228246357;  // std dev = 0.150, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.008647769254478173;  // std dev = 5.421, 189.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=53 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( complex(A, E), interaction(A, C) )
%   | then return -0.029157012767188805;  // std dev = 0.130, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else if ( complex(C, F), interaction(C, C) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.03184976198648589;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.44911909450310555;  // std dev = 0.832, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(C, H), interaction(I, C) )
%   | | | then return 0.07892769819704487;  // std dev = 2.756, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | | else return 0.021710213922008604;  // std dev = 3.985, 108.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=37 */
%   else if ( enzyme(A, J), interaction(K, A) )
%   | then return -0.09869798789106095;  // std dev = 0.270, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( location(A, L), enzyme(A, M) )
%   | | then return 0.055097670558183404;  // std dev = 0.351, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return -0.049139308063207286;  // std dev = 2.097, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.01924105697648786;  // std dev = 2.450, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.198', 'seconds']
Refined model CLL: -0.274083


******************************************
Best model found
******************************************
Results 

CLL : -0.253043 

AUC ROC : 0.955372 

AUC PR : 0.159096 

Precision : 0.158172 

Recall : 0.32491 

F1 : 0.212766 

Total Learning Time : 15.034 

Total Inference Time : 6.964505195617676 

Total revision time: 30.035519483566283
Best scored revision CLL: -0.274083


Results 

CLL : -0.253043 

AUC ROC : 0.955372 

AUC PR : 0.159096 

Precision : 0.158172 

Recall : 0.32491 

F1 : 0.212766 

Total Learning Time : 30.109488609313964 

Total Inference Time : 6.964505195617676 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.235
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.200778417171226;  // std dev = 7.519, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16739343344651966;  // std dev = 5.878, 155.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=52 */
%   | | | else return 0.15883263940185463;  // std dev = 4.784, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16662035577126347;  // std dev = 4.236, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | | else return 0.1571519659293456;  // std dev = 6.143, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10750750451236095;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.1256952927664451;  // std dev = 6.631, 195.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08585889562689117;  // std dev = 7.615, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05692586493525414;  // std dev = 7.687, 275.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7333754754544138;  // std dev = 0.005, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2664999791923926;  // std dev = 0.006, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05900773952009828;  // std dev = 4.714, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
%   | | | else return 0.04645005444213263;  // std dev = 4.146, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.024249653729737794;  // std dev = 3.465, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   | | | else return 0.05199466057722369;  // std dev = 6.235, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.038858747296549784;  // std dev = 7.105, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03547627008887167;  // std dev = 7.065, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.527', 'seconds']
Parameter learned model CLL:-0.337401 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.519, 165, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.878, 103, 52], 'false,false,false,false': [4.784, 70, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.236, 50, 28], 'false,false,false,false': [6.143, 108, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.574, 39, 19], 'false,false,false,false': [6.631, 128, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.615, 178, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.687, 189, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.005, 0, 28], 'true,false': [0.006, 47, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.714, 68, 33], 'false,false,false,false': [4.146, 55, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.465, 63, 28], 'false,false,false,false': [6.235, 118, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.105, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.065, 174, 86]}]
{'': [nan, 0.22523452008698358], 'false': [nan, 0.2252345200869833], 'false,false': [nan, 0.22523452008698358], 'false,false,false': [nan, 0.2252345200869833]}
{'': [nan, 0.22179156542090858], 'false': [nan, 0.22179156542090772], 'false,false': [nan, 0.22179156542090858], 'false,false,false': [0.22293444328824008, 0.22004437869822355]}
{'': [nan, 0.22822618994236557], 'false': [nan, 0.22822618994236557], 'false,false': [nan, 0.2282261899423651], 'false,false,false': [0.23008857881645328, 0.2273224328193376]}
{'': [nan, 0.22436705617539526], 'false': [nan, 0.22436705617539526], 'false,false': [nan, 0.22436705617539524], 'false,false,false': [0.220273483947682, 0.22550879693070544]}
{'': [nan, 0.2196474528039419], 'false': [nan, 0.2196474528039419], 'false,false': [nan, 0.2196474528039416], 'false,false,false': [nan, 0.2196474528039416]}
{'': [nan, 0.21487373716505972], 'false': [nan, 0.21487373716505972], 'false,false': [nan, 0.21487373716506053], 'false,false,false': [nan, 0.21487373716506109]}
{'': [0.2338979949161496, 0.21774785329650467], 'true': [7.741201606086585e-07, 6.748106139785769e-07], 'false': [nan, 0.21774785329650467], 'false,false': [nan, 0.21774785329650467], 'false,false,false': [0.21997843348691395, 0.2148437499999996], 'true,true': [nan, 7.741201606086585e-07], 'true,true,false': [nan, 7.741201606086585e-07]}
{'': [nan, 0.1907637051498405], 'false': [nan, 0.1907637051498405], 'false,false': [nan, 0.19076370514984034], 'false,false,false': [0.13197080942447864, 0.22089994332640578]}
{'': [nan, 0.19192508217946047], 'false': [nan, 0.191925082179461], 'false,false': [nan, 0.191925082179461], 'false,false,false': [nan, 0.191925082179461]}
{'': [nan, 0.19199877189713888], 'false': [nan, 0.19199877189713888], 'false,false': [nan, 0.1919987718971387], 'false,false,false': [nan, 0.1919987718971387]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 18.935
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, E), phenotype(C, F) )
%   | | then if ( interaction(G, A), phenotype(G, F) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.35814893509951223;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(C, A) )
%   | | | then return -0.030739953789376676;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.08621911053810886;  // std dev = 3.168, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.3875606998053947;  // std dev = 2.910, 34.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=18 */
%   | | | else return 0.20128619000147188;  // std dev = 4.795, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.7879296774297503;  // std dev = 0.137, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, C) )
%   | | then return -0.14283349876074097;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, F), interaction(F, C) )
%   | | | then return -0.19584959975371008;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.12749972665878476;  // std dev = 3.016, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7103994569080119;  // std dev = 0.237, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( complex(A, H), phenotype(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8074441736143714;  // std dev = 0.103, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.16998817701766888;  // std dev = 0.118, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14405334793289273;  // std dev = 0.082, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.1900857963101265;  // std dev = 5.484, 132.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=48 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), enzyme(F, D) )
%   | | then return 0.666444796468996;  // std dev = 0.164, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7863995154935011;  // std dev = 0.173, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.19908587779514564;  // std dev = 0.136, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H) )
%   | | then if ( enzyme(H, I) )
%   | | | then return 0.697647250827623;  // std dev = 0.207, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.554405733505492;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.30205014055586915;  // std dev = 0.753, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11732274430952118;  // std dev = 0.059, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.06667183875538671;  // std dev = 3.228, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
%   | | | else return 0.14821418951799656;  // std dev = 4.879, 108.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=38 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5140820174765541;  // std dev = 0.119, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, A), location(A, F) )
%   | | then if ( enzyme(D, G), complex(A, H) )
%   | | | then return 0.09479172341976354;  // std dev = 0.574, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08840845770746092;  // std dev = 1.268, 32.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.18771967110499072;  // std dev = 1.621, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.015874365230311452;  // std dev = 3.745, 92.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( phenotype(A, M) )
%   | | | then return 0.1330827010759074;  // std dev = 3.147, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | | else return 0.21494412828548895;  // std dev = 2.714, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.09123378756430406;  // std dev = 1.705, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.07390251691883419;  // std dev = 1.297, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.5182503254242588;  // std dev = 0.192, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(C, A) )
%   | | then return -0.16626592898180384;  // std dev = 0.068, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.4912272888044474;  // std dev = 0.245, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.032407645329950406;  // std dev = 3.732, 87.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.34576644556892233;  // std dev = 0.312, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( complex(H, I), enzyme(H, J) )
%   | | | then return 0.32821553134745496;  // std dev = 1.313, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.03228410995026819;  // std dev = 3.428, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.12630112579812355;  // std dev = 2.258, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.26973252566248634;  // std dev = 1.564, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then return 0.26174167766692186;  // std dev = 0.366, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.6221989853382851;  // std dev = 0.129, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.21001759309309542;  // std dev = 0.043, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.1809458226046281;  // std dev = 0.750, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.15140899267767047;  // std dev = 0.930, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.015768682459765978;  // std dev = 2.263, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.3327591010666258;  // std dev = 0.112, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return -0.027876081993730366;  // std dev = 3.215, 78.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=15 */
%   | | | else return 0.03650886020709004;  // std dev = 3.426, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.49957807899674034;  // std dev = 0.208, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.1608038250670343;  // std dev = 0.058, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.38493394433493133;  // std dev = 0.210, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(F, H), phenotype(F, I) )
%   | | | then return -0.05375869673639085;  // std dev = 1.891, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | | else return 0.11079354645268534;  // std dev = 1.906, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | else if ( location(A, J), interaction(A, K) )
%   | | then if ( phenotype(K, L), location(K, J) )
%   | | | then return -0.10611689152336237;  // std dev = 1.513, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.10555837201316831;  // std dev = 1.308, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.007679385628600597;  // std dev = 3.417, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | | | else return 0.17952105872347435;  // std dev = 1.420, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(C, E) )
%   | | then return 0.12729528796010645;  // std dev = 0.090, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.09710608506315761;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, F), interaction(F, C) )
%   | | then return 0.22534370686630495;  // std dev = 0.154, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3625929347407642;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.38738354503529643;  // std dev = 0.351, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( phenotype(H, J), interaction(H, H) )
%   | | | then return 0.12752266781078936;  // std dev = 1.000, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.0335204345925022;  // std dev = 2.987, 86.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=18 */
%   | | else if ( complex(A, K), interaction(A, L) )
%   | | | then return 0.30966049324338857;  // std dev = 0.897, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.05141374486597625;  // std dev = 4.337, 114.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=38 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(C, D), interaction(A, E) )
%   | then return 2.559044242485285E-5;  // std dev = 0.246, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | else if ( interaction(F, D), phenotype(C, G) )
%   | | then return 0.17348113783236427;  // std dev = 0.394, 43.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=22 */
%   | | else if ( enzyme(C, H) )
%   | | | then return 0.19793265866011542;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.01938297120589176;  // std dev = 2.455, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   else if ( location(A, I) )
%   | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, J), interaction(L, K) )
%   | | | then return 0.13299908239012542;  // std dev = 1.957, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.47557069158852433;  // std dev = 0.922, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return -0.22870494233669597;  // std dev = 0.051, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( interaction(A, M) )
%   | | then return -0.1978975314941994;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.015438108160016525;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then return -0.19506800667328883;  // std dev = 0.698, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.1482480530061895;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09932422112671455;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2971229382017641;  // std dev = 0.301, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.09345184660441722;  // std dev = 0.019, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( location(A, J), location(I, J) )
%   | | | then return 0.08675264944549321;  // std dev = 1.601, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return -0.023272774663296542;  // std dev = 0.852, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( location(A, K), enzyme(A, L) )
%   | | | then return -0.014733196065930172;  // std dev = 2.195, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return 0.015183592916897857;  // std dev = 4.463, 121.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '39.284', 'seconds']
Refined model CLL: -0.251208


******************************************
Best model found
******************************************
Results 

CLL : -0.256799 

AUC ROC : 0.930708 

AUC PR : 0.301741 

Precision : 0.322296 

Recall : 0.515901 

F1 : 0.396739 

Total Learning Time : 18.935 

Total Inference Time : 9.18650507926941 

Total revision time: 35.5843500328064
Best scored revision CLL: -0.251208


Results 

CLL : -0.256799 

AUC ROC : 0.930708 

AUC PR : 0.301741 

Precision : 0.322296 

Recall : 0.515901 

F1 : 0.396739 

Total Learning Time : 35.65831915855408 

Total Inference Time : 9.18650507926941 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.866
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1331489350995109;  // std dev = 4.891, 120.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=33 */
%   | | | else return 0.1739384087837216;  // std dev = 4.963, 114.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4337591264966688;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7008924681753459;  // std dev = 3.078, 80.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=69 */
%   | | | else return -0.16123149319173125;  // std dev = 0.036, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   | | else if ( location(A, I) )
%   | | | then return 0.1984370037002396;  // std dev = 1.599, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4672528713467739;  // std dev = 0.898, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.37435907388108597;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08140874446483355;  // std dev = 4.376, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.637075984805635;  // std dev = 1.666, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.1474213019002007;  // std dev = 0.299, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04305082192770934;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.06931869233742197;  // std dev = 1.364, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.38682534708152505;  // std dev = 0.930, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.5102083479884587;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4085175413017027;  // std dev = 1.996, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else return 0.04685160986773915;  // std dev = 5.007, 227.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5381902121965623;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.1085979162968594;  // std dev = 1.658, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3525022536722135;  // std dev = 0.035, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2325211995355468;  // std dev = 0.890, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.10259765287615542;  // std dev = 5.247, 212.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4048899000731413;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.26705664215610864;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.015250258133975193;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2876113297557448;  // std dev = 0.101, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.22380569009003112;  // std dev = 0.588, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3121641277083347;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.002021025769147585;  // std dev = 2.351, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.02773311301977479;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05367684707240154;  // std dev = 4.816, 184.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=55 */
%   | | | else return 0.01999213407446254;  // std dev = 1.941, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2644315595711402;  // std dev = 0.221, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24933066279143556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5270639279588063;  // std dev = 1.460, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.18254762059958143;  // std dev = 0.486, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3802207442731896;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06538029123685306;  // std dev = 3.936, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1770817011735204;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.10723107293167151;  // std dev = 0.906, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.38710809079017594;  // std dev = 2.863, 82.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=71 */
%   | | else return -0.1535814798705254;  // std dev = 0.215, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2056226442731699;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.09696832228526646;  // std dev = 1.367, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17548254717157477;  // std dev = 0.131, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20236854052853911;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.015873280634429134;  // std dev = 1.593, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.134411843465179;  // std dev = 0.698, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.0492050176182018;  // std dev = 1.551, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.27371378924783246;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04349778966185436;  // std dev = 3.334, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
%   | | | else return -4.364469604725733E-4;  // std dev = 1.450, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13675263948798796;  // std dev = 0.035, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.25744167271459895;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.21710339930618822;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.17179444126027996;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.01683590142277422;  // std dev = 2.368, 117.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=29 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.029866626484739534;  // std dev = 0.875, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02534697887060812;  // std dev = 3.331, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
%   | | | else return -0.0364027643917207;  // std dev = 1.504, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.894', 'seconds']
Parameter learned model CLL:-0.198491 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.891, 87, 33], 'false,false,true,false': [4.963, 78, 36], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.247, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.195, 2, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.078, 11, 69], 'false,false,true,false': [0.036, 169, 0], 'false,false,false,true': [1.599, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.898, 1, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [4.376, 92, 34], 'false,true,false,true': [1.666, 3, 37], 'false,true,false,false': [0.299, 75, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.225, 6, 2], 'false,false,false,true': [1.364, 8, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.93, 1, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.996, 6, 14], 'false,true,false': [5.007, 170, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.658, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.035, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.89, 1, 4], 'false,true': [5.247, 141, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.247, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.101, 0, 7], 'true,true,false': [0.588, 1, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.351, 41, 12], 'false,false,true': [1.1, 2, 3], 'false,false,false,true': [4.816, 129, 55], 'false,false,false,false': [1.941, 16, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.221, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.46, 3, 33], 'true,false': [0.486, 93, 0], 'false,true': [0.018, 0, 3], 'false,false,true': [3.936, 87, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.906, 1, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.863, 11, 71], 'false,true,false': [0.215, 141, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.367, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.131, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.049, 0, 3], 'false,true,true': [1.593, 30, 11], 'false,true,false,true': [0.698, 2, 1], 'false,true,false,false': [1.551, 30, 17], 'false,false,true': [0.015, 0, 3], 'false,false,false,true': [3.334, 82, 40], 'false,false,false,false': [1.45, 11, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.035, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.044, 0, 3], 'false,true': [2.368, 88, 29], 'false,false,true': [0.875, 1, 3], 'false,false,false,true': [3.331, 90, 40], 'false,false,false,false': [1.504, 13, 4]}]
{'': [-1.6148698540002277e-16, 0.21063240110859177], 'false': [0.18750000000000006, 0.20771006763787855], 'false,false': [0.20792241946088127, 0.20408163265306106], 'false,false,true': [0.1993750000000013, 0.21606648199446105], 'false,false,false': [0.24000000000000005, 0.17283950617283952], 'false,true': [0.0, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.1301775147928995, 0.20352093364342017], 'false': [0.0, 0.20175978653963747], 'false,false': [0.2001188902744401, 0.2323568041600021], 'false,false,false': [0.2323568041600021, nan], 'false,false,true': [0.11839415455060234, 7.493131301059539e-06], 'true': [7.401486830834377e-17, 0.20408163265306117], 'false,true': [0.0, nan]}
{'': [0.12156269843712979, 0.15994405157334027], 'false': [0.158456596088865, 0.17700328657937714], 'false,false': [0.18750000000000003, 0.16907878643903973], 'false,false,true': [nan, 0.18750000000000003], 'false,false,false': [0.16907878643903973, nan], 'false,true': [0.15199186689603347, 0.16452573255753222], 'false,true,false': [0.06940196026266907, 0.0011937179499847013], 'true': [0.08960207488890164, 0.1875]}
{'': [0.07320499502122564, 0.13193398813495175], 'false': [0.12737662245577858, 0.2085653137194073], 'false,false': [0.0, 0.21142668934038972], 'false,false,false': [0.21142668934038972, nan], 'false,true': [0.19924416194370495, 0.11045340567415718], 'false,true,true': [nan, 0.19924416194370495], 'true': [0.07859138082587651, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.06954425394703635, 0.134291135416956], 'false': [0.12984028901024508, 0.20154476348009734], 'false,false': [0.0, 0.21008789706187633], 'false,false,false': [0.25, 0.17283950617283955], 'true': [0.00017348657747735214, 0.1582659804759007], 'true,true': [0.00017348657747735214, nan], 'false,false,true': [nan, 0.0]}
{'': [0.03067424949818982, 0.1282279041491824], 'false': [0.10424703760646652, 0.13374447600668238], 'false,false': [0.24184461273629365, 0.13097720772460705], 'false,false,false': [0.12604404999727722, 0.17122286246048213], 'true': [0.033272773836206256, 0.0], 'true,true': [0.0014513152961413184, 0.08636958832022383], 'true,false': [nan, 0.0]}
{'': [0.11504477502660858, 0.12137856384973177], 'false': [0.00010564729291131132, 0.12195578970172473], 'false,false': [0.12195578970172473, nan], 'true': [0.05887587394776995, 0.002540392401018769], 'true,true': [0.004472261666123568, 0.05918673036122627], 'true,true,false': [nan, 0.05918673036122622], 'true,true,true': [0.004898757188776715, 0.0]}
{'': [0.06966441922965819, 0.10774950289141653], 'false': [0.10493659066448514, 0.1565165580305563], 'false,false': [0.0, 0.16976152255944657], 'false,false,false': [0.16976152255944657, nan], 'false,true': [0.09996496306697668, 0.00032875563508898625], 'false,true,true': [nan, 0.09996496306697648], 'true': [0.0, 0.13688928332642591], 'false,false,true': [0.0, nan]}
{'': [0.0019250123743802376, 0.08245225848640704], 'false': [0.061418190260787174, 0.09577238132260533], 'false,false': [7.46812027822008e-05, 0.09668429347177519], 'false,false,false': [0.09112431079537392, 0.14018660640281527], 'false,true': [0.06186697367765092, 0.05973340180392712], 'false,true,false': [0.16239295139549995, 0.05115775549550757], 'true': [0.0021444626127419125, 0.00081409781962855], 'true,false': [nan, 0.00081409781962855]}
{'': [0.012101304765361079, 0.07415189621478267], 'false': [0.047925646573584633, 0.09397508058510595], 'false,false': [0.19154902446104083, 0.09125878971422267], 'false,false,false': [0.08536062935995711, 0.13299030084570151], 'true': [0.014994602262436145, 0.0006353042567881542], 'true,true': [0.001744669401929199, 0.0], 'true,true,true': [0.00017317754527233182, 0.0], 'true,true,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 17.047
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( location(A, I) )
%   | | | then return 0.05814893509951236;  // std dev = 2.828, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.11078051404688011;  // std dev = 4.235, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | | else return 0.20636322081379702;  // std dev = 5.042, 112.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=39 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, E), location(A, F) )
%   | | then return -0.03052658778904556;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7008195458052027;  // std dev = 3.070, 80.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=69 */
%   | | | else return -0.16035290702254376;  // std dev = 0.106, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.037966856375334736;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.3376243222375657;  // std dev = 1.230, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.5766447772343634;  // std dev = 0.056, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.30536643674628444;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14315210934012718;  // std dev = 0.175, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.11598707286160943;  // std dev = 4.226, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.57404126583708;  // std dev = 2.260, 43.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=37 */
%   | | | else return -0.14187198120227443;  // std dev = 0.055, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.18014569835418165;  // std dev = 0.984, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.11969793650988302;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.04439029558815888;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3672990626829812;  // std dev = 0.249, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.4792647031913866;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.5665086782233302;  // std dev = 0.797, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.04169550096774573;  // std dev = 4.169, 142.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=35 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.2439140549341158;  // std dev = 1.180, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.10169932140513845;  // std dev = 3.184, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.510556419649205;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.088293800948862;  // std dev = 1.470, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.13565032711406577;  // std dev = 0.947, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then return 0.3360426950186965;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.36854428376175535;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.372063136907659;  // std dev = 0.156, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, A), location(H, I) )
%   | | then if ( complex(A, J), complex(H, K) )
%   | | | then return 0.03724506903301305;  // std dev = 3.123, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   | | | else return 0.08485309332290221;  // std dev = 4.436, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
%   | | else return -0.00863900614585063;  // std dev = 0.271, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.38501289678999095;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.12783123719552428;  // std dev = 0.940, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.1787945849770156;  // std dev = 1.342, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.25529737856524676;  // std dev = 0.182, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.16476920933898384;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07926485922997065;  // std dev = 1.737, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( phenotype(D, F) )
%   | | | then return -0.14162828692136037;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.03184833578314578;  // std dev = 1.275, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), enzyme(H, I) )
%   | | | then return 0.07762833843882475;  // std dev = 4.939, 177.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=59 */
%   | | | else return -0.041636461429702794;  // std dev = 1.053, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.033836868026512874;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2413989187107355;  // std dev = 1.005, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2557795568775141;  // std dev = 0.068, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.5879146590860048;  // std dev = 0.330, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.7359145353111973;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.16564891222778286;  // std dev = 0.035, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.30463368067029045;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.022061213143079593;  // std dev = 1.533, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.1334910189309186;  // std dev = 1.762, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.08102888611015863;  // std dev = 3.095, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   | | | else return 0.29583975585716155;  // std dev = 0.563, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18389599946174306;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2198666136100706;  // std dev = 0.123, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.31315779960568096;  // std dev = 2.059, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.4389750923867581;  // std dev = 1.600, 56.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=53 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.14101414239758778;  // std dev = 0.194, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return -0.17603506018725068;  // std dev = 0.240, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return -0.3263393907152981;  // std dev = 0.749, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.03826347802316156;  // std dev = 0.981, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.06769067822537779;  // std dev = 0.953, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17449447596863127;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.053046017485141275;  // std dev = 0.509, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(A, G), phenotype(A, I) )
%   | | | then return -0.13267136705250304;  // std dev = 0.649, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.003016077391176144;  // std dev = 1.356, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( interaction(A, J), interaction(J, A) )
%   | | | then return -0.017809638653612382;  // std dev = 1.235, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.05904709240288574;  // std dev = 1.226, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.2013325887039529;  // std dev = 1.123, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.018900495424334352;  // std dev = 3.349, 122.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=38 */
%   | | | else return 0.06457117016663283;  // std dev = 1.451, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16161058728458555;  // std dev = 0.046, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F) )
%   | | then if ( recursion_proteinclass(F, B), interaction(F, G) )
%   | | | then return 0.25896512837332825;  // std dev = 0.969, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.07306378061776962;  // std dev = 1.648, 68.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=9 */
%   | | else if ( interaction(H, D), phenotype(H, E) )
%   | | | then return -0.03244643527562222;  // std dev = 1.211, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.11540637990484508;  // std dev = 0.713, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( interaction(I, I) )
%   | | | then return 0.07089374146956791;  // std dev = 1.921, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.010148560827020274;  // std dev = 3.008, 115.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=38 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.14089211497121776;  // std dev = 0.690, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.051798286006175615;  // std dev = 0.453, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '37.544', 'seconds']
Refined model CLL: -0.19903


******************************************
Best model found
******************************************
Results 

CLL : -0.200102 

AUC ROC : 0.986426 

AUC PR : 0.299074 

Precision : 0.171271 

Recall : 0.769504 

F1 : 0.280181 

Total Learning Time : 17.047 

Total Inference Time : 23.103981018066406 

Total revision time: 60.9976357345581
Best scored revision CLL: -0.198491


Results 

CLL : -0.200102 

AUC ROC : 0.986426 

AUC PR : 0.299074 

Precision : 0.171271 

Recall : 0.769504 

F1 : 0.280181 

Total Learning Time : 61.080605638504025 

Total Inference Time : 23.103981018066406 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.452
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.084426307362285;  // std dev = 4.897, 137.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=31 */
%   | | | else return 0.1663681131817033;  // std dev = 5.579, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.018148935099512268;  // std dev = 1.833, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5662981019239743;  // std dev = 1.313, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5248758688173282;  // std dev = 1.194, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6674888494485568;  // std dev = 3.630, 92.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   | | | else return -0.1583293451384537;  // std dev = 0.074, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | | else if ( location(A, I) )
%   | | | then return 0.3003697289056835;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5833526811750274;  // std dev = 0.123, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.45558987456689326;  // std dev = 0.933, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.10252558777333455;  // std dev = 4.329, 120.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5777107863889608;  // std dev = 2.610, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | | else return -0.14283243899709186;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8147962235008267;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.08536500859157974;  // std dev = 1.611, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3968160036363556;  // std dev = 0.958, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.4897181867500767;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5546854192714175;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5461106458054802;  // std dev = 1.679, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else return 0.03213264604024412;  // std dev = 5.187, 255.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5821511086070348;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.28396608735127005;  // std dev = 1.370, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3191260490536196;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2943948248198672;  // std dev = 0.988, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.06126247377105853;  // std dev = 5.842, 285.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4376903644725241;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.026958262837623616;  // std dev = 1.629, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26789418103145274;  // std dev = 0.077, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3634161783482973;  // std dev = 0.643, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.33442664800647737;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.022222791507558865;  // std dev = 2.728, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3225771325033935;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.046512157849691836;  // std dev = 4.858, 181.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=51 */
%   | | | else return -0.0299157592211804;  // std dev = 2.428, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2803830759290709;  // std dev = 0.341, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2645099907386129;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2508987144356445;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5131169948894808;  // std dev = 1.538, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.17336498777039971;  // std dev = 0.544, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.25984645459761174;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.09103837759338389;  // std dev = 4.326, 143.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16448975270652802;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.21074651390595633;  // std dev = 0.028, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return -0.6483887336430274;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.35846001493578983;  // std dev = 3.499, 98.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=82 */
%   | | else return -0.1490163833778491;  // std dev = 0.324, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21633255475351787;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.14732896150949204;  // std dev = 1.229, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17082627378563814;  // std dev = 0.169, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.19067820052114126;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.13109528530905787;  // std dev = 0.464, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.02031376208934319;  // std dev = 1.650, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18006861751016215;  // std dev = 0.576, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.05584653293437528;  // std dev = 1.538, 70.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1799099203728765;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03901423376799133;  // std dev = 3.785, 158.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=47 */
%   | | | else return -0.011009040195001358;  // std dev = 1.376, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12341182502013703;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.19224941003822424;  // std dev = 0.100, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.6709275430891436;  // std dev = 0.180, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.04056357510220587;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.050397459871544106;  // std dev = 2.871, 142.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1548913065340514;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04171300774065938;  // std dev = 3.665, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
%   | | | else return -0.00881753844800722;  // std dev = 1.377, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.865', 'seconds']
Parameter learned model CLL:-0.201006 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.897, 106, 31], 'false,false,true,false': [5.579, 101, 45], 'false,false,false,true': [1.833, 21, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [1.313, 2, 10], 'false,true,true': [1.194, 2, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.63, 16, 76], 'false,false,true,false': [0.074, 185, 0], 'false,false,false,true': [1.491, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.123, 0, 11], 'true,false': [0.933, 1, 6], 'false,true,true': [4.329, 86, 34], 'false,true,false,true': [2.61, 8, 48], 'false,true,false,false': [0.0, 84, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.611, 10, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.958, 1, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.029, 0, 3], 'false,true,true,false': [1.679, 4, 21], 'false,true,false': [5.187, 197, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.37, 4, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.988, 1, 10], 'false,true': [5.842, 203, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.629, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.077, 0, 9], 'true,true,false': [0.643, 1, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.728, 54, 19], 'false,false,true': [0.037, 0, 8], 'false,false,false,true': [4.858, 130, 51], 'false,false,false,false': [2.428, 33, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.341, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [5.27e-09, 0, 3], 'true,true,false,false': [1.538, 2, 33], 'true,false': [0.544, 104, 0], 'false,true': [0.03, 0, 5], 'false,false,true': [4.326, 96, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.028, 0, 10], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [3.499, 16, 82], 'false,true,false': [0.324, 195, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.229, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.169, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.464, 1, 5], 'false,true,true': [1.65, 40, 13], 'false,true,false,true': [0.576, 2, 8], 'false,true,false,false': [1.538, 59, 11], 'false,false,true': [0.023, 0, 5], 'false,false,false,true': [3.785, 111, 47], 'false,false,false,false': [1.376, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.1, 0, 6], 'true,true,false,true': [0.18, 2, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.846, 1, 3], 'false,true': [2.871, 110, 32], 'false,false,true': [0.021, 0, 5], 'false,false,false,true': [3.665, 108, 47], 'false,false,false,false': [1.377, 10, 4]}]
{'': [0.05246913580246885, 0.19951730491908398], 'false': [0.10937499999999978, 0.1922752572103232], 'false,false': [0.19643146998963693, 0.13439999999999985], 'false,false,true': [0.175075923064629, 0.21322011634453103], 'false,false,false': [0.13439999999999985, nan], 'false,true': [0.22222222222222224, 0.0], 'true': [-1.4802973661668753e-16, 0.1388888888888887], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.09617998404000228, 0.20490511959354477], 'false': [0.15844636597965403, 0.2014092369901283], 'false,false': [0.19886048735398687, 0.24691358024691348], 'false,false,false': [0.24691358024691348, nan], 'false,false,true': [0.14321262000655838, 2.9459916879582617e-05], 'false,true': [0.15844636597965403, nan], 'true': [6.344131569286608e-17, 0.14364083105786707]}
{'': [0.05303782133662787, 0.16805480905030157], 'false': [0.16585190182433296, 0.20617198012623994], 'false,false': [0.20617198012623994, nan], 'false,false,true': [0.0, 0.1854272236496584], 'false,true': [0.15619656004389695, 0.17328010146879333], 'false,true,false': [0.12169072988214065, -3.700743415417188e-17], 'true': [0.0013706522851441331, 0.12425371575138924]}
{'': [0.051451541103724435, 0.13303981791001082], 'false': [0.12867260951748657, 0.2172862989322961], 'false,false': [0.0, 0.23456771886535527], 'false,false,false': [0.23456771886535527, nan], 'false,true': [0.10067572907647396, 0.10551595748168031], 'false,true,true': [0.00027110882799885605, 0.11271640564129179], 'true': [0.053998612588048014, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.054365816617809405, 0.1231371675601543], 'false': [0.11974878978429217, 0.1874708259902617], 'false,false': [0.0, 0.18961487532105228], 'false,false,false': [0.18961487532105228, nan], 'true': [-6.344131569286608e-17, 0.0887243879210027], 'false,false,true': [nan, 0.0], 'true,true': [-6.344131569286608e-17, nan]}
{'': [0.026795713970680257, 0.12398646796509549], 'false': [0.10193267334040677, 0.13083345504741667], 'false,false': [0.00017499129891479503, 0.13258508194971966], 'false,false,false': [0.13038151352170763, 0.1371406480248004], 'true': [0.02843443748022742, 0.0], 'true,true': [0.0006669561578571434, 0.05900298066079151], 'true,false': [nan, 0.0]}
{'': [0.10371528934905891, 0.12739671049255277], 'false': [0.00018527604417294395, 0.1308819544060647], 'false,false': [0.1308819544060647, nan], 'true': [0.05892341569296501, 0.002840390498645057], 'true,true': [0.007294863236606067, 0.06721598877756581], 'true,true,false': [9.25185853854297e-18, 0.06754906240704339], 'true,true,true': [0.007765440275288352, 0.0]}
{'': [0.0005642821488470271, 0.1028967083843423], 'false': [0.10064033282430208, 0.15140296427871533], 'false,false': [0.0, 0.1677493662771806], 'false,false,false': [0.1677493662771806, nan], 'false,true': [0.13377408393556525, 0.0005395581819191292], 'false,true,true': [0.0, 0.12489928315873333], 'true': [-7.93016446160826e-18, 7.823167088544803e-05], 'false,false,true': [0.0, nan]}
{'': [0.014805581754584914, 0.07278775711498843], 'false': [0.044424139907276367, 0.09239842847019221], 'false,false': [0.00010963223919324694, 0.09448758321486636], 'false,false,false': [0.09067155448574409, 0.1352555430752578], 'false,true': [0.05138941239260736, 0.03979509284423939], 'false,true,false': [0.033180477238332666, 0.033783043154638905], 'true': [0.0031633689250795127, 0.02757653524027976], 'true,false': [0.0, 0.03588118270741378]}
{'': [0.10420368691351425, 0.07695882840371075], 'true': [0.08270336152683368, 0.17904534946951028], 'true,true': [0.0019464904111342691, 0.01615885237065967], 'false': [0.058031093686521595, 0.08866005842586928], 'false,false': [8.644419918837077e-05, 0.09088476433249948], 'false,false,false': [0.08664722439127875, 0.135458567978884], 'true,true,false': [0.01615885237065967, nan], 'true,true,true': [0.0, 0.00166583498480193]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,true,true;interaction(F, E), interaction(A, F).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 11.215
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( complex(I, H), location(A, J) )
%   | | | then return 0.0044903985141464585;  // std dev = 2.263, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | | else return 0.19148226843284566;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.08495305881085216;  // std dev = 4.124, 97.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=22 */
%   | | | else return 0.19941877636935293;  // std dev = 5.322, 126.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6285643213018633;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.05280674554428783;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6380709762205449;  // std dev = 3.905, 95.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=76 */
%   | | | else return -0.15996605925538807;  // std dev = 0.128, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.49950352864668285;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09166279302642183;  // std dev = 1.230, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.42858826563910096;  // std dev = 0.352, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.5776873145590465;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.12056946375852033;  // std dev = 4.106, 104.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=32 */
%   | | | else return -2.63829750986554E-4;  // std dev = 1.138, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6315902518286082;  // std dev = 2.113, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.144262381581068;  // std dev = 0.313, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.2512036307126624;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7401012608049298;  // std dev = 0.227, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.24879636928733767;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4578709539644495;  // std dev = 0.031, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.47120651186808926;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5511502570230072;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.46823879014821923;  // std dev = 2.041, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | else if ( complex(A, H), interaction(A, I) )
%   | | | then return -0.10705458950049182;  // std dev = 1.151, 52.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=3 */
%   | | | else return 0.06782197294581128;  // std dev = 4.931, 193.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=55 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.37338468412607717;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.193473531481208;  // std dev = 1.173, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.04187661635447177;  // std dev = 0.836, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.3398233410352597;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.0847252442137905;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.34003096633673724;  // std dev = 0.016, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13758191356268626;  // std dev = 0.022, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, G), phenotype(A, H) )
%   | | | then return 0.0675936369283315;  // std dev = 2.952, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
%   | | | else return 0.11017074320763799;  // std dev = 4.770, 164.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=59 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2908811677816585;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.12367392507705746;  // std dev = 1.050, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.08887867311922977;  // std dev = 1.164, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.2991690952944781;  // std dev = 0.214, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0.23469467459823634;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13547169897068098;  // std dev = 0.207, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.18074589544289343;  // std dev = 1.852, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.03010486494809575;  // std dev = 1.266, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | | else return 0.05355731017794406;  // std dev = 1.384, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.27126755674741043;  // std dev = 0.014, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return -0.017609336095051543;  // std dev = 2.418, 60.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=12 */
%   | | | else return 0.0932978365766462;  // std dev = 4.349, 138.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2872934256500834;  // std dev = 0.310, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.17105411498191309;  // std dev = 0.518, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.5040814132478582;  // std dev = 0.204, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.1710187544621892;  // std dev = 0.085, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.058259929929958876;  // std dev = 0.933, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.5876808409514471;  // std dev = 0.203, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.17556604361392297;  // std dev = 0.062, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.0349233929125014;  // std dev = 3.289, 88.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=26 */
%   | | | else return 0.1023776012903774;  // std dev = 1.821, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.16933220854303188;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07823900477096986;  // std dev = 0.849, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.18271902209678723;  // std dev = 0.037, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3768809630752177;  // std dev = 2.705, 92.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=82 */
%   | | else return -0.15091979944757908;  // std dev = 0.033, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.223457519930087;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.0893871047530788;  // std dev = 1.027, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.038726143679505796;  // std dev = 0.898, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A) )
%   | | then return 0.2017788594679913;  // std dev = 0.150, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(E, A), interaction(E, E) )
%   | | | then return -0.5054223509326164;  // std dev = 0.799, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.20325799791404386;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.13000277003340366;  // std dev = 0.833, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.18951386205234474;  // std dev = 0.137, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then return -0.019759157450547255;  // std dev = 0.228, 119.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.023089475190970783;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.03196529683921506;  // std dev = 2.159, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return -0.009178889771958923;  // std dev = 3.320, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.18289166801524723;  // std dev = 0.049, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.03875519875727747;  // std dev = 0.460, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), complex(G, H) )
%   | | then if ( complex(A, I), location(A, J) )
%   | | | then return -0.029432320351829286;  // std dev = 1.398, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | | else return 0.039265684081767636;  // std dev = 1.438, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.07744494789579383;  // std dev = 1.351, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return -0.3721779477706335;  // std dev = 0.603, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | then return 0.1854344005291229;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(N, A) )
%   | | | then return -0.0017634029868203837;  // std dev = 3.737, 157.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=47 */
%   | | | else return 0.19921938315161397;  // std dev = 1.036, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '36.230', 'seconds']
Refined model CLL: -0.200872


******************************************
Best model found
******************************************
Results 

CLL : -0.180804 

AUC ROC : 0.990897 

AUC PR : 0.328774 

Precision : 0.284768 

Recall : 0.811321 

F1 : 0.421569 

Total Learning Time : 11.215 

Total Inference Time : 23.2173330783844 

Total revision time: 58.47998589706421
Best scored revision CLL: -0.200872


Results 

CLL : -0.180804 

AUC ROC : 0.990897 

AUC PR : 0.328774 

Precision : 0.284768 

Recall : 0.811321 

F1 : 0.421569 

Total Learning Time : 58.56295580101013 

Total Inference Time : 23.2173330783844 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.587
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06327714022771751;  // std dev = 2.522, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | | else return 0.12320917606336682;  // std dev = 5.687, 166.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.22353355048412768;  // std dev = 3.472, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8436777637862443;  // std dev = 0.020, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15562873257905202;  // std dev = 0.040, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( location(A, K) )
%   | | | then return 0.13920356747319745;  // std dev = 3.524, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | | else return 0.49537016543420925;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.44425532563517334;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.029117662962461082;  // std dev = 2.139, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6663073454399879;  // std dev = 1.011, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14061709845785034;  // std dev = 0.305, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.629681053512678;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10796693256557996;  // std dev = 3.670, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.14628645330418552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.43485032175037525;  // std dev = 0.043, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.42659473242082036;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38490222363117543;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5955635211652315;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.06634909507997067;  // std dev = 4.192, 185.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.475312022761995;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.522372179203741;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.11792130508660682;  // std dev = 3.480, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | | else return 0.12574280431147108;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.31730472829404216;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15552884817726761;  // std dev = 1.292, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.05051948367694925;  // std dev = 4.278, 202.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.36028109996073254;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3934522671999354;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.10101236765772023;  // std dev = 3.555, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.10276527215923399;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27605209554579657;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.36160752385824757;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2820277596720334;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2540953390020848;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3044330789783143;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06713847198756491;  // std dev = 0.952, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.30412737197647427;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.047161201795906334;  // std dev = 4.062, 177.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=49 */
%   | | | else return 0.03768611471016755;  // std dev = 3.755, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24300245114130914;  // std dev = 0.151, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.09961575351517304;  // std dev = 0.823, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.24668259034495543;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6378368178699704;  // std dev = 0.733, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.1992850764040973;  // std dev = 0.598, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24326759534198555;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.040785715651942875;  // std dev = 3.451, 129.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.181244610183202;  // std dev = 0.048, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.19886884620788298;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.45040940510622995;  // std dev = 0.811, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1360252954797272;  // std dev = 0.196, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2547352952109234;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.006315710305436758;  // std dev = 3.128, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16623718657544911;  // std dev = 0.080, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.2565903428428818;  // std dev = 0.538, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.18067051852292673;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.058467641966065874;  // std dev = 0.390, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18236810331138864;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.006958181293967309;  // std dev = 1.218, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17124048249858018;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0331672026918224;  // std dev = 2.699, 117.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=36 */
%   | | | else return 0.02427355866354071;  // std dev = 3.070, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12464574123591335;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.18357590542075009;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.15725533704570782;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14718121226687633;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.016065183074606696;  // std dev = 1.330, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.017810677143923315;  // std dev = 0.910, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01978762532323846;  // std dev = 2.710, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | | | else return 0.051305628778165496;  // std dev = 3.005, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.884', 'seconds']
Parameter learned model CLL:-0.175035 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.522, 31, 8], 'false,false,true,false': [5.687, 122, 44], 'false,false,false,true': [3.472, 33, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [0.068, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.02, 0, 52], 'false,false,true,false': [0.04, 140, 0], 'false,false,false,true': [3.524, 40, 18], 'false,false,false,false': [0.816, 1, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.943, 1, 8], 'false,true,true': [2.139, 34, 8], 'false,true,false,true': [1.011, 1, 48], 'false,true,false,false': [0.305, 115, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.67, 45, 20], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.043, 0, 11], 'true,false': [0.022, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.132, 0, 3], 'false,true,false': [4.192, 133, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.48, 37, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.002, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [1.292, 2, 9], 'false,true': [4.278, 146, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.555, 37, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.072, 0, 7], 'true,true,false': [0.106, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.952, 20, 3], 'false,false,true': [0.02, 0, 6], 'false,false,false,true': [4.062, 128, 49], 'false,false,false,false': [3.755, 49, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.151, 0, 12], 'true,true,true,false': [0.823, 1, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.733, 0, 36], 'true,false': [0.598, 95, 0], 'false,true': [0.017, 0, 5], 'false,false,true': [3.451, 93, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.048, 0, 6], 'true,false': [0.033, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.811, 0, 56], 'false,true,false': [0.196, 136, 0], 'false,false,true,true': [0.012, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.128, 51, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.08, 0, 9], 'true,false,true': [0.538, 1, 1], 'true,false,false': [0.043, 0, 4], 'false,true,true': [0.39, 8, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.218, 40, 14], 'false,false,true': [0.013, 0, 5], 'false,false,false,true': [2.699, 81, 36], 'false,false,false,false': [3.07, 46, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.001, 0, 5], 'true,true,true,false': [0.008, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.013, 0, 4], 'false,true': [1.33, 55, 17], 'false,false,true': [0.91, 1, 5], 'false,false,false,true': [2.71, 87, 36], 'false,false,false,false': [3.005, 37, 20]}]
{'': [-2.5376526277146434e-16, 0.20679207170811836], 'false': [0.12244897959183662, 0.2002366863905339], 'false,false': [0.18931588340273733, 0.23140495867768554], 'false,false,false': [0.23187869822485158, 0.22222222222222224], 'false,false,true': [0.1630506245890863, 0.19480330962403908], 'false,true': [0.0, 0.1388888888888887], 'false,true,false': [0.22222222222222224, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [6.344131569286608e-17, 0.2070082454965735], 'false': [0.0008585132404309951, 0.203131776721889], 'false,false': [0.1972191030828165, 0.22042232606824821], 'false,false,false': [0.214090474933788, 0.2222222222222222], 'false,false,true': [7.902167047892415e-06, 1.1161920912382075e-05], 'false,true': [0.0009271942996655014, 0.0], 'true': [7.401486830834377e-17, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.06222222222222206, 0.15524586625546138], 'false': [0.13705405336715293, 0.20882533852861107], 'false,false': [0.20817616936951583, 0.22222222222222218], 'false,false,false': [0.22222222222222218, nan], 'false,false,true': [0.0, 0.20725485506151436], 'false,true': [0.1089282011252245, 0.14321883301634983], 'false,true,false': [0.020858876376302085, 0.000810754481289136], 'true': [0.0, 0.0987654320987654]}
{'': [0.00018176455932025374, 0.1284565680890045], 'false': [0.09795454884272062, 0.21920975366520237], 'false,false': [0.0005536645810803875, 0.22183362817359048], 'false,false,false': [0.2201770418382247, 0.24], 'false,true': [0.01268819141972255, 0.09499181673705903], 'false,true,true': [0.0, 0.005823042989947069], 'false,false,true': [0.0, 0.0], 'true': [0.00017174998304924185, 0.00016493450753137426]}
{'': [0.10998811416246995, 0.121350011787971], 'false': [0.09058038715860048, 0.2205124405689251], 'false,false': [0.00027508158400277316, 0.22548478793976437], 'false,false,false': [0.2256594120083905, 0.22222222222222218], 'true': [5.126329638782678e-07, 0.15180390493545204], 'false,false,true': [0.0, 0.0], 'true,true': [5.126329638782678e-07, nan]}
{'': [0.0027081118551276645, 0.11708624887064867], 'false': [0.039425377278425495, 0.12301327182680159], 'false,false': [6.646149768021099e-05, 0.1244071048481297], 'false,false,false': [0.09321985086280311, 0.2043445953139048], 'true': [0.003175091090262372, 0.00042401183595710174], 'true,true': [0.0007374785057516764, 0.0027829022771480583], 'true,false': [0.0001950550311207444, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.1393795790249505, 0.09032653831379558], 'true': [0.07414204642069892, 0.0037606700517212816], 'false': [5.809418514156617e-05, 0.09229550508357365], 'false,false': [0.09229550508357365, nan], 'true,true': [0.06544067217173982, 0.018530570600706446], 'true,true,true': [0.0018951523253504243, 0.22571296422767254], 'true,true,false': [0.0, 0.014910129491577785]}
{'': [0.00032023003855547697, 0.09157156531688863], 'false': [0.07467636201092294, 0.1356608866062821], 'false,false': [6.620933827349018e-05, 0.13778970730428597], 'false,false,false': [0.13778970730428597, nan], 'false,true': [0.011745699064146338, 0.0002831709985427771], 'false,true,true': [nan, 0.011745699064146338], 'true': [0.0003835873461119216, 0.00013959190269369204], 'false,false,true': [6.620933827349018e-05, nan]}
{'': [0.04095064583724618, 0.07361528053617278], 'false': [0.026637347576519588, 0.08940483854564424], 'false,false': [3.4219221798759134e-05, 0.0913158004716992], 'false,false,false': [0.062257627348175915, 0.1427774463115968], 'true': [0.0007092129402776451, 0.0909657842784372], 'true,false': [0.1445067406951571, 0.0004629524426209633], 'false,true': [0.016909194680800703, 0.027730651424782784], 'false,true,false': [0.0, 0.027477553944289742]}
{'': [0.0004953728537543191, 0.07410700862243796], 'false': [0.024552650965800633, 0.09274170106110248], 'false,false': [0.13797255200350267, 0.09116098146259632], 'false,false,false': [0.05969758715354124, 0.1583768616750746], 'true': [0.0006758071453036807, 4.230578092077192e-05], 'true,true': [0.0008226636145596058, 0.0], 'true,true,true': [3.0354317980818555e-07, 2.2786076743562072e-05], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 7.599
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, H), interaction(I, A) )
%   | | | then return 0.09003299307052687;  // std dev = 3.506, 69.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=16 */
%   | | | else return 0.15444523139580763;  // std dev = 6.278, 189.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7518526675222027;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8409178656031091;  // std dev = 0.028, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15537416860639822;  // std dev = 0.118, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else if ( location(A, J) )
%   | | | then return 0.11953935927862742;  // std dev = 3.597, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else return 0.3382893592786269;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5608441807988545;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5717996689039943;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.018026776288871522;  // std dev = 1.331, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return 0.32238418341671615;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.64392061083497;  // std dev = 1.392, 50.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   | | | else return -0.13889650450603996;  // std dev = 0.036, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11781813345411386;  // std dev = 3.689, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | else return 0.15475590617605348;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(A, A), enzyme(A, E) )
%   | | then return 0.08284869041164948;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4250803214956902;  // std dev = 0.015, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4372455581474419;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5354000805837191;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.015251093748236966;  // std dev = 1.969, 55.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=9 */
%   | | | else return 0.10466289771260849;  // std dev = 3.628, 122.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=43 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.471814837517158;  // std dev = 0.054, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.17848145100207538;  // std dev = 2.372, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.0455440204005166;  // std dev = 2.877, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.348680463063323;  // std dev = 0.087, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3316661853255784;  // std dev = 0.014, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.3550241883133319;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.029812003972304418;  // std dev = 2.379, 71.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.06570951946928683;  // std dev = 3.343, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.3089989164553302;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.40920439954335774;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.10480672586096731;  // std dev = 2.473, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.03694520343265162;  // std dev = 2.861, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.27181762190342096;  // std dev = 0.035, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.26914782562516654;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), phenotype(I, J) )
%   | | | then return -0.11043734246225462;  // std dev = 0.011, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.05840235174150407;  // std dev = 0.438, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.014822112622054705;  // std dev = 0.726, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.11466036548591832;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.2697429209767341;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.04907883659700035;  // std dev = 3.971, 170.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=49 */
%   | | | else return 0.10235111580931822;  // std dev = 3.660, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.221312127176753;  // std dev = 0.030, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2016664425267024;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6534171696509361;  // std dev = 0.727, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.17563676613017415;  // std dev = 0.067, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.05674886046784875;  // std dev = 0.914, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( complex(A, G), phenotype(A, H) )
%   | | then if ( phenotype(I, H), interaction(I, J) )
%   | | | then return 0.07923075764162815;  // std dev = 1.416, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.003196832240452918;  // std dev = 1.037, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.022186545122428587;  // std dev = 1.911, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return -0.010498063590051229;  // std dev = 2.209, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1852500908552035;  // std dev = 0.061, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, E) )
%   | | then return 0.03310366598661387;  // std dev = 0.896, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.19758393007308575;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.42191405152451317;  // std dev = 0.541, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.45325002778409557;  // std dev = 0.501, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.1384843957258466;  // std dev = 0.036, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.19358586272933603;  // std dev = 0.037, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.03452757481905149;  // std dev = 2.056, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.20509250031465767;  // std dev = 1.961, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1548911129455628;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.19335164064795576;  // std dev = 0.411, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.15723452958873232;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.06855402631176397;  // std dev = 0.110, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18729500013689776;  // std dev = 0.001, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.008939809817367453;  // std dev = 1.294, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1981584839416098;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J) )
%   | | | then return 0.018955508324069215;  // std dev = 3.922, 178.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=54 */
%   | | | else return -0.09378507457672774;  // std dev = 1.011, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.08896005289460746;  // std dev = 0.172, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( enzyme(A, E) )
%   | | then if ( interaction(A, D) )
%   | | | then return -0.06900239650806253;  // std dev = 0.358, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return -0.20308465911472623;  // std dev = 0.909, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( location(D, F), location(A, F) )
%   | | | then return -0.0010654940791966266;  // std dev = 1.038, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return -0.07998293270673272;  // std dev = 0.665, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( location(A, G), interaction(A, H) )
%   | | then if ( interaction(I, H), interaction(J, I) )
%   | | | then return -0.030770542814582972;  // std dev = 3.011, 124.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=29 */
%   | | | else return 0.11482445513649801;  // std dev = 1.080, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.011386943454716495;  // std dev = 2.123, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
%   | | | else return 0.14184566857014752;  // std dev = 1.299, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.370', 'seconds']
Refined model CLL: -0.179039


******************************************
Best model found
******************************************
Results 

CLL : -0.1899 

AUC ROC : 0.982254 

AUC PR : 0.235445 

Precision : 0.135119 

Recall : 0.801444 

F1 : 0.23125 

Total Learning Time : 7.599 

Total Inference Time : 7.570682048797607 

Total revision time: 27.005442987442017
Best scored revision CLL: -0.175035


Results 

CLL : -0.1899 

AUC ROC : 0.982254 

AUC PR : 0.235445 

Precision : 0.135119 

Recall : 0.801444 

F1 : 0.23125 

Total Learning Time : 27.08841289138794 

Total Inference Time : 7.570682048797607 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.456
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.05217878584578103;  // std dev = 3.237, 67.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | | | else return 0.16047451649486058;  // std dev = 5.216, 129.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.11529179224236952;  // std dev = 2.586, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7398727907934262;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7532406038029915;  // std dev = 2.138, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return -0.15733438873966096;  // std dev = 0.079, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else if ( location(A, I) )
%   | | | then return 0.09141575793244314;  // std dev = 2.873, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5595171078416127;  // std dev = 0.054, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5807165438879357;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.02692878492823242;  // std dev = 2.881, 74.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6706571893790848;  // std dev = 1.157, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14223374063601882;  // std dev = 4.21e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.647270565690132;  // std dev = 0.225, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18005032810456534;  // std dev = 2.341, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.15092235154562753;  // std dev = 1.412, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.308891842862584;  // std dev = 1.316, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5487072630590335;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.48410710174245225;  // std dev = 0.844, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.06521528453193498;  // std dev = 4.304, 178.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.39534651389440356;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.010580251559728221;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.11466067835803427;  // std dev = 2.727, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return -0.04900736487243024;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.34337466509123826;  // std dev = 0.004, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3650667122222256;  // std dev = 0.071, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.07389996794071611;  // std dev = 4.437, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3057128385713588;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.06882303028067079;  // std dev = 0.840, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.11563490574770226;  // std dev = 2.427, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.03627638372426619;  // std dev = 1.493, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16897368961037534;  // std dev = 0.960, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.3666258982221551;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.244908869319175;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.39101770678443176;  // std dev = 0.141, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.03602962719917778;  // std dev = 1.296, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2900620550151771;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.04993379375534845;  // std dev = 4.103, 161.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=46 */
%   | | | else return 0.06337958936785114;  // std dev = 3.030, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25297489590532923;  // std dev = 0.086, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.27153298991205993;  // std dev = 0.151, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.22941400600041453;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5657626352531364;  // std dev = 1.373, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.18202384473054853;  // std dev = 0.755, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.25243495767622137;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05209950230995306;  // std dev = 3.467, 102.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19602049639450003;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.07428999426348527;  // std dev = 0.929, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4319462447101933;  // std dev = 1.521, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.1396534568246381;  // std dev = 0.178, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.026919762988149187;  // std dev = 0.692, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.03362228083871574;  // std dev = 2.455, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16567517611143665;  // std dev = 0.009, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.18562304029856613;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.20009995761221494;  // std dev = 0.141, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09381662346075574;  // std dev = 0.319, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.20101325088986416;  // std dev = 0.421, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.02079793150380492;  // std dev = 1.613, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19585784117603935;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01800604779341267;  // std dev = 3.056, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | | else return -0.009127282997945164;  // std dev = 2.539, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14516341413806644;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.13946748727912306;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.15086459786329232;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14817323436164148;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.18841409141748866;  // std dev = 0.117, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.025310803082323266;  // std dev = 2.015, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16683284552878816;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.024042212895263985;  // std dev = 2.890, 102.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
%   | | | else return -6.267520328259463E-4;  // std dev = 2.508, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.542', 'seconds']
Parameter learned model CLL:-0.177131 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.237, 54, 13], 'false,false,true,false': [5.216, 90, 39], 'false,false,false,true': [2.586, 26, 9], 'false,false,false,false': [1.414, 6, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [0.062, 0, 7], 'false,true,true': [0.0, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.138, 5, 52], 'false,false,true,false': [0.079, 134, 0], 'false,false,false,true': [2.873, 33, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.054, 0, 11], 'true,false': [0.061, 0, 4], 'false,true,true': [2.881, 60, 14], 'false,true,false,true': [1.157, 1, 42], 'false,true,false,false': [4.21e-08, 96, 0], 'false,false,true,true': [0.225, 0, 3], 'false,false,true,false': [2.341, 16, 9], 'false,false,false,true': [1.412, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.316, 2, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.844, 1, 6], 'false,true,false': [4.304, 129, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [2.727, 24, 11], 'false,false,false,false': [0.913, 5, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.004, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.071, 0, 6], 'false,true': [4.437, 124, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.84, 1, 2], 'false,false,false,true': [2.427, 18, 9], 'false,false,false,false': [1.493, 9, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.96, 1, 9], 'true,true,false': [0.033, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.141, 0, 2], 'false,true': [1.296, 20, 5], 'false,false,true': [0.057, 0, 5], 'false,false,false,true': [4.103, 115, 46], 'false,false,false,false': [3.03, 33, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.086, 0, 13], 'true,true,true,false': [0.151, 0, 3], 'true,true,false,true': [0.055, 0, 3], 'true,true,false,false': [1.373, 1, 33], 'true,false': [0.755, 100, 0], 'false,true': [0.003, 0, 3], 'false,false,true': [3.467, 71, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.929, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.521, 2, 56], 'false,true,false': [0.178, 117, 0], 'false,false,true,true': [0.692, 1, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.455, 29, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.009, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.141, 0, 5], 'false,true,true': [0.319, 20, 1], 'false,true,false,true': [0.421, 1, 6], 'false,true,false,false': [1.613, 49, 17], 'false,false,true': [0.003, 0, 3], 'false,false,false,true': [3.056, 68, 31], 'false,false,false,false': [2.539, 35, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.003, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.016, 0, 2], 'true,false': [0.117, 0, 3], 'false,true': [2.015, 61, 24], 'false,false,true': [0.002, 0, 3], 'false,false,false,true': [2.89, 71, 31], 'false,false,false,false': [2.508, 35, 12]}]
{'': [0.05859374999999978, 0.20482223934173685], 'false': [-2.5376526277146434e-16, 0.19555555555555681], 'false,false': [0.19491878384006744, 0.19834710743801603], 'false,false,false': [0.19102040816326543, 0.2222222222222221], 'false,false,true': [0.15638226776564884, 0.2109248242293137], 'true': [-1.4802973661668753e-16, 0.18750000000000006], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.0003624995143289548, 0.2008309298307967], 'false': [-6.344131569286608e-17, 0.19615298332257955], 'false,false': [0.1975574888962207, 0.19017957115954354], 'false,false,true': [0.08017571782823196, 4.682049873462705e-05], 'false,false,false': [0.18763462313326104, 0.2222222222222222], 'true': [1.1102230246251565e-16, 0.0005548461954012802], 'false,true': [-6.344131569286608e-17, nan]}
{'': [0.0005321232681498718, 0.1531046780198741], 'false': [0.13892448410494604, 0.2202919614461908], 'false,false': [0.21840932383048187, 0.221403717249002], 'false,false,false': [0.221403717249002, nan], 'false,false,true': [0.01689273783385466, 0.21920259089191493], 'false,true': [0.11217821950920055, 0.15080992167047164], 'false,true,false': [0.031127740871172135, 1.850371707708594e-17], 'true': [0.0002698762520947766, 0.0009237307639342052]}
{'': [0.10188475713436564, 0.12877934673279148], 'false': [0.11094243294703289, 0.20226959099585215], 'false,false': [0.16201126915774905, 0.2050771442704769], 'false,false,false': [0.21250362013468865, 0.13888888888888884], 'false,false,true': [0.0, 0.24999999999999997], 'false,true': [0.08943998274455614, 0.10406794573157767], 'true': [0.10188475713436564, nan], 'false,true,true': [0.0, 0.10169547553136958]}
{'': [0.0004510366811419697, 0.12835539574868524], 'false': [0.1093656386441596, 0.20750010260463725], 'false,false': [0.18700113753261063, 0.20947638897433024], 'false,false,false': [0.2181116676370608, 0.1856870138939787], 'false,false,true': [0.0, 0.23530565472548112], 'true': [2.078896026707571e-06, 0.0008421464135750142], 'true,true': [2.078896026707571e-06, nan]}
{'': [0.06477933076941536, 0.11839854239011129], 'false': [0.06713970220938928, 0.1234754531714487], 'false,false': [0.0006581606620184588, 0.12510826889002577], 'false,false,false': [0.10456279086389336, 0.19534752161103636], 'true': [0.07381333242688892, 0.011372590326670226], 'true,true': [0.0920709624977083, 0.0002646889861873669], 'true,false': [0.0, 0.009942954694855732], 'true,false,true': [0.0, nan]}
{'': [0.11551263645543845, 0.11558043621940019], 'false': [3.568927756584609e-06, 0.11783306171200185], 'false,false': [0.11783306171200185, nan], 'true': [0.05885391000858263, 0.005698875895335789], 'true,true': [0.0019374889010346091, 0.0594529414209966], 'true,true,false': [0.0009996957705470748, 0.05543784557551234], 'true,true,true': [0.0005642728116158453, 0.007608264636987901]}
{'': [0.05765096486758954, 0.09788326281431482], 'false': [0.08580351462115769, 0.1446364996890728], 'false,false': [0.11976849882593134, 0.1470586528929196], 'false,false,false': [0.1470586528929196, nan], 'false,false,true': [0.11976849882593134, nan], 'false,true': [0.03990664528616486, 0.00026940487802176515], 'true': [0.0, 0.10789277216064456], 'false,true,true': [nan, 0.039906645286164735]}
{'': [0.0015038834068143297, 0.07950156430274252], 'false': [0.03550381684877127, 0.10682127239569635], 'false,false': [2.487903926123858e-06, 0.10831521542835763], 'false,false,false': [0.09436441256083487, 0.13720173305718739], 'false,true': [0.004860842292185336, 0.042332793744833085], 'false,true,false': [0.025313303335762632, 0.03942006375432285], 'true': [7.372955409540305e-06, 0.0033575889251186847], 'true,false': [0.0, 0.003994176520991405]}
{'': [0.0011586034891729775, 0.07971847388781142], 'false': [0.047749251447231335, 0.09688439899864504], 'false,false': [1.9386095692908167e-06, 0.09838757961384724], 'false,false,false': [0.08186322717720271, 0.13383234358530452], 'true': [2.804005718289358e-05, 0.0045396100668704765], 'true,true': [5.8552610583129105e-06, 8.240215044121497e-05], 'true,true,false': [0.0, 0.00012118874649582126], 'true,true,true': [0.0, 3.3214390656420567e-06]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.229
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.05814893509951236;  // std dev = 2.828, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.13314893509951237;  // std dev = 2.824, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.1967316122648656;  // std dev = 5.333, 127.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7398727907934262;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then return 0.49327268722383816;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7432726872238382;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7477442407514148;  // std dev = 2.135, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return -0.1597591620836186;  // std dev = 0.160, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.3427832842956284;  // std dev = 1.229, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07234232504919487;  // std dev = 2.635, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5595171078416127;  // std dev = 0.016, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5807165438879357;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.08418717128453206;  // std dev = 0.656, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.1070265223339483;  // std dev = 2.573, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6751739837229388;  // std dev = 1.007, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14355205405444615;  // std dev = 0.052, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6157400516545919;  // std dev = 1.509, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return -0.17298843975027697;  // std dev = 0.083, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.0528582321657093;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.1158107426575754;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.42286906566391047;  // std dev = 0.019, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5956129560952453;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.1207757878824024;  // std dev = 0.062, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.07293934768616211;  // std dev = 4.223, 164.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=49 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.2280253284256217;  // std dev = 0.642, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4583066229114098;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.015162322167555824;  // std dev = 2.157, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | | else return 0.0737670772346443;  // std dev = 1.762, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31815414567567946;  // std dev = 0.004, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return -0.17079236540306056;  // std dev = 1.031, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3724021765968356;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( enzyme(A, H), complex(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5577634335140537;  // std dev = 0.214, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1266345189079822;  // std dev = 0.028, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.04818580445429644;  // std dev = 0.316, 169.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=48 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.40492497748506046;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.1403337458563766;  // std dev = 1.873, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.017922920837861334;  // std dev = 1.838, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25231190720834096;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.20657810821373043;  // std dev = 0.735, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.31294928727256477;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then return -0.08815577597043342;  // std dev = 0.096, 29.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=1 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.06423411504543505;  // std dev = 0.351, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.17718176017876508;  // std dev = 0.777, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.33813715195905203;  // std dev = 0.113, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), location(A, K) )
%   | | | then return 0.033225358360046406;  // std dev = 3.993, 169.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=46 */
%   | | | else return 0.10609580088183898;  // std dev = 2.624, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24459334763758733;  // std dev = 0.056, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.038184765314934116;  // std dev = 0.883, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5537100714031205;  // std dev = 0.659, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.14823034362052517;  // std dev = 0.051, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return -0.013095822213499336;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.053133769171261946;  // std dev = 2.353, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return 0.14785293839200717;  // std dev = 1.735, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.17936664116629036;  // std dev = 0.654, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.04974456478509062;  // std dev = 0.968, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17149511918783977;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return -0.062338504846447616;  // std dev = 0.666, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2659721294285088;  // std dev = 0.092, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.4060929104179619;  // std dev = 0.187, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.13860794547437114;  // std dev = 0.035, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return -0.060044906938488546;  // std dev = 1.706, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.06928068633678962;  // std dev = 0.796, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.024668976754735568;  // std dev = 1.086, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.10527669108217597;  // std dev = 0.924, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then return 0.14848122365798455;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.1968090979706398;  // std dev = 0.099, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1888846666648801;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(A, A) )
%   | | then return -0.07844434654032285;  // std dev = 0.013, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.04322870848019828;  // std dev = 1.216, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.0060909996747008635;  // std dev = 1.253, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.056393820159073876;  // std dev = 0.883, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.005856039495126246;  // std dev = 2.085, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return 0.04749258918221775;  // std dev = 2.955, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12932226084618836;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.05429474353199337;  // std dev = 0.649, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.14497596117414493;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then return -0.146253610572317;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.37799442308299724;  // std dev = 0.727, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return 0.006718788908253841;  // std dev = 0.172, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.046652394772852296;  // std dev = 0.880, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A), location(A, K) )
%   | | | then return -0.016916937793565283;  // std dev = 3.019, 104.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=30 */
%   | | | else return 0.10998055557395835;  // std dev = 2.000, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.746', 'seconds']
Refined model CLL: -0.175184


******************************************
Best model found
******************************************
Results 

CLL : -0.188075 

AUC ROC : 0.985828 

AUC PR : 0.266031 

Precision : 0.160188 

Recall : 0.844523 

F1 : 0.269296 

Total Learning Time : 7.229 

Total Inference Time : 8.386011123657227 

Total revision time: 28.35070496559143
Best scored revision CLL: -0.175184


Results 

CLL : -0.188075 

AUC ROC : 0.985828 

AUC PR : 0.266031 

Precision : 0.160188 

Recall : 0.844523 

F1 : 0.269296 

Total Learning Time : 28.433674869537352 

Total Inference Time : 8.386011123657227 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.83
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1331489350995109;  // std dev = 4.891, 120.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=33 */
%   | | | else return 0.158148935099511;  // std dev = 5.020, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7480325422264149;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6419533681997943;  // std dev = 3.689, 86.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=69 */
%   | | | else return -0.16050730989871304;  // std dev = 0.021, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | | else if ( location(A, I) )
%   | | | then return 0.13121660778760816;  // std dev = 1.693, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5612088330372125;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5888801916661459;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09712290793623123;  // std dev = 4.393, 119.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5874181843990819;  // std dev = 2.268, 43.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=37 */
%   | | | else return -0.1415642239050618;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3212618585359491;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.08322187227263432;  // std dev = 1.358, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.42973421191681027;  // std dev = 0.077, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4091717647763148;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6346314403506291;  // std dev = 1.075, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.05476566201786822;  // std dev = 5.132, 224.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5347329148791817;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.050169575265525;  // std dev = 1.728, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.31654263493404766;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15161441025359337;  // std dev = 0.879, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.0727671905143899;  // std dev = 5.493, 239.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4023754431526487;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.03985242793214368;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.016891113781108122;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25554973805500103;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.37658403241692007;  // std dev = 0.176, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3104636526360087;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.02189237161585098;  // std dev = 2.161, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.32801926605411114;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.06082423535645252;  // std dev = 4.973, 184.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=55 */
%   | | | else return 0.11505275480901017;  // std dev = 1.832, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23590709683865857;  // std dev = 0.200, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24816627008619385;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.7925980898851209;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5971379377829352;  // std dev = 0.454, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.18441583342445209;  // std dev = 0.534, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.26015463374033426;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08791839097654036;  // std dev = 3.992, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1712825316245319;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.19616403161052048;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.37658036188162836;  // std dev = 2.933, 84.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=71 */
%   | | else return -0.15728503883717426;  // std dev = 0.289, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20479629695722257;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.071749878913989;  // std dev = 1.393, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16130855905329344;  // std dev = 0.118, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17261653021185488;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.011524367798927886;  // std dev = 1.293, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.16604893833468867;  // std dev = 0.671, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.020407744330156123;  // std dev = 1.711, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18220633102843906;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02242929998453563;  // std dev = 3.609, 135.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=40 */
%   | | | else return 0.004271992603192214;  // std dev = 1.458, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12674182449497107;  // std dev = 0.015, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.24000389462075367;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1493531112539639;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.010924542722424817;  // std dev = 2.319, 109.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.09277912614891526;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.025153437805352383;  // std dev = 3.629, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
%   | | | else return 0.022472955530765316;  // std dev = 1.429, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.172', 'seconds']
Parameter learned model CLL:-0.195589 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.891, 87, 33], 'false,false,true,false': [5.02, 84, 36], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.279, 9, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.052, 0, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.689, 17, 69], 'false,false,true,false': [0.021, 156, 0], 'false,false,false,true': [1.693, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.052, 0, 8], 'true,false': [0.05, 0, 3], 'false,true,true': [4.393, 85, 34], 'false,true,false,true': [2.268, 6, 37], 'false,true,false,false': [0.0, 80, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.0, 2, 2], 'false,false,false,true': [1.358, 8, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.077, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.075, 1, 14], 'false,true,false': [5.132, 167, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.728, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.002, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.879, 1, 4], 'false,true': [5.493, 168, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.265, 8, 2], 'false,false,false,false': [1.265, 8, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.02, 0, 7], 'true,true,false': [0.176, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.161, 33, 12], 'false,false,true': [0.005, 0, 3], 'false,false,false,true': [4.973, 129, 55], 'false,false,false,false': [1.832, 12, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.2, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.454, 0, 33], 'true,false': [0.534, 83, 0], 'false,true': [0.004, 0, 3], 'false,false,true': [3.992, 80, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [0.053, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.933, 13, 71], 'false,true,false': [0.289, 186, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.393, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.118, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.018, 0, 3], 'false,true,true': [1.293, 29, 11], 'false,true,false,true': [0.671, 2, 1], 'false,true,false,false': [1.711, 39, 17], 'false,false,true': [0.003, 0, 3], 'false,false,false,true': [3.609, 95, 40], 'false,false,false,false': [1.458, 12, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.015, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.016, 0, 3], 'false,true': [2.319, 80, 29], 'false,false,true': [0.864, 1, 3], 'false,false,false,true': [3.629, 87, 40], 'false,false,false,false': [1.429, 11, 4]}]
{'': [0.07638888888888877, 0.20639743984967948], 'false': [1.4802973661668753e-16, 0.20288744666786981], 'false,false': [0.2048437500000003, 0.17283950617283936], 'false,false,true': [0.1993750000000013, 0.21000000000000127], 'false,false,false': [0.20408163265306126, 0.14876033057851243], 'true': [-2.220446049250313e-16, 0.18750000000000006], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0]}
{'': [0.00044937956321764653, 0.20548764906948733], 'false': [0.0, 0.20380260335008688], 'false,false': [0.20374966785444823, 0.20467705089145577], 'false,false,false': [0.20467705089145577, nan], 'false,false,true': [0.15823310041474803, 2.8368715323238804e-06], 'true': [7.401486830834377e-17, 0.0005437492714932546], 'false,true': [0.0, nan]}
{'': [0.0006192553572484434, 0.16480201936592112], 'false': [0.162473263624654, 0.20076160721654993], 'false,false': [0.25, 0.1677465944307467], 'false,false,true': [nan, 0.25], 'false,false,false': [0.1677465944307467, nan], 'false,true': [0.16215526979707864, 0.16265249562988068], 'false,true,false': [0.11962578877335905, -4.718447854656915e-17], 'true': [0.00033393518835428404, 0.000823233440332638]}
{'': [0.0005672983917401291, 0.13837757815096643], 'false': [0.13479829246761313, 0.18855258556467822], 'false,false': [0.0, 0.1865252615684977], 'false,false,false': [0.1865252615684977, nan], 'false,true': [0.07703099765247691, 0.11756343804723357], 'false,true,true': [nan, 0.07703099765247715], 'true': [0.0005855905734227119, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.07102430646614707, 0.12936777362881594], 'false': [0.12625937936729975, 0.1609152370389308], 'false,false': [0.0, 0.16080495738154085], 'false,false,false': [0.15999999999999998, 0.15999999999999995], 'true': [3.6572052300850745e-07, 0.15459038725387694], 'true,true': [3.6572052300850745e-07, nan], 'false,false,true': [nan, 0.0]}
{'': [0.005665437860376502, 0.13233715655376493], 'false': [0.10373402499332009, 0.13820799488424365], 'false,false': [8.293100320300173e-06, 0.1392531354830752], 'false,false,false': [0.13438206801043268, 0.18636758278028578], 'true': [0.006200518472733762, 0.0], 'true,true': [5.432991855000172e-05, 0.010287114810981083], 'true,false': [nan, 0.0]}
{'': [0.12551008522369875, 0.1302525495222731], 'false': [6.331261034812445e-06, 0.13278516050755065], 'false,false': [0.13278516050755065, nan], 'true': [0.06594742164071718, 0.0034338227045703227], 'true,true': [0.003647035821310389, 0.06119079623290702], 'true,true,false': [0.0, 0.006240173767813898], 'true,true,true': [0.003998076919012961, 0.0]}
{'': [0.00040547935729924725, 0.09579164470149168], 'false': [0.09324719377364878, 0.139873393666161], 'false,false': [0.0, 0.149368503389911], 'false,false,false': [0.149368503389911, nan], 'false,true': [0.10238408239301082, 0.00045037419591769913], 'false,true,true': [nan, 0.10238408239301068], 'true': [4.625929269271485e-18, 0.000554369654302278], 'false,false,true': [0.0, nan]}
{'': [0.0013245274886143658, 0.08071337250517821], 'false': [0.05214039326507089, 0.09889575815190205], 'false,false': [3.799961816777775e-06, 0.10035113784297027], 'false,false,false': [0.09646470502236365, 0.13284816076332212], 'false,true': [0.04180369375886458, 0.058944664831131255], 'false,true,false': [0.1501946730759913, 0.0522885040148226], 'true': [0.0017441097267994095, 0.00011264500250425986], 'true,false': [nan, 0.00011264500250425986]}
{'': [0.00107970089570645, 0.0841436601078547], 'false': [0.04932899801192599, 0.10968194287023178], 'false,false': [0.18658676498169008, 0.10713639383347476], 'false,false,false': [0.10370894610929635, 0.13614902522360675], 'true': [0.001431691701801855, 8.90862839128953e-05], 'true,true': [0.001431691701801855, nan], 'true,true,true': [3.268202162634372e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 11.998
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(G, A), location(G, H) )
%   | | | then return 0.14084935704044202;  // std dev = 6.932, 237.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=67 */
%   | | | else return 0.28672036367094084;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.760493399193563;  // std dev = 2.322, 75.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=69 */
%   | | | else return -0.1582557237858224;  // std dev = 0.117, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.31954674027598445;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.03759611686687266;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( location(A, H), enzyme(A, I) )
%   | | | then return 0.15208610219399374;  // std dev = 2.214, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.10109746368816207;  // std dev = 3.518, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | | else if ( interaction(F, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6538252050933141;  // std dev = 1.378, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.14020153268657748;  // std dev = 0.026, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then return 0.031063820394860227;  // std dev = 0.403, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.4019873190255641;  // std dev = 1.108, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3266044932492189;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6872480239752747;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.09220313512157262;  // std dev = 1.541, 39.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | | else if ( location(A, H) )
%   | | | then return 0.09256888919216488;  // std dev = 4.861, 189.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=59 */
%   | | | else return 0.23524348101687761;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5476831093283948;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.4039469132680161;  // std dev = 0.788, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.011669622683163017;  // std dev = 1.238, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3379568199462728;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 7.912704382454875E-4;  // std dev = 1.178, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), complex(A, G) )
%   | | then if ( interaction(H, A), complex(H, G) )
%   | | | then return 0.03064497141277754;  // std dev = 0.552, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.22145187750314477;  // std dev = 1.968, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else if ( interaction(A, I), phenotype(A, J) )
%   | | | then return -0.01208163556182811;  // std dev = 1.793, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.062374997575312965;  // std dev = 4.548, 171.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=51 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.41183874484526395;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return -0.14410352777814528;  // std dev = 1.261, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.10489891492041292;  // std dev = 1.138, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15332710649630654;  // std dev = 0.335, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.37538839601863666;  // std dev = 0.175, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.31686687453679196;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then return -0.03631743243171925;  // std dev = 0.288, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.018044578655839704;  // std dev = 1.087, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.11692049563591428;  // std dev = 1.136, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.34065323352319826;  // std dev = 7.45e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.08534182579125721;  // std dev = 4.517, 168.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=57 */
%   | | | else return -0.04961288408512276;  // std dev = 1.734, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.26253957894387736;  // std dev = 0.054, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5280943179873088;  // std dev = 1.122, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.1902724073074198;  // std dev = 0.078, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2687374301217426;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5246071845400838;  // std dev = 0.746, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.19153466605825564;  // std dev = 0.427, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.07661178701469837;  // std dev = 2.917, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
%   | | | else return -0.015065125628940107;  // std dev = 0.918, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1956956993252701;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.06181350051078888;  // std dev = 0.829, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.32601588051124863;  // std dev = 2.955, 79.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=67 */
%   | | | else return 0.4304966493706681;  // std dev = 0.151, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.16200791956604552;  // std dev = 0.674, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | | else return -0.1497136325432852;  // std dev = 0.195, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.2062606495398045;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.2920171228152641;  // std dev = 0.657, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.03746806685462673;  // std dev = 1.010, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then return 0.20304223370094465;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.16202819000732457;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2010846233229383;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11196315131706858;  // std dev = 0.163, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.06915191602502835;  // std dev = 1.418, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return -0.012370878888770712;  // std dev = 1.883, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.0411033049379457;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.018460472639728144;  // std dev = 2.364, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | | else return 0.03830749818682343;  // std dev = 2.569, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( location(A, F), interaction(A, A) )
%   | | | then return 0.14339148372890018;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.18913695455514068;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.23705029809117772;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17085690012104546;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A), complex(G, H) )
%   | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), enzyme(J, K) )
%   | | | then return 0.3948798680745946;  // std dev = 0.163, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10639465265720796;  // std dev = 0.817, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, L), complex(L, H) )
%   | | | then return -0.1014091988739917;  // std dev = 0.698, 34.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=2 */
%   | | | else return -0.024478906097428383;  // std dev = 3.103, 115.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=32 */
%   | else return 0.020123697295206334;  // std dev = 0.262, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '30.060', 'seconds']
Refined model CLL: -0.194638


******************************************
Best model found
******************************************
Results 

CLL : -0.207575 

AUC ROC : 0.988291 

AUC PR : 0.289176 

Precision : 0.186773 

Recall : 0.911348 

F1 : 0.310012 

Total Learning Time : 11.998 

Total Inference Time : 20.51358389854431 

Total revision time: 53.278829982757564
Best scored revision CLL: -0.194638


Results 

CLL : -0.207575 

AUC ROC : 0.988291 

AUC PR : 0.289176 

Precision : 0.186773 

Recall : 0.911348 

F1 : 0.310012 

Total Learning Time : 64.0052255897522 

Total Inference Time : 20.51358389854431 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.187
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1399671169176928;  // std dev = 4.718, 110.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=31 */
%   | | | else return 0.16636811318170322;  // std dev = 5.579, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7356630398665784;  // std dev = 0.051, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6177817349725823;  // std dev = 0.897, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6468510056966864;  // std dev = 3.811, 94.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=76 */
%   | | | else return -0.161671147713311;  // std dev = 0.024, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | | else if ( location(A, K) )
%   | | | then return 0.03947784330849326;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5687417659559787;  // std dev = 0.059, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.42016042559537387;  // std dev = 0.895, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05392554157963064;  // std dev = 4.456, 146.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6286839605803699;  // std dev = 2.122, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.14242378579401968;  // std dev = 5.16e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8232810265084167;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16482962933903067;  // std dev = 1.513, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3758467002109574;  // std dev = 0.995, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.45118422723517104;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.527162189651229;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5428088604771267;  // std dev = 1.734, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else return 0.06514728730139817;  // std dev = 5.046, 208.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5397260152877252;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.12081026541528138;  // std dev = 1.585, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3269063326368466;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19322146522630204;  // std dev = 1.297, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.03948964999842174;  // std dev = 5.944, 303.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40600960923053664;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.035608489435827326;  // std dev = 1.660, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27145473029937084;  // std dev = 0.068, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3239416774499987;  // std dev = 0.779, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.31292155725973614;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.018347972226035816;  // std dev = 2.823, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20525132041832692;  // std dev = 0.959, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.054405454706287514;  // std dev = 4.707, 179.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=51 */
%   | | | else return 0.058109710995873344;  // std dev = 2.209, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.21120442677051265;  // std dev = 1.096, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.2498490567950501;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.016640948839493852;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.46466047153056256;  // std dev = 1.845, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | else return -0.18298723538850267;  // std dev = 0.746, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.27800369054116986;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.053226028622817285;  // std dev = 4.502, 158.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17773394007057464;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.23729749675833434;  // std dev = 0.070, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3844390300534243;  // std dev = 3.264, 95.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=82 */
%   | | else return -0.14868245778710198;  // std dev = 0.281, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20599030973347388;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.05536679375120825;  // std dev = 1.516, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17798621318216037;  // std dev = 0.159, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.007113781390115499;  // std dev = 0.445, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.21736883658246514;  // std dev = 0.122, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0.07307529731985611;  // std dev = 1.553, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.27917756961165247;  // std dev = 0.166, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.08040201314847627;  // std dev = 1.880, 61.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1870664391921374;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02897568443556693;  // std dev = 3.919, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
%   | | | else return 0.01265462346020102;  // std dev = 1.517, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13153018549257267;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.19620198105934686;  // std dev = 0.102, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.33274324705174174;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1927467310334123;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.04991689695959179;  // std dev = 2.917, 127.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16028578287771744;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.058125011221818186;  // std dev = 3.700, 135.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=47 */
%   | | | else return 0.03907778796045301;  // std dev = 1.422, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.126', 'seconds']
Parameter learned model CLL:-0.201427 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.718, 79, 31], 'false,false,true,false': [5.579, 101, 45], 'false,false,false,true': [1.595, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [0.051, 0, 10], 'false,true,true': [0.897, 1, 7], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,true': [3.811, 18, 76], 'false,false,true,false': [0.024, 185, 0], 'false,false,false,true': [1.777, 15, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.059, 0, 11], 'true,false': [0.895, 1, 6], 'false,true,true': [4.456, 112, 34], 'false,true,false,true': [2.122, 5, 48], 'false,true,false,false': [5.16e-08, 93, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.513, 7, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.995, 1, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.049, 0, 3], 'false,true,true,false': [1.734, 4, 21], 'false,true,false': [5.046, 150, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.585, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.297, 2, 10], 'false,true': [5.944, 221, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.66, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.068, 0, 9], 'true,true,false': [0.779, 1, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.823, 52, 19], 'false,false,true': [0.959, 1, 8], 'false,false,false,true': [4.707, 128, 51], 'false,false,false,false': [2.209, 24, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [1.096, 1, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.882, 1, 3], 'true,true,false,false': [1.845, 5, 33], 'true,false': [0.746, 91, 0], 'false,true': [0.033, 0, 5], 'false,false,true': [4.502, 111, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.07, 0, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.264, 13, 82], 'false,true,false': [0.281, 185, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.516, 18, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.159, 0, 9], 'true,false,true': [0.445, 1, 2], 'true,false,false': [0.122, 0, 5], 'false,true,true': [1.553, 17, 13], 'false,true,false,true': [0.166, 0, 8], 'false,true,false,false': [1.88, 50, 11], 'false,false,true': [0.025, 0, 5], 'false,false,false,true': [3.919, 108, 47], 'false,false,false,false': [1.517, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.102, 0, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.1, 0, 3], 'false,true': [2.917, 95, 32], 'false,false,true': [0.022, 0, 5], 'false,false,false,true': [3.7, 88, 47], 'false,false,false,false': [1.422, 10, 4]}]
{'': [0.05246913580246885, 0.21627768595041377], 'false': [0.10937499999999978, 0.2098500469918231], 'false,false': [0.20874023437500028, 0.2314049586776858], 'false,false,false': [0.2314049586776858, nan], 'false,false,true': [0.2023966942148773, 0.21322011634453109], 'false,true': [0.22222222222222224, 0.0], 'true': [-1.4802973661668753e-16, 0.1388888888888887], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.00021766425768402422, 0.20038502470700245], 'false': [0.16909390627517132, 0.19635919385413386], 'false,false': [0.19808897531441386, 0.16620498614958434], 'false,false,true': [0.15447633507628203, 3.1808972546836893e-06], 'false,true': [0.1005686620325889, 0.0], 'false,false,false': [0.16620498614958434, nan], 'true': [6.344131569286608e-17, 0.00026210404362787544], 'false,true,false': [0.0, nan]}
{'': [0.04995215258293648, 0.15726027713710855], 'false': [0.1539130444749001, 0.2239433243822914], 'false,false': [0.2239433243822914, nan], 'false,false,true': [0.0, 0.20817195488085208], 'false,true': [0.13598971460617706, 0.1683441221223978], 'false,true,false': [0.08498379848551144, 2.865091676452017e-17], 'true': [0.00031307400506844473, 0.11446527660087005]}
{'': [0.05528252918917769, 0.14757523827020225], 'false': [0.1443191121210428, 0.2057511068125561], 'false,false': [0.0, 0.20939777041940819], 'false,false,false': [0.20939777041940819, nan], 'false,true': [0.10749618957677017, 0.12239582362542291], 'false,true,true': [0.0007986411696366824, 0.12027366485263319], 'true': [0.058219123616553785, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.09263951557779476, 0.11982855966614202], 'false': [0.11662297939201037, 0.18018156797667945], 'false,false': [0.0, 0.18361886066188465], 'false,false,false': [0.18361886066188465, nan], 'true': [-1.586032892321652e-17, 0.1400949431864895], 'false,false,true': [nan, 0.0], 'true,true': [-1.586032892321652e-17, nan]}
{'': [0.03663727752812808, 0.1236154238253541], 'false': [0.1122766192737765, 0.1267991453690616], 'false,false': [0.10225663964682503, 0.12692089166925002], 'false,false,false': [0.12377582586491973, 0.14346720688376013], 'true': [0.03890696677629028, 0.0], 'true,true': [0.0005090577723432737, 0.08672608713730122], 'true,false': [nan, 0.0]}
{'': [0.11880688247237889, 0.12585287198124076], 'false': [0.00022056504280025812, 0.12827873135414666], 'false,false': [0.12827873135414666, nan], 'true': [0.11248170668889633, 0.006121376252751257], 'true,true': [0.07073402167124092, 0.11685195778151318], 'true,true,false': [0.19447668665791984, 0.08956460104998995], 'true,true,true': [0.07506705052982679, 0.0]}
{'': [0.0011489424452206603, 0.10250547322222474], 'false': [0.10204207921001236, 0.10278089488125369], 'false,false': [0.0, 0.10448286088984457], 'false,false,false': [0.10448286088984457, nan], 'false,true': [0.11213776951305394, 0.0004265219692130523], 'false,true,true': [nan, 0.1121377695130539], 'true': [-3.96508223080413e-18, 0.0004923362158709033], 'false,false,true': [0.0, nan]}
{'': [0.01929845865243898, 0.09164129683323319], 'false': [0.07221019383619298, 0.10219934251644341], 'false,false': [0.00012810756054883464, 0.10448868415442489], 'false,false,false': [0.09906664388061745, 0.16427410546225718], 'false,true': [0.08037166018431839, 0.06487496766381541], 'false,true,false': [0.003447975765173819, 0.05793995485201486], 'true': [0.0028248695974348436, 0.0370067774476011], 'true,false': [0.0660540655376395, 0.003000709005851321]}
{'': [0.015981107428327392, 0.08937266329435922], 'false': [0.06700807432138771, 0.10238450459519816], 'false,false': [0.00010070265557127756, 0.10546601269758783], 'false,false,false': [0.10138979489184369, 0.14444369024943043], 'true': [0.017903700939878555, 0.0033493366731207987], 'true,true': [0.001841158346991304, 0.0], 'true,true,true': [-5.9476233462061954e-18, 0.001737092726726212], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 14.45
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.588918165868743;  // std dev = 2.262, 26.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | | else return -0.04084096389038668;  // std dev = 2.998, 99.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=10 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.21769949689726378;  // std dev = 4.527, 89.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=32 */
%   | | | else return 0.10814893509951236;  // std dev = 3.775, 76.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6797455630948871;  // std dev = 3.279, 89.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=76 */
%   | | | else return -0.15096492010837242;  // std dev = 0.185, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.27397452305759973;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.15553256216424446;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4720331034129513;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.41250929388914165;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.09434088407623327;  // std dev = 3.621, 92.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=27 */
%   | | | else return -0.0017179920731069129;  // std dev = 1.826, 41.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6373336351277652;  // std dev = 1.913, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.13687119257191677;  // std dev = 0.148, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.1205662302736515;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.4792662818918097;  // std dev = 0.821, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.20182614289683706;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( enzyme(A, E), interaction(A, F) )
%   | | then return -0.0620916937496756;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3771222238826856;  // std dev = 0.251, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.4379083062503245;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4504131206467919;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.443306540734682;  // std dev = 1.741, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else return 0.025311937340304853;  // std dev = 0.328, 253.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=58 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4361287052847278;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.12604528744421625;  // std dev = 1.110, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.016730522153936812;  // std dev = 1.144, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3782428343637538;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, E) )
%   | | then return -0.04085511237915174;  // std dev = 1.103, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.35213029430456405;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( complex(A, G), location(A, H) )
%   | | then return 0.013762366429280071;  // std dev = 0.283, 107.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=26 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.09456289421037513;  // std dev = 3.669, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
%   | | | else return 0.15872299134482293;  // std dev = 2.638, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3333621886406267;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.4214170317132344;  // std dev = 0.735, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.011753899160306381;  // std dev = 1.204, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.33950247478140017;  // std dev = 0.085, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F) )
%   | | then if ( complex(A, G), location(E, D) )
%   | | | then return 0.09734798492519486;  // std dev = 1.445, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return -0.010353899377023532;  // std dev = 3.074, 91.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=21 */
%   | | else if ( location(H, D), interaction(H, H) )
%   | | | then return 0.04889899388280437;  // std dev = 3.997, 151.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=44 */
%   | | | else return 0.19835441412839472;  // std dev = 0.687, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(K, A) )
%   | | | then return 0.15856641458673787;  // std dev = 0.777, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.37457888665152855;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.15546733819566824;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.021443328666435182;  // std dev = 1.376, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.27003092796223294;  // std dev = 0.077, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( complex(A, E), interaction(F, A) )
%   | | | then return 0.25618670333843896;  // std dev = 1.580, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return 0.5187774156562766;  // std dev = 0.788, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return -0.16487509204995707;  // std dev = 0.090, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.09846981270887795;  // std dev = 0.902, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.44389417275562804;  // std dev = 1.557, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return -0.16333931806841845;  // std dev = 0.202, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( location(A, K) )
%   | | | then return 0.11980284122749225;  // std dev = 3.107, 78.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=30 */
%   | | | else return 0.30734662802534685;  // std dev = 0.554, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.20092421719237713;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.08404267757343231;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.24691018873113588;  // std dev = 0.035, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.2456664895321065;  // std dev = 1.817, 40.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=32 */
%   | | | else return 0.399704779806021;  // std dev = 2.397, 56.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=50 */
%   | | else return -0.1440146874838768;  // std dev = 0.036, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return -0.2454035147836346;  // std dev = 0.578, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.08690001279830181;  // std dev = 1.129, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.1433236265824836;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D) )
%   | | then return 0.16922017382142515;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.16638596693866492;  // std dev = 0.950, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.22463862876415083;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return -0.24942270749337078;  // std dev = 1.182, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return -0.016127058234600446;  // std dev = 2.403, 118.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=28 */
%   | | | else return -0.11968560908602403;  // std dev = 0.583, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.04896429444476813;  // std dev = 0.837, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.11119256358584485;  // std dev = 1.426, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return -0.00935874061795675;  // std dev = 3.595, 145.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=42 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.07074985504537988;  // std dev = 1.291, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.18454025178416442;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18561055995775597;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, H), phenotype(H, I) )
%   | | then return 0.021038961103486964;  // std dev = 0.210, 106.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=30 */
%   | | else return -0.06414241897089633;  // std dev = 0.100, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1940338581057946;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.029503442644646636;  // std dev = 3.362, 127.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=43 */
%   | | | else return -0.04952957660287147;  // std dev = 1.642, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '39.216', 'seconds']
Refined model CLL: -0.199881


******************************************
Best model found
******************************************
Results 

CLL : -0.175929 

AUC ROC : 0.986298 

AUC PR : 0.313498 

Precision : 0.275538 

Recall : 0.773585 

F1 : 0.406343 

Total Learning Time : 14.45 

Total Inference Time : 28.023115158081055 

Total revision time: 65.71759430122376
Best scored revision CLL: -0.199881


Results 

CLL : -0.175929 

AUC ROC : 0.986298 

AUC PR : 0.313498 

Precision : 0.275538 

Recall : 0.773585 

F1 : 0.406343 

Total Learning Time : 76.44398990821838 

Total Inference Time : 28.023115158081055 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.455
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1340110040650296;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.1297538733711163;  // std dev = 5.661, 162.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.13756069980539468;  // std dev = 3.700, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8226549253553086;  // std dev = 0.990, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15852726824138613;  // std dev = 0.003, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else if ( location(A, K) )
%   | | | then return 0.14007453257375932;  // std dev = 3.550, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | | else return 0.2405651783839172;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06427316917679163;  // std dev = 2.063, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.688003667869725;  // std dev = 0.277, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1383844615951889;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12332041072362317;  // std dev = 3.679, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.8128206446168409;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.385652028250583;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5883675093766981;  // std dev = 0.119, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.044899347505700765;  // std dev = 4.259, 203.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5247440806943449;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.11950956955960569;  // std dev = 3.478, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | | else return 0.28559147436282095;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.049077556388636936;  // std dev = 4.266, 204.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.39515674359403097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.07167696957053146;  // std dev = 3.657, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return -0.11909226344256334;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3449738629160744;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3055846201262886;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07090762229200809;  // std dev = 0.944, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06191388490293042;  // std dev = 3.991, 165.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=49 */
%   | | | else return 0.03849414785182837;  // std dev = 3.813, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23049200262459577;  // std dev = 0.116, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.22728929065912257;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.644674691014179;  // std dev = 0.777, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18162235946438912;  // std dev = 0.546, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.048526801989539986;  // std dev = 3.386, 124.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17409502401166832;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1763461293118751;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4289876689113992;  // std dev = 1.235, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.13792667905861475;  // std dev = 0.194, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.18990964072382172;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.03773077457739641;  // std dev = 3.114, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15276418210489162;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1295651428561011;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.16807872101355384;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09848762444985365;  // std dev = 0.420, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18533495733921712;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.015996108998948134;  // std dev = 1.233, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15284099095809478;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.019426658912773516;  // std dev = 2.752, 127.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=36 */
%   | | | else return 0.017773437632831016;  // std dev = 3.132, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13190861841212514;  // std dev = 0.000230, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14524863923586537;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.13196014702076453;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13655779989500128;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.025342374149776203;  // std dev = 1.358, 78.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.03258381110314427;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02237848024786096;  // std dev = 2.720, 122.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=36 */
%   | | | else return 0.040977766106829024;  // std dev = 3.059, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.917', 'seconds']
Parameter learned model CLL:-0.173676 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.407, 21, 8], 'false,false,true,false': [5.661, 118, 44], 'false,false,false,true': [3.7, 49, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.99, 1, 52], 'false,false,true,false': [0.003, 138, 0], 'false,false,false,true': [3.55, 42, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.063, 25, 8], 'false,true,false,true': [0.277, 0, 48], 'false,true,false,false': [0.0, 109, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.679, 45, 20], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.119, 0, 3], 'false,true,false': [4.259, 151, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.478, 38, 18], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 9], 'false,true': [4.266, 148, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.657, 46, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [1.29e-08, 0, 7], 'true,true,false': [0.065, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.944, 21, 3], 'false,false,true': [7.45e-09, 0, 6], 'false,false,false,true': [3.991, 116, 49], 'false,false,false,false': [3.813, 51, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.116, 0, 12], 'true,true,true,false': [0.025, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.777, 0, 36], 'true,false': [0.546, 104, 0], 'false,true': [0.0, 0, 5], 'false,false,true': [3.386, 88, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 6], 'true,false': [0.004, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.235, 1, 56], 'false,true,false': [0.194, 141, 0], 'false,false,true,true': [0.022, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.114, 45, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.022, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.021, 0, 4], 'false,true,true': [0.42, 19, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.233, 45, 14], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.752, 91, 36], 'false,false,false,false': [3.132, 49, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.00023, 0, 5], 'true,true,true,false': [0.018, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.029, 0, 4], 'false,true': [1.358, 61, 17], 'false,false,true': [0.913, 1, 5], 'false,false,false,true': [2.72, 86, 36], 'false,false,false,false': [3.059, 42, 20]}]
{'': [-2.5376526277146434e-16, 0.20633771441301024], 'false': [-1.4802973661668753e-16, 0.1992890857176169], 'false,false': [0.19813053370247607, 0.20234080539575433], 'false,false,false': [0.20134083044982648, 0.22222222222222224], 'false,false,true': [0.19976218787158156, 0.19783569577808346], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [2.5376526277146434e-16, 0.20550631316122], 'false': [7.401486830834377e-17, 0.20215848479785725], 'false,false': [0.19814940687890537, 0.21307313772150202], 'false,false,false': [0.21005243484737005, 0.24000000000000005], 'false,false,true': [0.018508730229397082, 5.876587122236164e-08], 'true': [7.401486830834377e-17, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [-1.9032394707859825e-16, 0.16107446318807508], 'false': [0.1429456386096107, 0.21160592697810207], 'false,false': [0.20785049114658793, 0.0], 'false,false,true': [0.0, 0.20821995209216984], 'false,true': [0.12898883403216055, 0.14544509229436076], 'false,true,false': [0.001599330461826402, -7.741004575368064e-17], 'false,false,false': [0.0, nan], 'true': [0.0, -1.1102230246251565e-16]}
{'': [1.2688263138573217e-16, 0.12239289853340261], 'false': [0.09243169008864771, 0.2165807394353312], 'false,false': [0.002874594846841133, 0.21996323398324982], 'false,false,false': [0.21597887075613478, 0.25], 'false,true': [0.011241438245868762, 0.08933891277184702], 'false,true,true': [0.0, 0.004715192755776994], 'false,false,true': [0.0, 0.0], 'true': [1.6148698540002277e-16, -3.700743415417188e-17]}
{'': [-3.172065784643304e-17, 0.11874246237985468], 'false': [0.08920353862209854, 0.2033206396615332], 'false,false': [0.001385510651262828, 0.2066837740965403], 'false,false,false': [0.2057545806922816, 0.18750000000000003], 'false,false,true': [0.0, 0.0], 'true': [-2.2204460492503132e-17, -3.700743415417188e-17], 'true,true': [-2.2204460492503132e-17, nan]}
{'': [0.0019281931240814026, 0.12027798420025007], 'false': [0.03714762585863726, 0.1269800502562407], 'false,false': [9.25185853854297e-18, 0.1292136026625062], 'false,false,false': [0.09652811299858219, 0.20478936516396823], 'true': [0.0022461990144496276, 0.000564757291317608], 'true,true': [2.3790493384824782e-17, 0.0010452002789995557], 'true,false': [0.0, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.1271261413475697, 0.08985400564928611], 'true': [0.04803389902890466, 0.0028629107886425963], 'false': [-5.551115123125783e-18, 0.09246957710371308], 'false,false': [0.09246957710371308, nan], 'true,true': [0.001005724153302174, 0.021270765392467805], 'true,true,false': [0.0, 0.016749382811699822], 'true,true,true': [0.001120653487328908, 0.0003073561229128552]}
{'': [2.2062476506664756e-06, 0.09195144493551538], 'false': [0.07377803601289878, 0.14544206863256426], 'false,false': [0.00023573398386699668, 0.14921866011217755], 'false,false,false': [0.14921866011217755, nan], 'false,true': [0.026753085885906993, 0.0002662179806450427], 'false,true,true': [nan, 0.026753085885906962], 'false,false,true': [0.00023573398386699668, nan], 'true': [4.625929269271485e-18, 1.6891583575415203e-06]}
{'': [0.0001622768142225593, 0.06927147026958838], 'false': [0.023386416419556993, 0.08693813840329168], 'false,false': [0.0, 0.08870930583334057], 'false,false,false': [0.059653850573803444, 0.142186416289516], 'false,true': [0.00883833607146231, 0.02619640731815295], 'false,true,false': [0.0, 0.025755431018240956], 'true': [5.17628076878286e-05, 0.00032395497724040936], 'true,false': [0.0, 0.00010828458105247019]}
{'': [0.00011136863290390844, 0.07321454719622589], 'false': [0.023643021045530357, 0.09277632931872118], 'false,false': [0.1388888888888889, 0.09115426801679102], 'false,false,false': [0.06066025400830345, 0.15092924925489115], 'true': [6.984616716468328e-05, 0.00021488508098205586], 'true,true': [8.240526994755804e-05, 0.0], 'true,true,true': [1.0620790033555317e-08, 0.00010850708797397839], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 7.643
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995117;  // std dev = 1.98e-07, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.14185106490048763;  // std dev = 8.69e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.2635543405049178;  // std dev = 2.986, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return 0.15485223180280908;  // std dev = 4.358, 91.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=27 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7518526675222027;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.21947341221095448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.776728018578845;  // std dev = 0.399, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.14686695672791497;  // std dev = 0.246, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.27768430020348234;  // std dev = 2.115, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.13500189654309866;  // std dev = 2.702, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5608441807988545;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5717996689039943;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.08110140226166469;  // std dev = 0.648, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.08249749564273619;  // std dev = 1.714, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5657262035697567;  // std dev = 1.613, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.12965058925153172;  // std dev = 0.230, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.09605261748413116;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.13137548529107493;  // std dev = 3.506, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | else return 0.13646631596541328;  // std dev = 0.680, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.34226822998910467;  // std dev = 0.270, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.4372455581474419;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4559440753021351;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.34241188704646147;  // std dev = 0.605, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.04303568811849895;  // std dev = 3.374, 144.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=39 */
%   | | | else return 0.16362658761411802;  // std dev = 1.747, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5683957731481479;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.08367522049098117;  // std dev = 1.509, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.23082743394380648;  // std dev = 2.894, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3319268184681598;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.34605027264009414;  // std dev = 0.013, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F) )
%   | | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.40195486992114415;  // std dev = 0.242, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.10698485198918158;  // std dev = 0.163, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.15169371117995298;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.10142436589020667;  // std dev = 3.018, 81.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=29 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.42725909935000855;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return -0.08951544010901141;  // std dev = 0.743, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.04075587876924393;  // std dev = 3.536, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26437082700583503;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.376230564599183;  // std dev = 0.158, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.30099268787274275;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return -0.10300463828960157;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.16230813997037194;  // std dev = 0.522, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.026628758965702215;  // std dev = 0.300, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.27787860616119003;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.025869294315805137;  // std dev = 3.456, 172.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=49 */
%   | | | else return 0.0948629947712126;  // std dev = 3.419, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24419197544374413;  // std dev = 0.052, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.21154808029106942;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5342276880834654;  // std dev = 1.272, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.17494897183133262;  // std dev = 0.073, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.22853427020682798;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4143349087529374;  // std dev = 0.453, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1392529022838874;  // std dev = 0.169, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.007144138675808353;  // std dev = 1.172, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.030636928584581672;  // std dev = 2.104, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1780611377060198;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18357072776734615;  // std dev = 0.012, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.23961542008216558;  // std dev = 0.332, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.45195900200478556;  // std dev = 0.442, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return -0.11085510412705099;  // std dev = 0.350, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | | else return -0.15887522688945901;  // std dev = 0.374, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.22004194738217048;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.03681214655209878;  // std dev = 1.283, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.13729651735699533;  // std dev = 2.421, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15897390911919101;  // std dev = 0.015, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1794053845572932;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, A), enzyme(A, G) )
%   | | | then return -0.2037940418171025;  // std dev = 0.659, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.05093882840076428;  // std dev = 0.261, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.1734548947169045;  // std dev = 0.060, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.029602236853882847;  // std dev = 1.339, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16402391797848412;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), enzyme(A, K) )
%   | | | then return 0.05045601260790372;  // std dev = 1.653, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | | | else return 0.012929293438747854;  // std dev = 3.241, 118.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.14453043022686107;  // std dev = 0.024, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, A) )
%   | | then if ( phenotype(D, E) )
%   | | | then return -0.07781386741063687;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.047511792642531185;  // std dev = 0.414, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( phenotype(A, F), phenotype(D, F) )
%   | | | then return -0.054458384342289286;  // std dev = 1.039, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return 0.0076983007439864115;  // std dev = 2.939, 88.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=29 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.21267335315144908;  // std dev = 0.263, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.08795338666299987;  // std dev = 0.057, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.16408371811136802;  // std dev = 0.631, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.02044473379340914;  // std dev = 1.903, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '36.062', 'seconds']
Refined model CLL: -0.161187


******************************************
Best model found
******************************************
Results 

CLL : -0.176208 

AUC ROC : 0.989397 

AUC PR : 0.311166 

Precision : 0.17223 

Recall : 0.931408 

F1 : 0.290704 

Total Learning Time : 7.643 

Total Inference Time : 7.461897134780884 

Total revision time: 27.024790952682494
Best scored revision CLL: -0.161187


Results 

CLL : -0.176208 

AUC ROC : 0.989397 

AUC PR : 0.311166 

Precision : 0.17223 

Recall : 0.931408 

F1 : 0.290704 

Total Learning Time : 37.75118655967712 

Total Inference Time : 7.461897134780884 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.634
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06449814144871872;  // std dev = 3.212, 63.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=13 */
%   | | | else return 0.15814893509951178;  // std dev = 5.225, 130.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.13939893509951237;  // std dev = 2.543, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.6083623010998431;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.49725118998873225;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7322259441501947;  // std dev = 0.083, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7861551292988227;  // std dev = 1.690, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.15770528619279692;  // std dev = 0.069, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else if ( location(A, I) )
%   | | | then return 0.07759349467993452;  // std dev = 2.895, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5899025141194331;  // std dev = 0.040, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6093545413870523;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.027597526649292593;  // std dev = 2.870, 74.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6461098045461194;  // std dev = 1.390, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14190507857069612;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.644686822981737;  // std dev = 0.227, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.053286071679431245;  // std dev = 2.563, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.06879635301353108;  // std dev = 1.498, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3859812207959044;  // std dev = 0.959, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6641910850540349;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.502018809494147;  // std dev = 0.703, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.057793329709151645;  // std dev = 4.386, 177.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.39291829378132603;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5390053475514576;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.05485096127507062;  // std dev = 2.878, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return 0.13122718976169928;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3475400364214338;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22412906680628927;  // std dev = 0.927, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.06817808671922754;  // std dev = 4.449, 186.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.30407235873061733;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3547781691613868;  // std dev = 0.072, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.05416801935921248;  // std dev = 2.581, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.22406983118946242;  // std dev = 1.307, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2763380352695297;  // std dev = 0.046, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.2265014320288347;  // std dev = 0.757, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.24378254500939356;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.27905992707871324;  // std dev = 0.063, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.056511127653303704;  // std dev = 1.274, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.05851850591341075;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.04326348652229552;  // std dev = 4.109, 169.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=46 */
%   | | | else return 0.1295115069896179;  // std dev = 2.938, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2607936667349334;  // std dev = 0.225, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2185256791821423;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.3205563324737671;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5827873909490774;  // std dev = 1.061, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1765850537083677;  // std dev = 0.787, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.32963239582032333;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.09666457396714129;  // std dev = 3.307, 85.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17842326663263064;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1282768230857264;  // std dev = 0.927, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.411699995844604;  // std dev = 1.767, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.14284290506497274;  // std dev = 0.209, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.18370782978657882;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.016625656319609505;  // std dev = 2.534, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15627840957866646;  // std dev = 0.035, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.03210028852985916;  // std dev = 0.440, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.031425902672421346;  // std dev = 0.634, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.11453528805980702;  // std dev = 0.626, 30.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.25664497449574547;  // std dev = 0.175, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.02787032340061972;  // std dev = 1.567, 77.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2372620002849167;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.024345098653350068;  // std dev = 2.857, 102.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
%   | | | else return 0.20262467143203472;  // std dev = 2.096, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.134497065316579;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14589422836743093;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.18965593690170623;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.07393298484849299;  // std dev = 0.625, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.1680292764250727;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.0044702356586200686;  // std dev = 1.628, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.18979741242855186;  // std dev = 1.060, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.08173936594390792;  // std dev = 2.626, 75.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=31 */
%   | | | else return 0.020980930268053092;  // std dev = 2.378, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.123', 'seconds']
Parameter learned model CLL:-0.186008 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.707, 1, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.212, 50, 13], 'false,false,true,false': [5.225, 91, 39], 'false,false,false,true': [2.543, 23, 9], 'false,false,false,false': [1.414, 6, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.943, 1, 8], 'true,false': [1.247, 2, 7], 'false,true,true': [0.083, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.69, 3, 52], 'false,false,true,false': [0.069, 134, 0], 'false,false,false,true': [2.895, 35, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.04, 0, 11], 'true,false': [0.0, 0, 4], 'false,true,true': [2.87, 60, 14], 'false,true,false,true': [1.39, 2, 42], 'false,true,false,false': [0.0, 81, 0], 'false,false,true,true': [0.227, 0, 3], 'false,false,true,false': [2.563, 30, 9], 'false,false,false,true': [1.498, 9, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.959, 1, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.703, 1, 6], 'false,true,false': [4.386, 128, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.878, 35, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.024, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.927, 1, 6], 'false,true': [4.449, 130, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.072, 0, 2], 'false,false,false,true': [2.581, 28, 9], 'false,false,false,false': [1.307, 4, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.046, 0, 9], 'true,true,false': [0.757, 1, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.063, 0, 2], 'false,true': [1.274, 28, 5], 'false,false,true': [1.369, 3, 5], 'false,false,false,true': [4.109, 123, 46], 'false,false,false,false': [2.938, 26, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.225, 0, 13], 'true,true,true,false': [0.059, 0, 3], 'true,true,false,true': [0.019, 0, 3], 'true,true,false,false': [1.061, 1, 33], 'true,false': [0.787, 117, 0], 'false,true': [0.004, 0, 3], 'false,false,true': [3.307, 54, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.927, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.767, 3, 56], 'false,true,false': [0.209, 123, 0], 'false,false,true,true': [0.052, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.534, 34, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.035, 0, 10], 'true,false,true': [0.44, 1, 1], 'true,false,false': [0.634, 2, 5], 'false,true,true': [0.626, 29, 1], 'false,true,false,true': [0.175, 0, 6], 'false,true,false,false': [1.567, 60, 17], 'false,false,true': [0.003, 0, 3], 'false,false,false,true': [2.857, 71, 31], 'false,false,false,false': [2.096, 13, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.028, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.625, 2, 2], 'true,false': [0.046, 0, 3], 'false,true': [1.628, 65, 24], 'false,false,true': [1.06, 2, 3], 'false,false,false,true': [2.626, 44, 31], 'false,false,false,false': [2.378, 27, 12]}]
{'': [-2.3684757858670006e-16, 0.2073116590396835], 'false': [0.10937499999999978, 0.19869968587917433], 'false,false': [0.19683749899326236, 0.20701963117192096], 'false,false,false': [0.2021484375000001, 0.2222222222222221], 'false,false,true': [0.16376921138825848, 0.21000000000000052], 'false,true': [0.25, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.13888888888888898, 0.201449956959187], 'false': [0.0009757624251679634, 0.19628364026926484], 'false,false': [0.19893858847663148, 0.18512922723922332], 'false,false,true': [0.051915563509447274, 3.5253483144846284e-05], 'false,false,false': [0.18222575529678672, 0.2222222222222222], 'true': [0.09876543209876552, 0.1728395061728395], 'false,true': [0.0009757624251679634, nan]}
{'': [0.00017804945333471284, 0.15124335819323037], 'false': [0.1427933588915424, 0.18235696456110947], 'false,false': [0.18087841973841573, 0.1869760454016621], 'false,false,false': [0.1869760454016621, nan], 'false,false,true': [0.01710199706149747, 0.1684941169095407], 'false,true': [0.11133889794814586, 0.1570867757998792], 'false,true,false': [0.04388233793465615, 0.0], 'true': [0.00014189301180770028, 0.0]}
{'': [0.057443322626109794, 0.12993911137999337], 'false': [0.11570026516205476, 0.18058591156422696], 'false,false': [0.004742539395386047, 0.18292930833452783], 'false,false,false': [0.18000958444640314, 0.2222222222222222], 'false,true': [0.0647391159769819, 0.10867354091268167], 'false,true,true': [0.0, 0.07070008024651678], 'true': [0.057443322626109794, nan], 'false,false,true': [0.0, 0.0]}
{'': [0.05751905323624028, 0.12255212560426511], 'false': [0.10640804833833611, 0.1857512845837469], 'false,false': [0.0022854037435032413, 0.19405497359062823], 'false,false,false': [0.18002638757243325, 0.24393186317131935], 'true': [6.428340728059645e-05, 0.12282244616325046], 'false,false,true': [0.0, 0.0025710792114411463], 'true,true': [6.428340728059645e-05, nan]}
{'': [0.03461163235708688, 0.11890018284201984], 'false': [0.04920753285806231, 0.12784514504752106], 'false,false': [0.2341148731352357, 0.12326156138447752], 'false,false,false': [0.09992224076123256, 0.2158551486500532], 'true': [0.04167266765175647, 0.0015969162598513664], 'true,true': [0.00023441496232628415, 0.11466486654964973], 'true,false': [0.0, 0.001980543161222134], 'true,false,true': [0.0, nan]}
{'': [0.10723210775411626, 0.12603046085984304], 'false': [4.114829297722593e-06, 0.12862819933808034], 'false,false': [0.12862819933808034, nan], 'true': [0.04599922274513701, 0.005295919436511722], 'true,true': [0.0036378214526531644, 0.03555717143857126], 'true,true,false': [0.0001167909826208513, 0.033108712910466236], 'true,true,true': [0.0038784605684138054, 0.00114345344896639]}
{'': [0.0543810323321571, 0.09496044442093773], 'false': [0.08477038421404487, 0.13272932376266092], 'false,false': [0.0008879464685047633, 0.13961850388287358], 'false,false,false': [0.13961850388287358, nan], 'false,true': [0.05292987415256494, 0.00035362875776726147], 'true': [0.0, 0.10750473176411275], 'false,true,true': [nan, 0.05292987415256488], 'false,false,true': [0.0008879464685047633, nan]}
{'': [0.03656604180404412, 0.07187359845749493], 'false': [0.03169929485619148, 0.10220764041383935], 'false,false': [2.763065506320809e-06, 0.10389221714825049], 'false,false,false': [0.08001641619132958, 0.17577849435047735], 'true': [0.00012107995947267524, 0.06689596765508496], 'true,false': [0.09679474010375667, 0.05745666635925238], 'false,true': [0.01304766252774587, 0.03538807690549305], 'false,true,false': [0.005125836624718568, 0.03189444188300913]}
{'': [0.03052951072658478, 0.08111981112826402], 'false': [0.02977388329392006, 0.11823229957498545], 'false,false': [0.22490763725278629, 0.11091170531325115], 'false,false,false': [0.09194537888779436, 0.1449567339869484], 'true': [0.03532040592186765, 0.0007066940484289214], 'true,true': [9.780348940116868e-05, 0.08912469293928046], 'true,true,false': [0.0, 0.09751004224021408], 'true,true,true': [-3.469446951953614e-18, 0.00038510118651969433]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 9.07
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.08037115732173458;  // std dev = 2.789, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.20636322081379702;  // std dev = 5.042, 112.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=39 */
%   | | | else return 0.13592671287729013;  // std dev = 3.291, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.73168168114997;  // std dev = 0.024, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.7655896181175083;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.49327268722383816;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7465478279042255;  // std dev = 2.136, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return -0.1609574335486863;  // std dev = 0.156, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.10609524528920859;  // std dev = 2.107, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.1954421504481814;  // std dev = 1.969, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5695628634534573;  // std dev = 0.018, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.22848364782519406;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.013106802071850174;  // std dev = 1.724, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | | else return 0.16626191529520032;  // std dev = 2.009, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6113769706415549;  // std dev = 1.899, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | | else return -0.14394052569068305;  // std dev = 0.051, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.629491619883121;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.3200221417362125;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.08165720773124524;  // std dev = 2.583, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4486485215126507;  // std dev = 0.134, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6658263758318856;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.28658034697013285;  // std dev = 1.223, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.02221255449473667;  // std dev = 3.810, 149.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=33 */
%   | | | else return 0.10793664285336765;  // std dev = 2.299, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.45489464574695837;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5172648229398951;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.17184984636837805;  // std dev = 1.786, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.053124547112978045;  // std dev = 2.275, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3249492352259909;  // std dev = 2.11e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.36855722246898;  // std dev = 0.093, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5435555765352791;  // std dev = 0.139, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12063718999296637;  // std dev = 0.041, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( location(A, H) )
%   | | | then return 0.09710449146079032;  // std dev = 4.050, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
%   | | | else return 0.16018849921847061;  // std dev = 0.839, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.36072786875490276;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.012450426407921666;  // std dev = 2.168, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.15708364942902892;  // std dev = 1.917, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2947009729638272;  // std dev = 0.065, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(A, D), complex(E, F) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.25561817542757165;  // std dev = 0.781, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.13164025664367138;  // std dev = 0.130, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( phenotype(D, H), complex(A, I) )
%   | | | then return 0.1984848784775496;  // std dev = 0.987, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.011421520936966254;  // std dev = 2.324, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5478382967227227;  // std dev = 1.044, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return -0.17961315083750692;  // std dev = 0.453, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.3638664535628702;  // std dev = 1.299, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.09520764009953478;  // std dev = 2.225, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23839884127936042;  // std dev = 0.059, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.28171834184314454;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5416360713414631;  // std dev = 0.933, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1847471366942648;  // std dev = 0.101, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.18408027707453437;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), interaction(H, I) )
%   | | | then return 0.01749801215642089;  // std dev = 1.868, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return -0.013026284135282656;  // std dev = 0.893, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.10248533602961718;  // std dev = 1.929, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.014596629882869402;  // std dev = 0.712, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1695009893984254;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.18920721063505597;  // std dev = 0.046, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.386504190167784;  // std dev = 1.329, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | | | else return 0.2701411051696336;  // std dev = 1.183, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return -0.09254398048532453;  // std dev = 0.108, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.14583602247288935;  // std dev = 0.284, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.18775814407981195;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.026328811325408406;  // std dev = 2.019, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.049214141992391415;  // std dev = 1.090, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), interaction(F, A) )
%   | | then return -0.003333857371483081;  // std dev = 0.872, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.14800713177752714;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.18823851257135585;  // std dev = 0.113, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(A, I), interaction(I, A) )
%   | | then return -0.0610336612871428;  // std dev = 0.159, 36.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 6.790383352472332E-4;  // std dev = 1.239, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return -0.030468526162571886;  // std dev = 1.216, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.08325492023031184;  // std dev = 0.755, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.005541172230047242;  // std dev = 1.904, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | | else return 0.04081598884233282;  // std dev = 2.662, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.08450180261518019;  // std dev = 0.247, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.1400224308591257;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( enzyme(F, G), complex(F, H) )
%   | | then return -0.09390511631965412;  // std dev = 0.206, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | else if ( interaction(F, I), phenotype(I, J) )
%   | | | then return 0.02753615692104052;  // std dev = 1.749, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | | else return -0.044763793222576884;  // std dev = 1.403, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( phenotype(A, M), interaction(N, K) )
%   | | | then return 0.007723699663626553;  // std dev = 1.383, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.0768987865298819;  // std dev = 1.802, 45.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
%   | | else if ( interaction(A, P), location(A, Q) )
%   | | | then return 0.12055167380690422;  // std dev = 0.764, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.023020278913411744;  // std dev = 1.363, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.677', 'seconds']
Refined model CLL: -0.172245


******************************************
Best model found
******************************************
Results 

CLL : -0.187168 

AUC ROC : 0.987628 

AUC PR : 0.255088 

Precision : 0.165354 

Recall : 0.890459 

F1 : 0.278915 

Total Learning Time : 9.07 

Total Inference Time : 8.426332950592041 

Total revision time: 30.171227935791016
Best scored revision CLL: -0.172245


Results 

CLL : -0.187168 

AUC ROC : 0.987628 

AUC PR : 0.255088 

Precision : 0.165354 

Recall : 0.890459 

F1 : 0.278915 

Total Learning Time : 40.897623542785645 

Total Inference Time : 8.426332950592041 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.844
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.14020021715079295;  // std dev = 4.867, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
%   | | | else return 0.1767330058959713;  // std dev = 4.953, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7339932875654451;  // std dev = 2.671, 77.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=69 */
%   | | | else return -0.16215217905891996;  // std dev = 0.032, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | | else if ( location(A, I) )
%   | | | then return 0.137616459540847;  // std dev = 1.662, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4532966991324727;  // std dev = 0.954, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5960526174841312;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.10017028684160668;  // std dev = 4.260, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6299059225651893;  // std dev = 1.666, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14363526500710444;  // std dev = 4.94e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.44463356325371556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.11988013088083822;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2838021825588892;  // std dev = 1.135, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.35699237450842614;  // std dev = 0.960, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.48394242897313966;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.46593418552415433;  // std dev = 1.752, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else return 0.038414617526607346;  // std dev = 5.047, 224.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.48464869390095877;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.27563172750527487;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3584240880825224;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.37102144810738424;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.07642608984693058;  // std dev = 5.325, 229.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3667759300332205;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.21273872618716694;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.02118883608257771;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27994874454713725;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.22358420209320445;  // std dev = 0.587, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2864171662531241;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.006162904141779146;  // std dev = 2.270, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2918320575373328;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.053879310379938435;  // std dev = 4.743, 188.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=55 */
%   | | | else return 0.01263179009874838;  // std dev = 1.847, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.26017998391330804;  // std dev = 0.215, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.23160575979675846;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5828520009247004;  // std dev = 0.357, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.18564965105354528;  // std dev = 0.577, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23539874248065804;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.03751315048458979;  // std dev = 4.096, 138.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18445301922180835;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.19453110959969708;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.439552249463302;  // std dev = 2.144, 76.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=71 */
%   | | else return -0.15037138617836737;  // std dev = 0.210, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.19296284045746392;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.02521189563777416;  // std dev = 1.320, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17571200620329924;  // std dev = 0.118, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.555091876153749;  // std dev = 0.527, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.17126990890194574;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.04743591828365467;  // std dev = 1.595, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.32454432553364576;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.0017530193516373535;  // std dev = 1.640, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16691031481704044;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.024733438814926484;  // std dev = 3.347, 137.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=40 */
%   | | | else return -0.0992538049136328;  // std dev = 1.473, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1377609724146414;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.25130548296152466;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14833731619615328;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.03531233521264264;  // std dev = 2.478, 122.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.10651381028968093;  // std dev = 0.871, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.020845069301301436;  // std dev = 3.527, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
%   | | | else return 0.04012122107770925;  // std dev = 1.327, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.498', 'seconds']
Parameter learned model CLL:-0.193969 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 2, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.867, 84, 33], 'false,false,true,false': [4.953, 77, 36], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.247, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.671, 8, 69], 'false,false,true,false': [0.032, 166, 0], 'false,false,false,true': [1.662, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.954, 1, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.26, 82, 34], 'false,true,false,true': [1.666, 3, 37], 'false,true,false,false': [4.94e-08, 82, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [1.155, 4, 2], 'false,false,false,true': [1.135, 3, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.96, 1, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.752, 4, 14], 'false,true,false': [5.047, 167, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.414, 4, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.008, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.029, 0, 4], 'false,true': [5.325, 158, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.002, 0, 7], 'true,true,false': [0.587, 1, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.27, 42, 12], 'false,false,true': [0.024, 0, 3], 'false,false,false,true': [4.743, 133, 55], 'false,false,false,false': [1.847, 16, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.215, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.357, 0, 33], 'true,false': [0.577, 81, 0], 'false,true': [0.021, 0, 3], 'false,false,true': [4.096, 98, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.021, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.144, 5, 71], 'false,true,false': [0.21, 148, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.32, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.118, 0, 8], 'true,false,true': [0.527, 4, 0], 'true,false,false': [0.024, 0, 3], 'false,true,true': [1.595, 32, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.64, 44, 17], 'false,false,true': [0.016, 0, 3], 'false,false,false,true': [3.347, 97, 40], 'false,false,false,false': [1.473, 16, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.01, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.022, 0, 3], 'false,true': [2.478, 93, 29], 'false,false,true': [0.871, 1, 3], 'false,false,false,true': [3.527, 82, 40], 'false,false,false,false': [1.327, 8, 4]}]
{'': [-1.6148698540002277e-16, 0.21253902185223747], 'false': [0.23999999999999994, 0.2101644397026212], 'false,true': [0.0, 1.4802973661668753e-16], 'false,false': [0.21000000000000024, 0.21301775147928975], 'false,false,false': [0.25, 0.17283950617283952], 'false,false,true': [0.20249835634451155, 0.2170882606312174], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.07638888888888884, 0.20539469028449053], 'false': [0.0, 0.20367531662822605], 'false,false': [0.20319206762901218, 0.21247124718226845], 'false,false,false': [0.21247124718226845, nan], 'false,false,true': [0.09262540458353549, 6.150793727746795e-06], 'true': [7.401486830834377e-17, 0.13888888888888884], 'false,true': [0.0, nan]}
{'': [0.07961666384017081, 0.15989650302320507], 'false': [0.15554064357817557, 0.23755556607642853], 'false,false': [0.22949770609236683, 0.21474942883047132], 'false,false,true': [0.0, 0.2222222222222222], 'false,false,false': [0.21474942883047132, nan], 'false,true': [0.15647241309494261, 0.15460775066752797], 'false,true,false': [0.0693732342293889, 2.978647139238225e-17], 'true': [0.10106073873078812, 0.0]}
{'': [0.07800986863857938, 0.13576163015969195], 'false': [0.13050795792385833, 0.22662424864097458], 'false,false': [0.0, 0.25009804724984597], 'false,false,false': [0.25009804724984597, nan], 'false,true': [0.17050590226193735, 0.11369915285795316], 'false,true,true': [nan, 0.1705059022619374], 'true': [0.08375864851773412, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.00012023273496703462, 0.1284567497240899], 'false': [0.12380068078677998, 0.2159801260502985], 'false,false': [0.0, 0.22926978351619806], 'false,false,false': [0.25, 0.20408163265306126], 'true': [1.0294609938605553e-05, 0.0002116376940237974], 'true,true': [1.0294609938605553e-05, nan], 'false,false,true': [nan, 0.0]}
{'': [0.02946417094459326, 0.11768030920529605], 'false': [0.09543859539112658, 0.12261184495863076], 'false,false': [0.0001970156473687923, 0.1235339148493067], 'false,false,false': [0.11967536486965949, 0.15498385787975963], 'true': [0.03208214104990932, 0.0], 'true,true': [6.390926595711832e-07, 0.08620306660943385], 'true,false': [nan, 0.0]}
{'': [0.11875627202608788, 0.11979195337810102], 'false': [0.00015020778325129194, 0.12155969690125307], 'false,false': [0.12155969690125307, nan], 'true': [0.023799591310357995, 0.004115474703445691], 'true,true': [0.004275241990518794, 0.003857617585066561], 'true,true,true': [0.00462854016376496, 0.0], 'true,true,false': [nan, 0.003857617585066507]}
{'': [6.548958059284086e-05, 0.10078087612318523], 'false': [0.09873196360311988, 0.13595659640760197], 'false,false': [0.0, 0.14512166819890993], 'false,false,false': [0.14512166819890993, nan], 'false,true': [0.06048228134453092, 0.00029890622541346983], 'false,true,true': [nan, 0.060482281344530896], 'true': [-4.625929269271485e-18, 8.867640148704781e-05], 'false,false,true': [0.0, nan]}
{'': [0.12361522810172035, 0.07234111959615769], 'true': [0.001745746172978714, 0.16903582928903488], 'true,false': [0.0695518915474822, 0.00019454087436489298], 'false': [0.05148450415124357, 0.08568917246932736], 'false,false': [9.021306495530605e-05, 0.08685691564097885], 'false,false,false': [0.08174784901979294, 0.10843950852339827], 'false,true': [0.0591927434599296, 0.04507556028806852], 'false,true,false': [0.0, 0.044097246523877594]}
{'': [0.0010787550929798934, 0.0821581455487431], 'false': [0.050349465227093486, 0.1089033789077201], 'false,false': [0.18980812490801616, 0.10600532741093487], 'false,false,false': [0.10196206598792684, 0.1467735234453612], 'true': [0.0014217855387747558, 0.00015449402747244137], 'true,true': [0.0014217855387747558, nan], 'true,true,true': [1.3353274183304706e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 12.911
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H), location(H, I) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.06991364098186532;  // std dev = 3.767, 85.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=18 */
%   | | | else return 0.14703782398840123;  // std dev = 3.040, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.12600607795665522;  // std dev = 3.314, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | | else return 0.1956489350995111;  // std dev = 4.229, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7482561212503743;  // std dev = 2.510, 76.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=69 */
%   | | | else return -0.15969244817813966;  // std dev = 0.087, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.2678624237636421;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.017851861950643623;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.09378353117336859;  // std dev = 3.978, 103.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=29 */
%   | | | else return 0.0010063675167827604;  // std dev = 1.677, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5666288585327302;  // std dev = 2.278, 43.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=37 */
%   | | | else return -0.14226324556964756;  // std dev = 0.041, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19980879407834248;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.07957836116268573;  // std dev = 0.583, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.22493411165386884;  // std dev = 1.089, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.41751358415830986;  // std dev = 1.05e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.41751358415830986;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( location(A, H) )
%   | | | then return 0.1002417662455072;  // std dev = 5.296, 205.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=65 */
%   | | | else return -0.010898853743417472;  // std dev = 1.014, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.10435758061598539;  // std dev = 0.573, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4056655588190444;  // std dev = 0.609, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5356392815114217;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.1077974282195589;  // std dev = 0.922, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.21664611954160398;  // std dev = 1.289, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3207118471601496;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( complex(F, H) )
%   | | | then return 0.08491327895545037;  // std dev = 1.878, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return -0.056587286214399735;  // std dev = 1.320, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.13475450354953175;  // std dev = 2.242, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return 0.07254846961194972;  // std dev = 4.384, 152.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=47 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.40303381828358487;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.23980434521340033;  // std dev = 1.031, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.006615895056435397;  // std dev = 1.202, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 3.73e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.21457486073246795;  // std dev = 0.566, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.310908842452137;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1473849785273911;  // std dev = 0.014, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.052406227955791876;  // std dev = 2.178, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.19307747069670647;  // std dev = 1.102, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.09833217647983819;  // std dev = 4.592, 158.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=57 */
%   | | | else return -0.03625528769390943;  // std dev = 1.747, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24435331486203185;  // std dev = 0.070, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.5595307401721469;  // std dev = 1.012, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return 0.7350578318766108;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.18622093945347334;  // std dev = 0.057, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return -0.19024228436746446;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( phenotype(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.39867361509960064;  // std dev = 0.915, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.19132139125391195;  // std dev = 0.189, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.129382795069737;  // std dev = 1.268, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.024955085661954448;  // std dev = 3.393, 105.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=30 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1721109568427519;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.21583416115932863;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.3424793502020416;  // std dev = 2.561, 50.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=41 */
%   | | | else return 0.41805831653661474;  // std dev = 1.405, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.13539017345720453;  // std dev = 0.160, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | | else return -0.17615454438819902;  // std dev = 0.235, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.2056847173814228;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.3598611461105296;  // std dev = 0.670, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0471213180307663;  // std dev = 0.676, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16863521652855418;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.022411228348763815;  // std dev = 0.261, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10002847348773572;  // std dev = 0.030, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.13017722262068715;  // std dev = 1.356, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.01577308855057183;  // std dev = 0.590, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.014057057372249684;  // std dev = 1.617, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.0444528735196239;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, I), enzyme(A, J) )
%   | | | then return -0.08361977808804795;  // std dev = 1.125, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.01004476322530219;  // std dev = 3.446, 138.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=41 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14668903724087362;  // std dev = 0.047, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.008131225376545176;  // std dev = 0.617, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(E, F) )
%   | | then if ( enzyme(F, G), interaction(E, E) )
%   | | | then return -0.1123887023246863;  // std dev = 0.738, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return -0.006933116707670339;  // std dev = 1.759, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else if ( interaction(H, E), interaction(E, H) )
%   | | | then return 0.03983129168911836;  // std dev = 3.234, 125.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=42 */
%   | | | else return -0.0021748556538585487;  // std dev = 1.542, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | else if ( enzyme(A, I) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.05289140831544892;  // std dev = 0.656, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.1836050076791825;  // std dev = 1.010, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else return 0.07415184701130272;  // std dev = 0.666, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.226', 'seconds']
Refined model CLL: -0.202483


******************************************
Best model found
******************************************
Results 

CLL : -0.197997 

AUC ROC : 0.986335 

AUC PR : 0.296561 

Precision : 0.169399 

Recall : 0.769504 

F1 : 0.277671 

Total Learning Time : 12.911 

Total Inference Time : 15.131120920181274 

Total revision time: 48.65022171020508
Best scored revision CLL: -0.193969


Results 

CLL : -0.197997 

AUC ROC : 0.986335 

AUC PR : 0.296561 

Precision : 0.169399 

Recall : 0.769504 

F1 : 0.277671 

Total Learning Time : 48.67973673820496 

Total Inference Time : 15.131120920181274 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.271
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09299741994799608;  // std dev = 4.870, 132.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=31 */
%   | | | else return 0.1542015666784588;  // std dev = 5.628, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14386322081379804;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6285643213018635;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7052824976734636;  // std dev = 3.219, 88.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | | | else return -0.1579806528368647;  // std dev = 0.056, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | | else if ( location(A, I) )
%   | | | then return 0.07501284738195663;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5634831195872889;  // std dev = 0.036, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5776873145590465;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.061124366150350336;  // std dev = 4.426, 139.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6507428372028033;  // std dev = 1.686, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.1413916615735159;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8293636352378876;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16809116264774177;  // std dev = 1.505, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.31685312108240754;  // std dev = 1.319, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0.43777516488067514;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.44308658321703653;  // std dev = 0.119, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.64029283932836;  // std dev = 0.986, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else return 0.015144030440401093;  // std dev = 5.190, 267.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5135682905020866;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.23483477115502882;  // std dev = 1.448, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.34119833542096917;  // std dev = 1.83e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18876932268330018;  // std dev = 1.305, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.04018494768520851;  // std dev = 5.829, 306.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.387156214577284;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.15080413697296852;  // std dev = 1.500, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17858059560848732;  // std dev = 0.960, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.2791804637448918;  // std dev = 0.848, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3001805985696623;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.02440211430709866;  // std dev = 2.956, 80.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3148017897084589;  // std dev = 0.023, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.054660550398750465;  // std dev = 4.675, 182.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=51 */
%   | | | else return 0.05993631046870244;  // std dev = 2.180, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2212802968319994;  // std dev = 1.014, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.24110724894075752;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.0016896497821967116;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.43147068691314866;  // std dev = 2.071, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | else return -0.18247685903193578;  // std dev = 1.019, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2502864877121758;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08128742494446159;  // std dev = 4.376, 142.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19797201549373789;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.22640711246108505;  // std dev = 0.068, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3688032508113279;  // std dev = 3.337, 96.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=82 */
%   | | else return -0.13985375162972682;  // std dev = 0.296, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.19977105812978257;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.17491879375816646;  // std dev = 1.183, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18912533596112335;  // std dev = 0.141, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.31705838827735;  // std dev = 0.882, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.22349966374340324;  // std dev = 0.115, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.03881194839617356;  // std dev = 1.940, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.26670101166941435;  // std dev = 0.177, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.06864640609980412;  // std dev = 1.820, 70.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.171702380490879;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03692771277337217;  // std dev = 3.883, 147.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=47 */
%   | | | else return 0.012673806638231356;  // std dev = 1.356, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14354967605434155;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.19439688280847964;  // std dev = 0.102, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2006680976002783;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.02449832662323174;  // std dev = 2.650, 134.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.13824504628714548;  // std dev = 1.200, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.05717694443912716;  // std dev = 3.725, 131.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=47 */
%   | | | else return -0.09381317889874985;  // std dev = 1.456, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.799', 'seconds']
Parameter learned model CLL:-0.198009 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.87, 101, 31], 'false,false,true,false': [5.628, 107, 45], 'false,false,false,true': [1.69, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [0.953, 1, 10], 'false,true,true': [0.0, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.219, 12, 76], 'false,false,true,false': [0.056, 189, 0], 'false,false,false,true': [1.749, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.036, 0, 11], 'true,false': [2.11e-08, 0, 6], 'false,true,true': [4.426, 105, 34], 'false,true,false,true': [1.686, 3, 48], 'false,true,false,false': [0.0, 85, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.505, 7, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.319, 2, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.119, 0, 3], 'false,true,true,false': [0.986, 1, 21], 'false,true,false': [5.19, 209, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.448, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.83e-08, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.305, 2, 10], 'false,true': [5.829, 224, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.5, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.96, 1, 9], 'true,true,false': [0.848, 1, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.956, 61, 19], 'false,false,true': [0.023, 0, 8], 'false,false,false,true': [4.675, 131, 51], 'false,false,false,false': [2.18, 21, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [1.014, 1, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.881, 1, 3], 'true,true,false,false': [2.071, 5, 33], 'true,false': [1.019, 122, 0], 'false,true': [0.019, 0, 5], 'false,false,true': [4.376, 95, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.068, 0, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.337, 14, 82], 'false,true,false': [0.296, 203, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.183, 4, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.141, 0, 9], 'true,false,true': [0.882, 3, 2], 'true,false,false': [0.115, 0, 5], 'false,true,true': [1.94, 42, 13], 'false,true,false,true': [0.177, 0, 8], 'false,true,false,false': [1.82, 59, 11], 'false,false,true': [0.015, 0, 5], 'false,false,false,true': [3.883, 100, 47], 'false,false,false,false': [1.356, 7, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.102, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.087, 0, 3], 'false,true': [2.65, 102, 32], 'false,false,true': [1.2, 2, 5], 'false,false,false,true': [3.725, 84, 47], 'false,false,false,false': [1.456, 14, 4]}]
{'': [-2.0898315757650005e-16, 0.2038806772373023], 'false': [-2.5376526277146434e-16, 0.19638755011035647], 'false,false': [0.19599285855980994, 0.20408163265306106], 'false,false,false': [0.20408163265306106, nan], 'false,false,true': [0.179694674012857, 0.2084054709141286], 'true': [-1.4802973661668753e-16, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.05246913580246929, 0.20168071597251216], 'false': [-6.344131569286608e-17, 0.19795381917182917], 'false,false': [0.19896150621663744, 0.17993079584775076], 'false,false,true': [0.11776776563936538, 1.6369225154826206e-05], 'false,false,false': [0.17993079584775076, nan], 'true': [6.344131569286608e-17, 0.08264462809917356], 'false,true': [-6.344131569286608e-17, nan]}
{'': [0.00012067650880019735, 0.15980484786103127], 'false': [0.15652819826186398, 0.2221517939841062], 'false,false': [0.2221517939841062, nan], 'false,false,true': [0.0, 0.20590730470190116], 'false,true': [0.1409251708596557, 0.16795828688570175], 'false,true,false': [0.055715599933781355, -1.0449157878825003e-17], 'true': [0.00011529094559747932, 7.401486830834377e-17]}
{'': [0.09232567053291832, 0.1285922706853231], 'false': [0.12430049066464396, 0.21674283719464776], 'false,false': [0.0, 0.23305613717996007], 'false,false,false': [0.23305613717996007, nan], 'false,true': [0.04352927307434129, 0.10088876065309893], 'true': [0.09668528810002701, 0.0], 'false,true,true': [0.0047180519762637, 0.044154875421054805], 'false,false,true': [nan, 0.0]}
{'': [0.09505004128950961, 0.11503701005770509], 'false': [0.11104341351871949, 0.20928526504465575], 'false,false': [0.0, 0.22513540022295073], 'false,false,false': [0.22513540022295073, nan], 'true': [4.7580986769649563e-17, 0.14193578147316588], 'true,true': [4.7580986769649563e-17, nan], 'false,false,true': [nan, 0.0]}
{'': [0.09386682251664519, 0.12072598458051889], 'false': [0.10921311788412551, 0.12277788800576882], 'false,false': [6.472307914695552e-05, 0.12495155484782529], 'false,false,false': [0.1201088599749974, 0.15335907749189842], 'true': [0.09903127388854917, 0.0], 'true,true': [0.0922536565507385, 0.10276044703639346], 'true,false': [nan, 0.0]}
{'': [0.1054417937262983, 0.13118140280405868], 'false': [7.593764288544857e-05, 0.1348263406123294], 'false,false': [0.1348263406123294, nan], 'true': [0.12056848823504446, 0.008502963431148916], 'true,true': [0.060521741571055644, 0.13676296577855312], 'true,true,false': [0.19398060537014425, 0.1128707347015711], 'true,true,true': [0.06428122641748643, 0.0]}
{'': [0.00046834972512251294, 0.0964172558684743], 'false': [0.09393932239409247, 0.15565109943904776], 'false,false': [0.0, 0.17503886075288466], 'false,false,false': [0.17503886075288466, nan], 'false,true': [0.11600872904271199, 0.00043143214138449286], 'false,true,true': [nan, 0.11600872904271232], 'true': [0.0, 0.0004632602281907872], 'false,false,true': [0.0, nan]}
{'': [0.09499692423866295, 0.08564908476244869], 'true': [0.0022065455029133384, 0.15214725247900576], 'true,false': [0.15556174681075435, 0.0026312543450215274], 'false': [0.05952019184128844, 0.10440346125457566], 'false,false': [4.31570533479142e-05, 0.10713476898808064], 'false,false,false': [0.1025946973436265, 0.16725933779718563], 'false,true': [0.06844362109125078, 0.05321943077064732], 'false,true,false': [0.0038972187480876413, 0.04732211237569624]}
{'': [0.0018137736140286381, 0.08708758831166229], 'false': [0.05240738714103271, 0.11545450404500354], 'false,false': [0.20580595123859363, 0.10980113102312958], 'false,false,false': [0.10594611335241068, 0.11781319851525024], 'true': [0.0014405154311903539, 0.002511187463022873], 'true,true': [0.0014405154311903539, nan], 'true,true,true': [0.0, 0.0017289576104339798]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 18.544
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.08202953211443775;  // std dev = 3.412, 67.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=15 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.25814893509951203;  // std dev = 5.020, 105.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=42 */
%   | | | else return 0.1386367399775605;  // std dev = 4.068, 82.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6497552263409125;  // std dev = 3.736, 93.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=76 */
%   | | | else return -0.16329455893291384;  // std dev = 0.169, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.579767049626158;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0978672350523142;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5699288238094847;  // std dev = 0.031, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.43110740527362473;  // std dev = 0.359, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.0736330897331521;  // std dev = 3.877, 102.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=27 */
%   | | | else return -0.024042427736306025;  // std dev = 2.070, 48.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5733043081709953;  // std dev = 2.598, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | | else return -0.14174753814717475;  // std dev = 0.085, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.056872198955907595;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3976272606666132;  // std dev = 1.128, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.23937096745606734;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3844761266310636;  // std dev = 0.247, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return -0.04478900908747058;  // std dev = 0.649, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( phenotype(F, H) )
%   | | | then return 0.04605351488328413;  // std dev = 3.938, 118.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=30 */
%   | | | else return -0.09589282946352042;  // std dev = 0.853, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( complex(A, I), location(A, J) )
%   | | | then return 0.07926727713580907;  // std dev = 2.604, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | | else return 0.14963476007517063;  // std dev = 3.577, 87.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=34 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.45629938678071835;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.25129968206273984;  // std dev = 1.279, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.17450863669234998;  // std dev = 0.121, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.24183057244440526;  // std dev = 0.279, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.3664281658110503;  // std dev = 0.042, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F), interaction(A, G) )
%   | | then if ( enzyme(A, H), complex(A, I) )
%   | | | then return 0.1796818782332796;  // std dev = 1.050, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.03814187929288715;  // std dev = 3.763, 113.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=29 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.12725669926055255;  // std dev = 3.721, 90.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=35 */
%   | | | else return 0.05651045882766373;  // std dev = 2.350, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.34715939096178106;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.07201407053192767;  // std dev = 1.462, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.15698795153866713;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.29728278797013236;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.44552127662289776;  // std dev = 0.155, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2731481433282372;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1245900414609645;  // std dev = 0.007, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.04895919820671539;  // std dev = 2.489, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.09890654734935007;  // std dev = 1.939, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2815558068943168;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return -0.047662588711413656;  // std dev = 2.522, 67.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=12 */
%   | | | else return 0.05234659799027721;  // std dev = 4.465, 160.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2180092626435488;  // std dev = 0.243, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else if ( interaction(A, E), interaction(E, E) )
%   | | | then return 0.6591171624792541;  // std dev = 0.213, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.46877138263069923;  // std dev = 1.499, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | else return -0.16902340605871752;  // std dev = 0.057, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.22119706094417174;  // std dev = 0.067, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4110820647431462;  // std dev = 1.250, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.19477119193610287;  // std dev = 0.064, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.07194516514766038;  // std dev = 3.581, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   | | | else return 0.14183060798284775;  // std dev = 1.203, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19987189962834215;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then return -0.8435060452034318;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.18455213675651097;  // std dev = 0.030, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.3410365862011078;  // std dev = 1.983, 41.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=35 */
%   | | | else return 0.435990746721186;  // std dev = 2.157, 52.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=47 */
%   | | else return -0.1557604103136791;  // std dev = 0.050, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return -0.3130369861732113;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.2990770900782633;  // std dev = 0.640, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.036378186729478096;  // std dev = 0.772, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18632776985332214;  // std dev = 0.045, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return -0.17718999145478573;  // std dev = 0.878, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2262104526331048;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), phenotype(H, I) )
%   | | then return -0.01631344686877353;  // std dev = 0.244, 129.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=30 */
%   | | else return -0.11975728442285248;  // std dev = 0.366, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.5170967820567124;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.16338003671519388;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return -0.1648145542349593;  // std dev = 1.256, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.004118519963630157;  // std dev = 3.694, 156.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=48 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.13292394293923493;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1514337873343972;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, F) )
%   | | | then return -0.14054952261999967;  // std dev = 0.723, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2118973874941666;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.21012923504491118;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, G), location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(I, G) )
%   | | | then return 0.35150160957311144;  // std dev = 1.731, 60.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=54 */
%   | | | else return -0.24271103987848175;  // std dev = 0.645, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.15190579604568769;  // std dev = 0.084, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else return -0.030346290965887122;  // std dev = 0.277, 127.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '23.249', 'seconds']
Refined model CLL: -0.190105


******************************************
Best model found
******************************************
Results 

CLL : -0.1603 

AUC ROC : 0.990279 

AUC PR : 0.372072 

Precision : 0.290241 

Recall : 0.864151 

F1 : 0.434535 

Total Learning Time : 18.544 

Total Inference Time : 33.61546325683594 

Total revision time: 75.32340735435486
Best scored revision CLL: -0.190105


Results 

CLL : -0.1603 

AUC ROC : 0.990279 

AUC PR : 0.372072 

Precision : 0.290241 

Recall : 0.864151 

F1 : 0.434535 

Total Learning Time : 75.35292238235473 

Total Inference Time : 33.61546325683594 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.452
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07436515131572859;  // std dev = 2.504, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return 0.13662994775773918;  // std dev = 5.634, 158.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16962434493557788;  // std dev = 3.617, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7397104467804845;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8230541521992515;  // std dev = 0.992, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.1579163844895882;  // std dev = 0.034, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else if ( location(A, K) )
%   | | | then return 0.1255613712370706;  // std dev = 3.564, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.2362210932556624;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5605000451702026;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5720179264406186;  // std dev = 0.054, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05038845326203618;  // std dev = 2.112, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6664366169059395;  // std dev = 1.016, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.13927958234608995;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15682338712631685;  // std dev = 3.582, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0267815112830679;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.42338704998963905;  // std dev = 0.054, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.190580667297599;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.39077422546537544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5959160235220602;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.05252782163392625;  // std dev = 4.288, 195.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5163826999453088;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.1621712670267453;  // std dev = 3.363, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return 0.17509912497524013;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32787698175790053;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3453129337084257;  // std dev = 0.105, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.08617983594328144;  // std dev = 4.126, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3891638164168817;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.03513357491652939;  // std dev = 3.720, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | | | else return -0.0147812957919962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.24887936713691167;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3399100641704657;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.29383779286772005;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3015364160712729;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.08551314834130962;  // std dev = 0.958, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.28583430678608596;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06025245388385323;  // std dev = 3.989, 162.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=49 */
%   | | | else return 0.10682699797206453;  // std dev = 3.605, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2289937197096402;  // std dev = 0.115, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.22589876105915752;  // std dev = 0.023, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.193970915549611;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6074434289400877;  // std dev = 1.146, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.20273093282165966;  // std dev = 0.714, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23889290075357375;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0732089405083758;  // std dev = 3.276, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1712421200084978;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.08230082780976938;  // std dev = 0.916, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43976748051365805;  // std dev = 0.772, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14451199891286542;  // std dev = 0.233, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.18889612935758576;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.02387621639746649;  // std dev = 3.106, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1548010348467148;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1267855285585251;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.16679166148965704;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.0785930352715598;  // std dev = 0.404, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18695563460417397;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.01349289023465765;  // std dev = 1.238, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1855476137634909;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.011242810132583601;  // std dev = 2.719, 127.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=36 */
%   | | | else return -0.00730305622803062;  // std dev = 3.155, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1372762308538135;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1435188041556389;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.12761014859016084;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.02402421054534907;  // std dev = 0.713, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.012303071349007783;  // std dev = 1.342, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.0043963681208574745;  // std dev = 0.897, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.026965674398184574;  // std dev = 2.655, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
%   | | | else return 0.05435040209258873;  // std dev = 3.007, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.732', 'seconds']
Parameter learned model CLL:-0.180553 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.504, 29, 8], 'false,false,true,false': [5.634, 114, 44], 'false,false,false,true': [3.617, 42, 19], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.044, 0, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.992, 1, 52], 'false,false,true,false': [0.034, 123, 0], 'false,false,false,true': [3.564, 43, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.034, 0, 6], 'true,false': [0.054, 0, 8], 'false,true,true': [2.112, 29, 8], 'false,true,false,true': [1.016, 1, 48], 'false,true,false,false': [0.0, 127, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.582, 38, 20], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.054, 0, 11], 'true,false': [0.856, 1, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.129, 0, 3], 'false,true,false': [4.288, 143, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.363, 30, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.043, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.105, 0, 9], 'false,true': [4.126, 115, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.72, 51, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.009, 0, 7], 'true,true,false': [0.064, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.958, 25, 3], 'false,false,true': [0.072, 0, 6], 'false,false,false,true': [3.989, 113, 49], 'false,false,false,false': [3.605, 36, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.115, 0, 12], 'true,true,true,false': [0.023, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.146, 1, 36], 'true,false': [0.714, 87, 0], 'false,true': [0.048, 0, 5], 'false,false,true': [3.276, 72, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.005, 0, 6], 'true,false': [0.916, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.772, 0, 56], 'false,true,false': [0.233, 144, 0], 'false,false,true,true': [0.02, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.106, 44, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.038, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.015, 0, 4], 'false,true,true': [0.404, 14, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.238, 43, 14], 'false,false,true': [0.04, 0, 5], 'false,false,false,true': [2.719, 91, 36], 'false,false,false,false': [3.155, 53, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.029, 0, 5], 'true,true,true,false': [0.016, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.713, 1, 4], 'false,true': [1.342, 50, 17], 'false,false,true': [0.897, 1, 5], 'false,false,false,true': [2.655, 77, 36], 'false,false,false,false': [3.007, 37, 20]}]
{'': [0.06222222222222188, 0.20861946825890276], 'false': [-1.4802973661668753e-16, 0.2016684582658343], 'false,false': [0.1955555555555564, 0.2185223725286156], 'false,false,false': [0.21445847890352004, 0.0], 'false,false,true': [0.16946676406135883, 0.20092933824707665], 'true': [-2.9605947323337506e-16, 0.1388888888888887], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16]}
{'': [0.00024070779516862016, 0.21200065092971007], 'false': [7.401486830834377e-17, 0.20903513600393162], 'false,false': [0.20811762068572073, 0.21147270472956925], 'false,false,false': [0.20820670683269948, 0.24000000000000005], 'false,false,true': [0.0185669647426551, 9.435075889391253e-06], 'true': [7.401486830834377e-17, 0.000245722540901272], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.0003259543886402483, 0.154474451049187], 'false': [0.13372151257894166, 0.22106585125769895], 'false,false': [0.22010156678910142, 0.2222222222222222], 'false,false,false': [0.2222222222222222, nan], 'false,false,true': [0.0, 0.22120427626348332], 'false,true': [0.12056315452167952, 0.13627919129548494], 'false,true,false': [0.021051233852360463, -3.8464419750792824e-17], 'true': [0.00019147524322804532, 0.00036995878100243296]}
{'': [0.05969399661599199, 0.12840925501280961], 'false': [0.097406657030951, 0.23075275887778213], 'false,false': [0.002443775514125751, 0.23601739171732716], 'false,false,false': [0.2355867697528692, 0.24], 'false,true': [0.01203369628739287, 0.09429025667054808], 'true': [0.00026038032809173504, 0.18339064607147265], 'false,true,true': [0.0, 0.0055241390557079955], 'false,false,true': [0.0, 0.0]}
{'': [0.0009855876171318714, 0.12947147201880216], 'false': [0.09957463347006808, 0.1962588364675814], 'false,false': [0.0011714180237811234, 0.19884127066150598], 'false,false,false': [0.19773683970288658, 0.2222222222222222], 'false,false,true': [0.0, 0.0], 'true': [0.0003654476145425356, 0.0012215339763565049], 'true,true': [0.0003654476145425356, nan]}
{'': [0.001891093064276737, 0.1224371374640894], 'false': [0.032760390569259376, 0.13067823876093418], 'false,false': [0.0008739393905252598, 0.13302853389634245], 'false,false,false': [0.098242955882772, 0.23204627621013071], 'true': [0.0022941011328501733, 0.0004115477959554155], 'true,true': [1.2194443371114718e-05, 0.0010141546924474498], 'true,false': [0.00037375619496625434, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.1391744791123943, 0.0961335288129148], 'true': [0.05535428731569087, 0.005852650818051179], 'false': [0.00046148490014344954, 0.09934813635815803], 'false,false': [0.09934813635815803, nan], 'true,true': [0.0009908016998784583, 0.03892045436343957], 'true,true,false': [0.0, 0.035473423816228936], 'true,true,true': [0.0011111446963691745, 0.0002605333474642729]}
{'': [0.057851074239772995, 0.09068566327020897], 'false': [0.07207126029347381, 0.14702087347419956], 'false,false': [0.0001999303464378932, 0.15078382880532498], 'false,false,false': [0.15078382880532498, nan], 'false,true': [0.010629890384490168, 0.00037802354708947145], 'true': [3.728094189544192e-06, 0.09325175028697014], 'false,true,true': [nan, 0.010629890384490168], 'false,false,true': [0.0001999303464378932, nan]}
{'': [0.0002125883608676628, 0.06957325641327851], 'false': [0.024811104125889636, 0.08549001737575987], 'false,false': [0.00032017603877316223, 0.08681956073310511], 'false,false,false': [0.058229490647050595, 0.1363400420709192], 'false,true': [0.010887584612317307, 0.027303233487787314], 'false,true,false': [0.0, 0.02689922096474588], 'true': [0.00015897871811360352, 0.00029885444530260987], 'true,false': [0.0, 5.3469922207585036e-05]}
{'': [0.03979551349680049, 0.07753028429630224], 'false': [0.02686251979136726, 0.09620773844169378], 'false,false': [0.13398727396027357, 0.0948183039443637], 'false,false,false': [0.06239492679683659, 0.15859774862532455], 'true': [0.0001381046497216848, 0.10177810678279994], 'true,true': [0.00014379697541053865, 0.0], 'true,true,true': [0.00016424323634068317, 8.536379796736382e-05], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,false;interaction(A, J), interaction(J, K).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 7.413
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.02481560176617899;  // std dev = 2.236, 36.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | | else return 0.1775933795439568;  // std dev = 5.595, 144.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=46 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.1974346493852266;  // std dev = 3.543, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8185200990842298;  // std dev = 0.994, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.16087834464277131;  // std dev = 0.089, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return -0.00972864021762351;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.13659577373824355;  // std dev = 3.441, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.41250929388914165;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.07420790707142441;  // std dev = 0.797, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.16695564593431503;  // std dev = 1.774, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6821560162749493;  // std dev = 0.272, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1416355129225719;  // std dev = 0.067, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16879719913177552;  // std dev = 3.546, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | else return 0.3256714635620366;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then return 0.18506167557810188;  // std dev = 0.887, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.42628762986820595;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.44091103938469917;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5385639478715163;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.010649441196012669;  // std dev = 1.877, 53.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=9 */
%   | | | else return 0.06637641791834861;  // std dev = 3.722, 146.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=43 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4654527469186506;  // std dev = 0.048, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.023727703465816805;  // std dev = 2.011, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.1380437830694181;  // std dev = 3.122, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.37260803073126975;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.22963129275138078;  // std dev = 0.295, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.05649684258285501;  // std dev = 0.303, 191.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return -0.18964101082868667;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.3984632654108333;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, H) )
%   | | | then return 0.05042550186889176;  // std dev = 3.605, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | | | else return 0.1611743398973363;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.3044868245704153;  // std dev = 0.042, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3094587041652041;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( phenotype(G, I), complex(A, J) )
%   | | | then return -0.16309165664719663;  // std dev = 0.505, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.12713323341208102;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( location(A, K) )
%   | | | then return 0.056799797809589915;  // std dev = 0.840, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.14043937328047432;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.28335942768880645;  // std dev = 0.048, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.03634038471190577;  // std dev = 4.135, 104.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=28 */
%   | | | else return 0.06325665641631288;  // std dev = 3.575, 132.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24520517620158655;  // std dev = 0.035, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2628822994896014;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6050438753630013;  // std dev = 1.334, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.20487433975664598;  // std dev = 0.104, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.222913677278986;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( enzyme(A, I), enzyme(G, I) )
%   | | | then return -0.1310657518400755;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.02888813482194302;  // std dev = 2.959, 97.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=27 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.048462232174796116;  // std dev = 1.174, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.10388231103841461;  // std dev = 0.981, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18934921351356557;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1874168163849219;  // std dev = 0.013, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.3400484757490454;  // std dev = 0.393, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.4937368827480106;  // std dev = 0.274, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.1376428501255098;  // std dev = 0.251, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return -0.14630124724843224;  // std dev = 0.180, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2207336596792418;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.12568034691365634;  // std dev = 1.726, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.05648015999684839;  // std dev = 2.476, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16884850601188148;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.16387741644365314;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.04676835582468253;  // std dev = 0.345, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10602618242768228;  // std dev = 0.085, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.06852981971383836;  // std dev = 0.288, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.007821406701141434;  // std dev = 1.338, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15990817220841372;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.004471640606079172;  // std dev = 2.598, 125.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=35 */
%   | | | else return 0.1013219943590249;  // std dev = 2.923, 53.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1466793790902811;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.14137018396386478;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( complex(A, E) )
%   | then if ( interaction(A, F), complex(F, E) )
%   | | then if ( interaction(G, A) )
%   | | | then return -0.05815857773397687;  // std dev = 1.016, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | | else return -0.14257831876477706;  // std dev = 0.792, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.036590754500751714;  // std dev = 1.748, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return -0.023256627952210434;  // std dev = 1.799, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.25416284152725205;  // std dev = 2.147, 58.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=42 */
%   | | | else return -0.16805480428931716;  // std dev = 0.455, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.07819990809471049;  // std dev = 0.332, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.491', 'seconds']
Refined model CLL: -0.169431


******************************************
Best model found
******************************************
Results 

CLL : -0.189568 

AUC ROC : 0.983087 

AUC PR : 0.203148 

Precision : 0.135406 

Recall : 0.927798 

F1 : 0.236322 

Total Learning Time : 7.413 

Total Inference Time : 8.828741788864136 

Total revision time: 27.993968954086306
Best scored revision CLL: -0.169431


Results 

CLL : -0.189568 

AUC ROC : 0.983087 

AUC PR : 0.203148 

Precision : 0.135406 

Recall : 0.927798 

F1 : 0.236322 

Total Learning Time : 28.023483982086184 

Total Inference Time : 8.828741788864136 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.539
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07126368919787303;  // std dev = 3.198, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | | else return 0.1513820178062787;  // std dev = 5.250, 133.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.13939893509951237;  // std dev = 2.543, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5944734122109544;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7870350510675445;  // std dev = 1.677, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.1576117589093429;  // std dev = 0.061, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | | else if ( location(A, I) )
%   | | | then return 0.13009243357091432;  // std dev = 2.795, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return 0.008125631606860426;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5637160055651471;  // std dev = 0.045, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5859815224154469;  // std dev = 2.11e-08, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.017086589346576364;  // std dev = 2.869, 77.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5871854276073633;  // std dev = 2.106, 47.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=42 */
%   | | | else return -0.14109441329522082;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.43872357880262514;  // std dev = 0.745, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.078942065443887;  // std dev = 2.509, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.09760096728960767;  // std dev = 1.486, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3665877232076369;  // std dev = 0.958, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5511432748991021;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.48866185576595483;  // std dev = 0.852, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.05558791976657901;  // std dev = 4.381, 192.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4461234980422131;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5357975436505082;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.07045603594649226;  // std dev = 2.834, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.8268402877712691;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33319085434733825;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21175762287915298;  // std dev = 0.927, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.0577713579446519;  // std dev = 4.589, 197.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3401851080240549;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04882759422506492;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.0874293646791178;  // std dev = 2.510, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.10391640931931513;  // std dev = 1.394, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.08546195481253936;  // std dev = 1.275, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else return 0.25470683775111447;  // std dev = 0.592, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.26841982889265925;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.36038493479520345;  // std dev = 0.044, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.04660613156398487;  // std dev = 1.282, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.30736208698243894;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.0759376725751474;  // std dev = 4.077, 148.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=46 */
%   | | | else return 0.07548799066885799;  // std dev = 3.010, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.27433073767881466;  // std dev = 0.139, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.26128185713770097;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2619270063398516;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6090710421547199;  // std dev = 0.715, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.16905757541801997;  // std dev = 0.482, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24659389542192187;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06374618089096674;  // std dev = 3.425, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19767180769649983;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.213518046657194;  // std dev = 0.048, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43848163785101996;  // std dev = 1.434, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.14277551265981037;  // std dev = 0.209, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.002494304733099695;  // std dev = 0.753, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.014725404135034164;  // std dev = 2.485, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1714120015360592;  // std dev = 0.022, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.20243527542528117;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.21011974819950452;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09948054723736642;  // std dev = 0.327, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.17777830758067173;  // std dev = 0.529, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.026609726639677436;  // std dev = 1.581, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.07824640016966727;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03770994561900835;  // std dev = 2.797, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
%   | | | else return 0.047821280014388026;  // std dev = 2.422, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14554314571455274;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.15995220056598458;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.17106272505721798;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16601635132907228;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1853167378992819;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.010165838995575781;  // std dev = 1.622, 92.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18261650493116446;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.021102745559721085;  // std dev = 2.912, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   | | | else return -0.03780899349026434;  // std dev = 2.580, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.278', 'seconds']
Parameter learned model CLL:-0.177955 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.198, 48, 13], 'false,false,true,false': [5.25, 94, 39], 'false,false,false,true': [2.543, 23, 9], 'false,false,false,false': [1.477, 8, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [0.935, 1, 7], 'false,true,true': [0.0, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.677, 3, 52], 'false,false,true,false': [0.061, 146, 0], 'false,false,false,true': [2.795, 27, 11], 'false,false,false,false': [0.913, 5, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.045, 0, 11], 'true,false': [2.11e-08, 0, 4], 'false,true,true': [2.869, 63, 14], 'false,true,false,true': [2.106, 5, 42], 'false,true,false,false': [0.0, 70, 0], 'false,false,true,true': [0.745, 1, 3], 'false,false,true,false': [2.509, 25, 9], 'false,false,false,true': [1.486, 8, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.958, 1, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.852, 1, 6], 'false,true,false': [4.381, 143, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.834, 31, 11], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.027, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.927, 1, 6], 'false,true': [4.589, 141, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.792, 1, 2], 'false,false,false,true': [2.51, 22, 9], 'false,false,false,false': [1.394, 6, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [1.275, 2, 9], 'true,true,false': [0.592, 1, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.044, 0, 2], 'false,true': [1.282, 26, 5], 'false,false,true': [0.004, 0, 5], 'false,false,false,true': [4.077, 102, 46], 'false,false,false,false': [3.01, 33, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.139, 0, 13], 'true,true,true,false': [0.065, 0, 3], 'true,true,false,true': [0.041, 0, 3], 'true,true,false,false': [0.715, 0, 33], 'true,false': [0.482, 90, 0], 'false,true': [0.003, 0, 3], 'false,false,true': [3.425, 69, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.048, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.434, 2, 56], 'false,true,false': [0.209, 147, 0], 'false,false,true,true': [0.753, 1, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.485, 33, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.022, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.055, 0, 5], 'false,true,true': [0.327, 25, 1], 'false,true,false,true': [0.529, 1, 6], 'false,true,false,false': [1.581, 55, 17], 'false,false,true': [0.864, 1, 3], 'false,false,false,true': [2.797, 68, 31], 'false,false,false,false': [2.422, 26, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [5.27e-09, 0, 8], 'true,true,true,false': [0.008, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.008, 0, 2], 'true,false': [0.043, 0, 3], 'false,true': [1.622, 68, 24], 'false,false,true': [0.003, 0, 3], 'false,false,false,true': [2.912, 69, 31], 'false,false,false,false': [2.58, 41, 12]}]
{'': [-2.3684757858670006e-16, 0.206312147272239], 'false': [-2.5376526277146434e-16, 0.19711940750236023], 'false,false': [0.19619513232011984, 0.20118983234180587], 'false,false,false': [0.2021484375000001, 0.1983471074380164], 'false,false,true': [0.16769685568395537, 0.20724744191305383], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.05859375000000028, 0.19754522567820054], 'false': [-6.344131569286608e-17, 0.19263731850561042], 'false,false': [0.1913743678876944, 0.19827672903459345], 'false,false,false': [0.20562522450129225, 0.1388888888888889], 'false,false,true': [0.05113907064109639, 2.528175660393504e-05], 'true': [1.1102230246251565e-16, 0.10937500000000006], 'false,true': [-6.344131569286608e-17, nan]}
{'': [0.000233279441553987, 0.15616402723709916], 'false': [0.1464824395198143, 0.19433028436960528], 'false,false': [0.19242514207766256, 0.2006254185422547], 'false,false,false': [0.2006254185422547, nan], 'false,false,true': [0.13860555630926466, 0.1851313067499201], 'false,true': [0.10687759319870642, 0.16538026510611492], 'false,true,false': [0.09436303442616013, -6.661338147750939e-17], 'true': [0.00018590746522892135, 1.1102230246251565e-16]}
{'': [0.057339499662941246, 0.1239685410744418], 'false': [0.10709598040637663, 0.19601852022828029], 'false,false': [0.0017869854346129754, 0.19975306574502302], 'false,false,false': [0.19120404143598518, 0.0], 'false,true': [0.09113586300970364, 0.09998583324028205], 'false,true,true': [0.0, 0.10366728104397849], 'true': [0.057339499662941246, nan], 'false,false,true': [0.0, 0.0]}
{'': [0.05742908721089146, 0.1246620766180191], 'false': [0.10689322870991615, 0.20315024379482563], 'false,false': [0.17275017547650987, 0.20610552697344495], 'false,false,false': [0.20323556084119634, 0.21578030332666273], 'false,false,true': [0.0, 0.20911126709023095], 'true': [7.855513750566602e-05, 0.12287084388200555], 'true,true': [7.855513750566602e-05, nan]}
{'': [0.11444999738381774, 0.12132260302691236], 'false': [0.05300535169639104, 0.12970536509337938], 'false,false': [3.6133965650497756e-06, 0.13169086510579692], 'false,false,false': [0.11228710209779377, 0.19279192280483273], 'true': [0.129653248845593, 0.002523134390132927], 'true,true': [0.1477331522202651, 0.07018482802070114], 'true,false': [0.0, 0.0009655080173106567], 'true,false,true': [0.0, nan]}
{'': [0.11454058673293918, 0.1148514028837292], 'false': [3.816743556123159e-06, 0.11732304541815208], 'false,false': [0.11732304541815208, nan], 'true': [0.03693486845482042, 0.002582767505054129], 'true,true': [0.0014964068877770936, 0.023447394441536762], 'true,true,false': [0.0005587523111499626, 0.015485764956267458], 'true,true,true': [0.0014895583921369871, 0.001387736659474383]}
{'': [0.00021389304748731242, 0.09015720115145476], 'false': [0.07879470549467694, 0.1376377925818447], 'false,false': [0.1418730910047861, 0.1372371160294061], 'false,false,true': [0.1418730910047861, nan], 'false,false,false': [0.1372371160294061, nan], 'false,true': [0.03547490712340704, 0.00029724766206103235], 'false,true,true': [nan, 0.03547490712340704], 'true': [0.0, 0.0003244204903759461]}
{'': [0.0005518625273661579, 0.07354040316591987], 'false': [0.03157986732658324, 0.10280386755138139], 'false,false': [0.18671068530159077, 0.09995391535368554], 'false,false,false': [0.0790212344746398, 0.15441517684644226], 'false,true': [0.004122129217774235, 0.03856690722284864], 'false,true,false': [0.04004058188610789, 0.03472209811083362], 'true': [4.9788262943445404e-05, 0.0005131652062548379], 'true,false': [0.0, 0.0006059563938695112]}
{'': [0.000359398830781843, 0.07258810401396984], 'false': [0.028609475542627976, 0.09844772397896474], 'false,false': [2.466105472253196e-06, 0.09974157537652528], 'false,false,false': [0.08481773641659002, 0.1256314006568525], 'true': [0.00010269914980826505, 0.0006165135162954083], 'true,true': [3.961116887745142e-05, 2.7247386397232416e-05], 'true,true,true': [3.469446951953614e-18, 3.1959155017972224e-05], 'true,true,false': [0.0, 3.23824503278107e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
3;false,false,false;location(A, J), interaction(A, K).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 8.434
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( complex(I, H), location(A, J) )
%   | | | then return -0.06290369647943514;  // std dev = 1.662, 38.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   | | | else return 0.17633075328133052;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.24590403714032863;  // std dev = 3.411, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return 0.13373948628061325;  // std dev = 5.035, 127.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=35 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.798875810169956;  // std dev = 1.393, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.16035233544366156;  // std dev = 0.134, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.07347310135190044;  // std dev = 2.482, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.4064057118924293;  // std dev = 1.312, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.22203310341295115;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.05336403602150678;  // std dev = 1.531, 37.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=4 */
%   | | | else return 0.10445878120997729;  // std dev = 2.241, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6870411074261126;  // std dev = 0.250, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.14261531561122076;  // std dev = 0.053, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.1856311742068619;  // std dev = 1.613, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.06789221545485381;  // std dev = 2.416, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then return 0.11170443521163775;  // std dev = 0.852, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.4365687887336907;  // std dev = 0.035, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5685019345066484;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3932969484737277;  // std dev = 1.028, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(I, A), interaction(A, I) )
%   | | | then return -0.12096083156703077;  // std dev = 0.056, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0.057606898605082196;  // std dev = 4.170, 177.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=49 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, K), interaction(A, L) )
%   | | | then return 0.04184043440757458;  // std dev = 2.880, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return 0.3212581924813056;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3248024220433515;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.23941464286581918;  // std dev = 0.349, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.38607318890488873;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, G), location(A, H) )
%   | | | then return 0.025862245448523145;  // std dev = 2.603, 84.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=20 */
%   | | | else return 0.13078123699123534;  // std dev = 3.201, 81.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=32 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.012621486173183668;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.024367244076939982;  // std dev = 2.331, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.15549001373466412;  // std dev = 1.752, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.2721457538034545;  // std dev = 0.028, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.30070255433098475;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.1111943891086629;  // std dev = 0.032, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.04017976503585754;  // std dev = 0.519, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.024606349733091573;  // std dev = 0.594, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.08353064435814082;  // std dev = 0.880, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.33841634182162333;  // std dev = 0.103, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.0074285308182732756;  // std dev = 2.222, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | | else return 0.0655424640077752;  // std dev = 4.410, 160.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=51 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.22557662908430232;  // std dev = 0.026, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2852833387753969;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5815813553121116;  // std dev = 1.098, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.16125206860181848;  // std dev = 0.079, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.0012146500358104217;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4769542973437799;  // std dev = 1.068, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return -0.16870358128108154;  // std dev = 0.148, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.1524778590252431;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.030883544900958498;  // std dev = 1.302, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17542146387036223;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(A, E), phenotype(A, F) )
%   | | then return -0.08768410103915847;  // std dev = 0.793, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.22834874849027278;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.5054326890754961;  // std dev = 0.139, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.2825463995728952;  // std dev = 2.032, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | else return -0.1331341549218087;  // std dev = 0.045, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3035512972984689;  // std dev = 1.779, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return -0.19129608922818775;  // std dev = 0.166, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.07350369880032585;  // std dev = 0.752, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.0666318498000245;  // std dev = 0.263, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.1659251556087101;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), complex(A, F) )
%   | then if ( complex(E, G), interaction(H, E) )
%   | | then if ( complex(H, G), interaction(A, I) )
%   | | | then return -0.09178175870939517;  // std dev = 1.109, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return -0.020395857148415793;  // std dev = 1.101, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else return 0.05662525473432708;  // std dev = 0.217, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( complex(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.6007025805932044;  // std dev = 0.109, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1892135049345573;  // std dev = 0.167, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return -0.011390662018342126;  // std dev = 2.117, 82.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=20 */
%   | | | else return 0.024209163349431486;  // std dev = 2.217, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.14152967676823006;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( location(C, E), interaction(D, C) )
%   | | | then return -0.31272419999616413;  // std dev = 0.626, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.1499268625287989;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.14519568817253958;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.009262927398814874;  // std dev = 0.176, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else return -0.04672480309887738;  // std dev = 0.171, 45.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.21983524809440483;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.13024565552039313;  // std dev = 1.090, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.0032462043465102987;  // std dev = 2.926, 124.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.581', 'seconds']
Refined model CLL: -0.164992


******************************************
Best model found
******************************************
Results 

CLL : -0.182601 

AUC ROC : 0.982461 

AUC PR : 0.186867 

Precision : 0.150645 

Recall : 0.908127 

F1 : 0.258421 

Total Learning Time : 8.434 

Total Inference Time : 8.620057821273804 

Total revision time: 29.567432830810546
Best scored revision CLL: -0.164992


Results 

CLL : -0.182601 

AUC ROC : 0.982461 

AUC PR : 0.186867 

Precision : 0.150645 

Recall : 0.908127 

F1 : 0.258421 

Total Learning Time : 29.596947858810424 

Total Inference Time : 8.620057821273804 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.189
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1876943896449668;  // std dev = 7.637, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1857312440759465;  // std dev = 5.340, 125.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=44 */
%   | | | else return 0.15224976259446477;  // std dev = 5.413, 135.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14484579340154952;  // std dev = 4.821, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   | | | else return 0.1493137566242535;  // std dev = 5.856, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10020419156776544;  // std dev = 3.695, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return 0.1422599114104794;  // std dev = 6.566, 188.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10308943150019359;  // std dev = 7.570, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06722642958407937;  // std dev = 7.666, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7325364216404034;  // std dev = 0.005, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.26752759350084576;  // std dev = 0.006, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06208697543647073;  // std dev = 3.986, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   | | | else return 0.03504572836701949;  // std dev = 4.413, 92.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05419069772449289;  // std dev = 3.763, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
%   | | | else return 0.09504825281919001;  // std dev = 5.692, 138.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03377113197265115;  // std dev = 6.968, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.033898676425638714;  // std dev = 6.941, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.435', 'seconds']
Parameter learned model CLL:-0.342461 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.637, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.34, 81, 44], 'false,false,false,false': [5.413, 92, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.821, 69, 35], 'false,false,false,false': [5.856, 101, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.695, 43, 20], 'false,false,false,false': [6.566, 121, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.57, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.666, 181, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.005, 0, 35], 'true,false': [0.006, 60, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.986, 47, 24], 'false,false,false,false': [4.413, 64, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.763, 66, 35], 'false,false,false,false': [5.692, 86, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.968, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.941, 167, 87]}]
{'': [nan, 0.22094524793388515], 'false': [nan, 0.22094524793388517], 'false,false': [nan, 0.22094524793388515], 'false,false,false': [nan, 0.22094524793388517]}
{'': [nan, 0.2226479289940845], 'false': [nan, 0.222647928994084], 'false,false': [nan, 0.2226479289940845], 'false,false,false': [0.22809600000000071, 0.217064471879287]}
{'': [nan, 0.22389077458440823], 'false': [nan, 0.22389077458440823], 'false,false': [nan, 0.2238907745844081], 'false,false,false': [0.22347317051147794, 0.22416655788729256]}
{'': [nan, 0.22647408822319245], 'false': [nan, 0.22647408822319245], 'false,false': [nan, 0.22647408822319287], 'false,false,false': [0.21667926429831239, 0.22931246371067635]}
{'': [nan, 0.22475278653407615], 'false': [nan, 0.22475278653407615], 'false,false': [nan, 0.22475278653407632], 'false,false,false': [nan, 0.22475278653407632]}
{'': [nan, 0.2192965719272833], 'false': [nan, 0.2192965719272833], 'false,false': [nan, 0.21929657192728308], 'false,false,false': [nan, 0.21929657192728286]}
{'': [0.23271747118737765, 0.21714655096787194], 'true': [6.915270889505467e-07, 7.027964199342781e-07], 'false': [nan, 0.21714655096787194], 'false,false': [nan, 0.21714655096787194], 'false,false,false': [0.22376512596707057, 0.21172022684310096], 'true,true': [nan, 6.915270889505467e-07], 'true,true,false': [nan, 6.915270889505467e-07]}
{'': [nan, 0.19518947139562895], 'false': [nan, 0.19518947139562895], 'false,false': [nan, 0.19518947139562828], 'false,false,false': [0.14017464427475554, 0.23474849309299156]}
{'': [nan, 0.18463425873643044], 'false': [nan, 0.18463425873643072], 'false,false': [nan, 0.18463425873643072], 'false,false,false': [nan, 0.18463425873643072]}
{'': [nan, 0.18968908480800747], 'false': [nan, 0.18968908480800747], 'false,false': [nan, 0.18968908480800717], 'false,false,false': [nan, 0.18968908480800717]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 21.005
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7748156017661789;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(D, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6359267128772901;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(A, H), location(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.19814893509951234;  // std dev = 3.350, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.13087620782678508;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0.20735528430586092;  // std dev = 3.784, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.735981226434616;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5707767129572677;  // std dev = 0.807, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(E, A), enzyme(A, F) )
%   | | then if ( enzyme(E, F) )
%   | | | then return -0.137855787227672;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.17705303284963497;  // std dev = 3.965, 75.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
%   | | else if ( location(A, G) )
%   | | | then return 0.09122876170631256;  // std dev = 5.536, 170.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=44 */
%   | | | else return 0.25077335195916656;  // std dev = 1.250, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( interaction(A, C), recursion_proteinclass(C, B) )
%   | then return 0.5718010450134163;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.12618848336981034;  // std dev = 0.051, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.4685312897571892;  // std dev = 0.997, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7360648130902847;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.14173627294078475;  // std dev = 3.118, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.03333143866834941;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.13880267040741945;  // std dev = 5.624, 155.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=51 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.463824146686;  // std dev = 0.153, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D), enzyme(D, E) )
%   | | then return -0.09922233381979925;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12165922067577141;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.054956181818036555;  // std dev = 2.434, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | else if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( phenotype(F, H), interaction(I, A) )
%   | | | then return 0.37016685733748395;  // std dev = 1.441, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.11629297820455037;  // std dev = 1.954, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.01980060584299542;  // std dev = 2.433, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | | else return 0.09978183317906407;  // std dev = 5.342, 140.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=43 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.353228639246936;  // std dev = 0.143, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(D, F), complex(A, G) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.20779555633424762;  // std dev = 1.079, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.0859134837691449;  // std dev = 1.672, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( phenotype(D, J) )
%   | | | then return -0.08095674987523986;  // std dev = 1.721, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | | else return 0.08116324305607803;  // std dev = 0.576, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1092456173531278;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.14630865854239547;  // std dev = 2.630, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.2818063226028261;  // std dev = 1.008, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06313199183305093;  // std dev = 5.573, 155.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=45 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(E, D) )
%   | | | then return 0.5142446253521247;  // std dev = 1.353, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return -0.22319947634820847;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.6844676118969641;  // std dev = 0.403, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.7476952769653201;  // std dev = 0.151, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.21661400564164668;  // std dev = 0.053, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.33463449531948036;  // std dev = 0.294, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.0987717886408888;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1525739336074185;  // std dev = 4.754, 99.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=40 */
%   | | | else return -0.033230976054102086;  // std dev = 0.898, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.19654501143771702;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.5115041438925269;  // std dev = 0.443, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.6821570599197323;  // std dev = 0.204, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.22578939806809165;  // std dev = 0.077, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( interaction(H, A), location(H, I) )
%   | then if ( interaction(A, J), complex(J, K) )
%   | | then if ( enzyme(H, L), location(A, I) )
%   | | | then return 0.2950091793944206;  // std dev = 0.595, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.036099403413420474;  // std dev = 1.735, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(M, H), enzyme(M, N) )
%   | | | then return 0.0030345523404941336;  // std dev = 3.643, 89.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=25 */
%   | | | else return 0.04843913754908907;  // std dev = 2.883, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | else return 0.12149942386662572;  // std dev = 0.465, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.415917017515454;  // std dev = 0.144, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.18438860674263946;  // std dev = 0.063, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.2447890346459943;  // std dev = 0.220, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6179301332187119;  // std dev = 0.342, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.2314343897345737;  // std dev = 0.074, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.356876066440207;  // std dev = 0.931, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.20761279309863;  // std dev = 0.124, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.36764915878116927;  // std dev = 0.792, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.12333235473124636;  // std dev = 3.403, 55.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=22 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.20924629177767337;  // std dev = 0.231, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return -0.08252942373707604;  // std dev = 0.252, 104.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=19 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(H, F), location(F, I) )
%   | | then if ( enzyme(H, J), interaction(K, H) )
%   | | | then return 0.06944015988988998;  // std dev = 2.499, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | | else return -0.008897883140048576;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else return 0.31789076746652833;  // std dev = 0.613, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(L, A), phenotype(A, M) )
%   | | then if ( interaction(L, N), recursion_proteinclass(N, B) )
%   | | | then return 0.5107719146547313;  // std dev = 0.224, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.19088532322687654;  // std dev = 0.097, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(P, A), complex(A, Q) )
%   | | | then return 0.14046614246927625;  // std dev = 0.672, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.03590869758844684;  // std dev = 3.037, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.23635116615428614;  // std dev = 0.133, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, C) )
%   | | then return -0.15776302849291873;  // std dev = 0.090, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(F, C), interaction(F, F) )
%   | | | then return -0.04948311992353049;  // std dev = 2.467, 84.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=19 */
%   | | | else return 0.016760183201273895;  // std dev = 2.675, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   else if ( phenotype(A, G), interaction(H, A) )
%   | then return -0.027091120130642788;  // std dev = 0.244, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.15549797331826223;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.03487115052388581;  // std dev = 1.375, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.06325338296065418;  // std dev = 1.041, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.18936473115349825;  // std dev = 2.506, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '30.849', 'seconds']
Refined model CLL: -0.23369


******************************************
Best model found
******************************************
Results 

CLL : -0.239549 

AUC ROC : 0.973307 

AUC PR : 0.358278 

Precision : 0.322638 

Recall : 0.641844 

F1 : 0.429419 

Total Learning Time : 21.005 

Total Inference Time : 11.680976867675781 

Total revision time: 40.40937780761719
Best scored revision CLL: -0.23369


Results 

CLL : -0.239549 

AUC ROC : 0.973307 

AUC PR : 0.358278 

Precision : 0.322638 

Recall : 0.641844 

F1 : 0.429419 

Total Learning Time : 40.47122191810608 

Total Inference Time : 11.680976867675781 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.472
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20025419825740745;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17408811758091264;  // std dev = 5.849, 152.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
%   | | | else return 0.15496422088264522;  // std dev = 5.933, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15751431164954516;  // std dev = 5.161, 117.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=41 */
%   | | | else return 0.15245001801089353;  // std dev = 6.427, 183.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11763406057260758;  // std dev = 4.384, 86.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=29 */
%   | | | else return 0.11530744478192334;  // std dev = 7.078, 226.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09347425737805562;  // std dev = 8.339, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.044381376133915046;  // std dev = 8.536, 347.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7347601271890789;  // std dev = 0.012, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2652093485597218;  // std dev = 0.018, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05892494652136137;  // std dev = 3.943, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   | | | else return 0.10566200982049627;  // std dev = 5.032, 109.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03145942060029218;  // std dev = 4.172, 130.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=41 */
%   | | | else return 0.04611227670846766;  // std dev = 6.516, 193.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03384408773279992;  // std dev = 7.732, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04993451347458464;  // std dev = 7.575, 297.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.118', 'seconds']
Parameter learned model CLL:-0.333731 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.272, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.849, 100, 52], 'false,false,false,false': [5.933, 109, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.161, 76, 41], 'false,false,false,false': [6.427, 120, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.384, 57, 29], 'false,false,false,false': [7.078, 151, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.339, 210, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.536, 243, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.012, 0, 41], 'true,false': [0.018, 90, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.943, 48, 23], 'false,false,false,false': [5.032, 69, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.172, 89, 41], 'false,false,false,false': [6.516, 130, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.732, 215, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.575, 193, 104]}]
{'': [nan, 0.22506925207756448], 'false': [nan, 0.22506925207756293], 'false,false': [nan, 0.22506925207756448], 'false,false,false': [nan, 0.22506925207756293]}
{'': [nan, 0.22186610050118152], 'false': [nan, 0.2218661005011806], 'false,false': [nan, 0.22186610050118152], 'false,false,false': [0.22506925207756484, 0.2186644033795018]}
{'': [nan, 0.22645676981180582], 'false': [nan, 0.22645676981180582], 'false,false': [nan, 0.2264567698118039], 'false,false,false': [0.22763418068076252, 0.22569399657104858]}
{'': [nan, 0.2221991823866103], 'false': [nan, 0.2221991823866103], 'false,false': [nan, 0.22219918238661193], 'false,false,false': [0.2234991887506757, 0.22170299761565426]}
{'': [nan, 0.2214721018118527], 'false': [nan, 0.2214721018118527], 'false,false': [nan, 0.22147210181185342], 'false,false,false': [nan, 0.22147210181185342]}
{'': [nan, 0.20999499280365366], 'false': [nan, 0.20999499280365366], 'false,false': [nan, 0.20999499280365472], 'false,false,false': [nan, 0.209994992803654]}
{'': [0.2150129463151118, 0.22757950966374807], 'false': [nan, 0.22757950966374807], 'false,false': [nan, 0.22757950966374807], 'false,false,false': [0.21900416584011104, 0.23230367814157152], 'true': [3.6026889897577692e-06, 3.654555288898662e-06], 'true,true': [nan, 3.6026889897577692e-06], 'true,true,false': [nan, 3.6026889897577692e-06]}
{'': [nan, 0.18537300095992587], 'false': [nan, 0.18537300095992587], 'false,false': [nan, 0.1853730009599252], 'false,false,false': [0.1338925852101655, 0.2199625144101241]}
{'': [nan, 0.1874018954417002], 'false': [nan, 0.18740189544170033], 'false,false': [nan, 0.18740189544170033], 'false,false,false': [nan, 0.18740189544170033]}
{'': [nan, 0.19319606611663998], 'false': [nan, 0.19319606611663998], 'false,false': [nan, 0.19319606611664], 'false,false,false': [nan, 0.19319606611664]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 31.134
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), interaction(D, F) )
%   | | then if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.026466449515872324;  // std dev = 2.304, 52.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=6 */
%   | | else if ( complex(A, H), phenotype(D, I) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.17064893509951234;  // std dev = 3.708, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | else if ( location(A, J), complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( interaction(A, M), interaction(M, A) )
%   | | | then return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.29814893509951146;  // std dev = 4.299, 75.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=33 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(A, D), complex(C, E) )
%   | then return 0.1437727539281433;  // std dev = 0.421, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then return 0.743117883855449;  // std dev = 0.130, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7431360607253593;  // std dev = 0.106, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.09157641259462546;  // std dev = 2.777, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   else if ( phenotype(A, G), interaction(H, A) )
%   | then if ( phenotype(H, I) )
%   | | then if ( phenotype(H, G), complex(H, J) )
%   | | | then return 0.22628455328291874;  // std dev = 2.074, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.1174607990810485;  // std dev = 3.372, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else if ( interaction(H, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7932561483119575;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16797336437287894;  // std dev = 0.049, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.08597736356811148;  // std dev = 0.432, 106.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=28 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), complex(C, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.7413086832605066;  // std dev = 0.097, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.044167675223575266;  // std dev = 0.391, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( complex(A, H), phenotype(C, I) )
%   | | then if ( interaction(A, J), interaction(C, J) )
%   | | | then return 0.1211363173519212;  // std dev = 1.442, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.003440390178030897;  // std dev = 1.570, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.7791575057579857;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12714138216299165;  // std dev = 3.655, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | then return 0.5638838503262158;  // std dev = 0.297, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14208515187659018;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.09076438233162962;  // std dev = 0.421, 187.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=54 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.5344863680104877;  // std dev = 0.313, 33.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=28 */
%   | else if ( interaction(A, C) )
%   | | then return -0.1649204242183953;  // std dev = 0.226, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( interaction(A, F), location(A, G) )
%   | | | then return 0.13579306702645544;  // std dev = 2.764, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return 0.07966277004982206;  // std dev = 5.269, 142.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=41 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5914812387096938;  // std dev = 0.223, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, I), location(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6268645591691675;  // std dev = 0.158, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1474994725412581;  // std dev = 0.057, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.35156384611900254;  // std dev = 1.437, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.15349772783090618;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.3040716840551605;  // std dev = 0.318, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.6050499100305525;  // std dev = 0.107, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1427278671868735;  // std dev = 0.089, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(E, F), interaction(E, A) )
%   | | | then return -0.07606319905096917;  // std dev = 0.926, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.05483920062410614;  // std dev = 2.537, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.26426947176906473;  // std dev = 1.532, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.04742673228794709;  // std dev = 5.745, 186.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=50 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return -0.04802391506603354;  // std dev = 1.179, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.02945970670111043;  // std dev = 2.266, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.324298035334952;  // std dev = 0.121, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.06392508517682338;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(C, G), phenotype(G, H) )
%   | | then return 0.45659300739727215;  // std dev = 0.138, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5129267237212184;  // std dev = 0.235, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.12054090708791533;  // std dev = 0.093, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6514670976175074;  // std dev = 0.691, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.19166762616954502;  // std dev = 0.291, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.2762954393993881;  // std dev = 0.761, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.05702413717558612;  // std dev = 5.678, 188.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=55 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.44275377478788003;  // std dev = 0.160, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.16814411392213638;  // std dev = 0.052, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( location(A, E), interaction(A, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.28945312030295683;  // std dev = 0.134, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(F, G), interaction(H, A) )
%   | | | then return 0.05622014147505719;  // std dev = 2.542, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return -0.09174444554567583;  // std dev = 1.203, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5211129839568052;  // std dev = 0.826, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.21120703786258024;  // std dev = 0.078, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.15971634046678773;  // std dev = 2.478, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.10527924926682439;  // std dev = 3.629, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, C) )
%   | | then return 0.38523937323310553;  // std dev = 0.317, 73.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=63 */
%   | | else return -0.1636428211018723;  // std dev = 0.062, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else return -0.17212519682591718;  // std dev = 0.072, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(F, B) )
%   | | then return 0.27055171151835544;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.048690447714993874;  // std dev = 0.317, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( enzyme(A, K) )
%   | | | then return -0.07332059049308114;  // std dev = 0.838, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.02192357832240477;  // std dev = 1.615, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.06810997854769152;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.02975898623355167;  // std dev = 2.808, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), interaction(F, A) )
%   | | then return 0.3279043280305161;  // std dev = 0.145, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.003106839431272607;  // std dev = 0.367, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | else return -0.06417222385155052;  // std dev = 0.241, 94.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=16 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.24291957316717924;  // std dev = 2.643, 57.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=38 */
%   | | | else return 0.4670272092219544;  // std dev = 1.569, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | else return -0.20801539076332812;  // std dev = 0.059, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( phenotype(A, L) )
%   | | | then return -0.004957770851126406;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.06104652366201116;  // std dev = 1.117, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return 0.16072792951416676;  // std dev = 1.216, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F) )
%   | | then return 0.19501089581475464;  // std dev = 0.060, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(E, G), interaction(G, E) )
%   | | | then return 0.24343263977863702;  // std dev = 0.304, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4422672699973275;  // std dev = 0.359, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.15193339826946034;  // std dev = 0.070, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.1784834344449536;  // std dev = 0.064, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( location(I, J), interaction(K, A) )
%   | | | then return -0.024064914297421882;  // std dev = 2.548, 88.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=22 */
%   | | | else return 0.1728349971462586;  // std dev = 0.693, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.24549380980370838;  // std dev = 0.999, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.054284039637406155;  // std dev = 3.868, 95.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '43.511', 'seconds']
Refined model CLL: -0.209713


******************************************
Best model found
******************************************
Results 

CLL : -0.20354 

AUC ROC : 0.985362 

AUC PR : 0.539212 

Precision : 0.473008 

Recall : 0.69434 

F1 : 0.562691 

Total Learning Time : 31.134 

Total Inference Time : 33.07099103927612 

Total revision time: 73.14709597206115
Best scored revision CLL: -0.209713


Results 

CLL : -0.20354 

AUC ROC : 0.985362 

AUC PR : 0.539212 

Precision : 0.473008 

Recall : 0.69434 

F1 : 0.562691 

Total Learning Time : 73.20894008255004 

Total Inference Time : 33.07099103927612 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.306
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18209259707134337;  // std dev = 7.887, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1962084605358407;  // std dev = 5.706, 141.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=51 */
%   | | | else return 0.1819639599949103;  // std dev = 5.172, 118.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13013024373241436;  // std dev = 5.455, 136.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=44 */
%   | | | else return 0.15957467116447427;  // std dev = 5.573, 136.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.15060977244516824;  // std dev = 4.059, 71.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=26 */
%   | | | else return 0.14868463649745778;  // std dev = 6.468, 180.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.056047038497619064;  // std dev = 8.028, 307.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06989175177559119;  // std dev = 7.887, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7130372437502558;  // std dev = 0.990, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.26472843770036675;  // std dev = 0.016, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05754137823610858;  // std dev = 4.096, 76.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=25 */
%   | | | else return 0.05997302443776649;  // std dev = 3.930, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04194652636181105;  // std dev = 4.319, 135.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=44 */
%   | | | else return 0.04258661474933559;  // std dev = 5.695, 148.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04491034147726832;  // std dev = 7.082, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03254330515883462;  // std dev = 7.078, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.301', 'seconds']
Parameter learned model CLL:-0.32602 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.887, 192, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.706, 90, 51], 'false,false,false,false': [5.172, 77, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.455, 92, 44], 'false,false,false,false': [5.573, 88, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.059, 45, 26], 'false,false,false,false': [6.468, 114, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.028, 215, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.887, 192, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.99, 1, 44], 'true,false': [0.016, 104, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.096, 51, 25], 'false,false,false,false': [3.93, 47, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.319, 91, 44], 'false,false,false,false': [5.695, 100, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.082, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.078, 184, 92]}]
{'': [nan, 0.21900416584011229], 'false': [nan, 0.219004165840112], 'false,false': [nan, 0.21900416584011229], 'false,false,false': [nan, 0.219004165840112]}
{'': [nan, 0.2290365379168443], 'false': [nan, 0.22903653791684783], 'false,false': [nan, 0.2290365379168443], 'false,false,false': [0.23087369850611236, 0.22673082447572637]}
{'': [nan, 0.22381803291729607], 'false': [nan, 0.22381803291729607], 'false,false': [nan, 0.22381803291729702], 'false,false,false': [0.21880267226518613, 0.22839990641600696]}
{'': [nan, 0.23232357815881594], 'false': [nan, 0.23232357815881594], 'false,false': [nan, 0.23232357815881516], 'false,false,false': [0.23209680618924777, 0.23241197874962674]}
{'': [nan, 0.20991851456783145], 'false': [nan, 0.20991851456783145], 'false,false': [nan, 0.2099185145678325], 'false,false,false': [nan, 0.2099185145678325]}
{'': [nan, 0.21902469270344072], 'false': [nan, 0.21902469270344072], 'false,false': [nan, 0.21902469270344005], 'false,false,false': [nan, 0.21902469270344044]}
{'': [0.2081130130792347, 0.22068074238907828], 'false': [nan, 0.22068074238907828], 'false,false': [nan, 0.22068074238907828], 'false,false,false': [0.2207409972299168, 0.22061224489795933], 'true': [0.02178668088793698, 2.3813764012776854e-06], 'true,true': [nan, 0.02178668088793698], 'true,true,false': [nan, 0.02178668088793698]}
{'': [nan, 0.18050607092500795], 'false': [nan, 0.18050607092500795], 'false,false': [nan, 0.18050607092500764], 'false,false,false': [0.13818760147049416, 0.2191071820758307]}
{'': [nan, 0.18509230346852212], 'false': [nan, 0.18509230346852337], 'false,false': [nan, 0.18509230346852337], 'false,false,false': [nan, 0.18509230346852337]}
{'': [nan, 0.1814978866214503], 'false': [nan, 0.1814978866214503], 'false,false': [nan, 0.18149788662145136], 'false,false,false': [nan, 0.18149788662145136]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 19.244
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), phenotype(E, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( enzyme(H, I), enzyme(A, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.08672036367094094;  // std dev = 3.513, 70.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=16 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.08395538671241559;  // std dev = 2.328, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.18051735615214287;  // std dev = 5.762, 152.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=49 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(D, E), enzyme(E, F) )
%   | | then return -0.0016359812099969939;  // std dev = 0.349, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else if ( interaction(G, A), interaction(G, D) )
%   | | | then return 0.24726118442318964;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.11881990263750418;  // std dev = 2.683, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.7332857516252523;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( enzyme(J, K), phenotype(A, L) )
%   | | | then return 0.3347237677144496;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.10647579036540192;  // std dev = 4.556, 108.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=29 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.1491229243113586;  // std dev = 1.989, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.2557108412362425;  // std dev = 3.242, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.5753509085258948;  // std dev = 0.282, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( complex(C, F), complex(A, F) )
%   | | then return 0.009574744274441719;  // std dev = 0.365, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | else if ( phenotype(A, G), interaction(H, A) )
%   | | | then return 0.07424485255953364;  // std dev = 1.762, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.25335236427147234;  // std dev = 3.666, 55.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=24 */
%   else if ( enzyme(A, I), location(A, J) )
%   | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | then return 0.7920619176085885;  // std dev = 0.174, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.19323945446577417;  // std dev = 0.085, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.5686959655673236;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.05058848302546923;  // std dev = 2.281, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.19280519650458347;  // std dev = 3.250, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( phenotype(A, E) )
%   | then if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.5851306552733146;  // std dev = 0.345, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.03787798591006999;  // std dev = 0.393, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | else if ( interaction(G, A), enzyme(C, D) )
%   | | then return 0.1587473006565465;  // std dev = 0.367, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(C, C), interaction(H, A) )
%   | | | then return 0.47367247276814867;  // std dev = 0.832, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23134982243727897;  // std dev = 1.654, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.4932735805463918;  // std dev = 0.086, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then return 6.374869211633341E-4;  // std dev = 0.405, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | else if ( interaction(A, L), interaction(L, A) )
%   | | | then return -0.03900256769056125;  // std dev = 0.838, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.09226312882764608;  // std dev = 5.485, 164.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=52 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, D) )
%   | then return 0.0856085056819078;  // std dev = 0.408, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
%   | else return 2.762777124792781E-4;  // std dev = 0.375, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( complex(F, H), complex(A, H) )
%   | | then return 0.1659753241921011;  // std dev = 0.943, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(F, I) )
%   | | | then return 0.050301266503398584;  // std dev = 1.704, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.04427904534464536;  // std dev = 0.549, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( complex(J, L), interaction(J, M) )
%   | | | then return 0.13559852031538747;  // std dev = 2.092, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.32416589025673626;  // std dev = 1.986, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( location(A, N) )
%   | | | then return 0.10844192369780609;  // std dev = 2.147, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.07144535458793964;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( phenotype(D, E), phenotype(A, E) )
%   | then return 0.0028918826361522616;  // std dev = 0.285, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.46951092329735844;  // std dev = 0.276, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.12407023267397868;  // std dev = 0.424, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then if ( interaction(H, I), recursion_proteinclass(H, B) )
%   | | then return 0.38858993120156854;  // std dev = 0.153, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(H, J), complex(A, J) )
%   | | | then return -0.15292859327494265;  // std dev = 1.008, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.026580716272795755;  // std dev = 4.092, 87.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=25 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.3937604001958177;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.11847080322334241;  // std dev = 2.848, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0.04022718501202437;  // std dev = 2.892, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, E), phenotype(E, F) )
%   | | | then return 0.03190857752851167;  // std dev = 0.682, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.32353743027190823;  // std dev = 0.237, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.6600472770438228;  // std dev = 0.142, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.22778523713264956;  // std dev = 0.052, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.3198800837477805;  // std dev = 0.195, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H) )
%   | | then if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.23907403481348657;  // std dev = 1.113, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.02003335690885155;  // std dev = 3.622, 71.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.057607253163430884;  // std dev = 2.989, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return 0.32646031983213136;  // std dev = 1.455, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(D, D), phenotype(D, E) )
%   | then return -0.0789503512336715;  // std dev = 0.274, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | else if ( phenotype(A, F) )
%   | | then return 0.07504658235187199;  // std dev = 0.354, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return -0.04185630659251024;  // std dev = 0.356, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   else if ( interaction(A, G), interaction(G, G) )
%   | then if ( complex(G, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.22649531544038373;  // std dev = 1.089, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.010795460941399933;  // std dev = 1.143, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.5100050395664565;  // std dev = 0.919, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.22842060792666213;  // std dev = 0.162, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return -0.023746534761759426;  // std dev = 1.582, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.027304427897927055;  // std dev = 4.818, 122.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=39 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(E, A) )
%   | then return 0.20973782503033195;  // std dev = 0.087, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.322583115231775;  // std dev = 0.161, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(G, H) )
%   | | | then return 0.6050802783348559;  // std dev = 1.023, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | | | else return 0.16553806062843862;  // std dev = 3.660, 80.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=41 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.1927706538153319;  // std dev = 0.334, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | | else return -0.28501513463004896;  // std dev = 0.487, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( interaction(A, A) )
%   | | then return -0.16104352824839085;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10092770711172255;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.2580610750112865;  // std dev = 0.123, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.172679726006806;  // std dev = 0.047, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( enzyme(G, H), enzyme(A, H) )
%   | | then return -0.12807004492875249;  // std dev = 0.100, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( location(A, I) )
%   | | | then return 0.008375764942669851;  // std dev = 2.395, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return -0.14045359530287838;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, J), interaction(A, K) )
%   | | then if ( enzyme(K, L), enzyme(A, L) )
%   | | | then return -0.04179617275497524;  // std dev = 0.837, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.1303578135909287;  // std dev = 1.653, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.03213626859134123;  // std dev = 3.897, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   | | | else return -0.015231080325251046;  // std dev = 2.252, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '21.868', 'seconds']
Refined model CLL: -0.252583


******************************************
Best model found
******************************************
Results 

CLL : -0.247821 

AUC ROC : 0.965551 

AUC PR : 0.202192 

Precision : 0.243295 

Recall : 0.458484 

F1 : 0.317897 

Total Learning Time : 19.244 

Total Inference Time : 13.881288051605225 

Total revision time: 41.42279891967773
Best scored revision CLL: -0.252583


Results 

CLL : -0.247821 

AUC ROC : 0.965551 

AUC PR : 0.202192 

Precision : 0.243295 

Recall : 0.458484 

F1 : 0.317897 

Total Learning Time : 41.48464303016662 

Total Inference Time : 13.881288051605225 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.258
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2288385902719266;  // std dev = 7.357, 232.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17694240197082342;  // std dev = 5.818, 149.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=52 */
%   | | | else return 0.1645827767465542;  // std dev = 4.749, 101.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14764596168334934;  // std dev = 4.280, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   | | | else return 0.11912629562269364;  // std dev = 6.294, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07829337694269008;  // std dev = 3.643, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.10105867090146485;  // std dev = 6.755, 210.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09987281302092328;  // std dev = 7.558, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05711024264551851;  // std dev = 7.694, 276.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7326180725899494;  // std dev = 0.005, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2672855628157962;  // std dev = 0.007, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09703513193685726;  // std dev = 4.586, 91.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=33 */
%   | | | else return 0.04930161448713802;  // std dev = 4.146, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.021213963940723817;  // std dev = 3.472, 92.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=28 */
%   | | | else return 0.05172203619329623;  // std dev = 6.227, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04029465882121862;  // std dev = 7.090, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.012671939628496644;  // std dev = 7.207, 275.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.713', 'seconds']
Parameter learned model CLL:-0.333635 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.357, 146, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.818, 97, 52], 'false,false,false,false': [4.749, 67, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.28, 53, 28], 'false,false,false,false': [6.294, 125, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.643, 44, 19], 'false,false,false,false': [6.755, 143, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.558, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.694, 190, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.005, 0, 28], 'true,false': [0.007, 62, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.586, 58, 33], 'false,false,false,false': [4.146, 55, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.472, 64, 28], 'false,false,false,false': [6.227, 117, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.09, 174, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.207, 189, 86]}]
{'': [nan, 0.23327883472057168], 'false': [nan, 0.23327883472057126], 'false,false': [nan, 0.23327883472057168], 'false,false,false': [nan, 0.23327883472057126]}
{'': [nan, 0.22566400000000103], 'false': [nan, 0.22566400000000034], 'false,false': [nan, 0.22566400000000103], 'false,false,false': [0.22719697310932027, 0.22331144005489573]}
{'': [nan, 0.2195890942519154], 'false': [nan, 0.2195890942519154], 'false,false': [nan, 0.2195890942519149], 'false,false,false': [0.2261363058778238, 0.2164415910029858]}
{'': [nan, 0.21582857409527742], 'false': [nan, 0.21582857409527742], 'false,false': [nan, 0.215828574095278], 'false,false,false': [0.21063240110859138, 0.21726782785073712]}
{'': [nan, 0.2231183754057553], 'false': [nan, 0.2231183754057553], 'false,false': [nan, 0.22311837540575538], 'false,false,false': [nan, 0.22311837540575538]}
{'': [nan, 0.2144980525269745], 'false': [nan, 0.2144980525269745], 'false,false': [nan, 0.21449805252697465], 'false,false,false': [nan, 0.21449805252697535]}
{'': [0.2142805367618506, 0.22407876817779626], 'false': [nan, 0.22407876817779626], 'false,false': [nan, 0.22407876817779626], 'false,false,false': [0.23113150585677963, 0.21484375000000014], 'true': [9.077928940623028e-07, 8.28294518665041e-07], 'true,true': [nan, 9.077928940623028e-07], 'true,true,false': [nan, 9.077928940623028e-07]}
{'': [nan, 0.19058607880577252], 'false': [nan, 0.19058607880577252], 'false,false': [nan, 0.19058607880577164], 'false,false,false': [0.13099451807741147, 0.2215935083172343]}
{'': [nan, 0.19332058627208798], 'false': [nan, 0.1933205862720876], 'false,false': [nan, 0.1933205862720876], 'false,false,false': [nan, 0.1933205862720876]}
{'': [nan, 0.18886116219471308], 'false': [nan, 0.18886116219471308], 'false,false': [nan, 0.18886116219471374], 'false,false,false': [nan, 0.18886116219471374]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.731
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E), location(A, F) )
%   | | then if ( interaction(G, A), interaction(E, G) )
%   | | | then return -0.07518439823382113;  // std dev = 1.366, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | | else return 0.1170775065280838;  // std dev = 4.636, 112.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=29 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.13087620782678475;  // std dev = 3.908, 77.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=21 */
%   | | | else return 0.30259337954395676;  // std dev = 2.582, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), complex(A, E) )
%   | then return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, I), interaction(H, A) )
%   | | | then return -0.13294298333209426;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.08185475191318478;  // std dev = 4.004, 89.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=21 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.08837254518710697;  // std dev = 3.881, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   | | | else return 0.13777603915873604;  // std dev = 3.987, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5683492698934138;  // std dev = 0.083, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then if ( phenotype(F, G), interaction(F, F) )
%   | | | then return 0.08766148732531984;  // std dev = 1.235, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.08740343838439396;  // std dev = 0.741, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.6893104209863429;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.11979349654420045;  // std dev = 5.517, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7866651545737147;  // std dev = 0.250, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.17478505912171352;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.09681173804809688;  // std dev = 2.100, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.3052036416979597;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, C) )
%   | then if ( complex(C, E) )
%   | | then return 0.44394487189080367;  // std dev = 0.127, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.23661242088860016;  // std dev = 0.795, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.5701615196219396;  // std dev = 0.121, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.11867079168597752;  // std dev = 0.034, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( enzyme(A, H), interaction(A, I) )
%   | | | then return 0.2866993485677029;  // std dev = 1.855, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.09244610039350143;  // std dev = 4.795, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
%   | | else if ( interaction(J, A), interaction(A, K) )
%   | | | then return -0.04081310357163515;  // std dev = 1.669, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.07764008118480888;  // std dev = 3.908, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(A, E) )
%   | then return -0.16568347112182044;  // std dev = 0.838, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.3629154820001798;  // std dev = 0.176, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1263890569247002;  // std dev = 0.099, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.17913651428406113;  // std dev = 1.349, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.031768656337539815;  // std dev = 2.210, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), location(H, J) )
%   | | | then return 0.11572500037669632;  // std dev = 4.780, 111.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=38 */
%   | | | else return 0.05679414103113858;  // std dev = 3.070, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( location(A, K) )
%   | | | then return 0.37527585063506835;  // std dev = 1.448, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.02352980621832139;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2461853487908657;  // std dev = 0.255, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), enzyme(E, F) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.5591594947506897;  // std dev = 0.217, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.03914031463031726;  // std dev = 2.904, 79.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=16 */
%   | | else if ( enzyme(D, G) )
%   | | | then return 0.24119460287696262;  // std dev = 1.538, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.035648754162370073;  // std dev = 3.140, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( phenotype(H, J), phenotype(I, J) )
%   | | | then return 0.15278187079367805;  // std dev = 2.739, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.06349615650796357;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.07252758720022152;  // std dev = 1.145, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.001271069892664159;  // std dev = 2.598, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5124566629338493;  // std dev = 0.272, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.2104969854289048;  // std dev = 0.090, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( enzyme(A, G), interaction(H, E) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.4169276676785147;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.25669162178536686;  // std dev = 1.219, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.5310463388909267;  // std dev = 0.363, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.018854361570619118;  // std dev = 2.464, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.2781568986153489;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, K) )
%   | | | then return 0.008992397676160838;  // std dev = 4.581, 120.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=31 */
%   | | | else return 0.20604020023567376;  // std dev = 1.012, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), complex(D, E) )
%   | then return 0.15856049667977581;  // std dev = 0.096, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.24324426338730026;  // std dev = 0.092, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.3180466076002459;  // std dev = 0.757, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.12408819320221444;  // std dev = 1.829, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.0894227863826097;  // std dev = 2.067, 64.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=7 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.5219143210653919;  // std dev = 2.080, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | | | else return -0.23338040776234845;  // std dev = 0.286, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.04872399266983725;  // std dev = 2.052, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.17246906081418575;  // std dev = 2.525, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.09893301925586936;  // std dev = 0.237, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(D, F) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.006088626072897028;  // std dev = 1.214, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.23488460106508455;  // std dev = 0.707, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.0013903574620060088;  // std dev = 0.891, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.09936233006989587;  // std dev = 2.036, 42.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 2.4277273842591984E-4;  // std dev = 1.046, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.2480187938141133;  // std dev = 1.445, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.052870929659502054;  // std dev = 2.180, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | | else return 0.022128625448818186;  // std dev = 4.374, 126.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.146640843460892;  // std dev = 0.034, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), enzyme(F, D) )
%   | | | then return 0.4292203053473925;  // std dev = 0.258, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6452155394066738;  // std dev = 0.444, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( interaction(A, G), enzyme(G, D) )
%   | | | then return -0.14481645996554054;  // std dev = 0.139, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.23867214842384282;  // std dev = 0.278, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( location(A, H), interaction(A, I) )
%   | | then if ( location(I, H), phenotype(I, J) )
%   | | | then return -0.053581859660681394;  // std dev = 2.845, 93.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=20 */
%   | | | else return 0.05179188183744083;  // std dev = 1.706, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( location(A, K) )
%   | | | then return 0.0675985328574099;  // std dev = 2.917, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return -0.1357396581261649;  // std dev = 1.228, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.520', 'seconds']
Refined model CLL: -0.239966


******************************************
Best model found
******************************************
Results 

CLL : -0.258533 

AUC ROC : 0.923503 

AUC PR : 0.20319 

Precision : 0.23766 

Recall : 0.459364 

F1 : 0.313253 

Total Learning Time : 15.731 

Total Inference Time : 7.121596097946167 

Total revision time: 30.4512540473938
Best scored revision CLL: -0.239966


Results 

CLL : -0.258533 

AUC ROC : 0.923503 

AUC PR : 0.20319 

Precision : 0.23766 

Recall : 0.459364 

F1 : 0.313253 

Total Learning Time : 30.51309815788269 

Total Inference Time : 7.121596097946167 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.763
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.14510545683864134;  // std dev = 4.851, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
%   | | | else return 0.16066994350287242;  // std dev = 5.011, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.00851773156715447;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7580193346218546;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.47618474645679765;  // std dev = 1.202, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.504142292933094;  // std dev = 0.746, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7118753130687554;  // std dev = 2.955, 79.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | | | else return -0.16144420043578128;  // std dev = 0.013, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | | else if ( location(A, I) )
%   | | | then return 0.08396188453157083;  // std dev = 1.735, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.416741464698467;  // std dev = 1.243, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.26942801782332804;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09570407917875969;  // std dev = 4.290, 120.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6624856567471701;  // std dev = 1.378, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.14175684124769164;  // std dev = 4.94e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12874975337396097;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.15527008504281958;  // std dev = 1.315, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.5342092027222783;  // std dev = 0.167, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5619118530826663;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6904217579737809;  // std dev = 0.129, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.05770327710604555;  // std dev = 4.966, 208.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5701439988490115;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.2082510760079092;  // std dev = 1.531, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.2436658027090187;  // std dev = 0.951, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25953662695254487;  // std dev = 0.923, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.07620466763933517;  // std dev = 5.280, 223.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4285657372814502;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.020859889060160786;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.045927809838065686;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.32117873078392034;  // std dev = 0.087, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.4424791720550237;  // std dev = 0.138, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32821465122881277;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.01415123969411554;  // std dev = 2.117, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1463727486734439;  // std dev = 0.887, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.07709671878239958;  // std dev = 4.705, 162.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=55 */
%   | | | else return 0.07888012172667068;  // std dev = 1.842, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.28110358089367304;  // std dev = 0.193, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.0660008277364943;  // std dev = 0.461, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5097818859119098;  // std dev = 1.395, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.1751374619915934;  // std dev = 0.330, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3676455156244149;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.03771850987617367;  // std dev = 4.061, 135.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.19575075248159557;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.26954825442442376;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.37000138328980986;  // std dev = 2.883, 82.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=71 */
%   | | else return -0.1557336167720412;  // std dev = 0.224, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2731925214590075;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.052144192022941;  // std dev = 1.411, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18345953850081242;  // std dev = 0.116, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.7950138098239901;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.21047770161475376;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.036021421169460895;  // std dev = 1.360, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.12023672736478752;  // std dev = 0.604, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.0018685103068780884;  // std dev = 1.707, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.013839910866361715;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.014167196267477531;  // std dev = 3.536, 136.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=40 */
%   | | | else return 0.013240842163289725;  // std dev = 1.433, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14384794845059767;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.25560340117499525;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1776622693104213;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return 0.002736279458766201;  // std dev = 2.157, 102.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.011335868768333424;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.0694089624495263;  // std dev = 3.228, 107.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=40 */
%   | | | else return -0.06493527407515275;  // std dev = 1.525, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.246', 'seconds']
Parameter learned model CLL:-0.199576 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.265, 2, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.851, 82, 33], 'false,false,true,false': [5.011, 83, 36], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.317, 13, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 6], 'true,false': [1.202, 2, 5], 'false,true,true': [0.746, 1, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.955, 10, 69], 'false,false,true,false': [0.013, 163, 0], 'false,false,false,true': [1.735, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [1.243, 2, 8], 'true,false': [1.091, 2, 3], 'false,true,true': [4.29, 86, 34], 'false,true,false,true': [1.378, 2, 37], 'false,true,false,false': [4.94e-08, 80, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.155, 4, 2], 'false,false,false,true': [1.315, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.167, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.129, 0, 14], 'false,true,false': [4.966, 151, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.531, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.951, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.923, 1, 4], 'false,true': [5.28, 152, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.087, 0, 7], 'true,true,false': [0.138, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.117, 29, 12], 'false,false,true': [0.887, 1, 3], 'false,false,false,true': [4.705, 107, 55], 'false,false,false,false': [1.842, 12, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.193, 0, 10], 'true,true,true,false': [0.461, 1, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.395, 2, 33], 'true,false': [0.33, 90, 0], 'false,true': [0.028, 0, 3], 'false,false,true': [4.061, 95, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.065, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.883, 11, 71], 'false,true,false': [0.224, 162, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.411, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.116, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.026, 0, 3], 'false,true,true': [1.36, 36, 11], 'false,true,false,true': [0.604, 1, 1], 'false,true,false,false': [1.707, 47, 17], 'false,false,true': [0.863, 1, 3], 'false,false,false,true': [3.536, 96, 40], 'false,false,false,false': [1.433, 11, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.007, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.022, 0, 3], 'false,true': [2.157, 73, 29], 'false,false,true': [0.863, 1, 3], 'false,false,false,true': [3.228, 67, 40], 'false,false,false,false': [1.525, 18, 4]}]
{'': [0.16836734693877523, 0.20874023437500022], 'false': [1.4802973661668753e-16, 0.2052836319892528], 'false,false': [0.20792241946088127, 0.16620498614958432], 'false,false,true': [0.20461247637051175, 0.2110020478779759], 'true': [0.15999999999999986, 0.18750000000000006], 'false,false,false': [0.25, 0.11555555555555559], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0]}
{'': [0.13083485226852315, 0.20413997810557014], 'false': [0.13910247278836857, 0.20290930258591594], 'false,false': [0.2037883719506107, 0.18813608616730562], 'false,false,true': [0.11055018267559097, 1.1072220335348985e-06], 'false,false,false': [0.18813608616730562, nan], 'false,true': [0.13910247278836857, nan], 'true': [1.4802973661668753e-16, 0.20631867208528995]}
{'': [0.18726182574159075, 0.15898398897829227], 'true': [0.1545386879487772, 0.23824060024039503], 'false': [0.15605660535001853, 0.20441052800118087], 'false,false': [0.22222222222222224, 0.19225473399042292], 'false,false,true': [nan, 0.22222222222222224], 'false,false,false': [0.19225473399042292, nan], 'false,true': [0.15333909696428585, 0.15845454355654848], 'false,true,false': [0.04866194464372151, 3.053113317719181e-17]}
{'': [0.00259572655238426, 0.1399644072732956], 'false': [0.13482558120644844, 0.2240425989036595], 'false,false': [0.0, 0.2345408144665276], 'false,false,false': [0.2345408144665276, nan], 'false,true': [0.0011935597784888, 0.11857383939239266], 'true': [0.0027855322224418, 0.0], 'false,true,true': [nan, 0.0011935597784888], 'false,false,true': [nan, 0.0]}
{'': [0.13514324600535044, 0.12952114135406165], 'true': [0.11307573335138926, 0.17029626129035377], 'false': [0.12499717433496872, 0.19229373426767274], 'false,false': [0.0, 0.19539449717818025], 'false,false,false': [0.20408163265306128, 0.18749999999999994], 'true,true': [0.11307573335138926, nan], 'false,false,true': [nan, 0.0]}
{'': [0.005302505339387627, 0.1375734494760744], 'false': [0.10935702086902009, 0.14309975245837006], 'false,false': [0.1966173709199706, 0.14180667877186026], 'false,false,false': [0.13661968516357115, 0.1884867587730067], 'true': [0.0057544222589255515, 0.0], 'true,true': [0.0010862920918001753, 0.006347068045423103], 'true,false': [nan, 0.0]}
{'': [0.1080036234526867, 0.1218192067938839], 'false': [0.0002569365538858485, 0.12215424646564722], 'false,false': [0.12215424646564722, nan], 'true': [0.06663563725290422, 0.0012132091511387018], 'true,true': [0.03758292916715445, 0.05563514685188779], 'true,true,false': [nan, 0.055635146851888195], 'true,true,true': [0.0037267290749704806, 0.10646270421932581]}
{'': [0.0017341959509510846, 0.09874248309815871], 'false': [0.09594215286565606, 0.14546039201558592], 'false,false': [0.0, 0.15315948408654206], 'false,false,false': [0.15315948408654206, nan], 'false,true': [0.101363999635551, 0.00031014734084129137], 'false,true,true': [nan, 0.10136399963555084], 'true': [0.0, 0.0008446467504550804], 'false,false,true': [0.0, nan]}
{'': [0.07555635133016492, 0.07668252005841357], 'false': [0.04584570527800914, 0.09874455420061344], 'false,false': [0.18625157658227207, 0.0964063776539914], 'false,false,false': [0.09193620875394506, 0.1369351361273785], 'true': [0.0016918022665026455, 0.18972875743839315], 'true,false': [0.0, 0.00021838169068186253], 'false,true': [0.0393427557787114, 0.05008799919565415], 'false,true,false': [0.18270153227608596, 0.045519249474482514]}
{'': [0.0011216594220307711, 0.07909680122477343], 'false': [0.045608247611464474, 0.10401330193809503], 'false,false': [0.18624259906694027, 0.10136296370626838], 'false,false,false': [0.09740089074606025, 0.10566268919563265], 'true': [0.0013718497319578603, 0.0001680709857817033], 'true,true': [0.0013718497319578603, nan], 'true,true,true': [6.668113390316334e-06, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 12.332
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.13087620782678508;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( location(A, G) )
%   | | | then return 0.19529179224237075;  // std dev = 6.254, 175.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=59 */
%   | | | else return 0.058148935099512175;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5528067455442878;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6862790497777287;  // std dev = 3.204, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.16292262285927345;  // std dev = 0.137, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.08267539384607003;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2612468224174986;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.41582389057151564;  // std dev = 0.899, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.5689284969922334;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.004038607696411757;  // std dev = 1.981, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | | else return 0.12706541251802755;  // std dev = 3.780, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.638608614285565;  // std dev = 1.667, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14549828773595963;  // std dev = 0.023, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.14491128140313267;  // std dev = 1.147, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.49878053160760694;  // std dev = 0.828, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4495520061001567;  // std dev = 0.033, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.45514983008711996;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.5514645902174138;  // std dev = 0.899, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.7134182335842544;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.15042788969210658;  // std dev = 0.290, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0.11709855923790921;  // std dev = 4.658, 164.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=57 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4933996636971718;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.44502060571307595;  // std dev = 0.829, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.014835573166247626;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then return -0.032565538126268015;  // std dev = 1.068, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.33796061784982934;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( enzyme(A, G), location(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.520686583093528;  // std dev = 1.016, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return -0.16734922325932802;  // std dev = 0.533, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.025123149823058227;  // std dev = 2.318, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | | else return 0.09153318343104162;  // std dev = 3.503, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.37289840698651433;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.13065029167682457;  // std dev = 0.916, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.29351467622566296;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.2622806465520397;  // std dev = 0.227, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.2905527608873577;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( enzyme(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5249339967415102;  // std dev = 0.437, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.15237716660001124;  // std dev = 0.485, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( complex(A, I), complex(F, I) )
%   | | | then return -0.07903782821888138;  // std dev = 0.689, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.05239184835964135;  // std dev = 4.172, 160.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=52 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( interaction(K, K) )
%   | | | then return -0.22031564100990864;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.07654928891541553;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.0378400890751651;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.1703759765376491;  // std dev = 0.617, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.36441096553320873;  // std dev = 0.170, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3053337454441648;  // std dev = 0.209, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5321611401992407;  // std dev = 0.473, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.15607987740440987;  // std dev = 0.081, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.265582888104037;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( complex(I, K) )
%   | | | then return 0.0994164223828352;  // std dev = 2.283, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
%   | | | else return 0.02224313984539349;  // std dev = 2.419, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | else return 0.1719372576252029;  // std dev = 0.666, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.18877335327295233;  // std dev = 0.074, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.05984465292834749;  // std dev = 0.899, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), location(G, H) )
%   | | | then return 0.19208011577227876;  // std dev = 1.883, 38.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=29 */
%   | | | else return 0.4312603457196163;  // std dev = 1.312, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.10306237756487377;  // std dev = 0.142, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | | else return -0.16197542809921184;  // std dev = 0.275, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.18413383721743626;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.05411323269737382;  // std dev = 1.233, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.2012882334108873;  // std dev = 0.762, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then return -0.16475978238416644;  // std dev = 0.765, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20202430870805785;  // std dev = 0.173, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then return -0.42471673453868136;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.21528047486574875;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, H) )
%   | then return -0.020544525893795802;  // std dev = 0.214, 114.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=30 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(K, I), enzyme(K, L) )
%   | | | then return 0.039011509835534454;  // std dev = 1.728, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return -0.045494574780681724;  // std dev = 1.515, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.0391913890453972;  // std dev = 1.962, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0.10810395831347508;  // std dev = 0.791, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17421790154426586;  // std dev = 0.051, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), enzyme(A, G) )
%   | | | then return 0.2497749070680618;  // std dev = 0.186, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.41897162920732833;  // std dev = 0.441, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.16214156484858716;  // std dev = 0.695, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.20465767437609286;  // std dev = 0.993, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(A, K), location(A, L) )
%   | | | then return -0.07342343053593951;  // std dev = 1.057, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | | else return 0.026464020797416398;  // std dev = 1.193, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.037300907710469754;  // std dev = 2.145, 87.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=32 */
%   | | | else return -0.01900615842722329;  // std dev = 0.883, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.273', 'seconds']
Refined model CLL: -0.173739


******************************************
Best model found
******************************************
Results 

CLL : -0.181833 

AUC ROC : 0.990432 

AUC PR : 0.379971 

Precision : 0.204527 

Recall : 0.897163 

F1 : 0.333114 

Total Learning Time : 12.332 

Total Inference Time : 15.061033964157104 

Total revision time: 47.68986389160156
Best scored revision CLL: -0.173739


Results 

CLL : -0.181833 

AUC ROC : 0.990432 

AUC PR : 0.379971 

Precision : 0.204527 

Recall : 0.897163 

F1 : 0.333114 

Total Learning Time : 47.77782699584961 

Total Inference Time : 15.061033964157104 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.253
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.0894922186816008;  // std dev = 4.881, 134.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=31 */
%   | | | else return 0.12600607795665422;  // std dev = 5.740, 168.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7271035802978394;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6100122940520396;  // std dev = 0.955, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.21837106042470464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6528114764184921;  // std dev = 3.810, 94.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=76 */
%   | | | else return -0.15549513865708334;  // std dev = 0.032, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | | else if ( location(A, K) )
%   | | | then return 0.08320549123154833;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5643346812640405;  // std dev = 0.027, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5692511368789438;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05349191242449087;  // std dev = 4.524, 146.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6351545722595171;  // std dev = 2.122, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.13829915183221264;  // std dev = 1.49e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8213194034071188;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13472667901798152;  // std dev = 1.549, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.42629030385159694;  // std dev = 0.030, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.413482528394957;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5280495089458593;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.48158185427490713;  // std dev = 2.020, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | else return 0.03605386687664896;  // std dev = 5.255, 242.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5491190897902734;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.07699904622738503;  // std dev = 1.639, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3303539593167985;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15772923063194308;  // std dev = 1.282, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.07431551609599114;  // std dev = 5.871, 270.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41289581406134;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.03660533216400589;  // std dev = 1.685, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2695775812374585;  // std dev = 0.044, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.30360526505803415;  // std dev = 0.886, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.08327621563585899;  // std dev = 0.567, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.005305693772373262;  // std dev = 2.961, 84.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.17619817274032037;  // std dev = 0.948, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.06195630927983284;  // std dev = 4.697, 178.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=51 */
%   | | | else return 0.02948548480935833;  // std dev = 2.284, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.27838294873625113;  // std dev = 0.332, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.3358983598806763;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2615750401294612;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.49631474896023897;  // std dev = 1.758, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.1643383717859465;  // std dev = 0.390, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24820329621705942;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0596321644411093;  // std dev = 4.503, 156.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17010277128071105;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.11601224350230507;  // std dev = 0.944, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.36505992867931714;  // std dev = 3.540, 98.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=82 */
%   | | else return -0.1468726397651875;  // std dev = 0.288, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2655097893445363;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.06084191685377872;  // std dev = 1.396, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.09111836164755834;  // std dev = 0.786, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.17955053237895313;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.22158275395403662;  // std dev = 0.111, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.03831190169577944;  // std dev = 2.063, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.20522926935878272;  // std dev = 0.725, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.03781988776539519;  // std dev = 1.367, 66.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.019866525046501493;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03324488625239962;  // std dev = 3.867, 162.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=47 */
%   | | | else return 0.059946172285863554;  // std dev = 1.397, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13632907221501078;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.04774625271813208;  // std dev = 0.950, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return -0.46361653884370785;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.005027578435038038;  // std dev = 0.643, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.015073135903686658;  // std dev = 2.566, 124.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.017068189834025953;  // std dev = 0.912, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.009430010264232954;  // std dev = 4.090, 165.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=47 */
%   | | | else return -0.02118213669226001;  // std dev = 1.453, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.794', 'seconds']
Parameter learned model CLL:-0.193829 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.881, 103, 31], 'false,false,true,false': [5.74, 123, 45], 'false,false,false,true': [1.633, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.024, 0, 10], 'false,true,true': [0.955, 1, 7], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,true': [3.81, 18, 76], 'false,false,true,false': [0.032, 178, 0], 'false,false,false,true': [1.732, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.027, 0, 11], 'true,false': [0.017, 0, 6], 'false,true,true': [4.524, 112, 34], 'false,true,false,true': [2.122, 5, 48], 'false,true,false,false': [1.49e-08, 101, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.549, 8, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.03, 0, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.05, 0, 3], 'false,true,true,false': [2.02, 7, 21], 'false,true,false': [5.255, 184, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.639, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.282, 2, 10], 'false,true': [5.871, 188, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.685, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.044, 0, 9], 'true,true,false': [0.886, 1, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.567, 1, 1], 'false,true': [2.961, 65, 19], 'false,false,true': [0.948, 1, 8], 'false,false,false,true': [4.697, 127, 51], 'false,false,false,false': [2.284, 29, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.332, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [5.27e-09, 0, 3], 'true,true,false,false': [1.758, 4, 33], 'true,false': [0.39, 82, 0], 'false,true': [0.002, 0, 5], 'false,false,true': [4.503, 109, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.944, 1, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.54, 16, 82], 'false,true,false': [0.288, 156, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.396, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.786, 1, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.111, 0, 5], 'false,true,true': [2.063, 41, 13], 'false,true,false,true': [0.725, 1, 8], 'false,true,false,false': [1.367, 55, 11], 'false,false,true': [0.913, 1, 5], 'false,false,false,true': [3.867, 115, 47], 'false,false,false,false': [1.397, 8, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [5.27e-09, 0, 7], 'true,true,true,false': [0.95, 1, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.643, 1, 3], 'false,true': [2.566, 92, 32], 'false,false,true': [0.912, 1, 5], 'false,false,false,true': [4.09, 118, 47], 'false,false,false,false': [1.453, 13, 4]}]
{'': [0.05246913580246885, 0.19718567956483213], 'false': [0.10937499999999978, 0.18986571463345478], 'false,false': [0.18832507346169072, 0.22222222222222207], 'false,false,false': [0.22222222222222207, nan], 'false,false,true': [0.1778235687235476, 0.1961096938775522], 'false,true': [0.22222222222222224, 0.0], 'true': [0.07100591715976314, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [4.8348344665030523e-05, 0.20413427042582755], 'false': [0.16909390627517132, 0.2004681239491518], 'false,false': [0.20113919585046544, 0.18750000000000017], 'false,false,true': [0.15444271996207493, 5.746917174696971e-06], 'false,false,false': [0.18750000000000017, nan], 'false,true': [0.11398409100688517, 0.0], 'true': [-1.2688263138573217e-16, 5.821946503390407e-05], 'false,true,false': [nan, 0.0]}
{'': [6.662732998960637e-05, 0.15696018906064305], 'false': [0.1539287910681212, 0.21810825724754077], 'false,false': [0.21810825724754077, nan], 'false,false,true': [0.0, 0.20002167079887956], 'false,true': [0.14017386937176177, 0.1642754732265428], 'false,true,false': [0.08498264914664636, 2.1984614349013e-18], 'true': [6.730948561672889e-05, 4.973630581347107e-05]}
{'': [6.3105888051062e-05, 0.1394885270207977], 'false': [0.13653109053093135, 0.19288307859383014], 'false,false': [0.0, 0.1918006189816107], 'false,false,false': [0.1918006189816107, nan], 'false,true': [0.13193755129910384, 0.11412247319381597], 'false,true,true': [0.0008442507059470324, 0.1457743030836564], 'true': [5.7400646516131415e-05, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.09348589881312928, 0.13092981721316269], 'false': [0.12767341327285006, 0.18569148792238244], 'false,false': [0.0, 0.18922126252763324], 'false,false,false': [0.18922126252763324, nan], 'true': [-3.172065784643304e-17, 0.13704065143615787], 'false,false,true': [nan, 0.0], 'true,true': [-3.172065784643304e-17, nan]}
{'': [0.07515582094309613, 0.12053080042903977], 'false': [0.10434633685203998, 0.12535847480487472], 'false,false': [0.09995007861492106, 0.1258380857013521], 'false,false,false': [0.12392488471982623, 0.13370526903793414], 'true': [0.04943837808142068, 0.1606879186655047], 'true,false': [nan, 0.1606879186655047], 'true,true': [0.00021493464865728217, 0.11207435315774004]}
{'': [0.1116627660794832, 0.12704137281606706], 'false': [1.227882130316882e-06, 0.13000885333506668], 'false,false': [0.13000885333506668, nan], 'true': [0.06782385172136175, 0.0018533112685983994], 'true,true': [0.007102859688387059, 0.08105415541264568], 'true,true,false': [9.25185853854297e-18, 0.08349340914197012], 'true,true,true': [0.0073696322601683574, 0.0]}
{'': [0.05015293533748691, 0.11338435430198479], 'false': [0.11177641605566536, 0.14197326594442583], 'false,false': [0.0, 0.14990221939955417], 'false,false,false': [0.14990221939955417, nan], 'false,true': [0.12790223412266571, 0.0005305607717147182], 'false,true,true': [nan, 0.12790223412266555], 'true': [0.0, 0.08093063428941452], 'false,false,true': [0.0, nan]}
{'': [0.04065563908839387, 0.08131264777493269], 'false': [0.055407339758660634, 0.09858532352813656], 'false,false': [0.1389565398125789, 0.0971854911817389], 'false,false,false': [0.09229639093542037, 0.16252455539504945], 'false,true': [0.07883898365371234, 0.038168354939478594], 'true': [0.061849258344390964, 0.0021251394900928928], 'false,true,false': [0.058401472217085866, 0.02832054635907935], 'true,false': [0.0, 0.00247042167169092]}
{'': [0.08631198484676596, 0.08433365114393954], 'true': [0.08121656384068061, 0.10344877557855583], 'false': [0.05311668927899958, 0.10473157376817649], 'false,false': [0.13862678630019934, 0.10361063220004117], 'false,false,false': [0.10140535700944815, 0.12416520186397184], 'true,true': [0.0664343075432402, 0.0], 'true,true,true': [3.96508223080413e-18, 0.1289451571314721], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 15.414
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B), interaction(H, I) )
%   | | | then return 0.8081489350995122;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.08132490076474821;  // std dev = 6.356, 233.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=52 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.052806745544287735;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then return 0.05280674554428779;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5944734122109545;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6871130876018575;  // std dev = 3.131, 87.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=76 */
%   | | | else return -0.15620586942954293;  // std dev = 0.252, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.4879673079836215;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.02946035094026585;  // std dev = 1.272, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5103647227927615;  // std dev = 0.248, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5553664367462843;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.05971553982370411;  // std dev = 4.034, 124.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=33 */
%   | | | else return -0.08209548606730929;  // std dev = 0.872, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5778256764948182;  // std dev = 2.471, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return -0.13763205792849223;  // std dev = 0.181, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( recursion_proteinclass(J, B) )
%   | | then if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.08018638627621365;  // std dev = 1.170, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.7137433580596196;  // std dev = 0.166, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.2176217705335025;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4450102872887883;  // std dev = 0.056, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.42849673689681134;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.48556896818856704;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.41351873889374957;  // std dev = 1.585, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( location(A, H), interaction(A, I) )
%   | | | then return -0.06711629070122598;  // std dev = 2.260, 100.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=10 */
%   | | | else return 0.07202926889539761;  // std dev = 4.672, 169.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=48 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.40941948630282454;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.04356677484751405;  // std dev = 1.405, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.11872753162188035;  // std dev = 0.911, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.36425884334050884;  // std dev = 0.138, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1142588433405089;  // std dev = 0.728, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.2575088136286983;  // std dev = 0.249, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(G, A) )
%   | then if ( location(A, H), complex(A, I) )
%   | | then return -0.009214303439099705;  // std dev = 0.266, 126.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=26 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.043413652451764796;  // std dev = 2.440, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return 0.11723631897412753;  // std dev = 3.899, 119.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=42 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.31522898387515597;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, M), complex(A, N) )
%   | | | then return 0.29572273239129715;  // std dev = 0.953, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.12356043610031396;  // std dev = 1.207, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.346529782538894;  // std dev = 0.109, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, E), interaction(A, D) )
%   | | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return -0.11252247922179615;  // std dev = 0.735, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1637116592107557;  // std dev = 0.168, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(G, D), enzyme(G, H) )
%   | | | then return 0.05676859995484989;  // std dev = 3.008, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   | | | else return -0.036906503574828796;  // std dev = 1.932, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | else if ( location(A, I), complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5215027023092367;  // std dev = 0.635, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.15417164801966057;  // std dev = 0.447, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.1602613393115779;  // std dev = 1.164, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.06048257800962404;  // std dev = 3.617, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.27624143490234104;  // std dev = 0.099, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.0028606097517021867;  // std dev = 0.727, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.442206493265994;  // std dev = 1.098, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.14240266912490648;  // std dev = 0.050, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2778053782610053;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G) )
%   | | | then return 0.08205205872621843;  // std dev = 3.738, 109.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=36 */
%   | | | else return 0.3201786908242882;  // std dev = 0.642, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return -0.05632052759752332;  // std dev = 1.189, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.0209983134987791;  // std dev = 1.322, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( interaction(A, A) )
%   | | then return 0.17291012076849183;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.3790974202544805;  // std dev = 1.076, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.20670783615544286;  // std dev = 0.036, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), location(A, H) )
%   | | | then return 0.20536902991754194;  // std dev = 1.945, 41.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=33 */
%   | | | else return 0.43069749249372785;  // std dev = 2.443, 55.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=49 */
%   | | else return -0.13932214379847904;  // std dev = 0.039, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.15267337726871522;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.02030651417139714;  // std dev = 1.171, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.15360777165667672;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.21353985830090877;  // std dev = 0.082, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.15979998719192057;  // std dev = 0.826, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2107689708389783;  // std dev = 0.227, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( complex(A, H), complex(F, H) )
%   | | then return -0.07968537884796514;  // std dev = 0.194, 46.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=7 */
%   | | else return -0.0071435784274058245;  // std dev = 0.213, 93.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=25 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2294584098448209;  // std dev = 2.935, 72.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=51 */
%   | | | else return -0.14416302617794538;  // std dev = 0.210, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.044248716474805175;  // std dev = 0.689, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.13526022742913438;  // std dev = 0.640, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18321936305722952;  // std dev = 0.075, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.3443269541400078;  // std dev = 1.211, 52.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   | | | else return 0.051937304571380204;  // std dev = 0.968, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.11127463931178515;  // std dev = 0.703, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.20013475637158862;  // std dev = 0.948, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(I, J), enzyme(A, K) )
%   | | | then return 0.033108217060363536;  // std dev = 0.988, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.023745721430711724;  // std dev = 1.999, 96.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=22 */
%   | | else if ( interaction(A, L) )
%   | | | then return -0.26088433995585675;  // std dev = 0.174, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.055016566943189356;  // std dev = 0.804, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.770', 'seconds']
Refined model CLL: -0.17411


******************************************
Best model found
******************************************
Results 

CLL : -0.156471 

AUC ROC : 0.992113 

AUC PR : 0.403264 

Precision : 0.275904 

Recall : 0.864151 

F1 : 0.418265 

Total Learning Time : 15.414 

Total Inference Time : 20.502270936965942 

Total revision time: 59.51406997871399
Best scored revision CLL: -0.17411


Results 

CLL : -0.156471 

AUC ROC : 0.992113 

AUC PR : 0.403264 

Precision : 0.275904 

Recall : 0.864151 

F1 : 0.418265 

Total Learning Time : 59.60203308296204 

Total Inference Time : 20.502270936965942 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.32
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.03206197857777323;  // std dev = 2.571, 46.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
%   | | | else return 0.134878494847939;  // std dev = 5.641, 159.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09865526421343639;  // std dev = 3.799, 79.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21947341221095448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8429668836490128;  // std dev = 0.035, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15682885866390514;  // std dev = 0.057, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else if ( location(A, K) )
%   | | | then return 0.18462510661943268;  // std dev = 3.448, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | | else return 0.0679325057649275;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462844;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.04165531134275401;  // std dev = 2.145, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6880792268186685;  // std dev = 0.166, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13920000930922474;  // std dev = 9.77e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.20805376938877418;  // std dev = 0.549, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.135012448074256;  // std dev = 3.663, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.8059479319733119;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.42579342501336326;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5914821080527587;  // std dev = 0.142, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.061614374437790706;  // std dev = 4.190, 188.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5451245238443294;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.563168631766533;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.04930025235827768;  // std dev = 3.674, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | | else return 0.067335688050145;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2207118471601497;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.10171867050251006;  // std dev = 4.017, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.409959217083123;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.42332545981415937;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.11007408225273925;  // std dev = 3.601, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return -0.02821633857045384;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26351494553810045;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.38625254324544656;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.31559433272621884;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3246546428515461;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.0815761486299451;  // std dev = 0.945, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2746385494962485;  // std dev = 1.29e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.03994287659444796;  // std dev = 3.972, 176.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=49 */
%   | | | else return 0.06627803578629983;  // std dev = 3.752, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2434950356153429;  // std dev = 0.175, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2547689677949926;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.22341887061016696;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5973763938533666;  // std dev = 1.421, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.1933589903478896;  // std dev = 0.569, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22341887061016696;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04282815421228365;  // std dev = 3.371, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1759300153499389;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18503114529594974;  // std dev = 0.014, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4395557164911578;  // std dev = 0.777, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14380478184735662;  // std dev = 0.223, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20947479643938854;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.08752380548911531;  // std dev = 3.041, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15676552061520704;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1305788600123361;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.12276146580670488;  // std dev = 1.075, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07287682276859854;  // std dev = 0.406, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.1802756073256584;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.014246964438451052;  // std dev = 1.233, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1605282641022977;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.020609665830216246;  // std dev = 2.679, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | | else return 0.020774166347062546;  // std dev = 3.147, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12886053560134994;  // std dev = 7.61e-05, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.02001145127040077;  // std dev = 0.656, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.14052700448009314;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18591736063080228;  // std dev = 0.099, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.024126313010429057;  // std dev = 1.369, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.026611403357775714;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.036524645553489804;  // std dev = 2.598, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
%   | | | else return 0.058381601654983795;  // std dev = 3.031, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.000', 'seconds']
Parameter learned model CLL:-0.17807 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.571, 38, 8], 'false,false,true,false': [5.641, 115, 44], 'false,false,false,true': [3.799, 60, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [0.913, 1, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.707, 1, 1], 'false,false,true,true': [0.035, 0, 52], 'false,false,true,false': [0.057, 130, 0], 'false,false,false,true': [3.448, 35, 18], 'false,false,false,false': [1.247, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [1.49e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.145, 31, 8], 'false,true,false,true': [0.166, 0, 48], 'false,true,false,false': [9.77e-08, 99, 0], 'false,false,true,true': [0.549, 1, 1], 'false,false,true,false': [3.663, 43, 20], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.142, 0, 3], 'false,true,false': [4.19, 136, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.674, 51, 18], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.949, 1, 9], 'false,true': [4.017, 102, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.601, 41, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.025, 0, 7], 'true,true,false': [0.116, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.945, 23, 3], 'false,false,true': [1.29e-08, 0, 6], 'false,false,false,true': [3.972, 127, 49], 'false,false,false,false': [3.752, 47, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.175, 0, 12], 'true,true,true,false': [0.004, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.421, 2, 36], 'true,false': [0.569, 101, 0], 'false,true': [0.0, 0, 5], 'false,false,true': [3.371, 85, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.017, 0, 6], 'true,false': [0.014, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.777, 0, 56], 'false,true,false': [0.223, 139, 0], 'false,false,true,true': [0.004, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.041, 36, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.035, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [1.075, 2, 4], 'false,true,true': [0.406, 12, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.233, 42, 14], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.679, 85, 36], 'false,false,false,false': [3.147, 48, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [7.61e-05, 0, 5], 'true,true,true,false': [0.656, 1, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.099, 0, 4], 'false,true': [1.369, 57, 17], 'false,false,true': [0.913, 1, 5], 'false,false,false,true': [2.598, 72, 36], 'false,false,false,false': [3.031, 38, 20]}]
{'': [-2.5376526277146434e-16, 0.19534298594043106], 'false': [-1.4802973661668753e-16, 0.18793478128907848], 'false,false': [0.18931588340273733, 0.18441403926234334], 'false,false,true': [0.14366729678638962, 0.20015031050986984], 'false,false,false': [0.18266303477006837, 0.22222222222222224], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [6.344131569286608e-17, 0.2107041855026274], 'false': [0.1875000000000001, 0.2079916332731949], 'false,false': [0.20402252858237177, 0.21851656042944725], 'false,false,false': [0.22429635637566128, 0.17283950617283958], 'false,false,true': [2.294666150166773e-05, 2.4782394422982425e-05], 'false,true': [0.13888888888888892, 0.25], 'false,true,false': [nan, 0.25], 'true': [7.401486830834377e-17, 0.0]}
{'': [-2.5376526277146434e-16, 0.16361354311961956], 'false': [0.14515279761367444, 0.21472585077780473], 'false,false': [0.21125442056043628, 0.0], 'false,false,true': [0.15054310612332392, 0.2130176089645349], 'false,true': [0.11797986614007619, 0.15069074559098924], 'false,true,false': [0.0005740647104546989, 9.644361628056916e-17], 'false,false,false': [0.0, nan], 'true': [3.700743415417188e-17, -1.1102230246251565e-16]}
{'': [1.2688263138573217e-16, 0.12555646830012893], 'false': [0.09649816444587155, 0.19613515735561585], 'false,false': [8.139745767704598e-05, 0.194822871673691], 'false,false,false': [0.19563810526672415, 0.18750000000000006], 'false,true': [0.010195717273039695, 0.09336398947879239], 'false,true,true': [0.0, 0.006731104775553905], 'false,false,true': [0.0, 0.0], 'true': [1.6148698540002277e-16, -3.700743415417188e-17]}
{'': [0.06222222222222219, 0.13461722447324745], 'false': [0.1021253475336509, 0.21350530867001982], 'false,false': [4.466411118625446e-05, 0.21726444865217626], 'false,false,false': [0.2161058818550332, 0.2222222222222222], 'true': [-2.2204460492503132e-17, 0.08999999999999998], 'false,false,true': [0.0, 0.0], 'true,true': [-2.2204460492503132e-17, nan]}
{'': [0.003958669143436709, 0.11456820505286187], 'false': [0.03435254437573091, 0.12123987204570744], 'false,false': [2.7755575615628914e-17, 0.12298702818648294], 'false,false,false': [0.08962125361187244, 0.21013211854566421], 'true': [0.004758840055506591, 0.000951191349714553], 'true,true': [9.280092376331586e-05, 0.0033378971508943034], 'true,false': [0.0009127072447269735, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.1318157284998074, 0.09143156590618882], 'true': [0.06409402661313252, 0.00320238087793093], 'false': [0.0, 0.09391556284815347], 'false,false': [0.09391556284815347, nan], 'true,true': [0.0022030115968739955, 0.05529179128549522], 'true,true,false': [0.0, 0.05316108895817248], 'true,true,true': [0.002550429583146043, 9.559496277733448e-06]}
{'': [5.4204610400391105e-05, 0.09375699655057544], 'false': [0.07301651444718903, 0.15992349035466627], 'false,false': [7.271926770906212e-06, 0.16512195475981883], 'false,false,false': [0.16512195475981883, nan], 'false,true': [0.010783055637365781, 0.00035908769086680914], 'false,true,true': [nan, 0.010783055637365813], 'true': [4.7685214011485476e-05, 2.3595343565975535e-05], 'false,false,true': [7.271926770906212e-06, nan]}
{'': [0.0902663301704604, 0.07198901472121703], 'true': [0.00013477007357855385, 0.17284291835835078], 'true,false': [0.0, 0.19248131132006194], 'false': [0.02540060013933216, 0.08852598045446795], 'false,false': [0.0, 0.09036379700684817], 'false,false,false': [0.059318940558125546, 0.1456053624809146], 'false,true': [0.01270012277645085, 0.027465612207723568], 'false,true,false': [0.0, 0.027141732759575436]}
{'': [0.03559186032782971, 0.07689390919061803], 'false': [0.025330024337760385, 0.09777521066039507], 'false,false': [0.1388888888888889, 0.09611444881008913], 'false,false,false': [0.06248531283689457, 0.15842340921135317], 'true': [0.044479554982170884, 0.002426625770870418], 'true,true': [0.053262484437888544, 0.0], 'true,true,true': [1.159353968382959e-09, 0.10752788382764415], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 7.707
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.117889194839771;  // std dev = 5.442, 154.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=40 */
%   | | | else return 0.20979728674786383;  // std dev = 4.555, 91.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=32 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8214768426771958;  // std dev = 0.988, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15659936115765954;  // std dev = 0.132, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return -0.019355378511387737;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.20020983887991683;  // std dev = 3.274, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5820641463621515;  // std dev = 0.092, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.44425532563517334;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10924752283231462;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.11168408982596337;  // std dev = 1.993, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6889577793175764;  // std dev = 0.219, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13992298795324895;  // std dev = 0.046, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( location(A, J) )
%   | | | then return 0.136968602884414;  // std dev = 3.466, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.022813327805234165;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return 0.30059110558301194;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.43249463991119974;  // std dev = 0.016, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4771937371019354;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3854260005103308;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5881925754290221;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.027566322769299625;  // std dev = 1.963, 58.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=9 */
%   | | | else return 0.1214748283605627;  // std dev = 3.544, 117.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=43 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5213392920400226;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.14209826420885452;  // std dev = 2.414, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.035996165422451765;  // std dev = 2.858, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.33759069450203605;  // std dev = 0.021, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then if ( phenotype(E, G), location(A, H) )
%   | | | then return 0.043607517442509645;  // std dev = 1.953, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | | else return -0.0608357229070725;  // std dev = 0.970, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.004279839508960212;  // std dev = 1.487, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.06510697659773318;  // std dev = 3.265, 118.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=37 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.39271113716686545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10728886283313455;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.08253741075129882;  // std dev = 3.096, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.22271944026307944;  // std dev = 1.800, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2554837729687036;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.24391384719806428;  // std dev = 0.668, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.3412663004046535;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( phenotype(A, G), enzyme(A, H) )
%   | | then return 0.048354419102712244;  // std dev = 0.263, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.07126914865424532;  // std dev = 0.478, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return -0.108163177354005;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2741979816458717;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.0850022685966893;  // std dev = 2.873, 82.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=29 */
%   | | | else return 0.03944706872616548;  // std dev = 4.563, 143.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=40 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.25879315651546514;  // std dev = 0.064, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.21991513570522125;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6351393060722855;  // std dev = 0.758, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then return -0.16980089894358652;  // std dev = 0.065, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return -0.21349798247022736;  // std dev = 0.067, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.06237465625109497;  // std dev = 0.885, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then return 0.16220542161914636;  // std dev = 0.626, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.030133235854409135;  // std dev = 3.202, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
%   | | | else return -0.027828727824535625;  // std dev = 0.562, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16844216770258102;  // std dev = 0.023, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.20289188879419667;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.4280294746115799;  // std dev = 0.429, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.4391284782810159;  // std dev = 0.565, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.13804431576639348;  // std dev = 0.256, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.14811051947516876;  // std dev = 0.231, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.23824477533134675;  // std dev = 0.064, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.023589024534941095;  // std dev = 2.629, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return -0.05223076445723552;  // std dev = 1.739, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15462848526984846;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.20093634521740883;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), location(G, H) )
%   | | | then return -0.07560449862789984;  // std dev = 0.018, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.00845783472426439;  // std dev = 0.320, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.17998595728238165;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.020747712134223904;  // std dev = 1.438, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1811223618035584;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.04298977365166903;  // std dev = 2.567, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return 0.010639097856973272;  // std dev = 3.192, 138.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=42 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1265603545382441;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.17104414372895757;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.13832042202611372;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.16285455520936987;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.15628266358741508;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( phenotype(A, I), phenotype(H, I) )
%   | | | then return -0.06448990245259137;  // std dev = 1.156, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | | else return 0.009975727390620408;  // std dev = 2.472, 122.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=34 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return -0.02301183550497223;  // std dev = 2.197, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.04780339866451231;  // std dev = 2.506, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.162', 'seconds']
Refined model CLL: -0.176416


******************************************
Best model found
******************************************
Results 

CLL : -0.196924 

AUC ROC : 0.981951 

AUC PR : 0.203097 

Precision : 0.12921 

Recall : 0.844765 

F1 : 0.224138 

Total Learning Time : 7.707 

Total Inference Time : 7.492511749267578 

Total revision time: 26.816863586425782
Best scored revision CLL: -0.176416


Results 

CLL : -0.196924 

AUC ROC : 0.981951 

AUC PR : 0.203097 

Precision : 0.12921 

Recall : 0.844765 

F1 : 0.224138 

Total Learning Time : 26.90482669067383 

Total Inference Time : 7.492511749267578 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.418
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08228686613399513;  // std dev = 3.176, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | | else return 0.18588002753648653;  // std dev = 5.120, 119.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.08891816586874314;  // std dev = 2.631, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7398727907934262;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5944734122109545;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7496654133106087;  // std dev = 2.138, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return -0.1612787465638898;  // std dev = 0.081, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | | else if ( location(A, I) )
%   | | | then return 0.09389854703598305;  // std dev = 2.871, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.808741135785635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5595171078416127;  // std dev = 0.054, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5807165438879357;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.04074142142109112;  // std dev = 2.855, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6501171591735583;  // std dev = 1.384, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14487222947904924;  // std dev = 6.32e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6687897830312112;  // std dev = 0.203, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06471091526675847;  // std dev = 2.559, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.14202303463273389;  // std dev = 1.396, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3614563449145781;  // std dev = 0.990, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5760639917153857;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4226859798589397;  // std dev = 0.926, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.04063071600327156;  // std dev = 4.425, 199.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.42033163946868946;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.570199888529656;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.04639047940531535;  // std dev = 2.893, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return 0.12036244346172364;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.331622592668819;  // std dev = 0.004, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3530145017293324;  // std dev = 0.070, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.05247723620405511;  // std dev = 4.551, 203.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3226229470645363;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.05994624868334945;  // std dev = 0.777, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1251308910192031;  // std dev = 2.464, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return -0.06081140057218297;  // std dev = 1.518, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26215057971119676;  // std dev = 0.008, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.24512487168520627;  // std dev = 0.723, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2564758541710406;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.361828958434282;  // std dev = 0.074, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07005623616774394;  // std dev = 1.367, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.28181696559176567;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.10090176736245345;  // std dev = 3.960, 130.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=46 */
%   | | | else return 0.05956985715006935;  // std dev = 3.046, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25608397534988897;  // std dev = 0.225, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.25948609612187307;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.22546613959428408;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6063517938308701;  // std dev = 0.768, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1793428039598451;  // std dev = 0.860, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.15413113337677659;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.11553352341421332;  // std dev = 3.203, 79.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17530982289137476;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.11451468828845429;  // std dev = 0.826, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3948677401772126;  // std dev = 1.891, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return -0.14782697559518906;  // std dev = 0.269, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21335357105696331;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.03337568102656396;  // std dev = 2.460, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15692462247970013;  // std dev = 0.062, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.22829184936347302;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19650534783250265;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.10128540925800664;  // std dev = 0.390, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.273049540994644;  // std dev = 0.192, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.019804288879736696;  // std dev = 1.512, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2538243399901889;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0432962270441221;  // std dev = 2.682, 93.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=31 */
%   | | | else return 0.04628629051105821;  // std dev = 2.429, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13230993809657632;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.15733301079741152;  // std dev = 0.046, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.12996545068312382;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.18736666738568114;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17442679615147982;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.022055191161952443;  // std dev = 1.676, 101.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20880586617244254;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0074117202377854945;  // std dev = 2.849, 104.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=31 */
%   | | | else return -0.015483628614984363;  // std dev = 2.529, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.108', 'seconds']
Parameter learned model CLL:-0.181313 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.176, 45, 13], 'false,false,true,false': [5.12, 80, 39], 'false,false,false,true': [2.631, 30, 9], 'false,false,false,false': [1.225, 3, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [0.062, 0, 7], 'false,true,true': [0.935, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.138, 5, 52], 'false,false,true,false': [0.081, 152, 0], 'false,false,false,true': [2.871, 32, 11], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.054, 0, 11], 'true,false': [0.061, 0, 4], 'false,true,true': [2.855, 52, 14], 'false,true,false,true': [1.384, 2, 42], 'false,true,false,false': [6.32e-08, 68, 0], 'false,false,true,true': [0.203, 0, 3], 'false,false,true,false': [2.559, 29, 9], 'false,false,false,true': [1.396, 4, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.99, 1, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.926, 2, 6], 'false,true,false': [4.425, 150, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.893, 35, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.004, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.07, 0, 6], 'false,true': [4.551, 147, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.777, 1, 2], 'false,false,false,true': [2.464, 20, 9], 'false,false,false,false': [1.518, 11, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.008, 0, 9], 'true,true,false': [0.723, 1, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.074, 0, 2], 'false,true': [1.367, 30, 5], 'false,false,true': [0.056, 0, 5], 'false,false,false,true': [3.96, 84, 46], 'false,false,false,false': [3.046, 37, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.225, 0, 13], 'true,true,true,false': [0.088, 0, 3], 'true,true,false,true': [0.058, 0, 3], 'true,true,false,false': [0.768, 0, 33], 'true,false': [0.86, 112, 0], 'false,true': [1.097, 2, 3], 'false,false,true': [3.203, 48, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.826, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.891, 4, 56], 'false,true,false': [0.269, 137, 0], 'false,false,true,true': [0.077, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.46, 32, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.062, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.072, 0, 5], 'false,true,true': [0.39, 22, 1], 'false,true,false,true': [0.192, 0, 6], 'false,true,false,false': [1.512, 51, 17], 'false,false,true': [0.003, 0, 3], 'false,false,false,true': [2.682, 62, 31], 'false,false,false,false': [2.429, 28, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.046, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.005, 0, 2], 'true,false': [0.046, 0, 3], 'false,true': [1.676, 77, 24], 'false,false,true': [0.003, 0, 3], 'false,false,false,true': [2.849, 73, 31], 'false,false,false,false': [2.529, 39, 12]}]
{'': [0.05859374999999978, 0.21391659197955823], 'false': [-2.5376526277146434e-16, 0.20517815112409837], 'false,false': [0.20747550193111886, 0.19555555555555507], 'false,false,true': [0.1739001189060637, 0.22032342348704245], 'false,false,false': [0.17751479289940844, 0.24999999999999992], 'true': [-1.4802973661668753e-16, 0.18750000000000006], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.0003624995143289548, 0.19377058159498722], 'false': [0.10937500000000006, 0.18867441816644742], 'false,false': [0.1864884788584528, 0.1986212224881764], 'false,false,false': [0.19162668598806915, 0.0], 'false,false,true': [0.08017101826529782, 4.3182287399421306e-05], 'false,true': [0.10937500000000006, nan], 'true': [1.1102230246251565e-16, 0.0005548461954012802]}
{'': [0.0005321232681498718, 0.16450407869145137], 'false': [0.1551433312768412, 0.19918123534139373], 'false,false': [0.18549053146547329, 0.27843317529056977], 'false,false,false': [0.27843317529056977, nan], 'false,false,true': [0.013714416052416745, 0.1723509784803214], 'false,true': [0.12347729275999089, 0.1678511411443618], 'false,true,false': [0.04353822957157106, 5.877651306839064e-17], 'true': [0.0002698762520948573, 0.0009237307639342052]}
{'': [0.06128109756370395, 0.12062462422378845], 'false': [0.10497599963783598, 0.1842323822655895], 'false,false': [0.004991220461466643, 0.18501817077244523], 'false,false,false': [0.18196488003840985, 0.25], 'false,true': [0.09761428944557776, 0.09841707763358468], 'false,true,true': [0.0, 0.10720220734615987], 'true': [0.06128109756370395, nan], 'false,false,true': [0.0, 0.0]}
{'': [0.0004380542518303887, 0.12035732338716207], 'false': [0.1020125467302295, 0.1993479025658252], 'false,false': [0.16381196442824805, 0.20233664235339152], 'false,false,false': [0.2093181093686576, 0.16455732191526354], 'false,false,true': [0.0, 0.20116619060288718], 'true': [2.0083114770826547e-06, 0.0008175548984083644], 'true,true': [2.0083114770826547e-06, nan]}
{'': [0.03229908345211276, 0.1261129382160553], 'false': [0.05337949444434624, 0.13551438480599012], 'false,false': [0.0006352029904752365, 0.13824355975163197], 'false,false,false': [0.12063765697734664, 0.18189437608604575], 'true': [0.03742241804607706, 0.004280619231929646], 'true,true': [6.353709290338492e-06, 0.10458498580914484], 'true,false': [0.0, 0.00272116998859398], 'true,false,true': [0.0, nan]}
{'': [0.11096833788579752, 0.1405119191469981], 'false': [0.24063343134729315, 0.12984660105818044], 'false,false': [0.12984660105818044, nan], 'true': [0.041727019534242786, 0.006609019330106547], 'true,true': [0.0036385528459590144, 0.027561780120893015], 'true,true,false': [0.0011193185316607697, 0.01787615013176602], 'true,true,true': [0.0038775948835547093, 0.002593299795458239]}
{'': [0.04352656758640706, 0.09063689493121409], 'false': [0.08090349619431275, 0.13082805852771962], 'false,false': [0.0019991865842121184, 0.13754426817243026], 'false,false,false': [0.13754426817243026, nan], 'false,true': [0.05960741160419441, 0.000529470540931928], 'false,true,true': [nan, 0.05960741160419447], 'true': [0.0, 0.0852051109771205], 'false,false,true': [0.0019991865842121184, nan]}
{'': [0.001087749592815379, 0.07141360046838845], 'false': [0.03238094705773845, 0.09722307494082948], 'false,false': [3.5948518671743055e-06, 0.09844663702304361], 'false,false,false': [0.07735223694584023, 0.14748486558903112], 'false,true': [0.00660663507130651, 0.037766439821098244], 'false,true,false': [0.006129436384458564, 0.033604153718485845], 'true': [0.0003884156173283693, 0.0009945077355679361], 'true,false': [0.0, 0.0010250123360851459]}
{'': [0.000745027065034716, 0.06762049719146358], 'false': [0.027819862081521415, 0.09280107361427704], 'false,false': [2.7368976418436683e-06, 0.09376836005243934], 'false,false,false': [0.07806406375969573, 0.12544108811769597], 'true': [0.0005832897264339084, 0.0007157483014635322], 'true,true': [0.00031595410733474826, 0.00073906540670024], 'true,true,false': [0.0, 1.0298217072379767e-05], 'true,true,true': [0.0, 0.001078847202760684]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
1;false,false,false;location(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 8.811
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( interaction(A, J), location(A, K) )
%   | | | then return -0.03928696233638519;  // std dev = 1.895, 39.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | | | else return 0.13087620782678508;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.14473430095317014;  // std dev = 5.791, 164.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=47 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F) )
%   | | then return 0.7551723247302798;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8045971810476197;  // std dev = 1.391, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15625748997086836;  // std dev = 0.103, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | else if ( location(A, J) )
%   | | | then return 0.11084426298129095;  // std dev = 2.795, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.8396014553303107;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4756388623153165;  // std dev = 0.278, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5814168969179467;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.13179471236065168;  // std dev = 0.050, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.09144950258166226;  // std dev = 2.639, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6942058128372319;  // std dev = 0.259, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.1380107047292347;  // std dev = 0.058, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3053664367462845;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( location(A, J) )
%   | | | then return 0.04010357740144362;  // std dev = 2.903, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | | else return -0.16382765205271307;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.44012331254721815;  // std dev = 0.019, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.53268535933401;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4848440572994825;  // std dev = 0.678, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.002954233012181202;  // std dev = 2.412, 79.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=16 */
%   | | | else return 0.09959521599048697;  // std dev = 3.443, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.4792647031913866;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.020735296808613413;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, K) )
%   | | | then return 0.1347340102519602;  // std dev = 2.711, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else return -0.10632594761091037;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3362285771583748;  // std dev = 0.018, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( location(A, E), complex(A, F) )
%   | | then if ( location(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.2308894577933333;  // std dev = 1.747, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return -0.1304553298689564;  // std dev = 0.118, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.0965209998962834;  // std dev = 2.370, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | | else return 0.03857458052948142;  // std dev = 2.868, 92.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=25 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.3630262067547152;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.42373392965590284;  // std dev = 0.086, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.02265623129817321;  // std dev = 2.181, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.38235638587876325;  // std dev = 1.544, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.2952548479055456;  // std dev = 0.044, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.31214266434846305;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), enzyme(I, J) )
%   | | | then return -0.058309964612843546;  // std dev = 0.730, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return -0.10723410769668243;  // std dev = 0.073, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.039691811460105066;  // std dev = 0.492, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.03395431752457093;  // std dev = 0.761, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.2637931843166904;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.045098032245685114;  // std dev = 3.752, 125.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
%   | | | else return 0.1164991773256413;  // std dev = 3.009, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.42385321758404765;  // std dev = 0.265, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | else return -0.18242338708957578;  // std dev = 0.107, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.49493977635772507;  // std dev = 0.382, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1584283721512822;  // std dev = 0.105, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.37488255024158207;  // std dev = 1.607, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return -0.15611129844860255;  // std dev = 0.136, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.10971527109692233;  // std dev = 0.700, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.04907223091903014;  // std dev = 0.565, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.015150442618866375;  // std dev = 0.702, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( phenotype(A, E) )
%   | | then return -0.08309158119581628;  // std dev = 0.801, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.14820856913142733;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, F) )
%   | | then return 0.17596039624958715;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.07437887777117883;  // std dev = 0.811, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.3485482133553501;  // std dev = 0.231, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.13155914968585;  // std dev = 0.026, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.1795981113679351;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return -0.02942614266951565;  // std dev = 2.171, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.21217585109577974;  // std dev = 1.236, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.14113819579345227;  // std dev = 0.012, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.07797102507321771;  // std dev = 0.208, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3223423612868012;  // std dev = 0.222, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.09853466120439894;  // std dev = 0.047, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.048287609701108;  // std dev = 1.360, 73.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=12 */
%   | | | else return 0.19267547763810774;  // std dev = 0.400, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.16971665136082284;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return 0.16302112422174364;  // std dev = 1.660, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.024710083613892046;  // std dev = 2.855, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.13051384059208979;  // std dev = 0.015, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.004251810818694746;  // std dev = 0.526, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( location(A, I), location(G, I) )
%   | | | then return 0.027673058541011406;  // std dev = 0.551, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.21570094347920035;  // std dev = 0.374, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.03335413248211303;  // std dev = 0.761, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.03601973155730892;  // std dev = 1.217, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.14719677078260954;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), phenotype(A, M) )
%   | | | then return 0.08312268113610077;  // std dev = 1.723, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.02085248208683252;  // std dev = 2.714, 114.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '29.660', 'seconds']
Refined model CLL: -0.180123


******************************************
Best model found
******************************************
Results 

CLL : -0.194231 

AUC ROC : 0.984969 

AUC PR : 0.254327 

Precision : 0.156425 

Recall : 0.890459 

F1 : 0.266103 

Total Learning Time : 8.811 

Total Inference Time : 9.44511103630066 

Total revision time: 30.806762126922607
Best scored revision CLL: -0.180123


Results 

CLL : -0.194231 

AUC ROC : 0.984969 

AUC PR : 0.254327 

Precision : 0.156425 

Recall : 0.890459 

F1 : 0.266103 

Total Learning Time : 30.894725231170654 

Total Inference Time : 9.44511103630066 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.982
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08891816586874192;  // std dev = 5.038, 143.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=33 */
%   | | | else return 0.17393840878372158;  // std dev = 4.963, 114.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.5766162693538115;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7152234193708099;  // std dev = 2.938, 79.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | | | else return -0.1579381381838912;  // std dev = 0.070, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | | else if ( location(A, I) )
%   | | | then return 0.16570606421395986;  // std dev = 1.638, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.37633079700544125;  // std dev = 1.299, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0923045882661815;  // std dev = 4.342, 125.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6117617648100547;  // std dev = 1.898, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.1438099508507362;  // std dev = 4.47e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04837115679780943;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.0948340670133974;  // std dev = 1.338, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.37809745710977444;  // std dev = 0.968, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.46158755357682235;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7018605139282915;  // std dev = 0.132, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.07194868318422955;  // std dev = 4.942, 200.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5318427416561775;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.037507454537566515;  // std dev = 1.741, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.39632359620456414;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14563081699773425;  // std dev = 0.868, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.05463096402406149;  // std dev = 5.424, 250.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4002798611095105;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.18580697936381058;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.023420974999088625;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.31097400400063785;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.38042834747658577;  // std dev = 0.166, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.30904687574449574;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.010151042753018256;  // std dev = 2.112, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3109434623096196;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.05469865035065272;  // std dev = 4.834, 187.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=55 */
%   | | | else return 0.10573022492050038;  // std dev = 1.800, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.263536109126021;  // std dev = 0.165, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24719552820531432;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.6654845736151057;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5487824340030854;  // std dev = 1.135, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17972351514633744;  // std dev = 0.547, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.004230945746466541;  // std dev = 0.847, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07060368048089534;  // std dev = 4.003, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.20423588682402793;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.21932103499885694;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3996099196723651;  // std dev = 2.608, 80.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=71 */
%   | | else return -0.1551344495103682;  // std dev = 0.322, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20410683227611348;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.0134046235247103;  // std dev = 1.500, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1790370012026643;  // std dev = 0.095, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.43503738268453457;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.16922947165868266;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.04384742705134267;  // std dev = 1.406, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.3075749831995248;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.027856113537863905;  // std dev = 1.629, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.1916291906974966;  // std dev = 1.098, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.015535226394182257;  // std dev = 3.538, 138.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=40 */
%   | | | else return 0.019197584988540926;  // std dev = 1.463, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14385650271610254;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.22809171043095555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14675412318539294;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return 0.004538791993479343;  // std dev = 2.155, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.24267314590235264;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.04768897952992098;  // std dev = 3.347, 117.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=40 */
%   | | | else return 0.07500035717810385;  // std dev = 1.386, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.008', 'seconds']
Parameter learned model CLL:-0.196137 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [5.038, 110, 33], 'false,false,true,false': [4.963, 78, 36], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.926, 1, 6], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.938, 10, 69], 'false,false,true,false': [0.07, 157, 0], 'false,false,false,true': [1.638, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [1.299, 2, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.342, 91, 34], 'false,true,false,true': [1.898, 4, 37], 'false,true,false,false': [4.47e-08, 64, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.225, 6, 2], 'false,false,false,true': [1.338, 7, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.968, 1, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.132, 0, 14], 'false,true,false': [4.942, 143, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.741, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.049, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.868, 1, 4], 'false,true': [5.424, 179, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.093, 3, 2], 'false,false,false,false': [1.247, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.014, 0, 7], 'true,true,false': [0.166, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.112, 36, 12], 'false,false,true': [0.032, 0, 3], 'false,false,false,true': [4.834, 132, 55], 'false,false,false,false': [1.8, 12, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.165, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [1.135, 1, 33], 'true,false': [0.547, 85, 0], 'false,true': [0.847, 1, 3], 'false,false,true': [4.003, 83, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.086, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.608, 9, 71], 'false,true,false': [0.322, 141, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.5, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.095, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.01, 0, 3], 'false,true,true': [1.406, 37, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.629, 35, 17], 'false,false,true': [1.098, 2, 3], 'false,false,false,true': [3.538, 98, 40], 'false,false,false,false': [1.463, 11, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.033, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.009, 0, 3], 'false,true': [2.155, 68, 29], 'false,false,true': [0.027, 0, 3], 'false,false,false,true': [3.347, 77, 40], 'false,false,false,false': [1.386, 8, 4]}]
{'': [-1.6148698540002277e-16, 0.2008882448442891], 'false': [1.4802973661668753e-16, 0.1972702331961604], 'false,false': [0.19639964268951876, 0.21301775147928975], 'false,false,false': [0.24000000000000005, 0.18750000000000003], 'false,false,true': [0.17751479289940947, 0.21606648199446107], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.07638888888888906, 0.2088022999402463], 'false': [0.0, 0.20725725020636243], 'false,false': [0.20638485913130653, 0.22347858617247054], 'false,false,false': [0.22347858617247054, nan], 'false,false,true': [0.10928206536663788, 3.161353859629005e-05], 'true': [0.1224489795918368, 0.0], 'false,true': [0.0, nan]}
{'': [0.13544289895754494, 0.16231270091633507], 'false': [0.1605170097958215, 0.18337810318978987], 'false,false': [0.18750000000000003, 0.17912111817464318], 'false,false,true': [nan, 0.18750000000000003], 'false,false,false': [0.17912111817464318, nan], 'false,true': [0.15080624114847885, 0.1701908414006236], 'false,true,false': [0.08788438887446633, 3.122502256758253e-17], 'true': [0.1686787470377133, 0.0]}
{'': [0.07859677536994475, 0.14197860805520104], 'false': [0.13849200087098085, 0.1812886302279614], 'false,false': [0.0, 0.17837670196182556], 'false,false,false': [0.17837670196182556, nan], 'false,true': [0.001253302906906839, 0.12214055644267775], 'true': [0.08516105374987269, 0.0], 'false,true,true': [nan, 0.0012533029069067756], 'false,false,true': [nan, 0.0]}
{'': [0.07824096035709756, 0.12219344049461978], 'false': [0.11767918833088495, 0.19525353138747734], 'false,false': [0.0, 0.20242193374277978], 'false,false,false': [0.23871866553139703, 0.17283950617283947], 'true': [0.0003454553549624111, 0.15063399345799425], 'true,true': [0.0003454553549624111, nan], 'false,false,true': [nan, 0.0]}
{'': [0.003481935655173468, 0.12268106947947736], 'false': [0.09289736973398292, 0.12903428638963274], 'false,false': [0.0003337370461073408, 0.13000350078816314], 'false,false,false': [0.1249675078839961, 0.17994631327197985], 'true': [0.003783022511190759, 0.0], 'true,true': [2.7943086052822125e-05, 0.009168140423806814], 'true,false': [nan, 0.0]}
{'': [0.11876871215399257, 0.131985732779715], 'false': [0.17931098379219507, 0.13030794936296372], 'false,false': [0.13030794936296372, nan], 'true': [0.07129251988216391, 0.003520470118131748], 'true,true': [0.002487330143843997, 0.07772662982060688], 'true,true,false': [0.0, 0.03788572528855644], 'true,true,true': [0.002711789105062401, 0.0]}
{'': [0.0007267298948524969, 0.10437422714355761], 'false': [0.10231998005293805, 0.12755330234877327], 'false,false': [0.0, 0.13242803592524327], 'false,false,false': [0.13242803592524327, nan], 'false,true': [0.08502115273472666, 0.0007353464470646922], 'false,true,true': [nan, 0.08502115273472677], 'true': [0.0, 0.001474681207517392], 'false,false,true': [0.0, nan]}
{'': [0.029337494315711022, 0.08084726151121473], 'false': [0.04808537090726423, 0.10172631317068989], 'false,false': [0.2411994384385609, 0.09580552007229873], 'false,false,false': [0.09071385463270948, 0.14263674423334755], 'false,true': [0.041166141963434044, 0.0515354715654719], 'false,true,false': [0.0, 0.051050261985878476], 'true': [0.0011350446620597351, 0.06848871222129259], 'true,false': [0.0, 3.367514726172286e-05]}
{'': [0.0006801497742140703, 0.07871854132339019], 'false': [0.047862982267513184, 0.10033101639027149], 'false,false': [0.00024747760218081966, 0.10181684671112076], 'false,false,false': [0.095769062897735, 0.16010621464482688], 'true': [0.0009093172597013817, 2.6677153381278e-05], 'true,true': [0.0009093172597013817, nan], 'true,true,true': [0.0001522734480274568, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 11.5
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.0664822684328457;  // std dev = 2.814, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return -0.036587907005750944;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.16249676118646986;  // std dev = 6.242, 184.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=56 */
%   | | | else return 0.48314893509951223;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7444722173359147;  // std dev = 0.112, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.5141072739982948;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7010150573187661;  // std dev = 3.070, 80.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=69 */
%   | | | else return -0.16280365558109863;  // std dev = 0.138, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.029211331892649715;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.12199066204164584;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5538211111248353;  // std dev = 0.008, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.606319335408399;  // std dev = 0.140, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), phenotype(A, H) )
%   | | | then return 0.007861791948337736;  // std dev = 2.651, 60.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | | | else return 0.09862783674400186;  // std dev = 3.562, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.640457062675402;  // std dev = 1.645, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14341228076437354;  // std dev = 0.106, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( location(A, L), location(J, L) )
%   | | | then return 0.2558026922257934;  // std dev = 1.131, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.05904451062843123;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.0323907838270306;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4301938026638206;  // std dev = 0.052, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4118210656083785;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.7171368150891236;  // std dev = 0.046, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.32942764019792137;  // std dev = 0.755, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), location(H, I) )
%   | | | then return -4.960100206569676E-4;  // std dev = 2.872, 93.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=17 */
%   | | | else return 0.11269204623690054;  // std dev = 3.935, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5428796863546023;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.051929919419802004;  // std dev = 1.211, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.4037185552307057;  // std dev = 0.840, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3180857615599636;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3485142209519373;  // std dev = 0.149, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( location(F, G), location(A, G) )
%   | | | then return 0.009495212118578183;  // std dev = 2.388, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | | else return 0.11308101644051809;  // std dev = 1.812, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.16934821277771506;  // std dev = 1.337, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.07691137134675577;  // std dev = 4.175, 148.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=47 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.408314245177658;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.04163042740719106;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.35499213849382383;  // std dev = 1.023, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.32933704624782234;  // std dev = 0.138, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3144809400240959;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5485912467127636;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14201388104903337;  // std dev = 0.011, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.07736584823271571;  // std dev = 1.165, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return 0.056228476630388484;  // std dev = 1.198, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.026815368299486636;  // std dev = 0.728, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.08396543837808232;  // std dev = 4.627, 164.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=55 */
%   | | | else return 0.003430317543205441;  // std dev = 1.782, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2652349799314817;  // std dev = 0.126, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.5324499425888076;  // std dev = 0.158, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17198199907896006;  // std dev = 0.066, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.6409607603510951;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.2067351876974276;  // std dev = 0.045, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3577908741672404;  // std dev = 1.221, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.18056431991862687;  // std dev = 0.069, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.016541479490436436;  // std dev = 2.926, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | | else return 0.06293568425592826;  // std dev = 0.767, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1578523771028798;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18858302729542656;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.3327621506132155;  // std dev = 2.311, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return 0.49261291051165673;  // std dev = 0.326, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.12396676375471175;  // std dev = 0.099, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return -0.160954501154752;  // std dev = 0.123, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.20440795809254508;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.11101971842895642;  // std dev = 1.102, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.2565352534607239;  // std dev = 0.739, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18458022758885154;  // std dev = 0.088, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1006874441153876;  // std dev = 0.037, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.011165294247905898;  // std dev = 1.097, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.31427597886662917;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.04714022117791902;  // std dev = 1.719, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), complex(I, J) )
%   | | | then return -0.020971016806717653;  // std dev = 2.442, 80.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
%   | | | else return 0.13707894003952445;  // std dev = 0.685, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.051759085140079285;  // std dev = 1.744, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return 0.14824282213571527;  // std dev = 1.199, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15161496563621682;  // std dev = 0.092, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.18097296567448132;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G), location(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.3451780976058592;  // std dev = 0.219, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.11688441804689505;  // std dev = 0.074, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( location(A, J) )
%   | | | then return -0.03290142095512733;  // std dev = 1.609, 68.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | | else return 0.04435199589911923;  // std dev = 0.531, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.10572175000704459;  // std dev = 0.891, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.012716387542009188;  // std dev = 3.076, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
%   | | | else return -0.1295542170844343;  // std dev = 1.487, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '37.862', 'seconds']
Refined model CLL: -0.190725


******************************************
Best model found
******************************************
Results 

CLL : -0.186304 

AUC ROC : 0.987192 

AUC PR : 0.311207 

Precision : 0.190296 

Recall : 0.890071 

F1 : 0.313554 

Total Learning Time : 11.5 

Total Inference Time : 16.30618405342102 

Total revision time: 48.838217861175536
Best scored revision CLL: -0.190725


Results 

CLL : -0.186304 

AUC ROC : 0.987192 

AUC PR : 0.311207 

Precision : 0.190296 

Recall : 0.890071 

F1 : 0.313554 

Total Learning Time : 59.66400135231018 

Total Inference Time : 16.30618405342102 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.068
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08777856472914089;  // std dev = 4.887, 135.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=31 */
%   | | | else return 0.22105216090596327;  // std dev = 5.354, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14386322081379804;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.609733748384724;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.7432932079534632;  // std dev = 0.027, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6177817349725823;  // std dev = 0.897, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6534483934633655;  // std dev = 3.732, 93.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=76 */
%   | | | else return -0.1628183933039829;  // std dev = 0.124, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | | else if ( location(A, I) )
%   | | | then return 0.2397187297348978;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5970202307361432;  // std dev = 0.017, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.43182842102557223;  // std dev = 0.909, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09260535047623442;  // std dev = 4.365, 125.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5394231404899148;  // std dev = 2.866, 58.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   | | | else return -0.14908872912592624;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8047762653401092;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07445765050475646;  // std dev = 1.607, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.2536097513391297;  // std dev = 1.807, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | else return 0.442309149381251;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5388434845544018;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.60935124290612;  // std dev = 1.334, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else return 0.025111181068171687;  // std dev = 5.236, 261.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.562080919650255;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.01960644234344139;  // std dev = 1.690, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.39136226735093205;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15820144870522043;  // std dev = 1.525, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.06822280249166296;  // std dev = 5.867, 266.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42251214004651283;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06487728655292897;  // std dev = 1.634, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3160525063991374;  // std dev = 0.073, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.44329931930828287;  // std dev = 0.162, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3241025510995902;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.032508474993156615;  // std dev = 2.641, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1431681998122628;  // std dev = 1.313, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.047166861883995416;  // std dev = 4.760, 189.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=51 */
%   | | | else return 0.0872054741487107;  // std dev = 2.197, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.28727762260311923;  // std dev = 0.233, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.25748455551844796;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.329305712986139;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4936931183970102;  // std dev = 1.498, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.1748586207471806;  // std dev = 0.540, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.31235934214147776;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.059887294926838856;  // std dev = 4.476, 159.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1921217648753457;  // std dev = 7.45e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.11174470060468934;  // std dev = 1.882, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3384137434301337;  // std dev = 3.668, 101.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=82 */
%   | | else return -0.14657108021817228;  // std dev = 0.211, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21138977437317163;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.0389557466318324;  // std dev = 1.545, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18138625319476337;  // std dev = 0.113, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.15434104059729736;  // std dev = 0.804, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.23331891295629212;  // std dev = 0.092, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.04794448900963499;  // std dev = 1.817, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.03203371048516587;  // std dev = 1.344, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return -0.050969229579057175;  // std dev = 1.560, 66.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.271067456499981;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.07491520345015588;  // std dev = 3.753, 133.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=47 */
%   | | | else return 0.16771155479708869;  // std dev = 1.244, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14066350767878866;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.08942060401025848;  // std dev = 1.188, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10572131324729309;  // std dev = 0.406, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.014962696517760879;  // std dev = 2.585, 126.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.22103244113806947;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.033164871470012854;  // std dev = 3.819, 154.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=47 */
%   | | | else return 0.06866967173798083;  // std dev = 1.313, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.626', 'seconds']
Parameter learned model CLL:-0.203751 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.887, 104, 31], 'false,false,true,false': [5.354, 79, 45], 'false,false,false,true': [1.69, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.935, 1, 7], 'true,false': [0.027, 0, 10], 'false,true,true': [0.897, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.732, 17, 76], 'false,false,true,false': [0.124, 189, 0], 'false,false,false,true': [1.549, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.017, 0, 11], 'true,false': [0.909, 1, 6], 'false,true,true': [4.365, 91, 34], 'false,true,false,true': [2.866, 10, 48], 'false,true,false,false': [0.0, 102, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.607, 10, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.807, 4, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.023, 0, 3], 'false,true,true,false': [1.334, 2, 21], 'false,true,false': [5.236, 203, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.69, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.525, 3, 10], 'false,true': [5.867, 184, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.634, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.073, 0, 9], 'true,true,false': [0.162, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.641, 49, 19], 'false,false,true': [1.313, 2, 8], 'false,false,false,true': [4.76, 138, 51], 'false,false,false,false': [2.197, 19, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.233, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [1.498, 3, 33], 'true,false': [0.54, 103, 0], 'false,true': [0.053, 0, 5], 'false,false,true': [4.476, 112, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [7.45e-09, 0, 7], 'true,false': [1.882, 6, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.668, 19, 82], 'false,true,false': [0.211, 176, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.545, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.113, 0, 9], 'true,false,true': [0.804, 1, 2], 'true,false,false': [0.092, 0, 5], 'false,true,true': [1.817, 51, 13], 'false,true,false,true': [1.344, 8, 8], 'false,true,false,false': [1.56, 55, 11], 'false,false,true': [0.049, 0, 5], 'false,false,false,true': [3.753, 86, 47], 'false,false,false,false': [1.244, 5, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [1.188, 3, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.406, 1, 3], 'false,true': [2.585, 94, 32], 'false,false,true': [0.043, 0, 5], 'false,false,false,true': [3.819, 107, 47], 'false,false,false,false': [1.313, 7, 4]}]
{'': [0.09418282548476423, 0.21375109231139472], 'false': [0.10937499999999978, 0.20716767969515332], 'false,false': [0.20733143513066324, 0.20408163265306106], 'false,false,true': [0.1768998628257899, 0.23120447450572426], 'false,false,false': [0.20408163265306106, nan], 'false,true': [0.22222222222222224, 0.0], 'true': [0.07100591715976314, 0.1388888888888887], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.05305628988235542, 0.20282986716680299], 'false': [0.1005686620325889, 0.1987812505608768], 'false,false': [0.19671067870759906, 0.23999999999999994], 'false,false,false': [0.23999999999999994, nan], 'false,false,true': [0.14975629851720368, 8.079496448413173e-05], 'false,true': [0.1005686620325889, nan], 'true': [0.10937499999999989, 7.32643481089923e-05]}
{'': [0.052422492411669235, 0.15963731294136393], 'false': [0.15719439655913042, 0.20540508332353846], 'false,false': [0.20540508332353846, nan], 'false,false,true': [0.0, 0.18451918971117026], 'false,true': [0.15243786789781044, 0.16088312082656986], 'false,true,false': [0.14160952666975432, -7.836868409118753e-17], 'true': [2.5771615965528774e-05, 0.1180839924108713]}
{'': [0.1570281921120959, 0.13182712776949543], 'true': [0.1631840082500122, 0.0], 'false': [0.12912544132466905, 0.1741893973826115], 'false,false': [0.0, 0.16808702371558173], 'false,false,false': [0.16808702371558173, nan], 'false,true': [0.06895206950795305, 0.10505244899791366], 'false,true,true': [0.00017607268285824151, 0.07734923508855536], 'false,false,true': [nan, 0.0]}
{'': [0.1285839223025052, 0.13244482536617566], 'false': [0.1294097371260402, 0.18586936398935902], 'false,false': [0.0, 0.19061890123589764], 'false,false,false': [0.19061890123589764, nan], 'true': [0.0, 0.17879403035389263], 'false,false,true': [nan, 0.0], 'true,true': [0.0, nan]}
{'': [0.005729523863684777, 0.12273854147092106], 'false': [0.10254735013626, 0.12862857447702195], 'false,false': [0.1723577172375979, 0.12626203760885676], 'false,false,false': [0.11987429402891976, 0.16650266907090505], 'true': [0.005996741532673925, 0.0], 'true,true': [0.0005943452194533775, 0.00438528516518392], 'true,false': [nan, 0.0]}
{'': [0.10104311360731334, 0.12404487445986172], 'false': [0.0005723797522351637, 0.12598429954935308], 'false,false': [0.12598429954935308, nan], 'true': [0.05106033119981277, 0.0028358195024074193], 'true,true': [0.003445539110986759, 0.059460924263832135], 'true,true,false': [0.0, 0.06233729212753206], 'true,true,true': [0.0036197650404913963, 0.0]}
{'': [0.17349905077786595, 0.10538042958321174], 'true': [7.93016446160826e-18, 0.22130298106260382], 'false': [0.10321355983743255, 0.13585338516443804], 'false,false': [0.0, 0.14036293410194245], 'false,false,false': [0.14036293410194245, nan], 'false,true': [0.1331820983784656, 0.00025311256811443153], 'false,true,true': [nan, 0.13318209837846584], 'false,false,true': [0.0, nan]}
{'': [0.05802981050109861, 0.08449291521118685], 'false': [0.05167457045843439, 0.10802857048131093], 'false,false': [0.0004837926709590379, 0.1105839647211245], 'false,false,false': [0.10588888805017202, 0.17190137951620635], 'true': [0.0014198329227358111, 0.117093740900316], 'true,false': [0.21551415837361768, 0.0016864005703957964], 'false,true': [0.051569255586650264, 0.051756570656469034], 'false,true,false': [0.11285546107941417, 0.036874756699387175]}
{'': [0.09066358510867886, 0.07905049856658106], 'true': [0.1012319469018174, 0.041248943718790815], 'true,true': [0.1012319469018174, nan], 'true,true,true': [0.0, 0.15680722503059558], 'false': [0.05303684730105998, 0.09699864696564554], 'false,false': [0.0003668681570451637, 0.09891481014925865], 'false,false,false': [0.0946955338656912, 0.15680812666660596]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 15.648
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(D, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( phenotype(G, I), phenotype(A, I) )
%   | | | then return 0.04481560176617904;  // std dev = 3.374, 75.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=14 */
%   | | | else return 0.20025419825740706;  // std dev = 2.924, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.3025933795439568;  // std dev = 2.108, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.1601623579183037;  // std dev = 5.604, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2763394517212514;  // std dev = 1.006, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.3194734122109545;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.5944734122109545;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6720171102784877;  // std dev = 3.541, 91.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=76 */
%   | | | else return -0.16222738966735456;  // std dev = 0.109, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.4956600807069948;  // std dev = 0.831, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.01411651551700791;  // std dev = 1.299, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4277483792838933;  // std dev = 0.378, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.46701939587973706;  // std dev = 0.336, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1379406564176769;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.05999818234140943;  // std dev = 4.438, 138.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5559170877793816;  // std dev = 2.741, 57.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   | | | else return -0.14227982016150129;  // std dev = 0.054, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.1599272587251285;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.3936899549339665;  // std dev = 1.033, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.19032215933876312;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.44108012316379863;  // std dev = 0.197, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.4488370177383042;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.48915366300002466;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5490634887345618;  // std dev = 1.705, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.13916628021651345;  // std dev = 0.309, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return 0.10730976867478777;  // std dev = 4.918, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4884239934114797;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.4132370537124722;  // std dev = 1.003, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.11173089211354616;  // std dev = 0.891, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3974432236615012;  // std dev = 0.096, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.28202821328331623;  // std dev = 0.270, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6040122740082999;  // std dev = 0.258, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.15434181646401957;  // std dev = 0.141, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return 0.011731091617000684;  // std dev = 2.389, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | | else return 0.07572872796807557;  // std dev = 4.507, 160.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=50 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3694129013716375;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.03987389605012031;  // std dev = 1.459, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.07734325005637765;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.26039932896415496;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.37693145459608784;  // std dev = 0.175, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.40779041643232533;  // std dev = 0.167, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2881985829888106;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.30069151166217867;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, A) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.10345747354827417;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.14247347133912652;  // std dev = 0.106, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( complex(A, H), interaction(I, A) )
%   | | | then return 0.022095594086148182;  // std dev = 2.742, 88.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=22 */
%   | | | else return 0.08670200746184627;  // std dev = 4.647, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.27359509056968634;  // std dev = 0.071, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.060411388255420556;  // std dev = 0.729, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.45826920648237157;  // std dev = 1.616, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.15836041268990708;  // std dev = 0.083, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.07121595975911822;  // std dev = 0.841, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( phenotype(A, I), complex(G, J) )
%   | | | then return 0.1252813353387979;  // std dev = 2.505, 51.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
%   | | | else return 0.03136741380925111;  // std dev = 2.622, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.041379419841083384;  // std dev = 1.250, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.0674856437090462;  // std dev = 1.335, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.20511733909168603;  // std dev = 0.065, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, E) )
%   | | then return -0.09964285138973199;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.22629303691498465;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.3067578065813148;  // std dev = 1.312, 33.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | | else return 0.4240030216513728;  // std dev = 2.210, 58.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=53 */
%   | | else return -0.14520393788515917;  // std dev = 0.033, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return -0.25123123868785685;  // std dev = 0.621, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.020641119353615456;  // std dev = 1.006, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.05115104416702759;  // std dev = 1.009, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18901900366915417;  // std dev = 0.060, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.11230588332642655;  // std dev = 0.654, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1966612459532901;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( enzyme(H, J), enzyme(A, J) )
%   | | | then return -0.09938353754753294;  // std dev = 0.804, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.004739243414522144;  // std dev = 2.189, 115.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=28 */
%   | | else return -0.08146530225602944;  // std dev = 0.120, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.19801638502487082;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return -0.027713937093048813;  // std dev = 3.261, 132.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=34 */
%   | | | else return 0.03139974163662184;  // std dev = 2.146, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.14938927952189993;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.0525345635842288;  // std dev = 0.341, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.14800057513445733;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11758510947037791;  // std dev = 0.122, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.0047806040606875036;  // std dev = 2.438, 100.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=30 */
%   | | | else return 0.11862573550461575;  // std dev = 0.475, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.018389013885845667;  // std dev = 0.824, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.02175695562741397;  // std dev = 2.719, 88.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=29 */
%   | | | else return -0.031478677295523144;  // std dev = 2.828, 87.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '56.133', 'seconds']
Refined model CLL: -0.194272


******************************************
Best model found
******************************************
Results 

CLL : -0.18168 

AUC ROC : 0.990363 

AUC PR : 0.413897 

Precision : 0.258427 

Recall : 0.781132 

F1 : 0.388368 

Total Learning Time : 15.648 

Total Inference Time : 51.04674983024597 

Total revision time: 90.00610581970214
Best scored revision CLL: -0.194272


Results 

CLL : -0.18168 

AUC ROC : 0.990363 

AUC PR : 0.413897 

Precision : 0.258427 

Recall : 0.781132 

F1 : 0.388368 

Total Learning Time : 100.83188931083679 

Total Inference Time : 51.04674983024597 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.26
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08672036367094095;  // std dev = 2.484, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.1595187981132099;  // std dev = 5.544, 146.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.12203782398840121;  // std dev = 3.740, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6083623010998432;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8390866779158477;  // std dev = 0.025, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16088147335749986;  // std dev = 0.042, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( location(A, K) )
%   | | | then return 0.1366052103682228;  // std dev = 3.559, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.0648567232542618;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5644469591288815;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.575797612107128;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.03058358403392017;  // std dev = 2.128, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.681573401607858;  // std dev = 0.203, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14168526828312583;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5960526174841312;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20448750316167766;  // std dev = 3.478, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.12004986125046942;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4259019586207737;  // std dev = 0.042, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4415829832595353;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4273848189084769;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4084376106363171;  // std dev = 0.632, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.06377907390922397;  // std dev = 4.138, 183.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.44843194547397947;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5460086854672945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.1648001639894912;  // std dev = 3.358, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return 0.053547866486173934;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3211201129667201;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3329712588401033;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.03901156797949433;  // std dev = 4.271, 212.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.34176464016165;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41060815482193547;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.12497530418339035;  // std dev = 3.494, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0.7350496950426271;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2529648536956812;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.21035825686428136;  // std dev = 0.725, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2694913293690093;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.27018951088086174;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.31603365024899954;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.048355355225398224;  // std dev = 1.001, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.26805569683509556;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.04735515748755134;  // std dev = 3.991, 176.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=49 */
%   | | | else return 0.047889297002917684;  // std dev = 3.698, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24790369264918574;  // std dev = 0.199, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.23590037616882986;  // std dev = 0.023, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.21938776248259406;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6315499536658565;  // std dev = 0.711, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.20106995623360088;  // std dev = 0.582, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.21870488923443143;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06786499872213224;  // std dev = 3.289, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16830972774717765;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1831356985442034;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44445288908462244;  // std dev = 0.738, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1380940696106766;  // std dev = 0.218, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.19609656304335343;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.057537659979347726;  // std dev = 2.983, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15561529275901048;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.15954192801616685;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1845258582555894;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07148748582773631;  // std dev = 0.436, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.20500922319249415;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.016048834352889733;  // std dev = 1.228, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1577496511675732;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.017221319660815023;  // std dev = 2.755, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | | else return 0.04985947602483824;  // std dev = 2.943, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12999873365876985;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.15955720105570262;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.1259682574236366;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.035300332211379945;  // std dev = 0.536, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.0056129862635563455;  // std dev = 1.507, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.13790303864058534;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.011479599471368241;  // std dev = 2.696, 127.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=36 */
%   | | | else return 0.027341707835231613;  // std dev = 2.953, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.572', 'seconds']
Parameter learned model CLL:-0.18352 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.484, 27, 8], 'false,false,true,false': [5.544, 102, 44], 'false,false,false,true': [3.74, 53, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.943, 1, 8], 'false,true,true': [0.913, 1, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.025, 0, 52], 'false,false,true,false': [0.042, 140, 0], 'false,false,false,true': [3.559, 43, 18], 'false,false,false,false': [1.247, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.031, 0, 6], 'true,false': [0.033, 0, 8], 'false,true,true': [2.128, 33, 8], 'false,true,false,true': [0.203, 0, 48], 'false,true,false,false': [0.0, 127, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.478, 32, 20], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.042, 0, 11], 'true,false': [0.002, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.632, 1, 3], 'false,true,false': [4.138, 131, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.358, 30, 18], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.019, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.03, 0, 9], 'false,true': [4.271, 156, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.494, 34, 19], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.018, 0, 7], 'true,true,false': [0.725, 1, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [1.001, 17, 3], 'false,false,true': [0.003, 0, 6], 'false,false,false,true': [3.991, 127, 49], 'false,false,false,false': [3.698, 45, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.199, 0, 12], 'true,true,true,false': [0.023, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.711, 0, 36], 'true,false': [0.582, 84, 0], 'false,true': [0.002, 0, 5], 'false,false,true': [3.289, 76, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.004, 0, 6], 'true,false': [0.004, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.738, 0, 56], 'false,true,false': [0.218, 133, 0], 'false,false,true,true': [0.02, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.983, 35, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.063, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.042, 0, 4], 'false,true,true': [0.436, 12, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.228, 44, 14], 'false,false,true': [0.002, 0, 5], 'false,false,false,true': [2.755, 85, 36], 'false,false,false,false': [2.943, 35, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.007, 0, 5], 'true,true,true,false': [0.039, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.536, 1, 4], 'false,true': [1.507, 40, 17], 'false,false,true': [0.002, 0, 5], 'false,false,false,true': [2.696, 91, 36], 'false,false,false,false': [2.953, 38, 20]}]
{'': [-2.5376526277146434e-16, 0.20953890870656688], 'false': [-1.4802973661668753e-16, 0.2026297577854685], 'false,false': [0.20475565458929898, 0.19722425127830484], 'false,false,true': [0.17632653061224507, 0.21054606868080403], 'false,false,false': [0.19425154320987603, 0.25], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [0.062222222222222415, 0.20261548855506187], 'false': [0.12244897959183687, 0.1992026943974703], 'false,false': [0.19748236408518985, 0.20369849581091187], 'false,false,false': [0.20758959565767077, 0.17283950617283955], 'false,false,true': [1.2149555753391785e-05, 1.2361553102795725e-05], 'false,true': [0.13888888888888892, 0.0], 'true': [7.401486830834377e-17, 0.09876543209876568], 'false,true,false': [nan, 0.0]}
{'': [0.00018173950546960884, 0.15440587732740732], 'false': [0.13090098150171955, 0.23102131430858394], 'false,false': [0.23106766439048967, 0.22222222222222218], 'false,false,true': [0.0, 0.2326183820238241], 'false,false,false': [0.22222222222222218, nan], 'false,true': [0.11046561794260393, 0.1351446005322956], 'false,true,false': [0.0008583216181710096, -1.2588355554804924e-16], 'true': [0.00016491177348173144, 0.00013914430887518314]}
{'': [0.00016746856581516058, 0.12829088735107533], 'false': [0.09635535137488821, 0.2259051684474368], 'false,false': [0.002380305046930764, 0.22970467581352252], 'false,false,false': [0.23497063506342852, 0.18750000000000006], 'false,true': [0.07985004801886839, 0.09357716718048374], 'false,true,true': [0.0, 0.0997407606833238], 'false,false,true': [0.0, 0.0], 'true': [0.00015997555058209413, 1.740107078910628e-06]}
{'': [0.00012110769555224403, 0.11725822135078016], 'false': [0.08605747379278363, 0.2265156868355362], 'false,false': [0.0011848573776952198, 0.2328056142256836], 'false,false,false': [0.23030575145906118, 0.0], 'false,false,true': [0.0, 0.0], 'true': [7.062678881950558e-05, 9.89920514113211e-05], 'true,true': [7.062678881950558e-05, nan]}
{'': [0.03589887931222093, 0.11642109039047528], 'false': [0.050074186864649914, 0.1210259749194576], 'false,false': [1.264550659583567e-06, 0.12285737445538612], 'false,false,false': [0.09052040844587184, 0.2104157202179209], 'true': [0.04425451227355103, 0.0004742622449694182], 'true,true': [4.491075452213643e-05, 0.10508901651228528], 'true,false': [1.2186435587036026e-07, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.13974929064798391, 0.09338140362595014], 'true': [0.04183215448309422, 0.004036804390001351], 'false': [1.073106376486832e-06, 0.09657783194668303], 'false,false': [0.09657783194668303, nan], 'true,true': [0.002876808635474578, 0.01812918656270274], 'true,true,false': [0.0, 0.014041486650198652], 'true,true,true': [0.003292615373943116, 0.00025847139906830935]}
{'': [5.578817872788276e-05, 0.09322758785182458], 'false': [0.07389137058993889, 0.15674492659703637], 'false,false': [0.0001976271395234125, 0.16176392164652392], 'false,false,false': [0.16176392164652392, nan], 'false,true': [0.009726175957566894, 0.0003568993611875376], 'false,true,true': [nan, 0.009726175957566894], 'false,false,true': [0.0001976271395234125, nan], 'true': [2.3319689993889225e-06, 1.676303135279833e-06]}
{'': [0.0005779379812387615, 0.07220172767183164], 'false': [0.025124837949734843, 0.09044434401852446], 'false,false': [6.482062951479461e-07, 0.09254455105778674], 'false,false,false': [0.06271155435534502, 0.15744478494320432], 'false,true': [0.014606409730148588, 0.026701340812507045], 'false,true,false': [0.0, 0.025993187875735537], 'true': [0.0004476374861800414, 0.00044484889893823263], 'true,false': [0.0, 0.0004312217696311252]}
{'': [0.021727431512972132, 0.0743782480611407], 'false': [0.03985733957954717, 0.08458725516678677], 'false,false': [5.188277541562369e-07, 0.08648521968281839], 'false,false,false': [0.05722036894610912, 0.15039242701873973], 'true': [0.0003556551751069864, 0.05743126016460409], 'true,true': [0.0003988769193584811, 0.0], 'true,true,true': [8.45304564955074e-06, 0.0005035190037553141], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
4;false,false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 6.895
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( complex(A, I), phenotype(H, J) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.07689893509951226;  // std dev = 2.339, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.024815601766178936;  // std dev = 1.826, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0.1458847841561155;  // std dev = 6.592, 212.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=61 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8418731644585319;  // std dev = 0.035, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15447516583101656;  // std dev = 0.116, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else if ( location(A, J) )
%   | | | then return 0.07321269200276191;  // std dev = 3.714, 77.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=18 */
%   | | | else return 0.3394464582365279;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5820641463621515;  // std dev = 0.092, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12106096302361702;  // std dev = 0.037, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.20325925643121373;  // std dev = 1.833, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.683248639693237;  // std dev = 0.271, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13795892043378077;  // std dev = 0.063, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.14484646675585378;  // std dev = 3.633, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | else return 0.16266563272077758;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.426505335144911;  // std dev = 0.027, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.38677922188313363;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5758975306114816;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.013497001148453792;  // std dev = 1.861, 55.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=9 */
%   | | | else return 0.10417846576914322;  // std dev = 3.574, 124.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=43 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5193730930134518;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.19021048390217077;  // std dev = 2.926, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.06871273140862902;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3270970951810507;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( location(E, F), complex(A, G) )
%   | | | then return -0.073547976596243;  // std dev = 0.625, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return 0.10473192571912526;  // std dev = 0.652, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.054938473644380995;  // std dev = 2.455, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | | else return 0.07118854445502593;  // std dev = 3.153, 101.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=32 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return -0.17928815283985033;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.391302167289708;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.14902920099753977;  // std dev = 3.464, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | | else return 0.10680629604831876;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.24940215928351803;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.34711785079719437;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3260889461617158;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), location(G, H) )
%   | | then if ( enzyme(G, I) )
%   | | | then return -0.11439466124994808;  // std dev = 0.038, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.03273846047469935;  // std dev = 0.651, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else return 0.017607353948804888;  // std dev = 0.557, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.26260550811997413;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.011456405135294369;  // std dev = 3.412, 114.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=28 */
%   | | | else return 0.07684116647512682;  // std dev = 4.205, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23641175718504806;  // std dev = 0.034, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.20600172886947044;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6359086098116082;  // std dev = 0.747, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.17571698136891448;  // std dev = 0.069, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.21693260920612129;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.06995535390373339;  // std dev = 1.416, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.194148089984783;  // std dev = 1.350, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.08160719694968908;  // std dev = 1.536, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.032327376439009535;  // std dev = 1.865, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16936262561635076;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18318169088752995;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.2571638964494513;  // std dev = 1.115, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return 0.47574014088305133;  // std dev = 0.271, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return -0.12332402187751676;  // std dev = 0.350, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return -0.1672498100790806;  // std dev = 0.178, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.2209921533329331;  // std dev = 0.032, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.014326765420328406;  // std dev = 2.107, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.08253655056520243;  // std dev = 2.159, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16354010988825174;  // std dev = 0.025, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17063828888798366;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.20284681876393792;  // std dev = 0.603, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07356086100957981;  // std dev = 0.383, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.21072985826265717;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.02171864806534565;  // std dev = 1.278, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.15673357334982996;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.0019749267246085547;  // std dev = 2.540, 121.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=35 */
%   | | | else return 0.045221930549244636;  // std dev = 3.016, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14255949303334386;  // std dev = 0.021, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1489724383351192;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then if ( complex(A, G), phenotype(A, H) )
%   | | | then return -0.14573300956062468;  // std dev = 0.600, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.07309546114311129;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.006387498966684128;  // std dev = 0.900, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return -0.04898145017805366;  // std dev = 1.481, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1371535460271424;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A) )
%   | | | then return 6.811276864070017E-4;  // std dev = 2.577, 125.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
%   | | | else return 0.03743395589101613;  // std dev = 3.011, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '36.072', 'seconds']
Refined model CLL: -0.181575


******************************************
Best model found
******************************************
Results 

CLL : -0.197928 

AUC ROC : 0.981563 

AUC PR : 0.20825 

Precision : 0.133994 

Recall : 0.927798 

F1 : 0.234169 

Total Learning Time : 6.895 

Total Inference Time : 7.766594171524048 

Total revision time: 26.25884488105774
Best scored revision CLL: -0.181575


Results 

CLL : -0.197928 

AUC ROC : 0.981563 

AUC PR : 0.20825 

Precision : 0.133994 

Recall : 0.927798 

F1 : 0.234169 

Total Learning Time : 37.084628372192384 

Total Inference Time : 7.766594171524048 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.754
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.05217878584578103;  // std dev = 3.237, 67.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | | | else return 0.13279682242345547;  // std dev = 5.319, 142.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.12285481745245355;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6259028553107229;  // std dev = 0.919, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8438213775010646;  // std dev = 0.033, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15514697334275745;  // std dev = 0.057, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | else if ( location(A, I) )
%   | | | then return 0.13905486882922533;  // std dev = 2.780, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.837786654782979;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5814606499088855;  // std dev = 0.068, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6174007162748228;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.043737651926274906;  // std dev = 2.767, 67.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5988936895886221;  // std dev = 1.906, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | | else return -0.13915211238197636;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6446399383400582;  // std dev = 0.219, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11425959136822836;  // std dev = 2.448, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.09256156408789265;  // std dev = 1.423, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.44493971310836067;  // std dev = 0.096, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5445416112251749;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6048301568642586;  // std dev = 0.170, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.04846025582673103;  // std dev = 4.330, 196.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.3959755319834529;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5270032159118214;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.10040101365454664;  // std dev = 2.757, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.004066482097370927;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32517968382995077;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13735506536423212;  // std dev = 1.098, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.045974927590119494;  // std dev = 4.500, 210.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.30613785027846196;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.35146070194071866;  // std dev = 0.064, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.015327855126422789;  // std dev = 2.614, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.1477789540993087;  // std dev = 1.319, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2625842138015332;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3879089074313408;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2452005444079689;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07754779954442174;  // std dev = 0.869, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.0602883723394736;  // std dev = 1.284, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3330607010296053;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.061197459716893096;  // std dev = 4.043, 160.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=46 */
%   | | | else return 0.05859764491202733;  // std dev = 3.037, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24140979482085637;  // std dev = 0.151, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.26243758179160925;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.25801940036782367;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5780158689626242;  // std dev = 1.050, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.16067723983597387;  // std dev = 0.399, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.027325062828933433;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.09256896460959459;  // std dev = 3.283, 89.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1719978659837842;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.23878128776296764;  // std dev = 0.085, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4107798618700634;  // std dev = 1.765, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.13821962530931345;  // std dev = 0.229, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21550301463706245;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.028017857720406443;  // std dev = 2.489, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15078673443854307;  // std dev = 0.034, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1896977819722273;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.031988378907767845;  // std dev = 0.868, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09224667913143403;  // std dev = 0.298, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.23955677419447086;  // std dev = 0.154, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.03835471964414895;  // std dev = 1.618, 83.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.22778580855494465;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04988646683388312;  // std dev = 2.781, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   | | | else return -0.0168796112952329;  // std dev = 2.566, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13075288747374725;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1394483871784773;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.175715747717894;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1691658053280966;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.19159188216922085;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.01895101209115989;  // std dev = 1.726, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19021232138168076;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.021845166119360115;  // std dev = 2.792, 101.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=31 */
%   | | | else return -0.018448573696698417;  // std dev = 2.595, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.069', 'seconds']
Parameter learned model CLL:-0.175857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.237, 54, 13], 'false,false,true,false': [5.319, 103, 39], 'false,false,false,true': [2.572, 25, 9], 'false,false,false,false': [1.449, 7, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.919, 1, 7], 'false,true,true': [0.0, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.033, 0, 52], 'false,false,true,false': [0.057, 132, 0], 'false,false,false,true': [2.78, 26, 11], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.068, 0, 11], 'true,false': [0.041, 0, 4], 'false,true,true': [2.767, 53, 14], 'false,true,false,true': [1.906, 4, 42], 'false,true,false,false': [0.0, 96, 0], 'false,false,true,true': [0.219, 0, 3], 'false,false,true,false': [2.448, 21, 9], 'false,false,false,true': [1.423, 7, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.096, 0, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.17, 0, 6], 'false,true,false': [4.33, 147, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.757, 26, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.023, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [1.098, 2, 6], 'false,true': [4.5, 154, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.064, 0, 2], 'false,false,false,true': [2.614, 30, 9], 'false,false,false,false': [1.319, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.057, 0, 9], 'true,true,false': [0.012, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.869, 1, 2], 'false,true': [1.284, 24, 5], 'false,false,true': [0.045, 0, 5], 'false,false,false,true': [4.043, 114, 46], 'false,false,false,false': [3.037, 35, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.151, 0, 13], 'true,true,true,false': [0.093, 0, 3], 'true,true,false,true': [0.038, 0, 3], 'true,true,false,false': [1.05, 1, 33], 'true,false': [0.399, 110, 0], 'false,true': [0.868, 1, 3], 'false,false,true': [3.283, 58, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.085, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.765, 3, 56], 'false,true,false': [0.229, 151, 0], 'false,false,true,true': [0.082, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.489, 30, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.034, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.868, 1, 5], 'false,true,true': [0.298, 20, 1], 'false,true,false,true': [0.154, 0, 6], 'false,true,false,false': [1.618, 66, 17], 'false,false,true': [0.005, 0, 3], 'false,false,false,true': [2.781, 59, 31], 'false,false,false,false': [2.566, 38, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.028, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.01, 0, 2], 'true,false': [0.049, 0, 3], 'false,true': [1.726, 74, 24], 'false,false,true': [0.005, 0, 3], 'false,false,false,true': [2.792, 70, 31], 'false,false,false,false': [2.595, 39, 12]}]
{'': [0.10380622837370206, 0.1985059171597638], 'false': [-2.5376526277146434e-16, 0.18897342561202451], 'false,false': [0.18690048304755016, 0.19834710743801603], 'false,false,false': [0.19463667820069216, 0.20999999999999988], 'false,false,true': [0.15638226776564884, 0.19921642531243858], 'true': [0.07100591715976314, 0.18750000000000006], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.05575812246546358, 0.208746866278672], 'false': [-6.344131569286608e-17, 0.20479193771856824], 'false,false': [0.20234660854274267, 0.2158729262640658], 'false,false,false': [0.20885927418444689, 0.0], 'false,false,true': [2.0574367095759474e-05, 2.491343625205819e-05], 'true': [-2.220446049250313e-16, 0.10559416328728466], 'false,true': [-6.344131569286608e-17, nan]}
{'': [0.0006714170538745161, 0.14839233547345118], 'false': [0.13577210434532952, 0.20630368751640565], 'false,false': [0.2063453814948325, 0.2024148212611013], 'false,false,true': [0.015939516173627027, 0.19981293962204777], 'false,false,false': [0.2024148212611013, nan], 'false,true': [0.11431141341219905, 0.14488557135095448], 'false,true,false': [0.07899972588479373, -7.170190367370803e-17], 'true': [0.0004193866517101115, 0.00041726252154222765]}
{'': [0.0006083547728540139, 0.12006642979926405], 'false': [0.1025067962841908, 0.20090121019861448], 'false,false': [0.0038151675456961076, 0.20730741171847775], 'false,false,false': [0.2054020771109391, 0.22222222222222218], 'false,true': [0.004551434904524461, 0.09565906388407105], 'false,true,true': [0.0, 0.004790763283572419], 'false,false,true': [0.0, 0.0], 'true': [0.0006083547728540139, nan]}
{'': [0.07980071385383432, 0.11229308106112969], 'false': [0.0964077127941244, 0.17893395222341874], 'false,false': [0.0018259207847101482, 0.18489328860895712], 'false,false,false': [0.17521741108435981, 0.21750599045315758], 'true': [5.794841402039107e-05, 0.15083469051973475], 'false,false,true': [0.0, 0.0020541608827989166], 'true,true': [5.794841402039107e-05, nan]}
{'': [0.06779912550331099, 0.11522025430277878], 'false': [0.0568093444051735, 0.12120353372989659], 'false,false': [0.0004088704850027547, 0.1223587458518524], 'false,false,false': [0.10218343259393214, 0.18823214537285793], 'true': [0.003606723241382781, 0.20851258771870151], 'true,false': [0.0, 0.2519751602439327], 'true,true': [0.0003605104658720067, 3.7124332386145875e-05], 'true,false,true': [0.0, nan]}
{'': [0.10051684654253795, 0.12416034730283709], 'false': [0.1884137389458744, 0.1210894676793775], 'false,false': [0.1210894676793775, nan], 'true': [0.04658885238217, 0.0014495103974232482], 'true,true': [0.002047638876279477, 0.03744969119606555], 'true,true,false': [0.0004915935952043796, 0.0324081803554895], 'true,true,true': [0.0017654822548937704, 0.002911056211229853]}
{'': [0.001587189710087622, 0.08736166033362698], 'false': [0.0759725183920956, 0.14001691681093614], 'false,false': [0.002230483913710705, 0.14751542593741948], 'false,false,false': [0.14751542593741948, nan], 'false,true': [0.052797667344337454, 0.0003484222688784528], 'false,true,true': [nan, 0.052797667344337454], 'false,false,true': [0.002230483913710705, nan], 'true': [-6.938893903907228e-18, 0.0010224405809112452]}
{'': [0.0478882583153242, 0.07147162344087532], 'false': [0.029572559745643174, 0.10193423336117444], 'false,false': [8.938438864634449e-06, 0.10326448408235941], 'false,false,false': [0.08590336876786975, 0.13164882145567736], 'true': [0.00011431423709418187, 0.11068521297596753], 'true,false': [0.0, 0.12557956906982667], 'false,true': [0.004228878440769077, 0.03454552922232044], 'false,true,false': [0.003936779671825319, 0.0315513695706314]}
{'': [0.0008140720696973407, 0.07001369699005576], 'false': [0.03038527021383232, 0.0947017046136355], 'false,false': [6.860239260257177e-06, 0.0959303696361446], 'false,false,false': [0.07715491088788393, 0.13203431106490543], 'true': [0.0003488691986937832, 0.0007878916113909692], 'true,true': [9.263664228798817e-05, 4.1534096482364245e-05], 'true,true,true': [0.0, 0.00040269383934799646], 'true,true,false': [0.0, 4.8000562953655346e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
1;false,false,false;location(A, I).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.777
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, F), interaction(F, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(G, I), enzyme(I, J) )
%   | | | then return -0.030739953789376617;  // std dev = 2.108, 45.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=5 */
%   | | | else return 0.14981560176617895;  // std dev = 2.227, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.23519811542738034;  // std dev = 3.785, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | | | else return 0.12917697248268944;  // std dev = 4.598, 107.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=29 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A) )
%   | | then return 0.7432726872238382;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.48137304971739636;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7652728010700096;  // std dev = 1.915, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.16135129755197808;  // std dev = 0.144, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( location(A, I) )
%   | | | then return 0.12112289224465185;  // std dev = 2.818, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.3416855212418092;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4377193779227552;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), location(A, G) )
%   | | | then return -0.06251224667917418;  // std dev = 1.554, 38.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
%   | | | else return 0.1561771017399265;  // std dev = 2.140, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6973930147123347;  // std dev = 0.220, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.13887801659563026;  // std dev = 0.079, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( complex(I, J), phenotype(I, K) )
%   | | | then return -0.015289348462016862;  // std dev = 1.324, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.12818638140856925;  // std dev = 1.720, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.49053659850307424;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15861946856724132;  // std dev = 1.912, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.44637164679561514;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5649043725021519;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5962397939426928;  // std dev = 0.206, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.12763966864698306;  // std dev = 0.061, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.07022594987681613;  // std dev = 4.180, 165.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5786068264710682;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6415945405963144;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.07394864242046736;  // std dev = 2.372, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.2653731323400587;  // std dev = 1.479, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2778548313790639;  // std dev = 0.242, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( location(A, G), location(E, G) )
%   | | | then return -0.028272506783921673;  // std dev = 1.914, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | | else return 0.07125720873605813;  // std dev = 1.262, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.05763852867637295;  // std dev = 3.148, 100.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=29 */
%   | | | else return 0.13205502468842167;  // std dev = 1.901, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.43873066259225724;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11589364437698797;  // std dev = 0.839, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.045310265314551415;  // std dev = 2.389, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | | else return 0.23250799416383472;  // std dev = 1.661, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.28098757173418804;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.38455145670424706;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.39817669168773423;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.02295712589040451;  // std dev = 0.715, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.07096189667787438;  // std dev = 0.820, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else return -0.11476550059111339;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.11432090506752134;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.019575865457314125;  // std dev = 3.659, 110.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=27 */
%   | | | else return 0.08380642154603911;  // std dev = 3.398, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.26067871255120717;  // std dev = 0.044, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.26753562774402256;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5948225587849804;  // std dev = 0.802, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1729398020042907;  // std dev = 0.056, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.5063074097900391;  // std dev = 0.090, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.1731262341746337;  // std dev = 0.023, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( enzyme(A, I) )
%   | | then return -0.029045856018026485;  // std dev = 0.255, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.05534633136681748;  // std dev = 0.586, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.023989666632712216;  // std dev = 0.733, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then return 0.18524102962640543;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.12327825953954634;  // std dev = 0.756, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.20513735914452688;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.1580019159159272;  // std dev = 1.438, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.36730105840301164;  // std dev = 1.168, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | else return -0.12534603667841593;  // std dev = 0.027, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.25619863134326826;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.08929644442544046;  // std dev = 1.808, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.03735579991245428;  // std dev = 1.708, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17122618420427857;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.2682505354622648;  // std dev = 0.716, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.06394660594924582;  // std dev = 0.794, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), interaction(H, H) )
%   | | then return -0.051659745547488145;  // std dev = 0.146, 42.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.1337484032414173;  // std dev = 0.531, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.002724819051785206;  // std dev = 1.459, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.22473768858885732;  // std dev = 1.078, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.19367429212593362;  // std dev = 0.910, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.007569232078376862;  // std dev = 3.161, 139.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.16234895472471195;  // std dev = 0.041, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.21772780885491186;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( complex(G, I), phenotype(G, J) )
%   | | | then return -0.029735567762755336;  // std dev = 0.699, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.03862999498367523;  // std dev = 0.841, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.020592134167765494;  // std dev = 0.794, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.04264966944560323;  // std dev = 1.244, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | then return 0.20152808069210126;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(N, A), phenotype(A, P) )
%   | | | then return -0.016984506792596558;  // std dev = 1.930, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.055457960718301835;  // std dev = 2.700, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '53.695', 'seconds']
Refined model CLL: -0.172419


******************************************
Best model found
******************************************
Results 

CLL : -0.189757 

AUC ROC : 0.980888 

AUC PR : 0.213207 

Precision : 0.155804 

Recall : 0.886926 

F1 : 0.265048 

Total Learning Time : 7.777 

Total Inference Time : 9.094818115234375 

Total revision time: 29.593140941619872
Best scored revision CLL: -0.172419


Results 

CLL : -0.189757 

AUC ROC : 0.980888 

AUC PR : 0.213207 

Precision : 0.155804 

Recall : 0.886926 

F1 : 0.265048 

Total Learning Time : 40.418924432754515 

Total Inference Time : 9.094818115234375 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.952
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09555900704195715;  // std dev = 5.017, 139.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=33 */
%   | | | else return 0.13295809540485462;  // std dev = 5.109, 131.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.504142292933094;  // std dev = 0.746, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6852311756904171;  // std dev = 3.303, 82.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=69 */
%   | | | else return -0.15679136222377832;  // std dev = 0.031, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | | else if ( location(A, K) )
%   | | | then return 0.16653882456488167;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5655379819307461;  // std dev = 0.050, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5960526174841312;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.10379249002211623;  // std dev = 4.354, 118.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7242307509363368;  // std dev = 0.118, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.13897454676711005;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1420942428155648;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1586299135163513;  // std dev = 1.288, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4291538603088888;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4559907657749296;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5281456135653639;  // std dev = 1.581, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0.05096441881006835;  // std dev = 5.023, 219.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5693203793643093;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.07013172647135871;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3204028135495095;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14629254803429323;  // std dev = 0.901, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.06279844069009176;  // std dev = 5.399, 251.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4279447397785163;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.10710866299929751;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.27086771227525297;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2600618640007311;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.41145519383043877;  // std dev = 0.196, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32779250566007667;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.001127336874925123;  // std dev = 2.312, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.082244337568724;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.07559728205518089;  // std dev = 4.654, 179.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=55 */
%   | | | else return -0.008549740067425655;  // std dev = 1.966, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24565384629389242;  // std dev = 0.241, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.25999803537586597;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.567313536939093;  // std dev = 0.929, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17710091961381985;  // std dev = 0.475, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.33403205017160253;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06753100687191664;  // std dev = 4.081, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.03066015786764848;  // std dev = 0.891, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.07394915494042907;  // std dev = 0.887, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3733878415534088;  // std dev = 2.947, 83.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=71 */
%   | | else return -0.1504588617210637;  // std dev = 0.228, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.21316084950172787;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.028965471332928504;  // std dev = 1.477, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18101488074583233;  // std dev = 0.136, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1921538281475589;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.025287884254475045;  // std dev = 1.452, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.3503831534521562;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.005854394731947728;  // std dev = 1.669, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2501207545688245;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05618727419425666;  // std dev = 3.321, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
%   | | | else return 0.08847198080026944;  // std dev = 1.341, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13969665058083397;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2706438635755205;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16408887105912795;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return 0.004609224595536208;  // std dev = 2.294, 99.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20618444866297278;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.0010460149676347627;  // std dev = 3.556, 143.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=40 */
%   | | | else return -0.016071870873344492;  // std dev = 1.445, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.449', 'seconds']
Parameter learned model CLL:-0.196096 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [5.017, 106, 33], 'false,false,true,false': [5.109, 95, 36], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.913, 1, 5], 'false,true,true': [0.746, 1, 3], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 1, 0], 'false,false,true,true': [3.303, 13, 69], 'false,false,true,false': [0.031, 163, 0], 'false,false,false,true': [1.633, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.05, 0, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.354, 84, 34], 'false,true,false,true': [0.118, 0, 37], 'false,true,false,false': [0.0, 62, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.155, 4, 2], 'false,false,false,true': [1.288, 5, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.055, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.581, 3, 14], 'false,true,false': [5.023, 162, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.69, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.029, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.901, 1, 4], 'false,true': [5.399, 180, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.058, 0, 7], 'true,true,false': [0.196, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.312, 39, 12], 'false,false,true': [1.091, 2, 3], 'false,false,false,true': [4.654, 124, 55], 'false,false,false,false': [1.966, 18, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.241, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.929, 1, 33], 'true,false': [0.475, 75, 0], 'false,true': [0.006, 0, 3], 'false,false,true': [4.081, 76, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.891, 1, 6], 'true,false': [0.887, 1, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.947, 12, 71], 'false,true,false': [0.228, 161, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.477, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.136, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.017, 0, 3], 'false,true,true': [1.452, 39, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.669, 45, 17], 'false,false,true': [0.005, 0, 3], 'false,false,false,true': [3.321, 76, 40], 'false,false,false,false': [1.341, 7, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.006, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.015, 0, 3], 'false,true': [2.294, 70, 29], 'false,false,true': [0.004, 0, 3], 'false,false,false,true': [3.556, 103, 40], 'false,false,false,false': [1.445, 11, 4]}]
{'': [-1.6148698540002277e-16, 0.1955555555555559], 'false': [1.4802973661668753e-16, 0.19185403148735097], 'false,false': [0.19024691358024737, 0.22222222222222207], 'false,false,false': [0.22222222222222224, 0.22222222222222224], 'false,false,true': [0.18104652968272986, 0.1992890857176166], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.07638888888888906, 0.20443515658372377], 'false': [0.2097948186104926, 0.20340518686193942], 'false,true': [0.13910247278836857, 0.0], 'false,false': [0.2024030795033628, 0.2222222222222224], 'false,false,false': [0.2222222222222224, nan], 'false,false,true': [0.13302585773751646, 5.890655505460965e-06], 'true': [7.401486830834377e-17, 0.13888888888888884], 'false,true,false': [nan, 0.0]}
{'': [0.0004104211495122553, 0.17133238021444724], 'false': [0.16858416989444833, 0.2138091851539106], 'false,false': [0.22222222222222224, 0.2073822237503094], 'false,false,true': [nan, 0.22222222222222224], 'false,false,false': [0.2073822237503094, nan], 'false,true': [0.16067642500644586, 0.17454284727385516], 'false,true,false': [0.000377122218231793, -2.5069552168955147e-17], 'true': [0.00031038099431873745, 0.0]}
{'': [0.0003349787069480263, 0.13713338683010223], 'false': [0.13273782335117404, 0.20598312762344928], 'false,false': [0.0, 0.20408358742284277], 'false,false,false': [0.20408358742284277, nan], 'false,true': [0.1469987659477549, 0.11522855456486003], 'false,true,true': [nan, 0.1469987659477549], 'true': [0.0003030020780980358, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.07514801610503928, 0.12132742807933473], 'false': [0.11611291581339107, 0.22336018839005414], 'false,false': [0.0, 0.2397694196260768], 'false,false,false': [0.22222222222222224, 0.25], 'true': [0.00011743597636908782, 0.16250743729313982], 'true,true': [0.00011743597636908782, nan], 'false,false,true': [nan, 0.0]}
{'': [0.008212586055619031, 0.12536691686550108], 'false': [0.10478890290231668, 0.12968058790052397], 'false,false': [0.23789603565196665, 0.12648940394798153], 'false,false,false': [0.12102181221631937, 0.1610249338968108], 'true': [0.0089885852043879, 0.0], 'true,true': [0.000481138142772405, 0.012795336792975434], 'true,false': [nan, 0.0]}
{'': [0.12065849417035975, 0.14172167176850986], 'false': [1.0273701655831117e-05, 0.1435961308089394], 'false,false': [0.1435961308089394, nan], 'true': [0.03942213442449554, 0.003014212541270916], 'true,true': [0.005312625614951453, 0.025370778574798657], 'true,true,false': [nan, 0.025370778574798445], 'true,true,true': [0.005825183107317544, 0.0]}
{'': [0.1220977358919264, 0.0993657482170035], 'true': [0.11350453441590531, 0.13111409446987637], 'false': [0.09740096296075794, 0.12425754171323541], 'false,false': [0.0, 0.1283098558038971], 'false,false,false': [0.1283098558038971, nan], 'false,true': [0.1046396789947826, 0.00032299109414728785], 'false,true,true': [nan, 0.10463967899478266], 'false,false,true': [0.0, nan]}
{'': [0.0017263351257869345, 0.07519338154193952], 'false': [0.04465898679259603, 0.09956739569488351], 'false,false': [7.315815891815551e-06, 0.10107612975879339], 'false,false,false': [0.09506899657977791, 0.16347205551624797], 'false,true': [0.04213712821090868, 0.04606738019904496], 'false,true,false': [0.0, 0.0449262744351566], 'true': [0.0023028164358692635, 9.88144328024863e-05], 'true,false': [nan, 9.88144328024863e-05]}
{'': [0.0014010698241145566, 0.07740002194873657], 'false': [0.05314535238638194, 0.0923137047629622], 'false,false': [5.575920676746208e-06, 0.09326978518760898], 'false,false,false': [0.08842521540440226, 0.1391894803176393], 'true': [0.0018799976318251387, 7.710597155218453e-05], 'true,true': [0.0018799976318251387, nan], 'true,true,true': [5.172148201393334e-06, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 12.962
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, G), interaction(H, A) )
%   | | then if ( complex(A, I), complex(H, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.14814893509951235;  // std dev = 4.538, 100.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=29 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.24075763075168627;  // std dev = 5.212, 115.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=44 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5845391122281326;  // std dev = 0.897, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7163161899119123;  // std dev = 2.821, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | | else return -0.16371480272133598;  // std dev = 0.184, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.02624461101923452;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.32624461101923447;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4374366822624355;  // std dev = 0.352, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12421577979441573;  // std dev = 0.168, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.10100865490391919;  // std dev = 4.251, 113.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=34 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5835157538509188;  // std dev = 2.101, 42.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=37 */
%   | | | else return -0.14645309135901025;  // std dev = 0.060, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.020819964103860965;  // std dev = 0.687, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.15577783204370652;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.2743428213557024;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.10767615468903576;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.47857295270584144;  // std dev = 0.043, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.47997952736322624;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.586787697456718;  // std dev = 0.121, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.149985395843873;  // std dev = 0.407, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.09710778399013101;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.11245769501105976;  // std dev = 5.097, 180.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=62 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.6110095244759299;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.36597793269697365;  // std dev = 1.078, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.057841317464826236;  // std dev = 0.877, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.33755385528007814;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.07018379799532626;  // std dev = 1.174, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38939771471175655;  // std dev = 1.910, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return -0.035787634217696415;  // std dev = 2.755, 97.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=17 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.12019639971771245;  // std dev = 2.318, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.08041219915452635;  // std dev = 3.070, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.46022128611389346;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.06818649371995093;  // std dev = 1.513, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.1299540720519452;  // std dev = 0.740, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2749842597867644;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.4033806934479598;  // std dev = 0.140, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.3498557983730062;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08606339245267092;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4274549623784375;  // std dev = 2.964, 83.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=72 */
%   | | | else return -0.15892537574686522;  // std dev = 0.270, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then return -0.1976885225506401;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.10533459474918944;  // std dev = 0.914, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.03533759747511034;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.25290631739204605;  // std dev = 0.058, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.44201536922685725;  // std dev = 0.672, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return 0.7143207181365867;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.15943277971451172;  // std dev = 0.100, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.30867172651785957;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), phenotype(H, I) )
%   | | | then return 0.009887639357810096;  // std dev = 1.678, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0.04778635586329963;  // std dev = 0.861, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.12355556260270015;  // std dev = 1.085, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.04749344120292675;  // std dev = 2.381, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.17388464180709762;  // std dev = 0.000258, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2450173712830459;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.20699806523788764;  // std dev = 1.939, 38.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=31 */
%   | | | else return 0.3293441445878221;  // std dev = 2.089, 45.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=40 */
%   | | else if ( enzyme(A, H), complex(A, I) )
%   | | | then return -0.10338516138468366;  // std dev = 0.115, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.12775798628485668;  // std dev = 0.376, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.22750817791937183;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.11027446695482777;  // std dev = 1.028, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.08404659051597448;  // std dev = 0.698, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then return -0.1818561560863258;  // std dev = 0.813, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.17031167480939793;  // std dev = 0.109, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2155192695277852;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(H, A), interaction(H, G) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -0.016193493192990308;  // std dev = 1.412, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return -0.06088613667389065;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.010367737076679822;  // std dev = 0.198, 74.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.20423615131978556;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.018724107658744056;  // std dev = 3.115, 125.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=37 */
%   | | | else return 0.09572257160354386;  // std dev = 1.283, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.09492131149993381;  // std dev = 0.172, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.18148137104573445;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.015116155156539185;  // std dev = 0.750, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return -0.06336002838360692;  // std dev = 0.992, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.0211126865523768;  // std dev = 1.441, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.09860529970179782;  // std dev = 0.669, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.17303597225631517;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.003270511529287297;  // std dev = 3.039, 111.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=37 */
%   | | | else return -0.050143515827926394;  // std dev = 1.577, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '42.818', 'seconds']
Refined model CLL: -0.18292


******************************************
Best model found
******************************************
Results 

CLL : -0.177191 

AUC ROC : 0.987095 

AUC PR : 0.269275 

Precision : 0.163997 

Recall : 0.907801 

F1 : 0.277808 

Total Learning Time : 12.962 

Total Inference Time : 31.27924084663391 

Total revision time: 64.94344397926331
Best scored revision CLL: -0.18292


Results 

CLL : -0.177191 

AUC ROC : 0.987095 

AUC PR : 0.269275 

Precision : 0.163997 

Recall : 0.907801 

F1 : 0.277808 

Total Learning Time : 65.00040909194946 

Total Inference Time : 31.27924084663391 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.991
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.14518597213654802;  // std dev = 4.701, 108.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=31 */
%   | | | else return 0.1393989350995114;  // std dev = 5.687, 160.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.5944734122109543;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.643282164625158;  // std dev = 0.970, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5435890754434661;  // std dev = 1.161, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6571966930222525;  // std dev = 3.727, 93.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=76 */
%   | | | else return -0.16008172933615272;  // std dev = 0.005, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | | else if ( location(A, I) )
%   | | | then return 0.0524814818778267;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5110820946403719;  // std dev = 0.980, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5807864396203487;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09107882033062493;  // std dev = 4.320, 123.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6521989553418177;  // std dev = 1.921, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.14208506765340084;  // std dev = 0.261, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3092161789204597;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.12497066508321196;  // std dev = 1.558, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3464490524661279;  // std dev = 1.321, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return -0.011459624742220176;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.1474654793815785;  // std dev = 1.066, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.47189950788921914;  // std dev = 2.065, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | else return 0.03077394083301768;  // std dev = 5.160, 249.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5679007411815127;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.09438311630273036;  // std dev = 1.651, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.37515754354645164;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2895854612991486;  // std dev = 0.986, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.05908184163017093;  // std dev = 5.898, 282.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42687578188046715;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.03744673365708805;  // std dev = 1.698, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2905752499349462;  // std dev = 0.008, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5196515257986242;  // std dev = 0.118, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3270660159354871;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.002118531573760548;  // std dev = 2.830, 84.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.32545640897990263;  // std dev = 0.119, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.09812272187345611;  // std dev = 4.429, 154.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=51 */
%   | | | else return 0.027240482018245818;  // std dev = 2.302, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.29772703494412983;  // std dev = 0.319, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2595034044085375;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.22379113395282746;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5268739946993952;  // std dev = 1.434, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.1787824932795571;  // std dev = 0.720, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.1111982446185132;  // std dev = 0.927, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.034139880527862265;  // std dev = 4.518, 168.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1863940278437394;  // std dev = 5.27e-09, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.22158018794542272;  // std dev = 0.135, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3640389500289191;  // std dev = 3.383, 97.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=82 */
%   | | else return -0.1487658377620194;  // std dev = 0.247, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return -0.24086928880380182;  // std dev = 0.642, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.05427033550548329;  // std dev = 1.560, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17478696292516993;  // std dev = 0.109, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.2607832074939507;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.21740191583491617;  // std dev = 0.123, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.0170042741704005;  // std dev = 1.794, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.15528944702331748;  // std dev = 0.782, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.07698070714230065;  // std dev = 1.660, 65.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.21823789298596497;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02610560103552509;  // std dev = 3.936, 157.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=47 */
%   | | | else return 0.18069556364922976;  // std dev = 1.273, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13766812396716044;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.20927674022329756;  // std dev = 0.065, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14448887864609677;  // std dev = 0.848, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.029522924396717366;  // std dev = 2.461, 142.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.015170763952662184;  // std dev = 0.923, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.0344463947475926;  // std dev = 3.726, 156.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=47 */
%   | | | else return -0.0019163754033287167;  // std dev = 1.497, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.581', 'seconds']
Parameter learned model CLL:-0.199563 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [1.095, 3, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.701, 77, 31], 'false,false,true,false': [5.687, 115, 45], 'false,false,false,true': [1.491, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.935, 1, 7], 'true,false': [0.97, 1, 10], 'false,true,true': [1.161, 2, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.727, 17, 76], 'false,false,true,false': [0.005, 171, 0], 'false,false,false,true': [1.749, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.98, 1, 11], 'true,false': [0.037, 0, 6], 'false,true,true': [4.32, 89, 34], 'false,true,false,true': [1.921, 4, 48], 'false,true,false,false': [0.261, 96, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [1.558, 8, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.321, 2, 16], 'true,false': [0.707, 1, 1], 'false,true,true,true': [1.066, 3, 3], 'false,true,true,false': [2.065, 6, 21], 'false,true,false': [5.16, 191, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.651, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.05e-08, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.986, 1, 10], 'false,true': [5.898, 200, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.698, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.008, 0, 9], 'true,true,false': [0.118, 0, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.83, 65, 19], 'false,false,true': [0.119, 0, 8], 'false,false,false,true': [4.429, 103, 51], 'false,false,false,false': [2.302, 29, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.319, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [1.434, 2, 33], 'true,false': [0.72, 73, 0], 'false,true': [0.927, 1, 5], 'false,false,true': [4.518, 121, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [5.27e-09, 0, 7], 'true,false': [0.135, 0, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.383, 15, 82], 'false,true,false': [0.247, 175, 0], 'false,false,true,true': [0.642, 1, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.56, 17, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.109, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.123, 0, 5], 'false,true,true': [1.794, 34, 13], 'false,true,false,true': [0.782, 2, 8], 'false,true,false,false': [1.66, 54, 11], 'false,false,true': [0.061, 0, 5], 'false,false,false,true': [3.936, 110, 47], 'false,false,false,false': [1.273, 5, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.065, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.848, 2, 3], 'false,true': [2.461, 110, 32], 'false,false,true': [0.923, 1, 5], 'false,false,false,true': [3.726, 109, 47], 'false,false,false,false': [1.497, 9, 4]}]
{'': [0.05246913580246885, 0.21124452160400203], 'false': [0.20999999999999988, 0.20539821970832517], 'false,true': [0.24000000000000005, 0.0], 'false,false': [0.20316328803742514, 0.2469135802469134], 'false,false,false': [0.2469135802469134, nan], 'false,false,true': [0.20464677640603698, 0.20214843750000117], 'true': [-1.4802973661668753e-16, 0.1388888888888887], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.09617998404000237, 0.20747625677276155], 'false': [0.1497802360112853, 0.20384124112728588], 'false,false': [0.20503751861369174, 0.17993079584775082], 'false,false,true': [0.14939615210303386, 1.5121234684662547e-07], 'false,false,false': [0.17993079584775082, nan], 'false,true': [0.1497802360112853, nan], 'true': [0.10937500000000011, 0.08558053750700688]}
{'': [0.05447648244546258, 0.16435986260420332], 'false': [0.16177761232603072, 0.21317064650899703], 'false,false': [0.21317064650899703, nan], 'false,false,true': [0.25000000000000006, 0.20218293387442723], 'false,true': [0.15173540630886323, 0.16916690244637378], 'false,true,false': [0.07094086073813405, 0.0007096366758757786], 'true': [0.07998314089362064, 0.00022403507642095496]}
{'': [0.12376739919087942, 0.13435653293909264], 'false': [0.13049211080016812, 0.20954973473544083], 'false,false': [0.0, 0.20965330645178812], 'false,false,false': [0.20965330645178812, nan], 'false,true': [0.17929080977345047, 0.10693629974868003], 'false,true,true': [0.18927155930760717, 0.15793514927730923], 'true': [0.09693169253442975, 0.25], 'false,false,true': [nan, 0.0]}
{'': [0.05573092673323047, 0.12687625175045691], 'false': [0.12334113980871667, 0.1891756796154556], 'false,false': [0.0, 0.19230895511480886], 'false,false,false': [0.19230895511480886, nan], 'true': [1.586032892321652e-17, 0.08834839143705041], 'true,true': [1.586032892321652e-17, nan], 'false,false,true': [nan, 0.0]}
{'': [0.012854790714821845, 0.11961680297437005], 'false': [0.09535645545784496, 0.12706534992398077], 'false,false': [0.0017582388623936934, 0.1299351235600681], 'false,false,false': [0.12740097292135563, 0.13593274917065687], 'true': [0.013521752299575121, 0.0], 'true,true': [7.908231714617545e-06, 0.002306954303222882], 'true,false': [nan, 0.0]}
{'': [0.12092197829282046, 0.12243616314303517], 'false': [0.1432191130857176, 0.12148915660402664], 'false,false': [0.12148915660402664, nan], 'true': [0.05368867921699029, 0.0070969891879706275], 'true,true': [0.0064440624535187785, 0.060810416446018985], 'true,true,false': [0.0, 0.05877069413370479], 'true,true,true': [0.006782351246379115, 0.0]}
{'': [0.0013652592181290682, 0.10528034576009952], 'false': [0.10263855648950267, 0.12643314960373964], 'false,false': [0.20582721887181088, 0.11584405581500988], 'false,false,true': [0.20582721887181088, nan], 'false,false,false': [0.11584405581500988, nan], 'false,true': [0.1179940993278521, 0.00034790144812150053], 'false,true,true': [nan, 0.11799409932785221], 'true': [3.96508223080413e-18, 0.0018111488450011926]}
{'': [0.0025961792023670993, 0.08519148123472346], 'false': [0.05800141313075492, 0.10226702218050539], 'false,false': [0.000753759979001889, 0.10433738750887649], 'false,false,false': [0.09869574323955005, 0.1801503587638192], 'false,true': [0.06845772923539017, 0.05112463837237483], 'false,true,false': [0.061105472694866304, 0.04239586879753454], 'true': [0.0013168851552870509, 0.002538828807855823], 'true,false': [0.0, 0.003016664197853525]}
{'': [0.06107057287701182, 0.07362531545242929], 'false': [0.04266098501480123, 0.09710523469160837], 'false,false': [0.14204434816101558, 0.09550045323770727], 'false,false,false': [0.08898261548918815, 0.17249396678635315], 'true': [0.0015999255691890911, 0.1439374792881926], 'true,true': [0.0015999255691890911, nan], 'true,true,true': [-3.96508223080413e-18, 0.0007053855956919061]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 25.567
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5367203636709408;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   | | | else return -0.043811849214213175;  // std dev = 3.003, 102.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=10 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.23461952333480512;  // std dev = 4.467, 85.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=32 */
%   | | | else return 0.11148226843284569;  // std dev = 3.767, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.09744060733162808;  // std dev = 1.080, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.7462537292833586;  // std dev = 0.129, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7372321343150519;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.699778895339202;  // std dev = 3.062, 87.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=76 */
%   | | | else return -0.152286426258239;  // std dev = 0.215, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.11283834689041179;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.23050507447732285;  // std dev = 1.089, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then return 0.2278609037700579;  // std dev = 0.436, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return 0.5801983629625518;  // std dev = 0.133, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6079774752880985;  // std dev = 0.145, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G), interaction(H, A) )
%   | | then return 0.06632438005949934;  // std dev = 0.355, 132.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=34 */
%   | | else if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5134485219470358;  // std dev = 3.088, 60.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=48 */
%   | | | else return -0.13858801532512935;  // std dev = 0.338, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.2103893619415008;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return -0.041687393349449785;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.0485739727601362;  // std dev = 1.056, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.48432380366578287;  // std dev = 0.055, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.21018309981049316;  // std dev = 0.441, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F), complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5849010802326671;  // std dev = 0.345, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.14226045262978704;  // std dev = 0.476, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return 0.02663415602021596;  // std dev = 2.267, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.12161146321917408;  // std dev = 4.317, 137.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=47 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.5389322713377881;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.2954329259503845;  // std dev = 0.984, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.029729511106099303;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.306795226066383;  // std dev = 0.301, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.35867159146159866;  // std dev = 0.052, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5723631723676237;  // std dev = 0.464, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.13127893604712165;  // std dev = 0.102, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( location(A, I) )
%   | | | then return 0.029491618836561796;  // std dev = 4.830, 238.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=61 */
%   | | | else return 0.1234437978005882;  // std dev = 1.337, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4054307013361014;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.14038147024693376;  // std dev = 1.370, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.11287829981121311;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.32473314217971083;  // std dev = 0.079, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3571370690591231;  // std dev = 0.184, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3125299382952923;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.125593257858626;  // std dev = 0.047, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return -0.01457396555399309;  // std dev = 0.879, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.13081459027345274;  // std dev = 1.927, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2903650163656198;  // std dev = 0.128, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.1302375763996577;  // std dev = 2.384, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.032305155833465674;  // std dev = 4.231, 174.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.20275864189251766;  // std dev = 0.267, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.006473817861337577;  // std dev = 0.878, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4163996406587044;  // std dev = 1.719, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | else return -0.16424100180094361;  // std dev = 0.097, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.21968780692783002;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( location(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.480043287551846;  // std dev = 0.406, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.1487053782517984;  // std dev = 0.309, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.04186454863424804;  // std dev = 3.328, 91.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=27 */
%   | | | else return 0.11490007797479668;  // std dev = 1.311, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.24096461275300465;  // std dev = 0.065, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, E) )
%   | | then return -0.11299767149497857;  // std dev = 0.687, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.21135723941341306;  // std dev = 0.048, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.19121483467988404;  // std dev = 1.887, 38.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=29 */
%   | | | else return 0.44510255972899104;  // std dev = 1.554, 56.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=53 */
%   | | else return -0.13486923400933948;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.041206317998183896;  // std dev = 0.716, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.1287333155613164;  // std dev = 0.795, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.05188761600532153;  // std dev = 0.406, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.20299562258556234;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.18050553732070673;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( complex(A, G), location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.05774393182386894;  // std dev = 1.462, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return -0.09199407254411249;  // std dev = 0.202, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.05981082810978388;  // std dev = 1.703, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return -0.08245350991960274;  // std dev = 0.503, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.17262765961850038;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), complex(A, N) )
%   | | | then return -0.0382659081932134;  // std dev = 1.030, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | | else return 0.041515311090899995;  // std dev = 3.379, 123.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=42 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.11770206141771941;  // std dev = 0.214, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return -0.1165770940203312;  // std dev = 0.816, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10538454564689077;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( enzyme(A, G), enzyme(F, H) )
%   | | | then return -0.025625884639524952;  // std dev = 1.614, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.007874762944213335;  // std dev = 3.659, 208.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=63 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( complex(J, I) )
%   | | | then return -0.11430894798361364;  // std dev = 0.802, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.024105148990288743;  // std dev = 0.713, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(A, K) )
%   | | | then return 0.17010983586438796;  // std dev = 1.020, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.07868029841459563;  // std dev = 0.620, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '16.093', 'seconds']
Refined model CLL: -0.182231


******************************************
Best model found
******************************************
Results 

CLL : -0.172135 

AUC ROC : 0.992795 

AUC PR : 0.402414 

Precision : 0.339593 

Recall : 0.818868 

F1 : 0.480088 

Total Learning Time : 25.567 

Total Inference Time : 124.46063804626465 

Total revision time: 172.94922319221496
Best scored revision CLL: -0.182231


Results 

CLL : -0.172135 

AUC ROC : 0.992795 

AUC PR : 0.402414 

Precision : 0.339593 

Recall : 0.818868 

F1 : 0.480088 

Total Learning Time : 173.00618830490112 

Total Inference Time : 124.46063804626465 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.479
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.0803711573217346;  // std dev = 2.494, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.16159721096158025;  // std dev = 5.536, 145.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.20360348055405775;  // std dev = 3.527, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109544;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5676846994734013;  // std dev = 0.933, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8389734159798158;  // std dev = 0.028, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1606359248305268;  // std dev = 0.050, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | else if ( location(A, K) )
%   | | | then return 0.15267556079555616;  // std dev = 3.484, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | | else return 0.16484747962415555;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05162312674459246;  // std dev = 2.128, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.683321142263118;  // std dev = 0.188, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1419681219188465;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5924653342771038;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07985515584361122;  // std dev = 3.775, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.11234573208482308;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3341802508249765;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.41751358415830997;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5475670199205553;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5847130865068707;  // std dev = 0.136, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.08007851327310159;  // std dev = 4.060, 168.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4456409573389354;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5730512592822032;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.09921386279474072;  // std dev = 3.542, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | | else return 0.12773975286318903;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33544719405777473;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.33503787886617403;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.032766878571359764;  // std dev = 4.259, 216.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.33985511792335676;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.43076269669135003;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1626257062013592;  // std dev = 3.437, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return -0.059532165805985415;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2684618019579624;  // std dev = 0.000105, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3890699678862328;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.268195925014059;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2523817692971071;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3297087243701943;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07482756803039951;  // std dev = 0.957, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.263158161025779;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.05402892475813654;  // std dev = 3.974, 165.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=49 */
%   | | | else return 0.08108014925515865;  // std dev = 3.651, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24564715537844398;  // std dev = 0.141, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.24010939566550166;  // std dev = 0.030, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.220051707194297;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6299653227583593;  // std dev = 0.741, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19813275875083902;  // std dev = 0.654, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.21446432336176108;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05708172168878151;  // std dev = 3.313, 115.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17996439475139014;  // std dev = 6.98e-05, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.17969927640426073;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3780484797317287;  // std dev = 1.915, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return -0.1418086485744395;  // std dev = 0.275, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.19914678854364887;  // std dev = 0.026, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.022232275519660782;  // std dev = 3.067, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.09001774213878092;  // std dev = 0.645, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1974586351831591;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17571795651412345;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.0728386808503571;  // std dev = 0.416, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.1923894931882928;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.0045362203318939;  // std dev = 1.238, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15547507459213455;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.028549606901880627;  // std dev = 2.736, 118.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=36 */
%   | | | else return 0.01150895167211004;  // std dev = 3.075, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14186942910391503;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16033313883836361;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.14352719850741824;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.012488959426194856;  // std dev = 0.632, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.010650429663720555;  // std dev = 1.348, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.13613939832159994;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.026919558412728566;  // std dev = 2.710, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
%   | | | else return -0.045662411436114395;  // std dev = 3.218, 86.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.829', 'seconds']
Parameter learned model CLL:-0.175718 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.707, 1, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.494, 28, 8], 'false,false,true,false': [5.536, 101, 44], 'false,false,false,true': [3.527, 36, 19], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [2.98e-08, 0, 8], 'false,true,true': [0.933, 1, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.028, 0, 52], 'false,false,true,false': [0.05, 142, 0], 'false,false,false,true': [3.484, 37, 18], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.128, 27, 8], 'false,true,false,true': [0.188, 0, 48], 'false,true,false,false': [0.0, 127, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.775, 53, 20], 'false,false,false,true': [0.894, 4, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.957, 1, 11], 'true,false': [0.0, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.136, 0, 3], 'false,true,false': [4.06, 116, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.542, 40, 18], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.016, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.023, 0, 9], 'false,true': [4.259, 160, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.437, 30, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.000105, 0, 7], 'true,true,false': [0.034, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.957, 21, 3], 'false,false,true': [0.019, 0, 6], 'false,false,false,true': [3.974, 116, 49], 'false,false,false,false': [3.651, 40, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.141, 0, 12], 'true,true,true,false': [0.03, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.741, 0, 36], 'true,false': [0.654, 105, 0], 'false,true': [0.015, 0, 5], 'false,false,true': [3.313, 79, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [6.98e-05, 0, 6], 'true,false': [0.017, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.915, 4, 56], 'false,true,false': [0.275, 149, 0], 'false,false,true,true': [0.026, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.067, 45, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.645, 1, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.029, 0, 4], 'false,true,true': [0.416, 12, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.238, 38, 14], 'false,false,true': [0.012, 0, 5], 'false,false,false,true': [2.736, 82, 36], 'false,false,false,false': [3.075, 47, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.007, 0, 5], 'true,true,true,false': [0.026, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.632, 1, 4], 'false,true': [1.348, 50, 17], 'false,false,true': [0.011, 0, 5], 'false,false,false,true': [2.71, 80, 36], 'false,false,false,false': [3.218, 66, 20]}]
{'': [-2.5376526277146434e-16, 0.2174818597151309], 'false': [0.12244897959183662, 0.21150456657587066], 'false,false': [0.20475565458929898, 0.22959183673469347], 'false,false,false': [0.22611570247933835, 0.0], 'false,false,true': [0.17283950617283966, 0.21136741973840756], 'false,true': [0.25, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [0.0, 0.20614986473643945], 'false': [0.12706832257107342, 0.20239550800310627], 'false,false': [0.19605897201833722, 0.22089765183339094], 'false,false,false': [0.22073858056276738, 0.2222222222222223], 'false,false,true': [1.5081545681502243e-05, 1.7839997676632944e-05], 'false,true': [0.14495497443084415, 0.0], 'true': [7.401486830834377e-17, 1.1102230246251565e-16], 'false,true,false': [nan, 0.0]}
{'': [-2.5376526277146434e-16, 0.15161632889085386], 'false': [0.13485197735506496, 0.1961633631280795], 'false,false': [0.1960972145405177, 0.15999999999999998], 'false,false,true': [0.0, 0.19523254268537968], 'false,false,false': [0.15999999999999998, nan], 'false,true': [0.1293318961931172, 0.1357769731870115], 'false,true,false': [0.0007344951106052674, -6.294177777402462e-17], 'true': [-7.401486830834377e-17, -1.1102230246251565e-16]}
{'': [0.06222222222222236, 0.13321586178263162], 'false': [0.10153511163101485, 0.21540748185984473], 'false,false': [0.0040583462603187015, 0.2169811733904778], 'false,false,false': [0.2163627090747315, 0.2222222222222222], 'false,true': [0.004915560863948509, 0.09812930509838128], 'true': [0.07638888888888899, -3.700743415417188e-17], 'false,true,true': [0.0, 0.006209123586222572], 'false,false,true': [0.0, 0.0]}
{'': [5.7121371096844976e-05, 0.11678925836506926], 'false': [0.08398397746155321, 0.23380024980858166], 'false,false': [0.0020660469693647154, 0.24045998316263048], 'false,false,false': [0.24105840784183366, 0.1875], 'false,false,true': [0.0, 0.0], 'true': [5.428261204829532e-05, 5.863862412626276e-05], 'true,true': [5.428261204829532e-05, nan]}
{'': [0.0031051147435070536, 0.1205588801807654], 'false': [0.03812861396849941, 0.1272435485649381], 'false,false': [5.7235928659638e-05, 0.12957622512717845], 'false,false,false': [0.09571423792346452, 0.22216005952308032], 'true': [0.003469672706972273, 0.001112596665171504], 'true,true': [1.5825289650146195e-09, 0.0002848419183781592], 'true,false': [6.252188025999972e-05, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.12883683386886519, 0.09246619660870053], 'true': [0.04225108124039876, 0.00406792574210243], 'false': [4.682828713811205e-05, 0.09545237654276267], 'false,false': [0.09545237654276267, nan], 'true,true': [0.0014790818776215559, 0.01927472192035842], 'true,true,false': [0.0, 0.015268801883541726], 'true,true,true': [0.001646358942234231, 0.0004491336762555004]}
{'': [2.1289555712190283e-05, 0.08983006196459803], 'false': [0.073226670488082, 0.14131738383173853], 'false,false': [0.000342955611714095, 0.14472076765311087], 'false,false,false': [0.14472076765311087, nan], 'false,true': [0.06114295853813324, 0.0005084510740226295], 'false,true,true': [nan, 0.06114295853813324], 'false,false,true': [0.000342955611714095, nan], 'true': [8.109232082128178e-10, 3.722599098766877e-05]}
{'': [0.029632101096077074, 0.07373726587815262], 'false': [0.027456497691321104, 0.08968499983017329], 'false,false': [2.8386390506970892e-05, 0.09164197265978732], 'false,false,false': [0.06344329732608125, 0.141120093448735], 'true': [0.04162346800405057, 0.0002435637085434317], 'false,true': [0.013324799331100338, 0.02974973996059294], 'false,true,false': [0.0, 0.029457674185884533], 'true,false': [0.0, 0.00020992321388123986]}
{'': [0.03076447281773757, 0.07252840001278013], 'false': [0.02710258641791237, 0.08720672711404348], 'false,false': [2.27573065788772e-05, 0.08889049700090071], 'false,false,false': [0.06329011222927917, 0.1203959786906073], 'true': [0.00014220806177002443, 0.07981375571714273], 'true,true': [0.00017221366956185827, 0.0], 'true,true,true': [1.0335720870013888e-05, 0.000228942389991188], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
0;false,false;interaction(H, A).;true;true
0;false,false,false;interaction(A, J), interaction(J, K).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.285
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A), enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.024815601766179047;  // std dev = 3.651, 96.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=16 */
%   | | | else return 0.14614893509951088;  // std dev = 5.063, 125.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16962434493557788;  // std dev = 3.617, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7401919213324014;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.5528067455442879;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8252796428561027;  // std dev = 0.997, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15361565120535328;  // std dev = 0.099, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.1075128887531786;  // std dev = 1.859, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.22083647787104743;  // std dev = 3.038, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.44399646332175496;  // std dev = 0.332, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5540859847587529;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.049794412432367555;  // std dev = 0.809, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.14311792253687847;  // std dev = 1.815, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6936543492655863;  // std dev = 0.240, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13572601525399156;  // std dev = 0.067, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5960526174841312;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.18267227199771485;  // std dev = 3.487, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | else return -0.052728567776490334;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.43907625799203737;  // std dev = 0.036, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.42443091167436464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.42870629402654503;  // std dev = 0.675, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(G, A), location(G, H) )
%   | | | then return 0.051084896744276055;  // std dev = 4.225, 192.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=51 */
%   | | | else return -0.0722509134742463;  // std dev = 0.631, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.44843194547397947;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5514106786343551;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.12464178596860019;  // std dev = 2.432, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.01025456210011189;  // std dev = 2.888, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3358788065067339;  // std dev = 0.033, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( complex(F, G), phenotype(F, H) )
%   | | | then return 0.09432859879143024;  // std dev = 2.762, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   | | | else return 0.03608223253837894;  // std dev = 2.495, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.1430237407058313;  // std dev = 1.385, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.24963836490018115;  // std dev = 0.985, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.34176464016165;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4145860548567276;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.02264249182943261;  // std dev = 1.765, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.1371267777319279;  // std dev = 3.163, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2770927763160678;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3600401892017677;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.28594488575135474;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( phenotype(A, G), enzyme(A, H) )
%   | | then return 0.003578063544306659;  // std dev = 0.267, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.12439430834063342;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.05198385288561165;  // std dev = 0.535, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.25201381002113316;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.06749128622140507;  // std dev = 3.865, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
%   | | | else return 0.11515368926827045;  // std dev = 3.593, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24300587804481885;  // std dev = 0.041, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2044553749834549;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6340728581615804;  // std dev = 0.632, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19565160018213176;  // std dev = 0.086, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.04087026465776428;  // std dev = 0.916, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( location(A, I), location(G, I) )
%   | | | then return 0.06612301172426181;  // std dev = 1.715, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.19672271706680056;  // std dev = 1.139, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.09550241590732966;  // std dev = 1.362, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.0486913937690406;  // std dev = 1.902, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1897062569757444;  // std dev = 0.073, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1904522170105628;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.4230336052772884;  // std dev = 0.481, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.40335114647201975;  // std dev = 1.042, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.1467762410545787;  // std dev = 0.274, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | | else return -0.15306787984337542;  // std dev = 0.200, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.19732544259284235;  // std dev = 0.027, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.17279982989353163;  // std dev = 1.732, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return -0.0026840642221701676;  // std dev = 2.283, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16367927308306837;  // std dev = 0.025, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1619677403288249;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( complex(A, G), enzyme(A, H) )
%   | | | then return -0.005917521803728579;  // std dev = 0.407, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.09221362026474766;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.22591685615479556;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.030926169854263986;  // std dev = 1.293, 77.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1725953503246948;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.01570304078105815;  // std dev = 2.525, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | | else return -0.0041910941600052706;  // std dev = 3.135, 121.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1444535821233488;  // std dev = 0.022, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.13621203519784095;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.059807915727322455;  // std dev = 0.590, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | | else return -0.005536982438603269;  // std dev = 1.024, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.04692633492877096;  // std dev = 0.598, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.05183031416808087;  // std dev = 0.327, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return -0.017816875658599;  // std dev = 0.916, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(A, M), phenotype(A, N) )
%   | | | then return 0.0590478600893153;  // std dev = 1.466, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.006542001004366151;  // std dev = 3.708, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '36.434', 'seconds']
Refined model CLL: -0.184694


******************************************
Best model found
******************************************
Results 

CLL : -0.194221 

AUC ROC : 0.982182 

AUC PR : 0.18576 

Precision : 0.134921 

Recall : 0.797834 

F1 : 0.230809 

Total Learning Time : 7.285 

Total Inference Time : 7.491694688796997 

Total revision time: 26.84884363555908
Best scored revision CLL: -0.175718


Results 

CLL : -0.194221 

AUC ROC : 0.982182 

AUC PR : 0.18576 

Precision : 0.134921 

Recall : 0.797834 

F1 : 0.230809 

Total Learning Time : 26.90580874824524 

Total Inference Time : 7.491694688796997 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.491
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1289822684328457;  // std dev = 3.079, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return 0.1778210662470527;  // std dev = 5.151, 122.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.35814893509951234;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.734733748384724;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6040111223195604;  // std dev = 0.930, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7398727907934263;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7997736478801154;  // std dev = 1.386, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.1624520858117247;  // std dev = 0.034, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else if ( location(A, I) )
%   | | | then return 0.09365289528806651;  // std dev = 2.813, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.327334239218108;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5774924134901656;  // std dev = 0.041, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3948039354445857;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.011366356614998569;  // std dev = 2.832, 77.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6422080982395727;  // std dev = 1.383, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.1437322384226665;  // std dev = 6.32e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6314940346281362;  // std dev = 0.199, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09787884618547062;  // std dev = 2.447, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2258016743573805;  // std dev = 1.319, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.33279172794333317;  // std dev = 1.335, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5475092207438081;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.33572255220085784;  // std dev = 1.133, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.04047048865307087;  // std dev = 4.348, 198.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.39424196941078615;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.08761132525575865;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.042988834351183156;  // std dev = 2.812, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.06707991395716313;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.35172174967208725;  // std dev = 0.029, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3986109982982125;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.06299124502445128;  // std dev = 4.463, 190.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.30496658084243855;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.435598558912298;  // std dev = 0.185, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.05321390184932911;  // std dev = 2.514, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.12598171875176262;  // std dev = 1.375, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2751803464893903;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4045183444597004;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.24439660166160748;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.33945378892982003;  // std dev = 0.167, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.04984640444409157;  // std dev = 1.326, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.31165380603615167;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.08137056688005855;  // std dev = 3.925, 141.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=46 */
%   | | | else return -0.0010775081821464466;  // std dev = 3.145, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2509784727161893;  // std dev = 0.154, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.24859807762885566;  // std dev = 0.157, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.27981056799377646;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5630198959352103;  // std dev = 1.400, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17718891143258816;  // std dev = 0.455, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23885384713811064;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0715525874005501;  // std dev = 3.236, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1818112020733852;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.21008926765919264;  // std dev = 0.056, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.45465421290226693;  // std dev = 0.843, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14280286078951282;  // std dev = 0.205, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20680270228758804;  // std dev = 0.139, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.03984253467263965;  // std dev = 2.441, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1549493621347373;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.17798789507449242;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18958100457137161;  // std dev = 0.118, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.08845274228981595;  // std dev = 0.315, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.27370454921946635;  // std dev = 0.179, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.025617568547714534;  // std dev = 1.463, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1669494600115423;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03933723466832833;  // std dev = 2.613, 95.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
%   | | | else return -0.011944880544773643;  // std dev = 2.510, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13694667285837026;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.13086675023087663;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.1394385273194143;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16116125155811395;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.16821035398094486;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.046146192165512065;  // std dev = 1.947, 120.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1450211643303496;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03149548777689512;  // std dev = 2.735, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   | | | else return 0.010791509601772142;  // std dev = 2.467, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.981', 'seconds']
Parameter learned model CLL:-0.181971 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [3.079, 35, 13], 'false,false,true,false': [5.151, 83, 39], 'false,false,false,true': [2.121, 9, 9], 'false,false,false,false': [1.369, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.93, 1, 7], 'false,true,true': [0.062, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.386, 2, 52], 'false,false,true,false': [0.034, 116, 0], 'false,false,false,true': [2.813, 28, 11], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.041, 0, 11], 'true,false': [0.886, 1, 4], 'false,true,true': [2.832, 63, 14], 'false,true,false,true': [1.383, 2, 42], 'false,true,false,false': [6.32e-08, 97, 0], 'false,false,true,true': [0.199, 0, 3], 'false,false,true,false': [2.447, 20, 9], 'false,false,false,true': [1.319, 4, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [1.335, 2, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.133, 3, 6], 'false,true,false': [4.348, 149, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.707, 1, 1], 'false,false,false,true': [2.812, 30, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.029, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.055, 0, 6], 'false,true': [4.463, 134, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.185, 0, 2], 'false,false,false,true': [2.514, 22, 9], 'false,false,false,false': [1.375, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.016, 0, 9], 'true,true,false': [0.05, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.167, 0, 2], 'false,true': [1.326, 27, 5], 'false,false,true': [0.045, 0, 5], 'false,false,false,true': [3.925, 95, 46], 'false,false,false,false': [3.145, 42, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.154, 0, 13], 'true,true,true,false': [0.157, 0, 3], 'true,true,false,true': [0.038, 0, 3], 'true,true,false,false': [1.4, 1, 33], 'true,false': [0.455, 100, 0], 'false,true': [0.027, 0, 3], 'false,false,true': [3.236, 66, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.056, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.843, 0, 56], 'false,true,false': [0.205, 132, 0], 'false,false,true,true': [0.139, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.441, 27, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.018, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.118, 0, 5], 'false,true,true': [0.315, 14, 1], 'false,true,false,true': [0.179, 0, 6], 'false,true,false,false': [1.463, 55, 17], 'false,false,true': [0.02, 0, 3], 'false,false,false,true': [2.613, 64, 31], 'false,false,false,false': [2.51, 36, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.014, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.011, 0, 2], 'true,false': [0.102, 0, 3], 'false,true': [1.947, 96, 24], 'false,false,true': [0.018, 0, 3], 'false,false,false,true': [2.735, 59, 31], 'false,false,false,false': [2.467, 32, 12]}]
{'': [0.05859374999999978, 0.22690792003075758], 'false': [0.10937499999999978, 0.21990837151187143], 'false,false': [0.2123183391003467, 0.24852071005917115], 'false,false,false': [0.25, 0.2343749999999999], 'false,false,true': [0.19748263888888837, 0.21748185971513084], 'false,true': [0.0, 0.12244897959183662], 'false,true,false': [1.4802973661668753e-16, 0.18750000000000006], 'true': [0.07100591715976314, 1.4802973661668753e-16]}
{'': [0.05827156335743261, 0.21594491123746035], 'false': [0.0005548461954012802, 0.211372841418397], 'false,false': [0.21198286955891874, 0.2076712036336108], 'false,false,true': [0.03555571937781992, 1.021111413460733e-05], 'false,false,false': [0.2028367414690592, 0.25000000000000006], 'true': [-2.220446049250313e-16, 0.10799892423217855], 'false,true': [0.0005548461954012802, nan]}
{'': [0.05637115293085182, 0.14743291929327648], 'false': [0.1331873737849938, 0.21985006323314116], 'false,false': [0.21252442214270223, 0.2483599596675075], 'false,false,false': [0.2483599596675075, nan], 'false,false,true': [0.013177277450610037, 0.20645168093380975], 'false,true': [0.10414390568863738, 0.1461768397585801], 'false,true,false': [0.043486251940822646, 4.1204153491242925e-17], 'true': [0.00014991141139721685, 0.15711251676635704]}
{'': [0.10479616369731713, 0.11911656519141083], 'false': [0.10184618681970943, 0.19393199801875136], 'false,false': [0.14850558798373176, 0.19485068657493668], 'false,false,false': [0.1928083199120868, 0.22222222222222224], 'false,false,true': [0.0, 0.25], 'true': [0.10479616369731713, nan], 'false,true': [0.13250680369160964, 0.09548380508805794], 'false,true,true': [0.0, 0.14274442258231412]}
{'': [0.0007836492423057174, 0.12298058061662422], 'false': [0.10485401297573527, 0.2043264628998333], 'false,false': [0.015168634395061517, 0.21138276253553323], 'false,false,false': [0.20382453164933417, 0.23646193772008878], 'false,false,true': [0.0, 0.017064713694444233], 'true': [9.026337018987658e-05, 0.0005045670684460565], 'true,true': [9.026337018987658e-05, nan]}
{'': [0.005201242965051367, 0.1196613086173202], 'false': [0.054911042567726616, 0.12813966950281538], 'false,false': [0.0003981287961848046, 0.1297884255370098], 'false,false,false': [0.10924087217269828, 0.1766588813380667], 'true': [0.003772833977807571, 0.01134879463661744], 'true,false': [0.0, 0.014011235671144817], 'true,true': [2.8416349387525327e-05, 0.0006166306055440662], 'true,false,true': [0.0, nan]}
{'': [0.11186456377658588, 0.10556326155000116], 'true': [0.059744505914133904, 0.0020688399915656497], 'false': [0.0002368446186799452, 0.10798108825413023], 'false,false': [0.10798108825413023, nan], 'true,true': [0.003030996095030311, 0.05896371929403823], 'true,true,false': [0.00047346251783369114, 0.057621311592916266], 'true,true,true': [0.001825967677949582, 0.008248182049253075]}
{'': [0.00040969292464206514, 0.09066858437311257], 'false': [0.0786613628379729, 0.14418981398040506], 'false,false': [0.006461770798875638, 0.15279315758552187], 'false,false,false': [0.15279315758552187, nan], 'false,true': [0.012702670383936672, 0.0003168305806858717], 'false,true,true': [nan, 0.012702670383936767], 'false,false,true': [0.006461770798875638, nan], 'true': [0.0, 0.00045143394686722064]}
{'': [0.001154732761867075, 0.06790284627992488], 'false': [0.030752672858045282, 0.0908955184881552], 'false,false': [0.0001373335283832433, 0.09236855320930774], 'false,false,false': [0.07184595583020247, 0.13123908716056318], 'false,true': [0.0066343436668993274, 0.03420179189954449], 'false,true,false': [0.00531551765179028, 0.029717156021372988], 'true': [3.200573125205497e-05, 0.002357660403224946], 'true,false': [0.0, 0.0028067924525688294]}
{'': [0.0008603665390589724, 0.06910679528559896], 'false': [0.031591468323524045, 0.09944598104789942], 'false,false': [0.00010884519056026758, 0.10135291324830994], 'false,false,false': [0.08313261343134613, 0.13833380590977037], 'true': [0.00011183338143172943, 0.0034541121766487512], 'true,true': [2.55856072547217e-05, 0.00014481553562281646], 'true,true,false': [0.0, 5.99310539840317e-05], 'true,true,true': [0.0, 9.835566894855763e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 8.327
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.03592671287729014;  // std dev = 3.627, 90.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=16 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.14386322081379785;  // std dev = 3.780, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0.21199508894566618;  // std dev = 3.855, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(H, G) )
%   | | then return 0.4350205931216841;  // std dev = 0.788, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7773608507728526;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7970420078299341;  // std dev = 1.384, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.1560148221322946;  // std dev = 0.142, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( location(A, K) )
%   | | | then return 0.1538646346190132;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.030335222854307686;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.56087370252247;  // std dev = 0.017, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5856563985153045;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.05950234253961608;  // std dev = 1.516, 34.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=4 */
%   | | | else return 0.2117281161998303;  // std dev = 2.041, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6485294524499566;  // std dev = 1.389, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.13738394410736735;  // std dev = 0.085, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.6139396555370712;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.0383148299757397;  // std dev = 2.148, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.24007555239094414;  // std dev = 1.849, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.21377135299642416;  // std dev = 0.898, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.4313365084312473;  // std dev = 0.026, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5214060364158826;  // std dev = 0.092, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.12071746623186849;  // std dev = 0.011, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.06582263284730018;  // std dev = 4.284, 174.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=49 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.11696894546510432;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4876401581174584;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.04300727279428426;  // std dev = 1.733, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.16443718399556023;  // std dev = 2.224, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.2305895975425803;  // std dev = 0.291, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.03320588237089069;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.35268657039346607;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), interaction(A, G) )
%   | | then return -0.0388346944408692;  // std dev = 0.192, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.1208971004541107;  // std dev = 2.564, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | | else return 0.06750465966469463;  // std dev = 3.222, 101.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=31 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4039875326744026;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.14554053903420286;  // std dev = 1.606, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.0012784024551624716;  // std dev = 2.456, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2759718870399357;  // std dev = 0.015, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.32186335141403194;  // std dev = 0.700, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.3273036029437384;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.037110253515500125;  // std dev = 0.836, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10535017225585647;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0.016249499009514105;  // std dev = 0.210, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.30747068016217993;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, I) )
%   | | | then return 0.06479780098439493;  // std dev = 4.862, 175.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=57 */
%   | | | else return 0.30334551055187553;  // std dev = 0.985, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2810787714661968;  // std dev = 0.079, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2616353893878596;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5810036872156713;  // std dev = 0.814, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.16627748835498476;  // std dev = 0.082, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2528291973474703;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, G) )
%   | | | then return 0.3999473798420885;  // std dev = 0.700, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.10185471186101024;  // std dev = 2.619, 60.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.0691237473348485;  // std dev = 0.532, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.04068208124701311;  // std dev = 1.075, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.19222267662731335;  // std dev = 0.030, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.3107496480019177;  // std dev = 0.833, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.4624853258159832;  // std dev = 0.951, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.10294307339117442;  // std dev = 0.161, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | | else return -0.18144496847668962;  // std dev = 0.272, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return -0.08095682781212105;  // std dev = 1.539, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.05653490986531284;  // std dev = 1.030, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.32939218535257914;  // std dev = 0.703, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.010416977281817615;  // std dev = 1.611, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16318070350452155;  // std dev = 0.025, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.30365980838533113;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.24796986766064175;  // std dev = 0.112, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -0.08677146833742275;  // std dev = 0.434, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return -0.0019910585972782095;  // std dev = 1.510, 75.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=21 */
%   | | else return -0.1401578293665964;  // std dev = 0.369, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.07584283539292899;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.04023558156331823;  // std dev = 2.564, 76.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=26 */
%   | | | else return -0.025920786986883174;  // std dev = 2.420, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15823277899565522;  // std dev = 0.045, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.21138333719342395;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.28740317618633543;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.10009473236316416;  // std dev = 0.057, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.05347757592802054;  // std dev = 0.786, 42.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=4 */
%   | | | else return -0.019587303875574523;  // std dev = 1.144, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.1898432739415192;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return -0.06110592536253048;  // std dev = 2.088, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return 0.008832392849610687;  // std dev = 2.932, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '51.675', 'seconds']
Refined model CLL: -0.183562


******************************************
Best model found
******************************************
Results 

CLL : -0.192619 

AUC ROC : 0.983289 

AUC PR : 0.215489 

Precision : 0.145682 

Recall : 0.780919 

F1 : 0.245556 

Total Learning Time : 8.327 

Total Inference Time : 8.965991735458374 

Total revision time: 29.728761833190916
Best scored revision CLL: -0.181971


Results 

CLL : -0.192619 

AUC ROC : 0.983289 

AUC PR : 0.215489 

Precision : 0.145682 

Recall : 0.780919 

F1 : 0.245556 

Total Learning Time : 29.785726945877073 

Total Inference Time : 8.965991735458374 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.27
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17336632640386;  // std dev = 7.719, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17158582638401293;  // std dev = 5.406, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
%   | | | else return 0.16395223859775337;  // std dev = 5.375, 131.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13541070665541294;  // std dev = 4.863, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | | | else return 0.1650878434650603;  // std dev = 5.798, 147.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.14626418697483898;  // std dev = 3.586, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | | else return 0.12598488231626057;  // std dev = 6.651, 197.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12348767184315443;  // std dev = 7.466, 242.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06561017407629667;  // std dev = 7.666, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.702618982146177;  // std dev = 0.983, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else return -0.269611958264859;  // std dev = 0.023, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06894771697428097;  // std dev = 3.971, 70.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
%   | | | else return 0.06495553989462076;  // std dev = 4.307, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07194014072999268;  // std dev = 3.729, 95.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=35 */
%   | | | else return 0.08753279339286119;  // std dev = 5.705, 139.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.019686016026814225;  // std dev = 7.067, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03517425941581178;  // std dev = 6.959, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.290', 'seconds']
Parameter learned model CLL:-0.344284 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.719, 189, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.406, 87, 44], 'false,false,false,false': [5.375, 88, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.863, 73, 35], 'false,false,false,false': [5.798, 95, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.586, 36, 20], 'false,false,false,false': [6.651, 130, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.466, 155, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.666, 181, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.983, 1, 35], 'true,false': [0.023, 70, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.971, 46, 24], 'false,false,false,false': [4.307, 55, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.729, 60, 35], 'false,false,false,false': [5.705, 87, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.067, 182, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.959, 164, 87]}]
{'': [nan, 0.21585538752363032], 'false': [nan, 0.2158553875236304], 'false,false': [nan, 0.21585538752363032], 'false,false,false': [nan, 0.2158553875236304]}
{'': [nan, 0.22179651535458034], 'false': [nan, 0.22179651535458147], 'false,false': [nan, 0.22179651535458034], 'false,false,false': [0.22306392401375105, 0.22049997086416834]}
{'': [nan, 0.22478178815767616], 'false': [nan, 0.22478178815767616], 'false,false': [nan, 0.22478178815767513], 'false,false,false': [0.21901034204986772, 0.2286490181815573]}
{'': [nan, 0.22575242063488524], 'false': [nan, 0.22575242063488524], 'false,false': [nan, 0.225752420634885], 'false,false,false': [0.22959183673469363, 0.22456998530092062]}
{'': [nan, 0.23031009750659825], 'false': [nan, 0.23031009750659825], 'false,false': [nan, 0.23031009750659728], 'false,false,false': [nan, 0.23031009750659728]}
{'': [nan, 0.21930130263716158], 'false': [nan, 0.21930130263716158], 'false,false': [nan, 0.21930130263716155], 'false,false,false': [nan, 0.21930130263716155]}
{'': [0.22111778950679356, 0.22435457938817077], 'false': [nan, 0.22435457938817077], 'false,false': [nan, 0.22435457938817077], 'false,false,false': [0.2253061224489792, 0.22354478153578125], 'true': [0.02684410116944856, 7.443271502692385e-06], 'true,true': [nan, 0.02684410116944856], 'true,true,false': [nan, 0.02684410116944856]}
{'': [nan, 0.1985859569415291], 'false': [nan, 0.1985859569415291], 'false,false': [nan, 0.19858595694152928], 'false,false,false': [0.14638874219836384, 0.23416160538588845]}
{'': [nan, 0.1856501122503507], 'false': [nan, 0.18565011225035102], 'false,false': [nan, 0.18565011225035102], 'false,false,false': [nan, 0.18565011225035102]}
{'': [nan, 0.19295788291324287], 'false': [nan, 0.19295788291324287], 'false,false': [nan, 0.1929578829132426], 'false,false,false': [nan, 0.1929578829132426]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 32.686
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, A), phenotype(A, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( enzyme(A, E), interaction(F, A) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.14386322081379807;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.2411276585037677;  // std dev = 3.333, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | else if ( interaction(A, I), phenotype(A, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.14386322081379802;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( location(A, L) )
%   | | | then return 0.15729423424481004;  // std dev = 4.953, 117.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=35 */
%   | | | else return 0.07243464938522651;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.692888081238352;  // std dev = 0.263, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( location(A, E) )
%   | | | then return 0.808115277213313;  // std dev = 0.119, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.31509751670479996;  // std dev = 1.233, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.15843980978560845;  // std dev = 0.049, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0.08125912930532114;  // std dev = 3.692, 74.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8339990107564139;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17410621291749226;  // std dev = 5.061, 114.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=39 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.08790277524762578;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.08497495187921691;  // std dev = 1.220, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C) )
%   | then if ( enzyme(A, D) )
%   | | then return 0.5619212393848066;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.615146307634241;  // std dev = 0.130, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7278707299621239;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.13305301065642758;  // std dev = 0.160, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(A, E), interaction(E, E) )
%   | | | then return 0.039263442996447386;  // std dev = 1.558, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.13200223177812434;  // std dev = 6.537, 205.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=66 */
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return -0.003028781265818029;  // std dev = 1.772, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.16181117782263973;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.4323200138778443;  // std dev = 0.377, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | else return 0.06194564760775356;  // std dev = 0.402, 92.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(F, F), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7777779382255569;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.22222206177444298;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( location(A, J), location(F, J) )
%   | | | then return 0.09846850411920066;  // std dev = 3.070, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return 0.20269986646567886;  // std dev = 1.709, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( interaction(K, A), location(K, L) )
%   | | then if ( location(A, L) )
%   | | | then return 0.051914036281523794;  // std dev = 3.412, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | | else return -0.033327941464728124;  // std dev = 1.809, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else return 0.1252631485419565;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( interaction(C, C), recursion_proteinclass(C, B) )
%   | then return 0.35816373148782904;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(C, D) )
%   | | then return -0.114984401706175;  // std dev = 0.265, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( phenotype(A, E), phenotype(C, F) )
%   | | | then return -0.01644042117369727;  // std dev = 1.221, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.11494491256343078;  // std dev = 1.510, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.6031069863647498;  // std dev = 0.193, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.2747565132034128;  // std dev = 1.181, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.30981477296199533;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, L), phenotype(A, M) )
%   | | | then return 0.03762326816562471;  // std dev = 2.464, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.12048678908988772;  // std dev = 5.569, 141.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=50 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( complex(D, C), phenotype(A, E) )
%   | then return -0.05188450553209937;  // std dev = 0.241, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | else if ( interaction(A, D), interaction(D, D) )
%   | | then return -0.06375207279116972;  // std dev = 0.323, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( phenotype(D, F) )
%   | | | then return 0.08479282421072037;  // std dev = 3.498, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | | else return -0.05033097122452483;  // std dev = 1.272, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   else if ( interaction(G, A), interaction(G, G) )
%   | then return 0.06434768283717995;  // std dev = 0.377, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.42749454233159745;  // std dev = 1.052, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06742004387263702;  // std dev = 1.714, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.3488886895701773;  // std dev = 1.294, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.17783036322983167;  // std dev = 3.901, 64.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=27 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.6200338367867676;  // std dev = 0.154, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.24671061696911284;  // std dev = 0.085, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( location(A, E), interaction(F, A) )
%   | then if ( phenotype(F, G), complex(F, H) )
%   | | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.33450817744199995;  // std dev = 0.200, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07992457266656855;  // std dev = 2.825, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | else if ( interaction(J, F), interaction(K, J) )
%   | | | then return -0.03945854683829747;  // std dev = 4.020, 96.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=24 */
%   | | | else return 0.05193397596082123;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( interaction(L, A), interaction(M, L) )
%   | | then if ( interaction(A, L) )
%   | | | then return 0.05069734086230878;  // std dev = 0.795, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.02593552563965218;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.445606569024132;  // std dev = 0.805, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.25385573493067365;  // std dev = 1.252, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return 0.5657781493807601;  // std dev = 2.186, 66.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=61 */
%   | | else if ( interaction(D, G), interaction(A, G) )
%   | | | then return 0.37740876757878494;  // std dev = 1.064, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.23695103400478815;  // std dev = 0.309, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(H, H), enzyme(H, I) )
%   | | | then return -0.11620325781255864;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.15633051842293041;  // std dev = 0.234, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return -0.24241325455130203;  // std dev = 0.040, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( interaction(A, J), interaction(J, A) )
%   | then return 0.25382551690529725;  // std dev = 0.595, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.19963560792946455;  // std dev = 1.002, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then return -0.0828286994777099;  // std dev = 0.764, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.24895262643613375;  // std dev = 0.096, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( complex(A, E), phenotype(A, F) )
%   | then if ( complex(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, G) )
%   | | | then return 0.2594640214279638;  // std dev = 0.144, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.45823191104665323;  // std dev = 0.189, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.16912843775823816;  // std dev = 0.074, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(A, I), location(I, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.0771533447080212;  // std dev = 0.851, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.03548116873304937;  // std dev = 2.835, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | | else if ( complex(A, L), enzyme(A, M) )
%   | | | then return -0.04697184597227132;  // std dev = 1.087, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.05891458963614344;  // std dev = 3.632, 88.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=32 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.18954635730664204;  // std dev = 0.083, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(A, E), interaction(F, D) )
%   | | then if ( recursion_proteinclass(F, B), complex(F, E) )
%   | | | then return 0.24558301462399776;  // std dev = 0.092, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.03510067133370509;  // std dev = 2.065, 81.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=18 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.1031135044988567;  // std dev = 2.419, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | | else return -0.00547058318740416;  // std dev = 3.392, 91.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=25 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then return 0.4999934180762741;  // std dev = 0.367, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return -0.01455845751821728;  // std dev = 0.576, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.11542571751048758;  // std dev = 0.549, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.16334128357551309;  // std dev = 0.939, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '27.532', 'seconds']
Refined model CLL: -0.241865


******************************************
Best model found
******************************************
Results 

CLL : -0.260204 

AUC ROC : 0.98199 

AUC PR : 0.280235 

Precision : 0.206757 

Recall : 0.542553 

F1 : 0.299413 

Total Learning Time : 32.686 

Total Inference Time : 23.55435585975647 

Total revision time: 63.96645083999634
Best scored revision CLL: -0.241865


Results 

CLL : -0.260204 

AUC ROC : 0.98199 

AUC PR : 0.280235 

Precision : 0.206757 

Recall : 0.542553 

F1 : 0.299413 

Total Learning Time : 64.0528759059906 

Total Inference Time : 23.55435585975647 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.725
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17913658942050048;  // std dev = 8.403, 324.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.21726711143865726;  // std dev = 5.667, 136.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=52 */
%   | | | else return 0.1599141702621863;  // std dev = 5.925, 160.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13613384210198434;  // std dev = 5.238, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.17253834973865512;  // std dev = 6.330, 173.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.16697471962718144;  // std dev = 4.217, 75.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=29 */
%   | | | else return 0.10620694402311633;  // std dev = 7.120, 231.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10895225165606238;  // std dev = 8.225, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07123983280651196;  // std dev = 8.337, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7219634119187953;  // std dev = 0.068, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2785762226997705;  // std dev = 0.098, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.16234746869537353;  // std dev = 3.581, 52.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | | else return 0.056657202832765076;  // std dev = 5.195, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.055337282429366884;  // std dev = 4.023, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
%   | | | else return 0.013029591558185696;  // std dev = 6.615, 207.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.021219404681359254;  // std dev = 7.731, 325.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03269960890163594;  // std dev = 7.623, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.858', 'seconds']
Parameter learned model CLL:-0.337458 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.403, 220, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.667, 84, 52], 'false,false,false,false': [5.925, 108, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.238, 83, 41], 'false,false,false,false': [6.33, 110, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.217, 46, 29], 'false,false,false,false': [7.12, 156, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.225, 194, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.337, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.068, 0, 41], 'true,false': [0.098, 89, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.581, 29, 23], 'false,false,false,false': [5.195, 83, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.023, 73, 41], 'false,false,false,false': [6.615, 144, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.731, 221, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.623, 205, 104]}]
{'': [nan, 0.2179545800944997], 'false': [nan, 0.21795458009449842], 'false,false': [nan, 0.2179545800944997], 'false,false,false': [nan, 0.21795458009449842]}
{'': [nan, 0.22790357925492938], 'false': [nan, 0.22790357925492905], 'false,false': [nan, 0.22790357925492938], 'false,false,false': [0.23615916955017055, 0.21937499999999757]}
{'': [nan, 0.22760194774292353], 'false': [nan, 0.22760194774292353], 'false,false': [nan, 0.2276019477429215], 'false,false,false': [0.22125461153487777, 0.23159816455288093]}
{'': [nan, 0.22450068831231582], 'false': [nan, 0.22450068831231582], 'false,false': [nan, 0.2245006883123144], 'false,false,false': [0.23715555555555493, 0.21948688612456255]}
{'': [nan, 0.22700361713108785], 'false': [nan, 0.22700361713108785], 'false,false': [nan, 0.2270036171310888], 'false,false,false': [nan, 0.2270036171310888]}
{'': [nan, 0.22205500633693026], 'false': [nan, 0.22205500633693026], 'false,false': [nan, 0.2220550063369288], 'false,false,false': [nan, 0.22205500633693057]}
{'': [0.21626022790736096, 0.22986889336204439], 'false': [nan, 0.22986889336204439], 'false,false': [nan, 0.22986889336204439], 'false,false,false': [0.2466715976331367, 0.21944609689999411], 'true': [0.00011376280467787547, 0.00010822643303646277], 'true,true': [nan, 0.00011376280467787547], 'true,true,false': [nan, 0.00011376280467787547]}
{'': [nan, 0.18716865936431623], 'false': [nan, 0.18716865936431623], 'false,false': [nan, 0.18716865936431665], 'false,false,false': [0.14197557920546394, 0.2114219221832968]}
{'': [nan, 0.1838956201900004], 'false': [nan, 0.18389562019000044], 'false,false': [nan, 0.18389562019000044], 'false,false,false': [nan, 0.18389562019000044]}
{'': [nan, 0.18808184850149495], 'false': [nan, 0.18808184850149495], 'false,false': [nan, 0.188081848501494], 'false,false,false': [nan, 0.188081848501494]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 26.926
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7993254056877476;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( complex(A, F), complex(D, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.04733812428870155;  // std dev = 2.382, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( phenotype(D, G) )
%   | | | then return 0.17522210583121858;  // std dev = 4.214, 82.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=26 */
%   | | | else return -0.05851773156715445;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( location(A, J), enzyme(A, K) )
%   | | | then return 0.25208832903890627;  // std dev = 2.807, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.15226658215833527;  // std dev = 4.602, 102.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=30 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3844647245731965;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, D) )
%   | then return 0.4811911912464265;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0.7311911912464264;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12821854365882748;  // std dev = 0.018, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( phenotype(A, F), interaction(G, A) )
%   | | | then return 0.10348425457493328;  // std dev = 2.716, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.4421870948615405;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, H), phenotype(A, I) )
%   | | then if ( complex(H, J), complex(A, J) )
%   | | | then return 0.07451045006820313;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.37835596778120034;  // std dev = 2.447, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | else if ( complex(A, K), location(A, L) )
%   | | | then return 0.08715227438451384;  // std dev = 3.217, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return 0.15056480522643714;  // std dev = 5.585, 145.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=46 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(C, E) )
%   | | then return 0.7322136193367369;  // std dev = 0.189, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else if ( phenotype(D, F) )
%   | | | then return 0.08424532109505053;  // std dev = 0.897, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.7637226634749062;  // std dev = 0.160, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, C) )
%   | | then return -0.18300204704849773;  // std dev = 0.063, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( complex(A, G), interaction(A, H) )
%   | | | then return -0.01741061176931796;  // std dev = 1.913, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.1100264266101677;  // std dev = 6.257, 187.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=57 */
%   else if ( interaction(A, I), complex(I, J) )
%   | then if ( complex(A, J) )
%   | | then return 0.2733153702423558;  // std dev = 0.885, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.43583549938415045;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.11001319833919261;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.06664299931032006;  // std dev = 0.385, 140.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=41 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.6476384055479996;  // std dev = 0.207, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, D), complex(D, F) )
%   | | | then return 0.007160260309108681;  // std dev = 1.634, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.14205952939949634;  // std dev = 5.238, 125.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=44 */
%   else if ( interaction(A, G), complex(A, H) )
%   | then if ( complex(G, H) )
%   | | then return 0.2264711675897904;  // std dev = 0.876, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.007019667123663975;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(I, A), enzyme(A, J) )
%   | | then return 0.09374614104260687;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(A, K) )
%   | | | then return -0.05827318734375289;  // std dev = 1.773, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 1.3561747954131674E-4;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(C, D) )
%   | | then return 0.41949009213949234;  // std dev = 0.046, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.13079666400521123;  // std dev = 0.662, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6750130655804853;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( enzyme(E, F) )
%   | | then return 0.17220792653587158;  // std dev = 0.724, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5181628045399046;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5337032686036992;  // std dev = 3.209, 67.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=53 */
%   | | | else return -0.21316677244565438;  // std dev = 0.458, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else if ( location(A, I), complex(A, J) )
%   | | | then return -0.08538954319913823;  // std dev = 1.875, 38.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | | else return 0.032698753227230176;  // std dev = 3.976, 85.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=22 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3368289070570622;  // std dev = 0.265, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(D, E), complex(E, F) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.01689914454905772;  // std dev = 3.562, 96.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=26 */
%   | | | else return 0.08359217353822525;  // std dev = 4.940, 141.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=47 */
%   | | else if ( enzyme(D, G), complex(D, H) )
%   | | | then return -0.19886174090085706;  // std dev = 0.043, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.05943094641441673;  // std dev = 1.582, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6329312911357277;  // std dev = 0.133, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2505768450098124;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.10080899581324197;  // std dev = 1.078, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.35749286565065713;  // std dev = 1.058, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.32788653452334016;  // std dev = 0.086, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.4689928110987565;  // std dev = 0.147, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.6070137031660844;  // std dev = 0.430, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.19274171330623405;  // std dev = 0.074, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.29207257312494656;  // std dev = 0.137, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.36299767445548276;  // std dev = 0.683, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.07132247874680094;  // std dev = 1.715, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.09012615802021245;  // std dev = 4.972, 135.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=47 */
%   | | | else return -0.0934598486229675;  // std dev = 0.564, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2686759264751762;  // std dev = 0.080, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(D, F), location(A, G) )
%   | | then if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.22809045058448355;  // std dev = 0.784, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.019069318381697984;  // std dev = 3.283, 100.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=23 */
%   | | else if ( interaction(A, D) )
%   | | | then return -1.730305888999334E-4;  // std dev = 0.492, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.10562327784994219;  // std dev = 1.253, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( enzyme(A, K), interaction(A, L) )
%   | | | then return -0.020053661458597247;  // std dev = 1.378, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.08351105436131638;  // std dev = 3.843, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   | | else if ( complex(A, M), interaction(A, N) )
%   | | | then return -0.07078580045818328;  // std dev = 1.104, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.011308245213109126;  // std dev = 2.480, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, D), interaction(D, A) )
%   | | then return 0.328476595126719;  // std dev = 0.187, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else return -0.010026205475429685;  // std dev = 0.289, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else return -0.09164355847340429;  // std dev = 0.252, 118.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=17 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5663225212725473;  // std dev = 0.133, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.23960749221791133;  // std dev = 0.052, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5218301972174962;  // std dev = 1.309, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return -0.22164344802233324;  // std dev = 0.166, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.0954959217919714;  // std dev = 1.599, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.25377443428099394;  // std dev = 2.014, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, C) )
%   | | then if ( interaction(A, F), enzyme(F, D) )
%   | | | then return 0.20310152699679596;  // std dev = 0.144, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.437859685376572;  // std dev = 0.386, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.24911538886225063;  // std dev = 0.299, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1940742615289975;  // std dev = 0.126, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.19804261855423205;  // std dev = 0.090, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( location(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.22361836464678575;  // std dev = 1.381, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return -0.025687665078382493;  // std dev = 4.353, 190.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=41 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.026594422545220583;  // std dev = 1.177, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.10232529891258964;  // std dev = 1.534, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.467', 'seconds']
Refined model CLL: -0.220899


******************************************
Best model found
******************************************
Results 

CLL : -0.224266 

AUC ROC : 0.953204 

AUC PR : 0.358866 

Precision : 0.359375 

Recall : 0.520755 

F1 : 0.42527 

Total Learning Time : 26.926 

Total Inference Time : 17.887327194213867 

Total revision time: 54.221695161819454
Best scored revision CLL: -0.220899


Results 

CLL : -0.224266 

AUC ROC : 0.953204 

AUC PR : 0.358866 

Precision : 0.359375 

Recall : 0.520755 

F1 : 0.42527 

Total Learning Time : 54.30812022781372 

Total Inference Time : 17.887327194213867 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.327
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19888967584025322;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1431491208020632;  // std dev = 5.928, 164.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=51 */
%   | | | else return 0.19824493961739423;  // std dev = 5.098, 112.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13358644247268617;  // std dev = 5.447, 135.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=44 */
%   | | | else return 0.14768972682825018;  // std dev = 5.626, 141.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.15610581503522736;  // std dev = 4.059, 71.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=26 */
%   | | | else return 0.14510142608674068;  // std dev = 6.485, 182.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11356737773283465;  // std dev = 7.703, 259.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.051189800459445906;  // std dev = 7.943, 293.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7281718974967558;  // std dev = 0.029, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2726653376747287;  // std dev = 0.044, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09878680532049036;  // std dev = 3.976, 68.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=25 */
%   | | | else return 0.03961686961408736;  // std dev = 3.956, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03855655623658072;  // std dev = 4.261, 133.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
%   | | | else return 0.07537587445095953;  // std dev = 5.526, 132.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.013106912185110687;  // std dev = 7.329, 323.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03605081062730678;  // std dev = 7.031, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.319', 'seconds']
Parameter learned model CLL:-0.324355 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.788, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.928, 113, 51], 'false,false,false,false': [5.098, 71, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.447, 91, 44], 'false,false,false,false': [5.626, 93, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.059, 45, 26], 'false,false,false,false': [6.485, 116, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.703, 167, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.943, 201, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.029, 0, 44], 'true,false': [0.044, 103, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.976, 43, 25], 'false,false,false,false': [3.956, 49, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.261, 89, 44], 'false,false,false,false': [5.526, 84, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.329, 231, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.031, 186, 92]}]
{'': [nan, 0.22463648834019337], 'false': [nan, 0.22463648834019292], 'false,false': [nan, 0.22463648834019337], 'false,false,false': [nan, 0.22463648834019292]}
{'': [nan, 0.22222222222221938], 'false': [nan, 0.22222222222222307], 'false,false': [nan, 0.22222222222221938], 'false,false,false': [0.21426977989292248, 0.23206313775510137]}
{'': [nan, 0.22219889626830044], 'false': [nan, 0.22219889626830044], 'false,false': [nan, 0.22219889626830078], 'false,false,false': [0.21974811923212384, 0.22444809559025702]}
{'': [nan, 0.23140694387648472], 'false': [nan, 0.23140694387648472], 'false,false': [nan, 0.23140694387648572], 'false,false,false': [0.23209680618924833, 0.23110383814133162]}
{'': [nan, 0.2291099456343004], 'false': [nan, 0.2291099456343004], 'false,false': [nan, 0.22910994563430012], 'false,false,false': [nan, 0.22910994563430012]}
{'': [nan, 0.2153132120391698], 'false': [nan, 0.2153132120391698], 'false,false': [nan, 0.21531321203916878], 'false,false,false': [nan, 0.2153132120391693]}
{'': [0.2100976762965571, 0.22560027943927125], 'false': [nan, 0.22560027943927125], 'false,false': [nan, 0.22560027943927125], 'false,false,false': [0.2324826989619376, 0.21739969135802514], 'true': [1.8477183513806754e-05, 1.9107080898900716e-05], 'true,true': [nan, 1.8477183513806754e-05], 'true,true,false': [nan, 1.8477183513806754e-05]}
{'': [nan, 0.18408993075169158], 'false': [nan, 0.18408993075169158], 'false,false': [nan, 0.1840899307516918], 'false,false,false': [0.13649520670223808, 0.23136483194234767]}
{'': [nan, 0.16630674660678485], 'false': [nan, 0.16630674660678532], 'false,false': [nan, 0.16630674660678532], 'false,false,false': [nan, 0.16630674660678532]}
{'': [nan, 0.17784842511177035], 'false': [nan, 0.17784842511177035], 'false,false': [nan, 0.1778484251117688], 'false,false,false': [nan, 0.1778484251117688]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.411
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( complex(A, D), recursion_proteinclass(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( enzyme(C, E), interaction(C, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( complex(A, F), interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1516271959690776;  // std dev = 4.368, 92.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=27 */
%   else if ( interaction(G, A), interaction(G, G) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.2152917922423684;  // std dev = 4.009, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   | | | else return 0.274815601766179;  // std dev = 3.416, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7393396783340327;  // std dev = 0.109, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, E), complex(C, E) )
%   | | then return -0.07452141139821178;  // std dev = 0.254, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( complex(A, F), interaction(C, C) )
%   | | | then return 0.5886710089494228;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2251702862191061;  // std dev = 1.820, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   else if ( interaction(G, A), location(G, H) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(G, I), interaction(A, J) )
%   | | | then return 0.007835188259402694;  // std dev = 1.286, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.12360905311596189;  // std dev = 5.780, 166.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=49 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then return 0.08592087177312847;  // std dev = 0.435, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | | else return 0.2316304272842448;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C) )
%   | then return 0.6742143242741959;  // std dev = 0.239, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5535248463396618;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7040319628227746;  // std dev = 0.215, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( phenotype(E, G), complex(E, H) )
%   | | | then return 0.046574147781676345;  // std dev = 2.410, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return -0.16083994611956653;  // std dev = 0.107, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.01531045306118874;  // std dev = 1.583, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.11043916034452149;  // std dev = 6.495, 205.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=61 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.5415563953802824;  // std dev = 0.309, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | then return 0.4789007779606915;  // std dev = 0.851, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.08788122100710745;  // std dev = 1.441, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return 0.07931699176603832;  // std dev = 3.446, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   else if ( interaction(A, I), enzyme(I, J) )
%   | then return 0.08368732397307663;  // std dev = 0.409, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | else if ( enzyme(A, K), location(A, L) )
%   | | then if ( enzyme(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.7597663788542012;  // std dev = 0.368, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.20007506375684533;  // std dev = 0.048, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.2597468368220041;  // std dev = 1.794, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.10198975560631512;  // std dev = 4.373, 95.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=30 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4393660575991266;  // std dev = 0.107, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( complex(D, F), interaction(A, G) )
%   | | then if ( interaction(G, A) )
%   | | | then return -0.11688447108535799;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.6066863187423415;  // std dev = 0.913, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.06569698563828684;  // std dev = 0.866, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.11426321385107846;  // std dev = 3.050, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( interaction(J, J), phenotype(J, K) )
%   | | | then return 0.1935826022719278;  // std dev = 1.792, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.07293513944553433;  // std dev = 1.511, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.16580761784381876;  // std dev = 2.565, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.06723920517974004;  // std dev = 4.525, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), location(A, E) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then return 0.2355858097222902;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.333540136622904;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.42985973498509544;  // std dev = 0.184, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.13508457214690522;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6650861010352266;  // std dev = 1.083, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | | else return -0.25466426932619074;  // std dev = 0.340, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.3839209525971436;  // std dev = 0.210, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.059241715654373014;  // std dev = 5.188, 147.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=43 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5069937664933727;  // std dev = 0.198, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.20839836288150765;  // std dev = 0.051, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(E, E) )
%   | | then return 0.4571757914297525;  // std dev = 0.301, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(E, G) )
%   | | | then return 0.16988840221459817;  // std dev = 2.061, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return -0.055804228861030314;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( interaction(I, I) )
%   | | | then return -0.042692555931720326;  // std dev = 1.004, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.050134116823006336;  // std dev = 1.012, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2195582630653383;  // std dev = 1.615, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.047995464487708105;  // std dev = 3.523, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.1850939013559508;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(E, C), recursion_proteinclass(E, B) )
%   | | then return 0.4620914126494324;  // std dev = 0.118, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return -0.18677644566679333;  // std dev = 0.044, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( interaction(F, G), enzyme(G, H) )
%   | | then if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.2748071582712694;  // std dev = 0.560, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.00315426465654049;  // std dev = 1.063, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.47296206881306563;  // std dev = 0.796, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.19386842745433489;  // std dev = 0.191, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(L, A), complex(A, M) )
%   | | | then return -0.0012608631314099958;  // std dev = 1.672, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.06715198878595403;  // std dev = 4.213, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then return -0.039613613963065515;  // std dev = 0.235, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( interaction(F, E) )
%   | | | then return -0.05422266710827901;  // std dev = 0.616, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.21438861193679792;  // std dev = 0.754, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(E, H), enzyme(H, I) )
%   | | | then return 0.22781634886641494;  // std dev = 0.779, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.055014765257849096;  // std dev = 1.353, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( interaction(J, A) )
%   | | then if ( complex(J, K) )
%   | | | then return 0.09249819616720921;  // std dev = 2.977, 66.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=28 */
%   | | | else return 0.013431249525462608;  // std dev = 3.126, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.08995854564255501;  // std dev = 1.221, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.3873880782183227;  // std dev = 1.084, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.13493551382626984;  // std dev = 0.036, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2609383249181605;  // std dev = 0.139, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), interaction(F, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12992355854416973;  // std dev = 0.113, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.015309100749866047;  // std dev = 2.845, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.0013637278840276173;  // std dev = 1.664, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return -0.10798692227855101;  // std dev = 2.319, 52.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=9 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17122329267085562;  // std dev = 0.171, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.07061689505985201;  // std dev = 1.202, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 7.153164707720763E-4;  // std dev = 3.728, 94.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '28.554', 'seconds']
Refined model CLL: -0.250055


******************************************
Best model found
******************************************
Results 

CLL : -0.248546 

AUC ROC : 0.958439 

AUC PR : 0.218146 

Precision : 0.153911 

Recall : 0.66065 

F1 : 0.249659 

Total Learning Time : 14.411 

Total Inference Time : 6.743943929672241 

Total revision time: 29.18876060295105
Best scored revision CLL: -0.250055


Results 

CLL : -0.248546 

AUC ROC : 0.958439 

AUC PR : 0.218146 

Precision : 0.153911 

Recall : 0.66065 

F1 : 0.249659 

Total Learning Time : 29.275185668945312 

Total Inference Time : 6.743943929672241 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.266
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1914822684328462;  // std dev = 7.572, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14458273674052946;  // std dev = 5.984, 167.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=52 */
%   | | | else return 0.18737215789821574;  // std dev = 4.686, 96.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14357687739199815;  // std dev = 4.319, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   | | | else return 0.19855382580576292;  // std dev = 5.952, 149.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12852699604645937;  // std dev = 3.543, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.07553879840569025;  // std dev = 6.856, 225.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08956364546036916;  // std dev = 7.619, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08813238782153437;  // std dev = 7.535, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.734467391070894;  // std dev = 0.005, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.26567455972596177;  // std dev = 0.007, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05696939253974011;  // std dev = 4.725, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | | | else return 0.0981256273459015;  // std dev = 3.959, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.012738670544246003;  // std dev = 3.519, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   | | | else return 0.05188478873492613;  // std dev = 6.202, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06981319473985949;  // std dev = 6.900, 236.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.017529141983064944;  // std dev = 7.114, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.388', 'seconds']
Parameter learned model CLL:-0.347462 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.572, 172, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.984, 115, 52], 'false,false,false,false': [4.686, 62, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.319, 56, 28], 'false,false,false,false': [5.952, 91, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.543, 37, 19], 'false,false,false,false': [6.856, 158, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.619, 179, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.535, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.005, 0, 28], 'true,false': [0.007, 72, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.725, 69, 33], 'false,false,false,false': [3.959, 42, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.519, 67, 28], 'false,false,false,false': [6.202, 114, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.9, 150, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.114, 179, 86]}]
{'': [nan, 0.22222222222222304], 'false': [nan, 0.2222222222222228], 'false,false': [nan, 0.22222222222222304], 'false,false,false': [nan, 0.2222222222222228]}
{'': [nan, 0.22006968439618788], 'false': [nan, 0.22006968439618863], 'false,false': [nan, 0.22006968439618788], 'false,false,false': [0.21442145648821997, 0.2287326388888895]}
{'': [nan, 0.2327888611237876], 'false': [nan, 0.2327888611237876], 'false,false': [nan, 0.23278886112378677], 'false,false,false': [0.22207363472097683, 0.2377400159184685]}
{'': [nan, 0.21242333741800892], 'false': [nan, 0.21242333741800892], 'false,false': [nan, 0.21242333741800898], 'false,false,false': [0.2241709183673468, 0.20893994362847873]}
{'': [nan, 0.21905019707228587], 'false': [nan, 0.21905019707228587], 'false,false': [nan, 0.2190501970722859], 'false,false,false': [nan, 0.2190501970722859]}
{'': [nan, 0.22443559812788463], 'false': [nan, 0.22443559812788463], 'false,false': [nan, 0.2244355981278848], 'false,false,false': [nan, 0.2244355981278842]}
{'': [0.20165801298914274, 0.2252287947270263], 'false': [nan, 0.2252287947270263], 'false,false': [nan, 0.2252287947270263], 'false,false,false': [0.2188581314878895, 0.2339051013588777], 'true': [8.614137281577021e-07, 7.405135557463854e-07], 'true,true': [nan, 8.614137281577021e-07], 'true,true,false': [nan, 8.614137281577021e-07]}
{'': [nan, 0.1907967393056873], 'false': [nan, 0.1907967393056873], 'false,false': [nan, 0.19079673930568739], 'false,false,false': [0.13036493972325844, 0.22362952558267407]}
{'': [nan, 0.20174227922944282], 'false': [nan, 0.2017422792294417], 'false,false': [nan, 0.2017422792294417], 'false,false,false': [nan, 0.2017422792294417]}
{'': [nan, 0.1909994428061465], 'false': [nan, 0.1909994428061465], 'false,false': [nan, 0.19099944280614675], 'false,false,false': [nan, 0.19099944280614675]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 22.704
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.11455919150976768;  // std dev = 5.454, 156.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=40 */
%   | | | else return 0.2010060779566543;  // std dev = 3.971, 70.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, D), interaction(D, C) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( phenotype(C, E), enzyme(A, F) )
%   | | | then return 0.05409994711217056;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.18827358240369865;  // std dev = 1.972, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B), interaction(A, J) )
%   | | | then return 0.8190166305501582;  // std dev = 0.110, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.10327982145030123;  // std dev = 4.358, 98.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=26 */
%   | | else if ( interaction(K, A), enzyme(A, L) )
%   | | | then return 0.3416659878455741;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.1935414744647607;  // std dev = 3.902, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, D) )
%   | | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | | then return 0.698497862291983;  // std dev = 0.234, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.1305766295744413;  // std dev = 4.440, 94.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=30 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.1738259196412431;  // std dev = 3.019, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.09522995436092453;  // std dev = 3.476, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then if ( complex(E, D) )
%   | | then if ( interaction(E, F), interaction(F, A) )
%   | | | then return 0.4092875075753511;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.7482036842866423;  // std dev = 0.510, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.19952874320969502;  // std dev = 0.032, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.17550007116676966;  // std dev = 0.227, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I), phenotype(H, I) )
%   | | | then return 0.6427917093634203;  // std dev = 1.748, 39.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   | | | else return 0.18509709924409237;  // std dev = 3.041, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | else return -0.19878300325511958;  // std dev = 0.250, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.03247423806266158;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.4502343048461508;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( enzyme(D, E), phenotype(D, F) )
%   | then return -0.005262210442758183;  // std dev = 0.285, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | then return 0.45623540376492905;  // std dev = 0.181, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.0699447345882063;  // std dev = 0.389, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   else if ( complex(A, H) )
%   | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.6057596171356072;  // std dev = 0.119, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.17900616188278415;  // std dev = 0.069, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( enzyme(A, L), complex(J, M) )
%   | | | then return 0.26018151444737697;  // std dev = 1.368, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.11950484608023658;  // std dev = 3.036, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | else if ( interaction(N, A), phenotype(A, P) )
%   | | | then return 0.20199844513884183;  // std dev = 1.123, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.32766600232177534;  // std dev = 1.047, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), interaction(E, A) )
%   | then return -0.017829708656435187;  // std dev = 0.223, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( phenotype(C, F), phenotype(A, F) )
%   | | then if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5694348745254728;  // std dev = 0.341, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.214497922124337;  // std dev = 0.178, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( location(A, H) )
%   | | | then return 0.26530553753069713;  // std dev = 1.463, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.010434874179702125;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( phenotype(A, I) )
%   | then return 0.009366302739346563;  // std dev = 0.335, 141.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=40 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then return 0.0759245677325847;  // std dev = 0.384, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.20827328561821049;  // std dev = 0.903, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.006430344872457278;  // std dev = 1.996, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.444593982874161;  // std dev = 0.148, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.16386264931554584;  // std dev = 0.306, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.30508511181096787;  // std dev = 0.278, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.15968747664945698;  // std dev = 0.313, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.024651986755865992;  // std dev = 3.231, 75.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), interaction(J, I) )
%   | | | then return 0.045067967422566746;  // std dev = 2.227, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.1467328316249773;  // std dev = 2.163, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.3231792995672081;  // std dev = 0.672, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19871268606722142;  // std dev = 0.912, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then return 0.02458656979464362;  // std dev = 0.275, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | else if ( enzyme(D, C) )
%   | | then return 0.06518069955436098;  // std dev = 0.560, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.6317618691587528;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.20093833284207532;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, H), interaction(I, A) )
%   | then return -0.019382626070016725;  // std dev = 0.290, 86.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=25 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.3458525515676028;  // std dev = 0.198, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.054286171833318554;  // std dev = 1.269, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.029559849382997962;  // std dev = 2.982, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   | | | else return -0.017467288065322658;  // std dev = 2.761, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.24846416097447416;  // std dev = 0.090, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, D) )
%   | | then return -0.13806460013113472;  // std dev = 0.091, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(F, D), complex(F, G) )
%   | | | then return 0.05687307859485518;  // std dev = 2.401, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return -0.01638082710082986;  // std dev = 2.680, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.27049993389277915;  // std dev = 0.112, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.07883933430134937;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.1497316803415078;  // std dev = 2.098, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else if ( interaction(K, A), interaction(A, L) )
%   | | | then return -0.11746670577876293;  // std dev = 0.580, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.011114952823570473;  // std dev = 2.913, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, C) )
%   | then return 0.16714979552146575;  // std dev = 0.147, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3327434440974485;  // std dev = 0.292, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.3494484489143422;  // std dev = 0.259, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2750992220368853;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(F, I), phenotype(E, J) )
%   | | | then return -0.10589781271602963;  // std dev = 1.308, 50.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=5 */
%   | | | else return -0.009121078131101667;  // std dev = 2.812, 85.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=19 */
%   | else if ( enzyme(A, K), complex(A, L) )
%   | | then return 0.14490308090270548;  // std dev = 0.565, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return 0.001230053654141194;  // std dev = 2.816, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | | | else return 0.05191902011078852;  // std dev = 2.784, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '46.608', 'seconds']
Refined model CLL: -0.233958


******************************************
Best model found
******************************************
Results 

CLL : -0.249224 

AUC ROC : 0.964902 

AUC PR : 0.31514 

Precision : 0.267135 

Recall : 0.537102 

F1 : 0.356808 

Total Learning Time : 22.704 

Total Inference Time : 13.270054817199707 

Total revision time: 43.57085272789001
Best scored revision CLL: -0.233958


Results 

CLL : -0.249224 

AUC ROC : 0.964902 

AUC PR : 0.31514 

Precision : 0.267135 

Recall : 0.537102 

F1 : 0.356808 

Total Learning Time : 43.657277793884276 

Total Inference Time : 13.270054817199707 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.711
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09386322081379683;  // std dev = 5.022, 140.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=33 */
%   | | | else return 0.15814893509951106;  // std dev = 5.020, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7413433124639606;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5875409706836745;  // std dev = 0.927, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8002752077068194;  // std dev = 1.693, 72.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=69 */
%   | | | else return -0.15800319521828224;  // std dev = 0.049, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else if ( location(A, I) )
%   | | | then return 0.10638539640156447;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5905779202983825;  // std dev = 0.069, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6358609938220815;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.11829476940369431;  // std dev = 4.175, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6687067277687047;  // std dev = 0.993, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.14186880664611043;  // std dev = 1.49e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.17512217911436645;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.8248778208856336;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.09792668247169867;  // std dev = 1.337, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4529405726666232;  // std dev = 0.093, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4687516007188808;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44906434177045834;  // std dev = 1.819, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else return 0.03076226121255292;  // std dev = 4.956, 233.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5310726483576094;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.08669585087442151;  // std dev = 1.622, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3292009486368576;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3758317059574052;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.07208201396973855;  // std dev = 5.250, 229.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return -0.40191318009860216;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.3997224553233373;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.1234363641698879;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.0034079942266662276;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25881307149783367;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.38356355179124896;  // std dev = 0.154, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3086700853550107;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.035043484226202036;  // std dev = 2.500, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.30045372629516287;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.06867702396820281;  // std dev = 4.576, 175.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=55 */
%   | | | else return 0.02071355287730329;  // std dev = 1.879, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2387290195694624;  // std dev = 0.188, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24693726544836025;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5792166695538352;  // std dev = 0.455, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.16828489606084845;  // std dev = 0.377, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24130012679577953;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07819702778412693;  // std dev = 3.763, 119.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17384150144713229;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1916793637981756;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3830277182265508;  // std dev = 2.576, 80.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=71 */
%   | | else return -0.15243084638232454;  // std dev = 0.228, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.20392331801407926;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.03153773643801113;  // std dev = 1.491, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16493054304870086;  // std dev = 0.110, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.43509795144631996;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.013175393676668035;  // std dev = 0.536, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0.019763361758893778;  // std dev = 1.278, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.34056431445802604;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 8.568973484753129E-4;  // std dev = 1.665, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.07791853401599241;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.009772644921177092;  // std dev = 3.468, 134.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=40 */
%   | | | else return 0.021481836243454042;  // std dev = 1.431, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13032701430889776;  // std dev = 0.000482, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.23703357573858042;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06801310868343102;  // std dev = 0.652, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.007753991712261791;  // std dev = 2.172, 107.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.06653323148288665;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.029666004539341123;  // std dev = 3.241, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
%   | | | else return 0.050147542431073645;  // std dev = 1.397, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.635', 'seconds']
Parameter learned model CLL:-0.196251 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.943, 1, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [5.022, 107, 33], 'false,false,true,false': [5.02, 84, 36], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.927, 1, 5], 'false,true,true': [0.0, 0, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [1.693, 3, 69], 'false,false,true,false': [0.049, 134, 0], 'false,false,false,true': [1.713, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.069, 0, 8], 'true,false': [0.026, 0, 3], 'false,true,true': [4.175, 74, 34], 'false,true,false,true': [0.993, 1, 37], 'false,true,false,false': [1.49e-08, 80, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 2], 'false,false,false,true': [1.337, 7, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.093, 0, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.819, 4, 14], 'false,true,false': [4.956, 176, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.622, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.029, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.032, 0, 4], 'false,true': [5.25, 158, 71], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.247, 7, 2], 'false,false,false,false': [1.265, 8, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.011, 0, 7], 'true,true,false': [0.154, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.5, 42, 12], 'false,false,true': [0.008, 0, 3], 'false,false,false,true': [4.576, 120, 55], 'false,false,false,false': [1.879, 17, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.188, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.455, 0, 33], 'true,false': [0.377, 83, 0], 'false,true': [0.007, 0, 3], 'false,false,true': [3.763, 79, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.024, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.576, 9, 71], 'false,true,false': [0.228, 139, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.491, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.11, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.536, 1, 3], 'false,true,true': [1.278, 25, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.665, 39, 17], 'false,false,true': [0.862, 1, 3], 'false,false,false,true': [3.468, 94, 40], 'false,false,false,false': [1.431, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.000482, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.652, 2, 3], 'false,true': [2.172, 78, 29], 'false,false,true': [0.862, 1, 3], 'false,false,false,true': [3.241, 87, 40], 'false,false,false,false': [1.397, 8, 4]}]
{'': [0.13017751479289916, 0.19909030483910936], 'false': [1.4802973661668753e-16, 0.19544195215515073], 'false,false': [0.19495562130177554, 0.20408163265306106], 'false,false,false': [0.20408163265306126, 0.20408163265306126], 'false,false,true': [0.18015306122449098, 0.21000000000000119], 'true': [0.09876543209876527, 0.18750000000000006], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0]}
{'': [0.07758503410384028, 0.22217640471429387], 'false': [0.0, 0.22118023915106502], 'false,false': [0.22270834886886925, 0.19555555555555548], 'false,false,true': [0.03982019408568357, 1.8262495224360095e-05], 'false,false,false': [0.19555555555555548, nan], 'true': [0.0, 0.1433424880391314], 'false,true': [0.0, nan]}
{'': [0.0009034644759758802, 0.15990450465359116], 'false': [0.15639227189653293, 0.21632813306472723], 'false,false': [0.22222222222222224, 0.1788056809767548], 'false,false,true': [0.0, 0.0], 'false,false,false': [0.1788056809767548, nan], 'false,true': [0.16140278334510352, 0.15180601900347132], 'false,true,false': [0.02595174169247802, 2.7755575615628915e-18], 'true': [0.0005958520915629317, 0.0002324501693780808]}
{'': [0.0008028977658629331, 0.12748038376765494], 'false': [0.12270057895758525, 0.2163311054761373], 'false,false': [0.0, 0.21916864081903994], 'false,false,false': [0.21916864081903994, nan], 'false,true': [0.18379431257459666, 0.10543276647850293], 'false,true,true': [nan, 0.18379431257459694], 'true': [0.0008604613053520005, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.0006720345086952205, 0.12568781341917024], 'false': [0.12035661896676537, 0.16911633794530076], 'false,false': [0.16065492299458417, 0.1696735967278836], 'false,false,false': [0.17283950617283952, 0.15999999999999998], 'false,false,true': [0.0, 0.0], 'true': [0.00011737456539632049, 0.0002589628005578437], 'true,true': [0.00011737456539632049, nan]}
{'': [0.0051572723904829846, 0.12304237780044829], 'false': [0.11570293675242363, 0.12282427478171827], 'false,false': [2.0248942273148884e-05, 0.12384413324370017], 'false,false,false': [0.11966910465832721, 0.15357738969579646], 'true': [0.005658949503535205, 0.0], 'true,true': [1.762435961848758e-05, 0.007928163872601054], 'true,false': [nan, 0.0]}
{'': [0.10992720845864308, 0.116722162732369], 'false': [1.5389936488816962e-05, 0.1190101874726514], 'false,false': [0.1190101874726514, nan], 'true': [0.027157388975775465, 0.00171278430035712], 'true,true': [0.003221151944379411, 0.00628007215203472], 'true,true,false': [nan, 0.006280072152034559], 'true,true,true': [0.0035371421115074964, 0.0]}
{'': [0.00013063563104010416, 0.099519452589305], 'false': [0.09702426065110427, 0.12636817860240668], 'false,false': [0.0, 0.13072149486404258], 'false,false,false': [0.13072149486404258, nan], 'false,true': [0.08297363054784154, 0.00037456175608286806], 'false,true,true': [nan, 0.08297363054784161], 'true': [0.0, 0.00011384057014923732], 'false,false,true': [0.0, nan]}
{'': [0.049165423695546676, 0.07906613482823037], 'false': [0.048640781873406654, 0.09767755098107608], 'false,false': [0.18589769759907046, 0.09508571669950107], 'false,false,false': [0.08973362672698056, 0.1461887278250801], 'true': [0.001521768821310096, 0.08953145585229808], 'true,false': [0.0, 0.0717245214258219], 'false,true': [0.04535227584947192, 0.05065284917930567], 'false,true,false': [0.0, 0.04953278312849829]}
{'': [0.04410139682523529, 0.07216654772445255], 'false': [0.04409748256170904, 0.09260070035858776], 'false,false': [0.18581573495165987, 0.08964978851925483], 'false,false,false': [0.08271938244410372, 0.1626133080105984], 'true': [0.0012454045127313074, 0.0850969763385864], 'true,true': [0.0012454045127313074, nan], 'true,true,true': [3.316160316584644e-08, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 13.269
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, D) )
%   | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( phenotype(A, F), interaction(G, A) )
%   | | | then return 0.13173384075988853;  // std dev = 4.590, 106.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=29 */
%   | | | else return 0.20735528430586092;  // std dev = 5.351, 126.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=44 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.5007219186171548;  // std dev = 0.908, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7435158446273982;  // std dev = 2.514, 76.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=69 */
%   | | | else return -0.1605004215827458;  // std dev = 0.155, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.5809878707460202;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08098787074602029;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.14950387614937766;  // std dev = 3.747, 83.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
%   | | | else return 0.019780053805355965;  // std dev = 1.744, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5836138839707099;  // std dev = 2.099, 42.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=37 */
%   | | | else return -0.14488507185890886;  // std dev = 0.035, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08483754692962125;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else return 0.25552274291026383;  // std dev = 1.151, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.08248641584169003;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.3616568368172501;  // std dev = 3.901, 100.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=68 */
%   | | | else return -0.14242815316265142;  // std dev = 0.254, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.048858333526029904;  // std dev = 0.769, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.005789580292804523;  // std dev = 0.956, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5462688479095352;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.13538663902169312;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.013847151018283635;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.35970784911981263;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.12071184716014967;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.006876514806647804;  // std dev = 1.090, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( enzyme(A, G), interaction(A, H) )
%   | | then return 0.03907775116050158;  // std dev = 0.304, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.11091560319403436;  // std dev = 2.420, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return 0.058171845813182986;  // std dev = 3.788, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.41079921626324734;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.1294016311310808;  // std dev = 0.921, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.05674974086741517;  // std dev = 1.406, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.284983693729285;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.4648444975427159;  // std dev = 0.263, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.31616300452935553;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1486886078533653;  // std dev = 0.044, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.05884812212113098;  // std dev = 1.441, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.13912923852937698;  // std dev = 1.493, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.31921560938688975;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return -0.037657903923168236;  // std dev = 2.269, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
%   | | | else return 0.06016155254613043;  // std dev = 4.055, 158.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=51 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2687832654216324;  // std dev = 0.098, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.4964654977519556;  // std dev = 0.996, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | | else return 0.7200323910417865;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.17748195705158026;  // std dev = 0.086, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.00415101817273722;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( complex(A, H), phenotype(A, I) )
%   | | | then return -0.16975345052870558;  // std dev = 0.125, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.022157078457204087;  // std dev = 2.669, 76.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=21 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.0690911545801079;  // std dev = 0.701, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.082868414382882;  // std dev = 2.221, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( interaction(A, A), phenotype(A, E) )
%   | | then return 0.18233086354818862;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.05325111803524796;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.23585393278606212;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.24684964217681293;  // std dev = 1.220, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.3836035568561865;  // std dev = 2.122, 65.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=60 */
%   | | else return -0.13921310254653022;  // std dev = 0.034, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.2048247279127947;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.0450263122016909;  // std dev = 0.924, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.11011792214709383;  // std dev = 1.016, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1934511428896882;  // std dev = 0.071, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(F, A), interaction(F, F) )
%   | | | then return -0.048330939571137516;  // std dev = 1.098, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.04019406191676066;  // std dev = 0.995, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return -0.023870786948506723;  // std dev = 0.635, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.0012736369321806969;  // std dev = 1.524, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.41408000044011534;  // std dev = 0.429, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.1746332223521497;  // std dev = 0.716, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.04177766504083169;  // std dev = 2.286, 71.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=26 */
%   | | | else return 0.11334957512423405;  // std dev = 0.801, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1743316378142516;  // std dev = 0.074, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.12722063316589188;  // std dev = 0.741, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), location(E, F) )
%   | then if ( enzyme(E, G), complex(E, H) )
%   | | then if ( interaction(I, A) )
%   | | | then return 0.06799063773780999;  // std dev = 1.050, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.0716510628431226;  // std dev = 0.614, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(E, J), recursion_proteinclass(J, B) )
%   | | | then return 0.19426001020889633;  // std dev = 1.030, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.05226736135989963;  // std dev = 1.747, 87.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=14 */
%   | else if ( interaction(K, A), location(K, L) )
%   | | then if ( complex(K, M) )
%   | | | then return 0.03593820002189716;  // std dev = 2.062, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   | | | else return -0.007035929113365177;  // std dev = 2.085, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | else return 0.18417321782138033;  // std dev = 0.370, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '17.133', 'seconds']
Refined model CLL: -0.183529


******************************************
Best model found
******************************************
Results 

CLL : -0.18126 

AUC ROC : 0.988971 

AUC PR : 0.299453 

Precision : 0.174948 

Recall : 0.886525 

F1 : 0.292227 

Total Learning Time : 13.269 

Total Inference Time : 23.6611590385437 

Total revision time: 57.58854005813598
Best scored revision CLL: -0.183529


Results 

CLL : -0.18126 

AUC ROC : 0.988971 

AUC PR : 0.299453 

Precision : 0.174948 

Recall : 0.886525 

F1 : 0.292227 

Total Learning Time : 57.65893385887146 

Total Inference Time : 23.6611590385437 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.016
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08609011157009949;  // std dev = 4.892, 136.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=31 */
%   | | | else return 0.19649479976116563;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5528067455442877;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.6100122940520396;  // std dev = 0.955, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6830509979669128;  // std dev = 3.438, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.16095873023472057;  // std dev = 0.102, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | | else if ( location(A, K) )
%   | | | then return 0.12487967192307557;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5701614115600471;  // std dev = 0.065, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.45319547462698834;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09846599297592887;  // std dev = 4.301, 123.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5834554675483768;  // std dev = 2.464, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return -0.14812769982088356;  // std dev = 0.192, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7977881133361467;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1762299730762793;  // std dev = 1.478, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.44786114042715763;  // std dev = 0.127, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.45484409844394713;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5329718103803714;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.48580415807277283;  // std dev = 1.967, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | else return 0.031147355343506367;  // std dev = 5.150, 248.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.538823890583122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return -0.0283456433834205;  // std dev = 1.724, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.31095788707054467;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27385820567867886;  // std dev = 0.944, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.060194552045857705;  // std dev = 5.846, 280.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4053516904070884;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.07083969635817199;  // std dev = 1.615, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26284950171911386;  // std dev = 0.081, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.21700514372383492;  // std dev = 1.113, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3124764916660989;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.011202469655372523;  // std dev = 2.830, 77.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1908578741428285;  // std dev = 0.932, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.06266977100989342;  // std dev = 4.627, 175.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=51 */
%   | | | else return 0.002838658109863835;  // std dev = 2.373, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2849815986670323;  // std dev = 0.375, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2495444671573478;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.026699586505623263;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4939531462515585;  // std dev = 1.775, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.18781778054361653;  // std dev = 0.901, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.25518484097080896;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.059199106611803165;  // std dev = 4.457, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16051059718609206;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2270820818618636;  // std dev = 0.087, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3831939466526227;  // std dev = 3.209, 95.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=82 */
%   | | else return -0.14921114179665498;  // std dev = 0.607, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2057742997810208;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.12383657581778662;  // std dev = 1.291, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1699015797133847;  // std dev = 0.181, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.14305706707122048;  // std dev = 0.836, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.21342496255135587;  // std dev = 0.129, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.04300337256707028;  // std dev = 1.965, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2777384132685593;  // std dev = 0.164, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.04865217485275095;  // std dev = 1.435, 70.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.010287614519322216;  // std dev = 0.900, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.026872588474707686;  // std dev = 3.967, 150.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=47 */
%   | | | else return -0.03946248034006501;  // std dev = 1.474, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12080319198545597;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.21049141460345103;  // std dev = 0.104, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18920131693148348;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.01590157526474782;  // std dev = 2.557, 117.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1731436517332024;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.021547027480239688;  // std dev = 3.834, 162.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=47 */
%   | | | else return 0.051093673276381125;  // std dev = 1.412, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.908', 'seconds']
Parameter learned model CLL:-0.198528 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.892, 105, 31], 'false,false,true,false': [5.457, 88, 45], 'false,false,false,true': [1.491, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [1.291, 2, 10], 'false,true,true': [0.955, 1, 7], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 0], 'false,false,true,true': [3.438, 14, 76], 'false,false,true,false': [0.102, 193, 0], 'false,false,false,true': [1.664, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.065, 0, 11], 'true,false': [0.926, 1, 6], 'false,true,true': [4.301, 89, 34], 'false,true,false,true': [2.464, 7, 48], 'false,true,false,false': [0.192, 102, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.478, 6, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.127, 0, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.031, 0, 3], 'false,true,true,false': [1.967, 6, 21], 'false,true,false': [5.15, 190, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.724, 15, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.944, 1, 10], 'false,true': [5.846, 198, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.615, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.081, 0, 9], 'true,true,false': [1.113, 2, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.83, 58, 19], 'false,false,true': [0.932, 1, 8], 'false,false,false,true': [4.627, 124, 51], 'false,false,false,false': [2.373, 28, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.375, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.855, 1, 3], 'true,true,false,false': [1.775, 3, 33], 'true,false': [0.901, 100, 0], 'false,true': [0.021, 0, 5], 'false,false,true': [4.457, 106, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 7], 'true,false': [0.087, 0, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.209, 13, 82], 'false,true,false': [0.607, 193, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.291, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.181, 0, 9], 'true,false,true': [0.836, 1, 2], 'true,false,false': [0.129, 0, 5], 'false,true,true': [1.965, 42, 13], 'false,true,false,true': [0.164, 0, 8], 'false,true,false,false': [1.435, 59, 11], 'false,false,true': [0.9, 1, 5], 'false,false,false,true': [3.967, 103, 47], 'false,false,false,false': [1.474, 12, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.0, 0, 7], 'true,true,true,false': [0.104, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.108, 0, 3], 'false,true': [2.557, 85, 32], 'false,false,true': [0.016, 0, 5], 'false,false,false,true': [3.834, 115, 47], 'false,false,false,false': [1.412, 7, 4]}]
{'': [-2.0898315757650005e-16, 0.2116607169054727], 'false': [0.10937499999999978, 0.20495833548988254], 'false,false': [0.202705877475436, 0.2469135802469134], 'false,false,false': [0.2469135802469134, nan], 'false,false,true': [0.17598399653979355, 0.22386794052801293], 'false,true': [0.22222222222222224, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0], 'true': [-1.4802973661668753e-16, 0.0]}
{'': [0.09418282548476474, 0.2011814280836215], 'false': [0.1796460562106407, 0.1970475333954121], 'false,false': [0.19630058337407744, 0.2130177514792899], 'false,false,false': [0.2130177514792899, nan], 'false,false,true': [0.13133071995175646, 5.423802544536954e-05], 'false,true': [0.11398409100688517, 0.0], 'true': [6.344131569286608e-17, 0.13888888888888887], 'false,true,false': [0.0, nan]}
{'': [0.051104495672850705, 0.15960625382445467], 'false': [0.15619784965179648, 0.23039484777090918], 'false,false': [0.23039484777090918, nan], 'false,false,true': [0.0, 0.21831301239133602], 'false,true': [0.15038527017858996, 0.1607103777520984], 'false,true,false': [0.1103634481022392, 0.00036290590632266666], 'true': [0.00038305973954458594, 0.12244897959183672]}
{'': [0.000945783053082206, 0.1323737221117147], 'false': [0.12967245881723968, 0.16384478624613755], 'false,false': [0.0, 0.15638413203557458], 'false,false,false': [0.15638413203557458, nan], 'false,true': [0.12924652769121303, 0.1069516005559715], 'false,true,true': [0.0003152064243907571, 0.14334975131177238], 'true': [0.0010020261584489931, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.04983216624158709, 0.12552775968471683], 'false': [0.12205900845761568, 0.19376665782303362], 'false,false': [0.0, 0.20067905147912649], 'false,false,false': [0.20067905147912649, nan], 'true': [-3.172065784643304e-17, 0.08100828339698028], 'false,false,true': [nan, 0.0], 'true,true': [-3.172065784643304e-17, nan]}
{'': [0.06994578934775625, 0.12145664365352833], 'false': [0.10400871729705156, 0.1269534167581619], 'false,false': [0.09645546634349607, 0.1274603310580762], 'false,false,false': [0.12233297394316056, 0.14813204080446674], 'true': [0.07377860561689577, 0.0], 'true,true': [0.0007201989924549999, 0.154856645631745], 'true,false': [nan, 0.0]}
{'': [0.11759348521722846, 0.1269339777768423], 'false': [8.449857653597403e-05, 0.1298638663510534], 'false,false': [0.1298638663510534, nan], 'true': [0.0913968943365938, 0.008126403776597563], 'true,true': [0.008872299020638741, 0.11667889686972614], 'true,true,false': [0.18279268351718897, 0.08750033166603884], 'true,true,true': [0.009385298728912488, 0.0]}
{'': [0.0015202270166406935, 0.10200085460799022], 'false': [0.09968731893594317, 0.15197891885236417], 'false,false': [0.0, 0.16656646613684828], 'false,false,false': [0.16656646613684828, nan], 'false,true': [0.10837796793356567, 0.001908698307804073], 'false,true,true': [nan, 0.1083779679335655], 'true': [-3.96508223080413e-18, 0.000759542516315359], 'false,false,true': [0.0, nan]}
{'': [0.06008338235288836, 0.08420364692302479], 'false': [0.050638508424930034, 0.10920271034947884], 'false,false': [0.13506814831852185, 0.10826419193547408], 'false,false,false': [0.10490876299702809, 0.13574512616594084], 'true': [0.0036306233611077664, 0.119289490588672], 'true,false': [0.23311942571684255, 0.0033367404703328494], 'false,true': [0.0701810187359323, 0.03653831304032207], 'false,true,false': [0.0033502671207450846, 0.02940499503407266]}
{'': [0.00314668783198771, 0.07959596723713953], 'false': [0.05586156535658707, 0.09444505004214007], 'false,false': [4.850281177709581e-05, 0.09654362618935795], 'false,false,false': [0.0907379358704411, 0.18122811555085036], 'true': [0.002835193823648727, 0.003904026467162929], 'true,true': [0.002835193823648727, nan], 'true,true,true': [-1.982541115402065e-18, 0.0018115475716523333]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 16.516
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( complex(I, J) )
%   | | | then return 0.029201566678459745;  // std dev = 3.283, 76.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=13 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, K), phenotype(A, L) )
%   | | | then return 0.26010971941323735;  // std dev = 4.952, 102.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=41 */
%   | | | else return 0.13087620782678505;  // std dev = 4.178, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5528067455442877;  // std dev = 0.373, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.5766162693538116;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.052806745544287804;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7598113704918313;  // std dev = 2.378, 82.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=76 */
%   | | | else return -0.1639474888887805;  // std dev = 0.182, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.15142627109123638;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.49011544134766444;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5701614115600471;  // std dev = 0.020, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.25819859740214823;  // std dev = 0.478, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( location(A, G) )
%   | | | then return 0.08181799149416652;  // std dev = 4.264, 118.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
%   | | | else return -0.13787280256226514;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6375338718181697;  // std dev = 1.667, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.1431781782980299;  // std dev = 0.184, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.4862103446796593;  // std dev = 0.898, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2736081531247263;  // std dev = 0.895, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.16903547446311273;  // std dev = 0.424, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.49744412938892724;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.45484409844394713;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.251363230806466;  // std dev = 0.794, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5468064990318944;  // std dev = 1.541, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else return 0.028648541867095867;  // std dev = 0.320, 239.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=58 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.522890648087619;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.1542502258986449;  // std dev = 1.055, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.06108916608675093;  // std dev = 1.129, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.24441976503045498;  // std dev = 0.315, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.38120869109581124;  // std dev = 0.035, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F), complex(A, G) )
%   | | then if ( location(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2336138396880555;  // std dev = 2.457, 44.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=26 */
%   | | | else return -0.14204283577241789;  // std dev = 0.353, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.005720660511108847;  // std dev = 2.223, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | | else return 0.08021160401042841;  // std dev = 4.095, 141.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=46 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3938245391142168;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.05715821279822477;  // std dev = 1.688, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return -0.17291298174045755;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3116163572350633;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return -0.18405545388493957;  // std dev = 0.943, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4980868284610577;  // std dev = 0.219, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.30468457194963205;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G) )
%   | then return -0.015529876405811584;  // std dev = 0.309, 154.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=36 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5682340421302166;  // std dev = 0.243, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.21583078918436868;  // std dev = 0.503, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.1930672857631839;  // std dev = 1.093, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.06398270390848788;  // std dev = 3.543, 114.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2958843733283075;  // std dev = 0.082, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.3858259106694934;  // std dev = 1.281, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.506475478021117;  // std dev = 0.477, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return -0.16080997163536817;  // std dev = 0.076, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2547276673244559;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4693525268506403;  // std dev = 1.167, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.15682753918608558;  // std dev = 0.156, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( location(A, J) )
%   | | | then return 0.07375521850251371;  // std dev = 3.052, 82.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | else return 0.27133705831733756;  // std dev = 0.476, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then if ( interaction(A, A) )
%   | | then return 0.20282353849542178;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.16453161977880884;  // std dev = 0.842, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( complex(A, E) )
%   | | then return 0.21679750676353068;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.2744618845158424;  // std dev = 1.177, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.27789825923444045;  // std dev = 0.342, 99.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=82 */
%   | | else return -0.1390501217363535;  // std dev = 0.026, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.19377619945357938;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.24600700458786268;  // std dev = 1.070, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.12650507286934626;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( phenotype(C, F), complex(C, G) )
%   | | then return 0.24606405032831538;  // std dev = 0.158, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else if ( interaction(A, H), interaction(H, C) )
%   | | | then return -0.24176715952280953;  // std dev = 1.236, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.16791839744150922;  // std dev = 0.446, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, C) )
%   | | then return -0.12701631004140754;  // std dev = 0.064, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return 0.013962740248910739;  // std dev = 0.260, 183.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=57 */
%   else if ( interaction(A, I), interaction(J, A) )
%   | then return 0.03588975648818238;  // std dev = 0.712, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then return -0.10920427688319845;  // std dev = 0.727, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.07058563253463883;  // std dev = 0.938, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.02810133009428868;  // std dev = 1.323, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.1574991655911641;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.22555668187741773;  // std dev = 0.201, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2256894014979499;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, H), location(H, I) )
%   | | then if ( phenotype(A, J), complex(A, K) )
%   | | | then return -0.05521917639131972;  // std dev = 1.467, 61.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | | else return -0.003990356210922783;  // std dev = 1.873, 76.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=21 */
%   | | else return -0.1408514941952684;  // std dev = 0.086, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.037437832005617865;  // std dev = 0.854, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return -0.0012102295315411984;  // std dev = 3.171, 129.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=39 */
%   | | | else return -0.03897646483776114;  // std dev = 2.186, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '43.599', 'seconds']
Refined model CLL: -0.18742


******************************************
Best model found
******************************************
Results 

CLL : -0.165193 

AUC ROC : 0.988415 

AUC PR : 0.342303 

Precision : 0.262893 

Recall : 0.788679 

F1 : 0.39434 

Total Learning Time : 16.516 

Total Inference Time : 85.42569494247437 

Total revision time: 124.94557707977295
Best scored revision CLL: -0.18742


Results 

CLL : -0.165193 

AUC ROC : 0.988415 

AUC PR : 0.342303 

Precision : 0.262893 

Recall : 0.788679 

F1 : 0.39434 

Total Learning Time : 125.01597088050842 

Total Inference Time : 85.42569494247437 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.303
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.16584124279182005;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.1476226193100376;  // std dev = 5.591, 152.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1974346493852266;  // std dev = 3.543, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6083623010998434;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21947341221095448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8199708107180844;  // std dev = 0.990, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.16152996383030294;  // std dev = 0.013, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( location(A, K) )
%   | | | then return 0.14906608956549702;  // std dev = 3.512, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | | else return 0.11809090865455693;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5644469591288815;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.575797612107128;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08039075421627079;  // std dev = 2.023, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6685736509432791;  // std dev = 1.005, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14016655057601696;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.629681053512678;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11946857876287412;  // std dev = 3.668, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.3388812965381438;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.42590195862077357;  // std dev = 0.042, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.19111659995702202;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38436581028451366;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.585790569456289;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.05745238409504979;  // std dev = 4.243, 188.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.475312022761995;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5195018174441949;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.11681720470870231;  // std dev = 3.490, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | | else return 0.08228636290870163;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33273857585934696;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25060577306305526;  // std dev = 0.908, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.055981656616097324;  // std dev = 4.236, 195.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.36028109996073254;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.39139433738959817;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.07406006647085614;  // std dev = 3.644, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.01749662325561263;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2585461417897483;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2136339398833602;  // std dev = 0.811, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2820277596720334;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3197733971405632;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.30304293967960105;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07215693677930853;  // std dev = 0.948, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3023425649668449;  // std dev = 0.059, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.07774985335694687;  // std dev = 3.894, 150.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=49 */
%   | | | else return 0.05360849501534163;  // std dev = 3.759, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25943213139280413;  // std dev = 0.255, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.23581829046903213;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.22773252692420665;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6396359893735286;  // std dev = 0.777, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19539729586398694;  // std dev = 0.797, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24574138328604;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.03729129132290542;  // std dev = 3.382, 127.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1687202224357873;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2008207052213283;  // std dev = 0.046, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42705197139159556;  // std dev = 1.193, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.14292650675080035;  // std dev = 0.273, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.19599793001408;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04999912886794935;  // std dev = 3.058, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16189568197469406;  // std dev = 0.089, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1404540713591642;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1992484495114655;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.05984879675782055;  // std dev = 0.376, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18656742616704436;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.020797592699788592;  // std dev = 1.231, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1726479093005102;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02281910173054457;  // std dev = 2.715, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | | else return 0.060179987777096045;  // std dev = 2.986, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13068184148076883;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1661652615092252;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.132558747022834;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16429882892604133;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.02060558686049243;  // std dev = 1.346, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.019329604878316347;  // std dev = 0.925, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03685797656364316;  // std dev = 2.639, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
%   | | | else return 0.017767936350904373;  // std dev = 3.055, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.005', 'seconds']
Parameter learned model CLL:-0.179947 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.353, 18, 8], 'false,false,true,false': [5.591, 108, 44], 'false,false,false,true': [3.543, 37, 19], 'false,false,false,false': [0.926, 6, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.943, 1, 8], 'false,true,true': [0.068, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.707, 1, 1], 'false,false,true,true': [0.99, 1, 52], 'false,false,true,false': [0.013, 140, 0], 'false,false,false,true': [3.512, 39, 18], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.031, 0, 6], 'true,false': [0.033, 0, 8], 'false,true,true': [2.023, 22, 8], 'false,true,false,true': [1.005, 1, 48], 'false,true,false,false': [0.0, 122, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.668, 44, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.042, 0, 11], 'true,false': [0.868, 1, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.11, 0, 3], 'false,true,false': [4.243, 136, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.49, 37, 18], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.071, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.908, 1, 9], 'false,true': [4.236, 139, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.644, 44, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.033, 0, 7], 'true,true,false': [0.811, 1, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.948, 18, 3], 'false,false,true': [0.059, 0, 6], 'false,false,false,true': [3.894, 101, 49], 'false,false,false,false': [3.759, 48, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.255, 0, 12], 'true,true,true,false': [0.01, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.777, 0, 36], 'true,false': [0.797, 100, 0], 'false,true': [0.049, 0, 5], 'false,false,true': [3.382, 91, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.012, 0, 6], 'true,false': [0.046, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.193, 1, 56], 'false,true,false': [0.273, 152, 0], 'false,false,true,true': [0.009, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.058, 42, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.089, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.091, 0, 4], 'false,true,true': [0.376, 6, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.231, 45, 14], 'false,false,true': [0.038, 0, 5], 'false,false,false,true': [2.715, 84, 36], 'false,false,false,false': [2.986, 38, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.027, 0, 5], 'true,true,true,false': [0.056, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.089, 0, 4], 'false,true': [1.346, 51, 17], 'false,false,true': [0.925, 1, 5], 'false,false,false,true': [2.639, 72, 36], 'false,false,false,false': [3.055, 45, 20]}]
{'': [-2.5376526277146434e-16, 0.21559573361082263], 'false': [0.12244897959183662, 0.20950052512870096], 'false,false': [0.20679207170811836, 0.2166792642983115], 'false,false,false': [0.22417091836734643, 0.12244897959183677], 'false,false,true': [0.21301775147929003, 0.20567867036011164], 'false,true': [0.0, 0.1388888888888887], 'false,true,false': [0.22222222222222224, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [0.0622222222222223, 0.20569797074489216], 'false': [0.12831133071993397, 0.20177303741620028], 'false,false': [0.19697892255263738, 0.21516425084315416], 'false,false,false': [0.21642033299173086, 0.2040816326530612], 'false,false,true': [0.01849862080133377, 1.2848752140534207e-06], 'false,true': [0.0009271942996655014, 0.25], 'false,true,false': [nan, 0.25], 'true': [7.401486830834377e-17, 0.09876543209876548]}
{'': [0.00018173950546948196, 0.15808908112218428], 'false': [0.1391646444466953, 0.21342846461986145], 'false,false': [0.2109670962252398, 0.25], 'false,false,false': [0.25, nan], 'false,false,true': [0.0, 0.21025858372852352], 'false,true': [0.13646966272206446, 0.139618769429394], 'false,true,false': [0.020601204351626486, -4.3680905886891404e-17], 'true': [0.00016491177348173144, 0.00013914430887507212]}
{'': [0.06108422739816084, 0.12890748913502964], 'false': [0.09862961470831429, 0.21725939933815933], 'false,false': [0.00048818448851375984, 0.21963229110730853], 'false,false,false': [0.22147684238018475, 0.20408163265306117], 'false,true': [0.010634446936402087, 0.09574212756866164], 'true': [0.00015997555058211432, 0.18820153257423367], 'false,true,true': [0.0, 0.004036279180017625], 'false,false,true': [0.0, 0.0]}
{'': [0.05673953804728268, 0.1219739584860349], 'false': [0.09204059853932801, 0.20615870710816245], 'false,false': [0.00024200838582622008, 0.20960636367920416], 'false,false,false': [0.2108189319906751, 0.18750000000000006], 'true': [0.0010011465762184367, 0.08236013468442335], 'true,true': [0.0010011465762184367, nan], 'false,false,true': [0.0, 0.0]}
{'': [0.04498444130106755, 0.12635894843381287], 'false': [0.04275849734338396, 0.13230390312629225], 'false,false': [0.0005883331619178089, 0.1344858583525868], 'false,false,false': [0.10108143161249049, 0.20777108106837572], 'true': [0.05540753028650875, 0.00023847546061211977], 'true,true': [0.0001530656525159459, 0.13158713567738534], 'true,false': [0.00035618328697642476, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.13555575369986403, 0.08827170213026507], 'true': [0.04400021795150552, 0.006351550092079248], 'false': [0.00048698528674586685, 0.09008190543399204], 'false,false': [0.09008190543399204, nan], 'true,true': [0.004724670892599965, 0.020782585597510513], 'true,true,false': [0.0, 0.01677435363167697], 'true,true,true': [0.005423679486069181, 5.266491763632197e-05]}
{'': [0.00041481696284131106, 0.08955267996627868], 'false': [0.07160607883858267, 0.14680655138868623], 'false,false': [4.026786315376729e-05, 0.150874833570942], 'false,false,false': [0.150874833570942, nan], 'false,true': [0.024979132440016465, 0.0004887840438117811], 'false,true,true': [nan, 0.024979132440016497], 'true': [2.2235748816989975e-05, 0.00026763530404608216], 'false,false,true': [4.026786315376729e-05, nan]}
{'': [0.0015063875939811836, 0.07311658156699496], 'false': [0.02577901250159856, 0.08981163617608584], 'false,false': [0.00029094987066461406, 0.0918085324457125], 'false,false,false': [0.06141829744847613, 0.15374386781281174], 'false,true': [0.020228634869650357, 0.026199535285617057], 'false,true,false': [0.0, 0.02567781082909789], 'true': [0.000881239809425332, 0.002210551768595498], 'true,false': [0.0, 0.0020718339302812153]}
{'': [0.0011326544979287725, 0.07736388863261189], 'false': [0.02664928076146541, 0.09597823074190923], 'false,false': [0.14254563293450148, 0.09428264652688093], 'false,false,false': [0.06447697612533954, 0.14357840906511346], 'true': [0.0006461751757383116, 0.001984134630166081], 'true,true': [0.0007815928380948099, 0.0], 'true,true,true': [0.0001465345967438969, 0.0010531025547738982], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 15.381
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( phenotype(H, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.058148935099512224;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.12933537577747842;  // std dev = 5.915, 177.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=48 */
%   | | | else return 0.2081489350995121;  // std dev = 3.695, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7621891678716269;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2505511758931249;  // std dev = 0.663, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.841991043899344;  // std dev = 0.019, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15606649990243157;  // std dev = 0.079, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.14198748667808594;  // std dev = 3.106, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.2924148371054365;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.06971671640102503;  // std dev = 0.806, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.05062586128757974;  // std dev = 1.957, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6904221339279816;  // std dev = 0.170, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13973933178541922;  // std dev = 0.199, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.21774290056536133;  // std dev = 0.577, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.14897362409878412;  // std dev = 3.565, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | else return 0.1433107709860789;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175135841583098;  // std dev = 1.29e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4973099667301123;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.42665111372584985;  // std dev = 0.650, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, G), complex(A, H) )
%   | | | then return -0.00982097353724023;  // std dev = 1.809, 50.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   | | | else return 0.09690651719692159;  // std dev = 3.682, 131.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=43 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.5732815012141147;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5076714661788495;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.021278840410618397;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.1582085939753822;  // std dev = 3.143, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return -0.004119293426196373;  // std dev = 2.167, 66.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=13 */
%   | | | else return 0.09347570880163011;  // std dev = 1.637, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.0522173524934365;  // std dev = 2.847, 88.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=25 */
%   | | | else return 0.13104228513102067;  // std dev = 1.492, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.4309370170230248;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.38296475281521103;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.0886479042977755;  // std dev = 2.180, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.014259067034940481;  // std dev = 3.084, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.30932626375275823;  // std dev = 0.079, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2941165929604989;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then return -0.07272217913833828;  // std dev = 0.146, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.11156569876503679;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1258272365288296;  // std dev = 0.726, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.005172242569489449;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.0447184877243396;  // std dev = 3.138, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | | else return 0.07585786930169948;  // std dev = 4.332, 152.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24646033715459584;  // std dev = 0.064, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5939418434074305;  // std dev = 1.335, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.1840739977555404;  // std dev = 0.066, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2364173591596272;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), complex(H, I) )
%   | | | then return 0.06494324451594662;  // std dev = 1.676, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.16972809523917415;  // std dev = 0.954, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.22634696294221612;  // std dev = 0.993, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.04267796577534322;  // std dev = 2.322, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.16424163367351552;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return -0.14646913252187602;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.19327333263266214;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.44036441360025264;  // std dev = 0.575, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | | else return 0.4128147870062271;  // std dev = 0.205, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.1443876917024572;  // std dev = 0.032, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.21025603596970355;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.07689608215211041;  // std dev = 2.026, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.010613276734026258;  // std dev = 2.319, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16168068377054984;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1741582830709072;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19233353547901136;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.003259164125668901;  // std dev = 0.372, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.20641076368000666;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.029959060519270917;  // std dev = 1.397, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16782546436228005;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.008937073203552042;  // std dev = 2.600, 118.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=35 */
%   | | | else return 0.0368656260117801;  // std dev = 3.074, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.03638748717398865;  // std dev = 0.309, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else return 0.12423496986627058;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.16670662364568997;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), interaction(F, F) )
%   | | then if ( enzyme(F, G) )
%   | | | then return 0.0014809412582688915;  // std dev = 3.808, 209.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=62 */
%   | | | else return -0.05699365435912849;  // std dev = 1.244, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( location(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.4570411930749246;  // std dev = 0.310, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.16636028977106393;  // std dev = 0.151, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, A) )
%   | | then return -0.09273062014856608;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.16820973194325134;  // std dev = 0.830, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '45.299', 'seconds']
Refined model CLL: -0.177402


******************************************
Best model found
******************************************
Results 

CLL : -0.190252 

AUC ROC : 0.98209 

AUC PR : 0.217513 

Precision : 0.137871 

Recall : 0.855596 

F1 : 0.237475 

Total Learning Time : 15.381 

Total Inference Time : 9.360202312469482 

Total revision time: 36.60254357719421
Best scored revision CLL: -0.177402


Results 

CLL : -0.190252 

AUC ROC : 0.98209 

AUC PR : 0.217513 

Precision : 0.137871 

Recall : 0.855596 

F1 : 0.237475 

Total Learning Time : 36.672937377929685 

Total Inference Time : 9.360202312469482 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.375
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08228686613399513;  // std dev = 3.176, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | | else return 0.13872447466785714;  // std dev = 5.297, 139.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.06745126068090773;  // std dev = 2.668, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | | else return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7236527679723841;  // std dev = 2.483, 59.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=52 */
%   | | | else return -0.15686611829093852;  // std dev = 0.037, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( location(A, I) )
%   | | | then return 0.11046016406551469;  // std dev = 2.848, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.09145896494019377;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3553664367462844;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0545986675679333;  // std dev = 2.830, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7069583027015381;  // std dev = 0.272, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.13965701043781917;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.44522470261669755;  // std dev = 0.741, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1257590840957499;  // std dev = 2.446, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.16039885454542477;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.37041612609307567;  // std dev = 0.937, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5418466278300738;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.385700567452291;  // std dev = 1.141, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.04836545247829313;  // std dev = 4.421, 191.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.44451765586889214;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5241358690769873;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.07515808561669028;  // std dev = 2.836, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.05490944934436392;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33105774821163475;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.36151314043482907;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.052664284072047554;  // std dev = 4.631, 199.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.339087178167504;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.36690325551160624;  // std dev = 0.039, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1139722519563982;  // std dev = 2.477, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.12446351708197881;  // std dev = 1.416, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26156993898112413;  // std dev = 0.006, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.36695874773012455;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.267674796622146;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2867388936230177;  // std dev = 0.035, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.061357719771411925;  // std dev = 1.355, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2883244255233405;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.06305764253016098;  // std dev = 4.080, 159.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=46 */
%   | | | else return 0.05533930971687284;  // std dev = 3.097, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23653006339074542;  // std dev = 0.124, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.22749638100624492;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.25135223829042186;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6174023562060401;  // std dev = 0.731, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.17746874844425062;  // std dev = 0.735, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.15225123499438173;  // std dev = 1.044, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07338351885127528;  // std dev = 3.326, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17761904729324196;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2233335896185367;  // std dev = 0.090, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41756525457413857;  // std dev = 1.793, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.14083386198314415;  // std dev = 0.457, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.19006599548497927;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.08268011865447909;  // std dev = 2.373, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.06758668806061145;  // std dev = 0.915, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1903425378058785;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.010107930208705465;  // std dev = 0.832, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.08618775118053296;  // std dev = 0.288, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.27734709125640217;  // std dev = 0.186, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.023037670777676364;  // std dev = 1.705, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.21611233148879963;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03268158772066998;  // std dev = 2.854, 101.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=31 */
%   | | | else return 0.05264116120813654;  // std dev = 2.388, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1445789107505605;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.15236964249146123;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.1422825854873151;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.04041368706818921;  // std dev = 0.501, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.16499229716434036;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.02624651094278897;  // std dev = 1.861, 99.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.06579035788260953;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.009271772178989654;  // std dev = 2.992, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | | else return 0.05031293898446144;  // std dev = 2.361, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '32.771', 'seconds']
Parameter learned model CLL:-0.177951 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.176, 45, 13], 'false,false,true,false': [5.297, 100, 39], 'false,false,false,true': [2.668, 34, 9], 'false,false,false,false': [1.477, 8, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [0.0, 0, 7], 'false,true,true': [0.0, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.483, 7, 52], 'false,false,true,false': [0.037, 109, 0], 'false,false,false,true': [2.848, 31, 11], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.894, 1, 4], 'false,true,true': [2.83, 48, 14], 'false,true,false,true': [0.272, 0, 42], 'false,true,false,false': [0.0, 93, 0], 'false,false,true,true': [0.741, 1, 3], 'false,false,true,false': [2.446, 21, 9], 'false,false,false,true': [1.414, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.937, 1, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.141, 2, 6], 'false,true,false': [4.421, 142, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.836, 31, 11], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.053, 0, 6], 'false,true': [4.631, 143, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.039, 0, 2], 'false,false,false,true': [2.477, 20, 9], 'false,false,false,false': [1.416, 6, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.006, 0, 9], 'true,true,false': [0.032, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.035, 0, 2], 'false,true': [1.355, 29, 5], 'false,false,true': [0.036, 0, 5], 'false,false,false,true': [4.08, 113, 46], 'false,false,false,false': [3.097, 36, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.124, 0, 13], 'true,true,true,false': [0.032, 0, 3], 'true,true,false,true': [0.028, 0, 3], 'true,true,false,false': [0.731, 0, 33], 'true,false': [0.735, 120, 0], 'false,true': [1.044, 2, 3], 'false,false,true': [3.326, 69, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.09, 0, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.793, 3, 56], 'false,true,false': [0.457, 139, 0], 'false,false,true,true': [0.028, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.373, 24, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.915, 1, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.832, 1, 5], 'false,true,true': [0.288, 12, 1], 'false,true,false,true': [0.186, 0, 6], 'false,true,false,false': [1.705, 47, 17], 'false,false,true': [0.027, 0, 3], 'false,false,false,true': [2.854, 70, 31], 'false,false,false,false': [2.388, 26, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.008, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.501, 1, 2], 'true,false': [0.023, 0, 3], 'false,true': [1.861, 75, 24], 'false,false,true': [0.858, 1, 3], 'false,false,false,true': [2.992, 76, 31], 'false,false,false,false': [2.361, 25, 12]}]
{'': [-2.3684757858670006e-16, 0.1994621717444869], 'false': [-2.5376526277146434e-16, 0.18996523864700685], 'false,false': [0.19428483083820847, 0.172839506172839], 'false,false,true': [0.1739001189060637, 0.20185290616427778], 'false,false,false': [0.1654948620876151, 0.1983471074380164], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.0, 0.21281329834786966], 'false': [-6.344131569286608e-17, 0.20924850356630273], 'false,false': [0.21337528983431597, 0.19268744128220058], 'false,false,true': [0.10452264810605383, 1.2806654132822086e-05], 'false,false,false': [0.19315008804227682, 0.1875], 'true': [1.1102230246251565e-16, -2.5376526277146434e-16], 'false,true': [-6.344131569286608e-17, nan]}
{'': [0.05859374999999978, 0.15853159988441792], 'false': [0.14733239071537646, 0.2068101641917958], 'false,false': [0.2027282545469018, 0.2222238566995561], 'false,false,false': [0.2222238566995561, nan], 'false,false,true': [0.13713120159707262, 0.19946767163625492], 'false,true': [0.12917702326267969, 0.15416612379483555], 'false,true,false': [0.0017676995249065186, -3.820122235269356e-17], 'true': [-1.2111523905001707e-16, 0.1600000000000001]}
{'': [0.0548799752236544, 0.12543032264737466], 'false': [0.10973524828647425, 0.18859487473101716], 'false,false': [0.0014086799720999614, 0.19112104203777816], 'false,false,false': [0.19143025037806893, 0.1875], 'false,true': [0.1470674816707136, 0.10231508290083238], 'false,true,true': [0.0, 0.1627418510827192], 'true': [0.0548799752236544, nan], 'false,false,true': [0.0, 0.0]}
{'': [0.0004081136028061483, 0.12488660918788258], 'false': [0.10776068400770919, 0.20251062551009247], 'false,false': [0.000687763696722706, 0.21418803395495248], 'false,false,false': [0.21151822401025178, 0.22270675665961048], 'false,false,true': [0.0, 0.000773734158813072], 'true': [-7.401486830834377e-17, 0.0004637654577342813], 'true,true': [-7.401486830834377e-17, nan]}
{'': [0.002107615910739713, 0.1161665133923619], 'false': [0.054024617889496626, 0.12379770725389569], 'false,false': [0.0002552596458661016, 0.12554811775119962], 'false,false,false': [0.10467855405143399, 0.19186800948791194], 'true': [0.0024483983012984277, 0.0004803232297068416], 'true,true': [3.3789702458881307e-06, 0.00026036802033591044], 'true,false': [0.0, 0.0005993382464073715], 'true,false,true': [0.0, nan]}
{'': [0.10725863284829354, 0.11806793667165695], 'false': [0.21802253440605232, 0.11064587144479479], 'false,false': [0.11064587144479479, nan], 'true': [0.044104387087044256, 0.004507953382518877], 'true,true': [0.0010353005451747693, 0.02510847908134724], 'true,true,false': [0.00026242984782411566, 0.016201153427679648], 'true,true,true': [0.0011797670055132632, 0.0003429731903841308]}
{'': [0.0010596226282616472, 0.09342852519657265], 'false': [0.08251561836079022, 0.14526107204149513], 'false,false': [0.00026430898325033314, 0.15645707974178566], 'false,false,false': [0.15645707974178566, nan], 'false,true': [0.054473088737911735, 0.0015056089076647039], 'false,true,true': [nan, 0.05447308873791171], 'true': [0.0, 0.0011560495816975475], 'false,false,true': [0.00026430898325033314, nan]}
{'': [0.0867281778141726, 0.07871193029149115], 'true': [0.07602975356605855, 0.10292468791411444], 'true,false': [0.0, 0.11543815774136583], 'false': [0.04345997258324949, 0.09827634445437293], 'false,false': [0.0002448208666282296, 0.09972294671026027], 'false,false,false': [0.08066295684803407, 0.15009291976621322], 'false,true': [0.006372382818477841, 0.049109889572399694], 'false,true,false': [0.0057675854703689204, 0.045439144416627594]}
{'': [0.020131504078741647, 0.07656133928730409], 'false': [0.03498819757162014, 0.10360323005976242], 'false,false': [0.1840244630294176, 0.10117123578527792], 'false,false,false': [0.08364086863140102, 0.15061557645498516], 'true': [0.023790200679272195, 0.0001805981305105601], 'true,true': [1.5736163983301465e-05, 0.06905047778984215], 'true,true,false': [0.0, 0.08372282171837075], 'true,true,true': [0.0, 3.0124419069528507e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 12.411
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.08037115732173453;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.16388141917594565;  // std dev = 5.773, 157.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=48 */
%   | | | else return 0.07243464938522666;  // std dev = 3.071, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7561337978940016;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7735025175718035;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8189740186006647;  // std dev = 0.992, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15845420823216225;  // std dev = 0.132, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.06338645120431304;  // std dev = 2.171, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.31063919845706045;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.46580844273395156;  // std dev = 0.317, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return -0.04014966439385115;  // std dev = 1.562, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | | else return 0.1853898641433762;  // std dev = 2.081, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6185213860054304;  // std dev = 1.675, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.14536632043328557;  // std dev = 0.302, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( phenotype(A, J), enzyme(I, K) )
%   | | | then return -0.04489727580176907;  // std dev = 1.147, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.4256264447847457;  // std dev = 1.305, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.07731988895872585;  // std dev = 1.218, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.027156266760759558;  // std dev = 2.076, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then return -0.03621084339924169;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.4660983832453146;  // std dev = 0.039, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5652574605191252;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4757908914129678;  // std dev = 0.908, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(I, A), interaction(A, I) )
%   | | | then return -0.11407257804981238;  // std dev = 0.060, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0.07819718755741857;  // std dev = 4.161, 157.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=49 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5214789057636977;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.047719492544147195;  // std dev = 2.282, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.25093455936273706;  // std dev = 1.673, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.24501350844957126;  // std dev = 0.307, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.405681372397842;  // std dev = 0.134, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then return -0.0010708847104643523;  // std dev = 0.235, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | else if ( location(A, G) )
%   | | | then return 0.059715312367526086;  // std dev = 4.081, 157.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=48 */
%   | | | else return -0.0064819236647598736;  // std dev = 0.967, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.3263527624245034;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.09757652059222022;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.053969750626598534;  // std dev = 2.419, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.327682998594827;  // std dev = 1.334, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.31893916489257257;  // std dev = 0.053, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.35585602045665926;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.03864920778491976;  // std dev = 0.628, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.09486765115539496;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.0413663968751807;  // std dev = 0.559, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.21028939484599107;  // std dev = 0.640, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.15343855058821212;  // std dev = 0.956, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, L), enzyme(A, M) )
%   | | | then return 0.18444646915304974;  // std dev = 1.914, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.04156723074429044;  // std dev = 4.543, 168.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.42174957085095266;  // std dev = 0.290, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | else return -0.1705452967406221;  // std dev = 0.070, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( phenotype(A, G), interaction(H, E) )
%   | | then if ( enzyme(H, I), complex(A, J) )
%   | | | then return 0.20901752863601797;  // std dev = 0.804, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.029965578159563362;  // std dev = 1.723, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( location(A, K), location(E, K) )
%   | | | then return -0.0027630129982572148;  // std dev = 1.995, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return 0.06386889551022093;  // std dev = 1.544, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else if ( enzyme(A, L) )
%   | | then return -0.08066994424109479;  // std dev = 0.411, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.07044002828923382;  // std dev = 0.532, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -9.751919327223857E-4;  // std dev = 0.770, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1673426401055036;  // std dev = 0.024, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return -0.16226155773769416;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.26102987839147046;  // std dev = 0.112, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), location(A, J) )
%   | | | then return 0.33836961767326734;  // std dev = 0.642, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.4976533348995547;  // std dev = 1.048, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | else return -0.14467426117626317;  // std dev = 0.046, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.204629501008601;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.01469840908119273;  // std dev = 2.210, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.1547791473175925;  // std dev = 1.234, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.14538537241319616;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.13700247069206192;  // std dev = 0.682, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.18214470213724598;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), interaction(H, H) )
%   | | then return -0.04047875321511378;  // std dev = 0.152, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.05253055036372681;  // std dev = 1.204, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return -0.016458591232093273;  // std dev = 0.853, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.23825503714830673;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.003682745415796586;  // std dev = 2.283, 75.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | | | else return 0.07991723100334142;  // std dev = 2.731, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.13428899042647077;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( location(C, E), interaction(D, C) )
%   | | | then return -0.3221914442234794;  // std dev = 0.644, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.15356571963559834;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.16655976477029907;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(A, H) )
%   | | | then return 0.39624107470457465;  // std dev = 0.959, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return 0.06652731225694768;  // std dev = 2.610, 76.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=33 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.12938103240315066;  // std dev = 0.318, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | | else return -0.2561282129296872;  // std dev = 0.365, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return 0.16573923931005483;  // std dev = 0.772, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '35.940', 'seconds']
Refined model CLL: -0.172156


******************************************
Best model found
******************************************
Results 

CLL : -0.187644 

AUC ROC : 0.986344 

AUC PR : 0.253775 

Precision : 0.152322 

Recall : 0.95053 

F1 : 0.262567 

Total Learning Time : 12.411 

Total Inference Time : 12.852972745895386 

Total revision time: 37.59300969696045
Best scored revision CLL: -0.172156


Results 

CLL : -0.187644 

AUC ROC : 0.986344 

AUC PR : 0.253775 

Precision : 0.152322 

Recall : 0.95053 

F1 : 0.262567 

Total Learning Time : 37.663403497695924 

Total Inference Time : 12.852972745895386 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.892
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.15544623239680821;  // std dev = 4.816, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   | | | else return 0.18247325942383544;  // std dev = 4.932, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5845391122281327;  // std dev = 0.897, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.508243899526118;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7210139388553339;  // std dev = 2.817, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | | else return -0.16369631403457008;  // std dev = 0.023, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | | else if ( location(A, I) )
%   | | | then return 0.09851611057593726;  // std dev = 1.723, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.570989447158071;  // std dev = 0.087, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6276814451200776;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08116829273207896;  // std dev = 4.344, 124.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6326449140080772;  // std dev = 1.664, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14415217731624358;  // std dev = 5.37e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.16505146799880707;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5016151986678595;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1586910744641547;  // std dev = 1.288, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.35535763735176873;  // std dev = 0.911, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.4467829547687022;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5572922551579583;  // std dev = 1.408, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return 0.049211321857605676;  // std dev = 4.984, 219.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5682993977435604;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.07964548889420983;  // std dev = 1.657, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3323189482331307;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.395926671673885;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.06754603911404182;  // std dev = 5.373, 234.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4271757800382946;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.07215479030296573;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.06392055757402103;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26227230199588575;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.41690448313948036;  // std dev = 0.204, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3272698800743584;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.02276198386611793;  // std dev = 2.376, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.32024877342873037;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.06754401869824733;  // std dev = 4.713, 176.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=55 */
%   | | | else return 0.15562472722453402;  // std dev = 1.690, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24790311301390117;  // std dev = 0.243, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.25964221662978737;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5287806315187777;  // std dev = 1.285, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.18247142232392288;  // std dev = 0.457, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.003963928579289511;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04156499493903598;  // std dev = 4.157, 128.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.0361422214022943;  // std dev = 0.904, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.22003041373448248;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3792758971199228;  // std dev = 2.892, 82.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=71 */
%   | | else return -0.15594319591296857;  // std dev = 0.310, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.2129103142819584;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.010619651347955252;  // std dev = 1.445, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18293178121645653;  // std dev = 0.138, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1771593932599916;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.05690530354497196;  // std dev = 1.698, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.2747102176537967;  // std dev = 0.758, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.03445478993644837;  // std dev = 1.608, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2147047634461133;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.007013893472314108;  // std dev = 3.822, 141.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=40 */
%   | | | else return -0.08005211009828413;  // std dev = 1.537, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14136850422767278;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.27064871502997956;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02731980715982829;  // std dev = 0.436, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return 0.021407567117189722;  // std dev = 2.184, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1807201427419204;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.043654075295146935;  // std dev = 3.448, 119.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=40 */
%   | | | else return 0.12577534915238267;  // std dev = 1.298, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.673', 'seconds']
Parameter learned model CLL:-0.196441 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.816, 78, 33], 'false,false,true,false': [4.932, 75, 36], 'false,false,false,true': [1.247, 7, 2], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.897, 1, 5], 'false,true,true': [0.732, 1, 3], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [2.817, 9, 69], 'false,false,true,false': [0.023, 158, 0], 'false,false,false,true': [1.723, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.087, 0, 8], 'true,false': [0.048, 0, 3], 'false,true,true': [4.344, 90, 34], 'false,true,false,true': [1.664, 3, 37], 'false,true,false,false': [5.37e-08, 70, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.816, 1, 2], 'false,false,false,true': [1.288, 5, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.911, 1, 10], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.408, 2, 14], 'false,true,false': [4.984, 162, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.657, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.009, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.056, 0, 4], 'false,true': [5.373, 163, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.291, 10, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.003, 0, 7], 'true,true,false': [0.204, 0, 3], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.376, 39, 12], 'false,false,true': [0.01, 0, 3], 'false,false,false,true': [4.713, 121, 55], 'false,false,false,false': [1.69, 9, 6]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.243, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.285, 2, 33], 'true,false': [0.457, 70, 0], 'false,true': [0.869, 1, 3], 'false,false,true': [4.157, 88, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.904, 1, 6], 'true,false': [0.095, 0, 5], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.892, 11, 71], 'false,true,false': [0.31, 168, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.445, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.138, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.04, 0, 3], 'false,true,true': [1.698, 39, 11], 'false,true,false,true': [0.758, 2, 1], 'false,true,false,false': [1.608, 32, 17], 'false,false,true': [0.008, 0, 3], 'false,false,false,true': [3.822, 101, 40], 'false,false,false,false': [1.537, 17, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.031, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.436, 1, 3], 'false,true': [2.184, 61, 29], 'false,false,true': [0.007, 0, 3], 'false,false,false,true': [3.448, 79, 40], 'false,false,false,false': [1.298, 6, 4]}]
{'': [0.07638888888888877, 0.21638888888888902], 'false': [0.18750000000000006, 0.2136419132433222], 'false,false': [0.21420745069393737, 0.20408163265306106], 'false,false,true': [0.20891161431702107, 0.21913805697589603], 'false,false,false': [0.17283950617283952, 0.24000000000000005], 'false,true': [0.0, 1.4802973661668753e-16], 'true': [-2.220446049250313e-16, 0.18750000000000006], 'false,true,false': [0.0, 0.0]}
{'': [0.07160363265592729, 0.20745197121656114], 'false': [0.13385372108722043, 0.20634374737151698], 'false,false': [0.20682903414526993, 0.19785149814491998], 'false,false,true': [0.10176427288110154, 3.4222460110593857e-06], 'false,false,false': [0.19785149814491998, nan], 'false,true': [0.13385372108722043, nan], 'true': [7.401486830834377e-17, 0.13410363265592698]}
{'': [0.0015384379101402294, 0.16287504192398583], 'false': [0.1589307093037043, 0.22840305082459253], 'false,false': [0.25, 0.20724901245774832], 'false,false,true': [0.0, 0.22222222222222224], 'false,false,false': [0.20724901245774832, nan], 'false,true': [0.1521762293272995, 0.16481401194376924], 'false,true,false': [0.06924798306086562, 4.123685520036296e-17], 'true': [0.0009493393824341334, 0.0007719254025026304]}
{'': [0.06975426027745883, 0.13512878261241856], 'false': [0.1305023691313506, 0.21189431345818383], 'false,false': [0.0, 0.21113797298662243], 'false,false,false': [0.21113797298662243, nan], 'false,true': [0.12382488432516431, 0.11341430804498838], 'false,true,true': [nan, 0.12382488432516436], 'true': [0.07539900761091979, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.001227922228355973, 0.12727252401378505], 'false': [0.12337045386194989, 0.17169954236648036], 'false,false': [0.0, 0.17078144451107635], 'false,false,false': [0.22222222222222224, 0.13888888888888887], 'true': [1.1529406227363457e-05, 0.0007819189971531026], 'true,true': [1.1529406227363457e-05, nan], 'false,false,true': [nan, 0.0]}
{'': [0.008374895482684613, 0.12822391020474655], 'false': [0.11066902035831068, 0.1307143654700286], 'false,false': [3.406935926686394e-05, 0.13183273778327467], 'false,false,false': [0.12622988396056922, 0.19042396169175796], 'true': [0.00918090731952197, 0.0], 'true,true': [9.866490304369764e-07, 0.013862944205677685], 'true,false': [nan, 0.0]}
{'': [0.12154914655067785, 0.13665951636689355], 'false': [0.1888738048182872, 0.13498497621062414], 'false,false': [0.13498497621062414, nan], 'true': [0.051430433760516606, 0.0029887240646365243], 'true,true': [0.005380036561515866, 0.04718098070042482], 'true,true,false': [nan, 0.047180980700424764], 'true,true,true': [0.005905512349148823, 0.0]}
{'': [0.0770316558984077, 0.09917854801698829], 'false': [0.09696928527634835, 0.13344986419484797], 'false,false': [0.0, 0.13922366896193092], 'false,false,false': [0.13922366896193092, nan], 'false,true': [0.10196481195778949, 0.0005722838559599287], 'false,true,true': [nan, 0.10196481195778938], 'true': [0.11668680396359392, 0.0017891093609471165], 'false,false,true': [0.0, nan]}
{'': [0.0018944152990758528, 0.08869837042067719], 'false': [0.06328141225313838, 0.10439117334391398], 'false,false': [2.0518596474570588e-05, 0.1053521953930755], 'false,false,false': [0.10359839376274822, 0.11248465930802487], 'false,true': [0.05769543523566648, 0.06600267771760743], 'false,true,false': [0.19157294863968236, 0.052800297990044515], 'true': [0.0023956446789356184, 0.0005335705556534093], 'true,false': [nan, 0.0005335705556534093]}
{'': [0.020932706971794685, 0.08336058987905731], 'false': [0.05298616940451197, 0.10366603700961016], 'false,false': [1.5842516101233217e-05, 0.10568826778111466], 'false,false,false': [0.09988142378717041, 0.16856859091546786], 'true': [0.001945464077923148, 0.04760431832341787], 'true,true': [0.001945464077923148, nan], 'true,true,true': [0.00013421590449034872, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 13.73
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.6581489350995123;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.016043671941617606;  // std dev = 3.554, 95.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=15 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.3126943896449669;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.19148226843284427;  // std dev = 4.761, 102.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7580193346218546;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.7648088053330049;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.09738775303176599;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7609104304538484;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6637745134677641;  // std dev = 3.302, 82.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=69 */
%   | | | else return -0.16380767445029012;  // std dev = 0.166, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.056184705118076314;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2673941950601241;  // std dev = 1.319, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.6106502671115718;  // std dev = 0.041, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0.0225330342567353;  // std dev = 2.378, 57.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=12 */
%   | | | else return 0.12020720246813987;  // std dev = 3.395, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6696963175751112;  // std dev = 1.337, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.1413785720157727;  // std dev = 0.101, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12237195647608867;  // std dev = 1.192, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.022047959788431652;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1258436229862059;  // std dev = 1.044, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.4473363269803781;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.16857410610338833;  // std dev = 0.674, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6067838197795918;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.14240413743931185;  // std dev = 0.118, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( location(A, G) )
%   | | | then return 0.08065025903373638;  // std dev = 5.311, 226.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=68 */
%   | | | else return 0.15636047089993507;  // std dev = 1.127, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5959047797235832;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.80072551172689;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.04290132437286894;  // std dev = 0.912, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3731389865815769;  // std dev = 0.117, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.34448497512848564;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.47857117344737077;  // std dev = 1.782, 37.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=31 */
%   | | | else return -0.16294730112481653;  // std dev = 0.496, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.016728143957923824;  // std dev = 1.491, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.10565908850959004;  // std dev = 3.598, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4483166536278862;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.008702194596128476;  // std dev = 1.142, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.4043097431085834;  // std dev = 0.746, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2766493176914082;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.35774568378930943;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.34168571791151714;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( complex(G, I), interaction(J, G) )
%   | | | then return 0.01327562648606701;  // std dev = 1.736, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.13823210393074659;  // std dev = 1.059, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return -0.1301411523712074;  // std dev = 0.036, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.27379964935177525;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.06284026275390754;  // std dev = 2.759, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   | | | else return 0.02275000633349384;  // std dev = 3.986, 135.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4671423511257156;  // std dev = 0.150, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.17327556932360266;  // std dev = 0.110, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E), complex(E, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.02022624581987694;  // std dev = 1.580, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.13816037561220665;  // std dev = 1.492, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( complex(E, J) )
%   | | | then return -0.06255134458624359;  // std dev = 1.385, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.039035349944970814;  // std dev = 1.275, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(L, L) )
%   | | | then return 0.01589239700893763;  // std dev = 1.667, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.11926270353001871;  // std dev = 1.607, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else return 0.10211942656435488;  // std dev = 0.676, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.15549137002909008;  // std dev = 0.043, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.19668400947357426;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), location(A, H) )
%   | | | then return 0.24074414030990512;  // std dev = 1.901, 35.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=28 */
%   | | | else return 0.4082320931124395;  // std dev = 2.062, 48.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=43 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.13051551159599964;  // std dev = 0.284, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | | else return -0.15413407478596847;  // std dev = 0.280, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.18776185354510178;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.09964345306830096;  // std dev = 1.214, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.018392071145062486;  // std dev = 0.751, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.14534290410862288;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.14262862767352769;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.27697131402515024;  // std dev = 0.767, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.09981289625246016;  // std dev = 0.273, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.07967876922285563;  // std dev = 1.277, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.24064352519645102;  // std dev = 0.594, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.06750979344932373;  // std dev = 0.860, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, L), enzyme(A, M) )
%   | | | then return -0.14156243390411546;  // std dev = 1.306, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.02810368265029281;  // std dev = 3.197, 121.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=41 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.12468918826306778;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.1532333697453676;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.12608926784694074;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08255122731709884;  // std dev = 0.014, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.035932040558531254;  // std dev = 1.689, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
%   | | | else return -0.016886405690352404;  // std dev = 1.231, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.19102175315046835;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return -0.06794462678833385;  // std dev = 1.838, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.0019335982126866891;  // std dev = 3.102, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '39.216', 'seconds']
Refined model CLL: -0.189551


******************************************
Best model found
******************************************
Results 

CLL : -0.19065 

AUC ROC : 0.98552 

AUC PR : 0.283605 

Precision : 0.187403 

Recall : 0.85461 

F1 : 0.307398 

Total Learning Time : 13.73 

Total Inference Time : 27.9431471824646 

Total revision time: 62.15656926345825
Best scored revision CLL: -0.189551


Results 

CLL : -0.19065 

AUC ROC : 0.98552 

AUC PR : 0.283605 

Precision : 0.187403 

Recall : 0.85461 

F1 : 0.307398 

Total Learning Time : 72.88404776763916 

Total Inference Time : 27.9431471824646 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.047
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09123164186642853;  // std dev = 4.876, 133.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=31 */
%   | | | else return 0.18423589162125067;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09344305274657114;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6285643213018633;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.5944734122109545;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6478929657368316;  // std dev = 3.814, 94.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=76 */
%   | | | else return -0.15944861718708778;  // std dev = 0.082, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | | else if ( location(A, I) )
%   | | | then return 0.29083361543780595;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.48133346916826875;  // std dev = 0.944, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5776873145590465;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06240144896061934;  // std dev = 4.483, 142.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5898560528498803;  // std dev = 2.461, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return -0.1448952726645983;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.007789953673218848;  // std dev = 0.995, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.02709735463568464;  // std dev = 1.664, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.38028926763816845;  // std dev = 0.974, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.45808690665407203;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.48337237977586667;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.36584000370381203;  // std dev = 2.556, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | else return 0.03653992980999512;  // std dev = 5.194, 247.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5793925614131372;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.06740718432319048;  // std dev = 1.715, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.21809574030071938;  // std dev = 0.953, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.183736442888114;  // std dev = 1.298, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.08055469855808294;  // std dev = 5.808, 270.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43558194603458644;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.03974326653828909;  // std dev = 1.735, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.19911176380110757;  // std dev = 0.950, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return 0.18942690101170667;  // std dev = 1.174, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3329896378343705;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.035547851581616594;  // std dev = 2.935, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3122562779728826;  // std dev = 0.028, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), interaction(J, A) )
%   | | | then return 0.03518585549869787;  // std dev = 4.910, 187.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=51 */
%   | | | else return 0.06886907858536764;  // std dev = 2.258, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.3075257839559992;  // std dev = 0.321, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.07694102739066283;  // std dev = 0.482, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.24219506430021442;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5816760064250952;  // std dev = 0.938, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.16942799296670707;  // std dev = 0.349, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.08515901621197237;  // std dev = 0.924, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.09677339696438826;  // std dev = 4.330, 136.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.07859447332893506;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.22081464336944595;  // std dev = 0.058, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3533579506890595;  // std dev = 3.561, 99.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=82 */
%   | | else return -0.15014509424611125;  // std dev = 0.226, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.27873545944674005;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.09773987037407586;  // std dev = 1.402, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.10946189720357843;  // std dev = 0.978, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.16948157690174281;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.12974617302267796;  // std dev = 0.570, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.02159191530579188;  // std dev = 1.801, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.08771115257430745;  // std dev = 1.158, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.06408641657854733;  // std dev = 1.543, 72.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.08781627992460882;  // std dev = 1.205, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02266855828227697;  // std dev = 4.071, 152.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=47 */
%   | | | else return -0.004185932142573432;  // std dev = 1.470, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.06154194069216577;  // std dev = 0.847, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.2194792442717383;  // std dev = 0.106, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2067104593456758;  // std dev = 0.123, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.007742398565427798;  // std dev = 2.378, 130.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.21470619514084105;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.03850865460942374;  // std dev = 3.797, 151.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=47 */
%   | | | else return 0.045223084955388876;  // std dev = 1.413, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.431', 'seconds']
Parameter learned model CLL:-0.200376 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.876, 102, 31], 'false,false,true,false': [5.507, 93, 45], 'false,false,false,true': [1.749, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [2.11e-08, 0, 7], 'true,false': [0.953, 1, 10], 'false,true,true': [0.935, 1, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [3.814, 18, 76], 'false,false,true,false': [0.082, 173, 0], 'false,false,false,true': [1.491, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.944, 1, 11], 'true,false': [2.11e-08, 0, 6], 'false,true,true': [4.483, 108, 34], 'false,true,false,true': [2.461, 7, 48], 'false,true,false,false': [0.0, 96, 0], 'false,false,true,true': [0.995, 2, 1], 'false,false,true,false': [1.664, 13, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.974, 1, 16], 'true,false': [0.0, 0, 1], 'false,true,true,true': [0.107, 0, 3], 'false,true,true,false': [2.556, 12, 21], 'false,true,false': [5.194, 189, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.715, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.953, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.298, 2, 10], 'false,true': [5.808, 188, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.735, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I), interaction(J, A)'}, {'true,true,true': [0.95, 1, 9], 'true,true,false': [1.174, 2, 6], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 0, 1], 'false,true': [2.935, 52, 19], 'false,false,true': [0.028, 0, 8], 'false,false,false,true': [4.91, 136, 51], 'false,false,false,false': [2.258, 23, 10]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.321, 0, 15], 'true,true,true,false': [0.482, 1, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [0.938, 1, 33], 'true,false': [0.349, 102, 0], 'false,true': [0.924, 1, 5], 'false,false,true': [4.33, 89, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.935, 1, 7], 'true,false': [0.058, 0, 10], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.561, 17, 82], 'false,true,false': [0.226, 185, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.402, 7, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.978, 1, 9], 'true,false,true': [0.808, 1, 2], 'true,false,false': [0.57, 1, 5], 'false,true,true': [1.801, 45, 13], 'false,true,false,true': [1.158, 3, 8], 'false,true,false,false': [1.543, 61, 11], 'false,false,true': [1.205, 2, 5], 'false,false,false,true': [4.071, 105, 47], 'false,false,false,false': [1.47, 12, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.847, 1, 7], 'true,true,true,false': [0.106, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.123, 0, 3], 'false,true': [2.378, 98, 32], 'false,false,true': [0.016, 0, 5], 'false,false,false,true': [3.797, 104, 47], 'false,false,false,false': [1.413, 9, 4]}]
{'': [-2.0898315757650005e-16, 0.20794024705544437], 'false': [-2.5376526277146434e-16, 0.20061728395061837], 'false,false': [0.20179463787257834, 0.1799307958477507], 'false,false,true': [0.17875515857312568, 0.21975425330812964], 'false,false,false': [0.1799307958477507, nan], 'true': [-1.4802973661668753e-16, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.05246913580246929, 0.20866939279584754], 'false': [0.10937500000000006, 0.20547563073646363], 'false,false': [0.2031797434830372, 0.24691358024691348], 'false,false,false': [0.24691358024691348, nan], 'false,false,true': [0.15471782699841674, 3.8840765700921905e-05], 'false,true': [0.10937500000000006, nan], 'true': [6.344131569286608e-17, 0.08264462809917364]}
{'': [0.05162305794064478, 0.1570443036014543], 'false': [0.15459456056134072, 0.18813034156543987], 'false,false': [0.18813034156543987, nan], 'false,false,true': [0.33004322727836294, 0.16290432250335615], 'false,true': [0.14151352608632234, 0.16513209709428603], 'false,true,false': [0.11014072621598033, -4.163336342344337e-17], 'true': [0.0743398990704371, 7.401486830834377e-17]}
{'': [0.05306639445662826, 0.1349827222786359], 'false': [0.13133124015483444, 0.19919984573807856], 'false,false': [0.0, 0.1960967713068295], 'false,false,false': [0.1960967713068295, nan], 'false,true': [0.18281134462486368, 0.1092009950280358], 'false,true,true': [0.003818803376452314, 0.19793223887716954], 'true': [0.055851698591921295, 0.0], 'false,false,true': [nan, 0.0]}
{'': [0.12988151793672648, 0.12853421250114988], 'true': [0.11347529490461647, 0.14034677543065793], 'false': [0.12491959759181755, 0.18565380924100708], 'false,false': [0.0, 0.1880402158370775], 'false,false,false': [0.1880402158370775, nan], 'true,true': [0.11347529490461647, nan], 'false,false,true': [nan, 0.0]}
{'': [0.12106226177682079, 0.12852467813825502], 'false': [0.12130021258040402, 0.13072628482649162], 'false,false': [9.506020488396494e-05, 0.13288023892570522], 'false,false,false': [0.1288961672288531, 0.15449226961798726], 'true': [0.12678297791893497, 0.0], 'true,true': [0.0902492280705069, 0.1723980560254425], 'true,false': [nan, 0.0]}
{'': [0.10895878152421751, 0.1380615028089217], 'false': [0.14217247540901057, 0.13787443663095314], 'false,false': [0.13787443663095314, nan], 'true': [0.0515974579693172, 0.0011965429811721258], 'true,true': [0.03506046054039865, 0.03237961170333594], 'true,true,true': [0.006888843756802832, 0.11592282551112923], 'true,true,false': [0.0, 0.025892259773557292]}
{'': [0.053789645671625363, 0.10529611840408805], 'false': [0.10240632655578562, 0.1663502183834483], 'false,false': [0.0, 0.1787430152372362], 'false,false,false': [0.1787430152372362, nan], 'false,true': [0.12811552879156696, 0.0002751322781956931], 'false,true,true': [nan, 0.12811552879156643], 'true': [0.109375, 0.00033177253499147574], 'false,false,true': [0.0, nan]}
{'': [0.11272075567706048, 0.08758321432122546], 'true': [0.09556641249168214, 0.12845817771571444], 'true,false': [0.21738425224498636, 0.05414939167613459], 'false': [0.05107062887873031, 0.115861385254477], 'false,false': [0.20752543976876942, 0.11157611784527163], 'false,false,false': [0.10903944989381097, 0.13502198198112006], 'false,true': [0.055897707447878225, 0.04749152012329631], 'false,true,false': [0.12195539060191116, 0.03306126990048133]}
{'': [0.049711799510570094, 0.07498334781891136], 'false': [0.043488642521600104, 0.09803527392665798], 'false,false': [5.207968539749364e-05, 0.10010959905802418], 'false,false,false': [0.0954950707705119, 0.15366761005918836], 'true': [0.05821807684895889, 0.005071926942291795], 'true,true': [0.05821807684895889, nan], 'true,true,true': [0.0897799548762694, 0.0018817488914099716]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 14.699
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6081489350995123;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.29211119925045476;  // std dev = 3.608, 53.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=23 */
%   | | | else return -0.14185106490048766;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.2993254056877476;  // std dev = 2.895, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.1478041075133043;  // std dev = 5.462, 145.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7262732050717783;  // std dev = 0.044, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7594623148794624;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then return 0.7551805016408267;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.41589598673584804;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7038854961828506;  // std dev = 3.090, 87.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=76 */
%   | | | else return -0.15439036525322827;  // std dev = 0.267, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.10358797873913733;  // std dev = 1.672, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.1440470535354656;  // std dev = 0.064, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.48630812635289744;  // std dev = 0.282, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.4607217305012355;  // std dev = 0.349, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14855838117867406;  // std dev = 0.253, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.0981668290483456;  // std dev = 4.139, 117.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5426212067579848;  // std dev = 2.825, 57.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   | | | else return -0.13850610825993417;  // std dev = 0.181, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.13505450474413658;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.04922308623069562;  // std dev = 1.430, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return 0.17611726316894052;  // std dev = 0.768, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4034019230566841;  // std dev = 0.244, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return 0.46574058814631036;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11854502236214073;  // std dev = 0.147, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.06284321900034785;  // std dev = 3.970, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.06984772431741368;  // std dev = 2.736, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | | else return 0.11706631569041703;  // std dev = 3.452, 90.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=30 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.616975885878186;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.21215059000481654;  // std dev = 1.046, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.035969475091057135;  // std dev = 1.278, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.1936605945586011;  // std dev = 0.353, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.3814418449521968;  // std dev = 0.015, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4210534855952635;  // std dev = 1.980, 31.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=24 */
%   | | | else return -0.07316285414311423;  // std dev = 2.281, 106.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=11 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.1595315344002774;  // std dev = 3.267, 70.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=29 */
%   | | | else return 0.08926288047439264;  // std dev = 2.530, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4649963796699247;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.12484611569948756;  // std dev = 1.376, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.04004239317707803;  // std dev = 0.867, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.23915905473905272;  // std dev = 0.313, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.35314571888596646;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then return -0.04889495472742873;  // std dev = 0.294, 57.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=10 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.1904313485224297;  // std dev = 0.726, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05528944611520569;  // std dev = 1.500, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.29674532075291443;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.21292789125001418;  // std dev = 0.983, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( location(A, K), complex(A, L) )
%   | | | then return -0.02894772146953665;  // std dev = 2.419, 67.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=12 */
%   | | | else return 0.041730991033239156;  // std dev = 4.592, 172.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.428636575561513;  // std dev = 0.226, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | else return -0.16325370049530882;  // std dev = 0.084, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.14322693980153234;  // std dev = 0.657, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.0908056319838538;  // std dev = 1.201, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 3.867389239031375E-4;  // std dev = 2.302, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | else if ( complex(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5543189874402983;  // std dev = 0.121, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1391653272391568;  // std dev = 0.254, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.12024498902887922;  // std dev = 2.115, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.04488942492906784;  // std dev = 2.246, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1784994301678579;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, E) )
%   | | then return -0.04057475471152944;  // std dev = 0.763, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2349456706792798;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(A, H) )
%   | | | then return 0.20832333166338146;  // std dev = 1.915, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | | else return 0.4238129875152492;  // std dev = 2.283, 67.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=61 */
%   | | else return -0.14699838147552802;  // std dev = 0.039, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.19988351234260293;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.03346527338595536;  // std dev = 1.099, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.14788480431811143;  // std dev = 0.968, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( location(D, C), complex(D, E) )
%   | then return -0.007984390660744937;  // std dev = 0.274, 216.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=68 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then return -0.00370057980436992;  // std dev = 0.216, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( interaction(H, D), location(H, C) )
%   | | | then return 0.16106120305645918;  // std dev = 1.215, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.03292303953447956;  // std dev = 1.491, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   else if ( complex(A, I), location(A, J) )
%   | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | then return 0.4972241357676815;  // std dev = 0.404, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.16468907414074252;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( phenotype(A, L) )
%   | | then if ( phenotype(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.5691431787914581;  // std dev = 0.187, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.21316484532864868;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.05704801083433827;  // std dev = 0.252, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.15485085100507215;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.1940361375611908;  // std dev = 0.142, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.43425627931959926;  // std dev = 0.835, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.17034503098213763;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then if ( interaction(A, I), enzyme(I, J) )
%   | | then return -0.04851728177131774;  // std dev = 0.231, 77.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=14 */
%   | | else return -0.0064595675408671786;  // std dev = 0.248, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.06283514528782301;  // std dev = 0.830, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( location(A, L), enzyme(A, M) )
%   | | | then return 0.04104205157413631;  // std dev = 2.137, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return -0.007568552944502629;  // std dev = 3.205, 112.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=33 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '38.133', 'seconds']
Refined model CLL: -0.192168


******************************************
Best model found
******************************************
Results 

CLL : -0.165058 

AUC ROC : 0.990523 

AUC PR : 0.369735 

Precision : 0.277567 

Recall : 0.826415 

F1 : 0.41556 

Total Learning Time : 14.699 

Total Inference Time : 21.993070125579834 

Total revision time: 60.38145441627503
Best scored revision CLL: -0.192168


Results 

CLL : -0.165058 

AUC ROC : 0.990523 

AUC PR : 0.369735 

Precision : 0.277567 

Recall : 0.826415 

F1 : 0.41556 

Total Learning Time : 71.10893292045594 

Total Inference Time : 21.993070125579834 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.402
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.058148935099512376;  // std dev = 2.530, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | | else return 0.17931681831119015;  // std dev = 5.465, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.13756069980539468;  // std dev = 3.700, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8373558973873375;  // std dev = 0.042, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16196501529621748;  // std dev = 0.080, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | | else if ( location(A, K) )
%   | | | then return 0.11088153879313822;  // std dev = 3.622, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | | | else return 0.3405651783839172;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.016679267006172373;  // std dev = 2.163, 46.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6359143492843117;  // std dev = 1.393, 50.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   | | | else return -0.14397644333547746;  // std dev = 7.30e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20990903919197;  // std dev = 3.442, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.29100096055210667;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4175135841583099;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.39806439161546414;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5940041762731173;  // std dev = 0.140, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.06948527297948506;  // std dev = 4.160, 179.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5031171129906544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.1230988868061986;  // std dev = 3.465, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0.1524952820439732;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3207118471601496;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.04129402793479059;  // std dev = 4.305, 207.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3797408096523165;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.046197242855137384;  // std dev = 3.702, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | | else return 0.21440385204968504;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3535891465860761;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.25517224256948945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2551722425694892;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.2951733013242466;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06266059290737688;  // std dev = 0.951, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.11231509971234656;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.027227129301159905;  // std dev = 4.118, 197.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=49 */
%   | | | else return 0.06440407695926686;  // std dev = 3.725, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23243513782133873;  // std dev = 0.124, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2237078576334972;  // std dev = 0.020, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.23441820948012582;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6413191540676504;  // std dev = 0.745, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.20243981663647603;  // std dev = 0.894, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23441820948012584;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.09284673616458367;  // std dev = 3.258, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17381580538868968;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.0878009510580485;  // std dev = 0.865, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41236196631451955;  // std dev = 1.518, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.14189061963583213;  // std dev = 0.267, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.18729844724119166;  // std dev = 0.017, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.01729950661583626;  // std dev = 3.116, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1546419468906518;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1357225200471065;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17274394735213944;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07294996569706906;  // std dev = 0.410, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18559274913260415;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.005008126459057968;  // std dev = 1.232, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18156972374080782;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05464016525544453;  // std dev = 2.640, 101.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=36 */
%   | | | else return 0.05284886022452408;  // std dev = 2.993, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13358343193645789;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14553133194133439;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.13155498776725194;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0518851305847418;  // std dev = 0.870, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.007673909212890675;  // std dev = 1.347, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15612884865988352;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.003743750917024817;  // std dev = 2.758, 130.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=36 */
%   | | | else return 0.02024997226496539;  // std dev = 3.072, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.515', 'seconds']
Parameter learned model CLL:-0.178506 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.53, 32, 8], 'false,false,true,false': [5.465, 93, 44], 'false,false,false,true': [3.7, 49, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'location(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [0.0, 0, 5], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [0.042, 0, 52], 'false,false,true,false': [0.08, 158, 0], 'false,false,false,true': [3.622, 48, 18], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.163, 38, 8], 'false,true,false,true': [1.393, 2, 48], 'false,true,false,false': [7.3e-08, 113, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.442, 31, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [4.21e-08, 0, 11], 'true,false': [1.05e-08, 0, 3], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.14, 0, 3], 'false,true,false': [4.16, 127, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.465, 36, 18], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 9], 'false,true': [4.305, 151, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.702, 49, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [1.29e-08, 0, 7], 'true,true,false': [0.063, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [0.951, 19, 3], 'false,false,true': [0.926, 1, 6], 'false,false,false,true': [4.118, 148, 49], 'false,false,false,false': [3.725, 44, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.124, 0, 12], 'true,true,true,false': [0.02, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.745, 0, 36], 'true,false': [0.894, 106, 0], 'false,true': [0.0, 0, 5], 'false,false,true': [3.258, 66, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.865, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.518, 2, 56], 'false,true,false': [0.267, 140, 0], 'false,false,true,true': [0.017, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.116, 49, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.028, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.014, 0, 4], 'false,true,true': [0.41, 14, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.232, 35, 14], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.64, 65, 36], 'false,false,false,false': [2.993, 40, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.009, 0, 5], 'true,true,true,false': [0.019, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.87, 1, 4], 'false,true': [1.347, 49, 17], 'false,false,true': [0.0, 0, 5], 'false,false,false,true': [2.758, 94, 36], 'false,false,false,false': [3.072, 43, 20]}]
{'': [-2.5376526277146434e-16, 0.21325126154134635], 'false': [-1.4802973661668753e-16, 0.20652690586634898], 'false,false': [0.20747550193111886, 0.20408163265306076], 'false,false,true': [0.16000000000000017, 0.2180190740050091], 'false,false,false': [0.20134083044982648, 0.25], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [2.5376526277146434e-16, 0.19498005332658874], 'false': [7.401486830834377e-17, 0.1909801093467855], 'false,false': [0.1860896936029478, 0.20453848830699353], 'false,false,false': [0.1987686980714745, 0.25000000000000006], 'false,false,true': [3.346182223081721e-05, 4.05382365259064e-05], 'true': [7.401486830834377e-17, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [-2.5376526277146434e-16, 0.15686301927734161], 'false': [0.13361659963478092, 0.230957800402703], 'false,false': [0.23002012734673374, 0.25], 'false,false,false': [0.25, nan], 'false,false,true': [0.0, 0.2322353102774484], 'false,true': [0.10174599373988184, 0.14125189483752265], 'false,true,false': [0.03882504054036751, 4.7159916090272136e-17], 'true': [-1.1102230246251565e-16, -1.1102230246251565e-16]}
{'': [1.2688263138573217e-16, 0.13041517213630155], 'false': [0.09968145960716615, 0.22020639680314363], 'false,false': [0.0018319910371375203, 0.2239354440318414], 'false,false,false': [0.22237475226005546, 0.23999999999999994], 'false,true': [0.012109344257473398, 0.09669559053056581], 'false,true,true': [0.0, 0.006547692540375942], 'false,false,true': [0.0, 0.0], 'true': [1.6148698540002277e-16, 3.700743415417188e-17]}
{'': [0.0, 0.1182265850081147], 'false': [0.08954222790284014, 0.20045316675177938], 'false,false': [0.0008711046032254255, 0.20366844158169836], 'false,false,false': [0.20149736401913595, 0.25], 'false,false,true': [0.0, 0.0], 'true': [0.0, -3.700743415417188e-17], 'true,true': [0.0, nan]}
{'': [0.002207775154302657, 0.11346279976420821], 'false': [0.04109775947483204, 0.11862952465940137], 'false,false': [0.12244897959183675, 0.11837633350003794], 'false,false,false': [0.08606742320774169, 0.21678398454093306], 'true': [0.0026048791122940825, 0.00035557437811144693], 'true,true': [2.3790493384824782e-17, 0.000999671288493209], 'true,false': [0.0, 0.0], 'true,false,true': [0.0, 0.0]}
{'': [0.13476986053063647, 0.10011723380416881], 'true': [0.046074993501165534, 0.007548226881367602], 'false': [-1.1102230246251566e-17, 0.10408837676149851], 'false,false': [0.10408837676149851, nan], 'true,true': [0.0011333011551310976, 0.01934848508675591], 'true,true,false': [0.0, 0.015411121959718018], 'true,true,true': [0.00127886949646742, 0.0001946064618469981]}
{'': [0.05165265396948783, 0.09195480840741997], 'false': [0.07562030530883301, 0.13750542983167258], 'false,false': [0.00014947020420595647, 0.14067268763383706], 'false,false,false': [0.14067268763383706, nan], 'false,true': [0.03971080356113211, 0.0005104126077315029], 'true': [0.0, 0.08312833454960449], 'false,true,true': [nan, 0.039710803561132074], 'false,false,true': [0.00014947020420595647, nan]}
{'': [0.0001754530796632522, 0.07776389545244596], 'false': [0.027780820949249337, 0.09643277448156282], 'false,false': [0.0, 0.09893718877935821], 'false,false,false': [0.06901180856220276, 0.14930956585414693], 'false,true': [0.011217078230386148, 0.03100892481638593], 'false,true,false': [0.0, 0.030995740081911728], 'true': [8.722866170556472e-05, 0.0002606877494096882], 'true,false': [0.0, 5.174247082174316e-05]}
{'': [0.058421370358863974, 0.07196235902055541], 'false': [0.027481030405552467, 0.08668422406130988], 'false,false': [0.0, 0.08838426938215413], 'false,false,false': [0.05852303806344606, 0.14981916407132945], 'true': [7.772973368483649e-05, 0.15138346324162916], 'true,true': [8.86889938956012e-05, 0.0], 'true,true,true': [1.6458342990341435e-05, 0.00011985321549196533], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;location(A, F), location(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;location(A, D), location(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;location(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 8.256
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.08891816586874314;  // std dev = 2.148, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | else if ( interaction(J, A), interaction(A, J) )
%   | | | then return 0.0010060779566550774;  // std dev = 1.604, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.17158177092040755;  // std dev = 6.577, 201.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=63 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( location(A, G), location(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8013669670948418;  // std dev = 1.392, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15536645106095648;  // std dev = 0.148, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return -0.021190020361238786;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.18140738223616412;  // std dev = 3.527, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5634807074632402;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.573623545859435;  // std dev = 0.024, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11389405775609875;  // std dev = 0.024, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.11041771180929329;  // std dev = 2.003, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6869207773408487;  // std dev = 0.281, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1379591367256363;  // std dev = 0.117, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11093689950479078;  // std dev = 3.691, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | else return 0.05953797407724103;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.42819095684787883;  // std dev = 0.022, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3859086233406316;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.42878524659937056;  // std dev = 0.674, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.10826127599505415;  // std dev = 0.019, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.06528434710232775;  // std dev = 4.160, 180.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5278313909896661;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -2.994545365572851E-4;  // std dev = 1.790, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.16451878998073216;  // std dev = 3.169, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3281394198643319;  // std dev = 0.020, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then if ( complex(A, G), phenotype(F, H) )
%   | | | then return -0.005280579697440273;  // std dev = 1.414, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return 0.06290337039986496;  // std dev = 1.624, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.09611743391329626;  // std dev = 2.248, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | | else return 0.0861691248060245;  // std dev = 2.698, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3973807605848001;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.0687470666188484;  // std dev = 3.140, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.1634260026841627;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.21449892960248682;  // std dev = 0.260, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( location(A, E), location(D, E) )
%   | | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.5620861861118119;  // std dev = 1.244, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | | else return -0.1849072219842857;  // std dev = 0.764, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7614286333816586;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.22874659182621304;  // std dev = 0.153, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4996254450122924;  // std dev = 0.287, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.19338510869826583;  // std dev = 0.636, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.11635819049182715;  // std dev = 2.309, 51.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=22 */
%   | | | else return 0.14012733406579914;  // std dev = 0.958, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24194156175539963;  // std dev = 0.040, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.15846918741198823;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5169837823396263;  // std dev = 0.725, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.1577313881787811;  // std dev = 0.088, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2363331197372948;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( location(G, H), location(A, H) )
%   | | | then return 0.2067115213964109;  // std dev = 0.807, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.07308100919330689;  // std dev = 0.975, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.09965950389866185;  // std dev = 1.441, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.03599952047119183;  // std dev = 2.275, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.17404197937694085;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.1873775675501338;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.2729442227022396;  // std dev = 0.228, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.43630189663343505;  // std dev = 0.426, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.09146152088468865;  // std dev = 0.144, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return -0.15467521117617367;  // std dev = 0.194, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.19877903578733408;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.06863739306042708;  // std dev = 1.621, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.022037883421252444;  // std dev = 1.856, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15830615810635953;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.18823332835845633;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.06415967837281843;  // std dev = 0.015, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.04127515275290572;  // std dev = 0.306, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.1775556659648423;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.022531840951942446;  // std dev = 1.061, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.16865624524386671;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return -0.012114520795110049;  // std dev = 2.568, 121.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=35 */
%   | | | else return 0.0889310620387649;  // std dev = 2.305, 50.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14057644483581427;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.16145878715790363;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( enzyme(A, H), complex(A, I) )
%   | | | then return -0.010286420359885813;  // std dev = 0.633, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return -0.06761278191957729;  // std dev = 0.035, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, J), interaction(J, A) )
%   | | | then return -0.037784030024086306;  // std dev = 0.289, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.024322250853048434;  // std dev = 0.832, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.14636859442647554;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, L) )
%   | | | then return -0.0029306927555086035;  // std dev = 2.475, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | | else return 0.034074682149452744;  // std dev = 2.308, 101.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '7.751', 'seconds']
Refined model CLL: -0.159795


******************************************
Best model found
******************************************
Results 

CLL : -0.180717 

AUC ROC : 0.987541 

AUC PR : 0.274403 

Precision : 0.163382 

Recall : 0.927798 

F1 : 0.277838 

Total Learning Time : 8.256 

Total Inference Time : 7.68663215637207 

Total revision time: 27.825787313461305
Best scored revision CLL: -0.159795


Results 

CLL : -0.180717 

AUC ROC : 0.987541 

AUC PR : 0.274403 

Precision : 0.163382 

Recall : 0.927798 

F1 : 0.277838 

Total Learning Time : 38.55326581764221 

Total Inference Time : 7.68663215637207 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.421
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.05511863206920934;  // std dev = 3.231, 66.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=13 */
%   | | | else return 0.17522210583121905;  // std dev = 5.161, 123.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.6083623010998431;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.739872790793426;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return 0.7526253227326664;  // std dev = 0.084, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8207726726332653;  // std dev = 0.980, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15926265282606386;  // std dev = 0.087, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | else if ( location(A, I) )
%   | | | then return 0.06443281670799345;  // std dev = 2.921, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | | else return 0.16653882456488175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.57932915667637;  // std dev = 0.053, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5807165438879357;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.041428899165453524;  // std dev = 2.821, 68.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6603846094339837;  // std dev = 0.997, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.1465018876057354;  // std dev = 0.247, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.43991938801499986;  // std dev = 0.739, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.16766531989074604;  // std dev = 2.385, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.3215082909156089;  // std dev = 1.219, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.3755599883092409;  // std dev = 0.941, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6565138146802152;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5930214525542534;  // std dev = 0.198, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.030901120421378405;  // std dev = 4.417, 202.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.43765277659970825;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5674759461799843;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.0992590452462288;  // std dev = 2.763, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.004076000465926814;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3462101729699542;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3483128856291248;  // std dev = 0.069, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.048679547429428274;  // std dev = 4.461, 204.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3344010207037631;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3804786451620335;  // std dev = 0.065, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.07034868188272923;  // std dev = 2.536, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.08736613806354296;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2724852082154939;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.42552526792355255;  // std dev = 0.085, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( location(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.264492577517796;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.023413429813851305;  // std dev = 0.785, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.04798296561846082;  // std dev = 1.190, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2790897867628925;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.04325266822051529;  // std dev = 4.037, 173.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=46 */
%   | | | else return 0.01262609827112268;  // std dev = 3.145, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2542001261427871;  // std dev = 0.192, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.27291521559920445;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.22015951400723524;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5985718786883465;  // std dev = 0.809, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.16913215018672062;  // std dev = 0.643, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24393263863196044;  // std dev = 0.000209, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.10411007658886844;  // std dev = 3.176, 87.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1832778133916465;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.07410996344488194;  // std dev = 0.862, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3586478047305867;  // std dev = 2.371, 62.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   | | else return -0.14104122322475088;  // std dev = 0.382, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H) )
%   | | | then return 0.22282641548956292;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.09537727165400083;  // std dev = 2.346, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15727802614131867;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.2505333606879686;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19732079471816225;  // std dev = 0.066, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.08873892358957475;  // std dev = 0.303, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18030236430048033;  // std dev = 0.420, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -1.8411392548736604E-4;  // std dev = 1.427, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1901122550855161;  // std dev = 0.000174, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05544186693193767;  // std dev = 2.747, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
%   | | | else return 0.041766831391784845;  // std dev = 2.399, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13766130811921462;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.13706116906633609;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(C, F), interaction(D, C) )
%   | | | then return 0.13018320866727362;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.19176488172675427;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.17769307078210908;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.013338152149844438;  // std dev = 1.618, 97.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.07303044270892492;  // std dev = 0.816, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0015421107141118755;  // std dev = 3.031, 108.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=31 */
%   | | | else return 0.06933541102224819;  // std dev = 2.321, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.309', 'seconds']
Parameter learned model CLL:-0.181612 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.707, 1, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [3.231, 53, 13], 'false,false,true,false': [5.161, 84, 39], 'false,false,false,true': [2.558, 24, 9], 'false,false,false,false': [1.414, 6, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), location(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'location(A, F), location(E, F)', 'false,false': 'interaction(G, A)', 'false,false,true': 'interaction(G, H), recursion_proteinclass(H, B)', 'false,false,false': 'location(A, I)'}, {'true,true': [0.943, 1, 8], 'true,false': [0.062, 0, 7], 'false,true,true': [0.084, 0, 7], 'false,true,false': [0.0, 0, 0], 'false,false,true,true': [0.98, 1, 52], 'false,false,true,false': [0.087, 135, 0], 'false,false,false,true': [2.921, 38, 11], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.053, 0, 11], 'true,false': [0.061, 0, 4], 'false,true,true': [2.821, 54, 14], 'false,true,false,true': [0.997, 1, 42], 'false,true,false,false': [0.247, 92, 0], 'false,false,true,true': [0.739, 1, 3], 'false,false,true,false': [2.385, 17, 9], 'false,false,false,true': [1.219, 3, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(A, D), location(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'location(A, J), interaction(A, K)'}, {'true,true': [0.941, 1, 15], 'true,false': [0.0, 0, 0], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.198, 0, 6], 'false,true,false': [4.417, 153, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.763, 26, 11], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.028, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.069, 0, 6], 'false,true': [4.461, 148, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.065, 0, 2], 'false,false,false,true': [2.536, 23, 9], 'false,false,false,false': [1.415, 6, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), location(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'location(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'location(A, J), interaction(K, A)'}, {'true,true,true': [0.024, 0, 9], 'true,true,false': [0.085, 0, 4], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.0, 0, 0], 'true,false,false': [0.785, 1, 2], 'false,true': [1.19, 25, 5], 'false,false,true': [0.054, 0, 5], 'false,false,false,true': [4.037, 127, 46], 'false,false,false,false': [3.145, 45, 14]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.192, 0, 13], 'true,true,true,false': [0.09, 0, 3], 'true,true,false,true': [0.048, 0, 3], 'true,true,false,false': [0.809, 0, 33], 'true,false': [0.643, 87, 0], 'false,true': [0.000209, 0, 3], 'false,false,true': [3.176, 56, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'location(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'location(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.862, 1, 7], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.371, 6, 56], 'false,true,false': [0.382, 141, 0], 'false,false,true,true': [0.079, 0, 3], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.346, 22, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.018, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.066, 0, 5], 'false,true,true': [0.303, 18, 1], 'false,true,false,true': [0.42, 1, 6], 'false,true,false,false': [1.427, 45, 17], 'false,false,true': [0.000174, 0, 3], 'false,false,false,true': [2.747, 60, 31], 'false,false,false,false': [2.399, 27, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'location(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.0, 0, 8], 'true,true,true,false': [0.016, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.021, 0, 2], 'true,false': [0.04, 0, 3], 'false,true': [1.618, 73, 24], 'false,false,true': [0.816, 1, 3], 'false,false,false,true': [3.031, 77, 31], 'false,false,false,false': [2.321, 22, 12]}]
{'': [0.05859374999999978, 0.20831597222222256], 'false': [0.17283950617283939, 0.20029609639999377], 'false,false': [0.19943450631281395, 0.2040816326530607], 'false,false,false': [0.19834710743801665, 0.2222222222222221], 'false,false,true': [0.15817263544536217, 0.21653777513384936], 'false,true': [0.25, 0.12244897959183662], 'false,true,false': [1.4802973661668753e-16, 0.18750000000000006], 'true': [-1.4802973661668753e-16, 0.18750000000000006]}
{'': [0.0600544943623918, 0.20113934788691668], 'false': [0.0010103211667420453, 0.19515993153914213], 'false,false': [0.19958488601354885, 0.17745362949280988], 'false,false,true': [0.018120571030394887, 5.584851894667443e-05], 'false,false,false': [0.1741112161955815, 0.2222222222222222], 'true': [0.09876543209876552, 0.0005548461954014705], 'false,true': [0.0010103211667420453, nan]}
{'': [0.00043194728307292726, 0.15448543715766475], 'false': [0.1394586570904485, 0.22346606471450775], 'false,false': [0.2163599693315517, 0.24748302286000612], 'false,false,false': [0.24748302286000612, nan], 'false,false,true': [0.13650178926360057, 0.21876287284013204], 'false,true': [0.11706339734055493, 0.1491408298385937], 'false,true,false': [0.023127384608363954, 0.0006618982107349742], 'true': [0.0002526036348562612, 0.0009237307639342052]}
{'': [0.05533984540071177, 0.12166612417686767], 'false': [0.10412981828124256, 0.2012997535037109], 'false,false': [0.003745345635526457, 0.20533368752928377], 'false,false,false': [0.20637776964977367, 0.1875], 'false,true': [0.006098159470069943, 0.09659962737892802], 'true': [0.05533984540071177, nan], 'false,true,true': [0.0, 0.006538622231986165], 'false,false,true': [0.0, 0.0]}
{'': [0.00037282177864462384, 0.1155132106134863], 'false': [0.09753447571399004, 0.19718502813723215], 'false,false': [0.001887242200637666, 0.20570000797150403], 'false,false,false': [0.20096269647176807, 0.22231775775191664], 'false,false,true': [0.0, 0.002123147475717402], 'true': [8.464829914574719e-05, 0.0008024291575769079], 'true,true': [8.464829914574719e-05, nan]}
{'': [0.057427796453559055, 0.1054020937748752], 'false': [0.04716367906849143, 0.11189229052669344], 'false,false': [0.0005935814856970589, 0.11303878570138481], 'false,false,false': [0.09418999667421131, 0.16760782173740954], 'true': [0.0055883235237792145, 0.16974059978285658], 'true,false': [0.0, 0.20559833244606282], 'true,true': [6.597867850011152e-05, 0.0017988810503483388], 'true,false,true': [0.0, nan]}
{'': [0.11468632359937694, 0.11272139526871863], 'true': [0.04145914778097662, 0.004747382296493415], 'false': [1.4552796726944687e-08, 0.11595666113612685], 'false,false': [0.11595666113612685, nan], 'true,true': [0.0028605556099535467, 0.029172845915233392], 'true,true,false': [0.0007545487618735488, 0.019823334329333562], 'true,true,true': [0.0028254884667105163, 0.002727931389816964]}
{'': [0.049470273864665085, 0.0931417051907812], 'false': [0.08138065432733305, 0.15017283573688586], 'false,false': [0.002090364140414543, 0.16192191312340232], 'false,false,false': [0.16192191312340232, nan], 'false,true': [0.09066963823643906, 0.0010364039256088493], 'false,true,true': [nan, 0.09066963823643905], 'true': [0.0, 0.09298173799833048], 'false,false,true': [0.002090364140414543, nan]}
{'': [0.0010033946818038715, 0.07344604350110083], 'false': [0.030461364920214576, 0.10048129085482324], 'false,false': [1.0143250415521147e-08, 0.10236570052515856], 'false,false,false': [0.082930597632663, 0.14758336932306443], 'false,true': [0.0048465661143527634, 0.03504900433194364], 'false,true,false': [0.025222209509312015, 0.03285373360506286], 'true': [3.277725239549112e-05, 0.0011258793193256362], 'true,false': [0.0, 0.0008791256536755943]}
{'': [0.0006265231983513045, 0.0742945174085441], 'false': [0.02698587812384939, 0.10539852558620669], 'false,false': [0.16649111849137935, 0.10345170328437088], 'false,false,false': [0.0850554522651979, 0.1583913563326782], 'true': [0.000449513024025021, 0.0005419160203729151], 'true,true': [2.624075858896069e-05, 0.0009870007083219213], 'true,true,false': [0.0, 0.00021640024354795812], 'true,true,true': [0.0, 0.000130915659438572]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), location(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,false;interaction(G, A).;true;true
1;false,false,true;interaction(G, H), recursion_proteinclass(H, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), location(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;location(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;location(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 10.515
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( enzyme(A, H), interaction(A, I) )
%   | | | then return 0.2867203636709409;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.15360348055405712;  // std dev = 6.053, 176.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.7194734122109543;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7982236153363128;  // std dev = 1.384, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.1613120602024066;  // std dev = 0.165, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.33368926116361297;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.18131038404929956;  // std dev = 2.285, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5626476302778847;  // std dev = 0.023, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5753897189581847;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.04523827009354727;  // std dev = 1.484, 37.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=4 */
%   | | | else return 0.20954263217162686;  // std dev = 2.031, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6402947220379729;  // std dev = 1.382, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14318997684577497;  // std dev = 0.059, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.6159463602843245;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.0972866522034971;  // std dev = 2.362, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.3009376795996206;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.4220976372637173;  // std dev = 0.022, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.04751599548049699;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5665075241273092;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5996906752980762;  // std dev = 0.167, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10448070120932225;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.05667350715771408;  // std dev = 4.206, 174.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=49 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.46416934700898577;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.30016150620992893;  // std dev = 1.799, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.019746182087885117;  // std dev = 2.009, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31813245226061704;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2435577100424188;  // std dev = 0.352, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.4291240716321352;  // std dev = 0.931, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.13508998838453223;  // std dev = 0.161, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.0951011509534636;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.07171422488735082;  // std dev = 3.955, 145.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=47 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3525753507458716;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.031495893428191105;  // std dev = 2.230, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.17301484981783452;  // std dev = 1.664, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then return 0.28018704192286803;  // std dev = 0.042, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.2768154502913427;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.056517883041990645;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( complex(A, H), enzyme(A, I) )
%   | | then return -0.14206465773522464;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.07165235615234214;  // std dev = 0.477, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return 0.040794318778585824;  // std dev = 0.982, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.3430099775839352;  // std dev = 0.114, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.03172701055999088;  // std dev = 2.449, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | | else return 0.09405251594286253;  // std dev = 4.050, 138.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23509231518392845;  // std dev = 0.039, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.23771478457972703;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5352797876759555;  // std dev = 1.181, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.18492431286544053;  // std dev = 0.091, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2959960451707197;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.47525410715401106;  // std dev = 1.039, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return -0.16199039349447525;  // std dev = 0.188, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.12616924180596975;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.044757806476565694;  // std dev = 1.155, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(C, D), interaction(A, C) )
%   | then return 0.1685723254323166;  // std dev = 1.86e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E) )
%   | | then return 0.19292120528334142;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.016855852676677385;  // std dev = 0.886, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), location(A, I) )
%   | | | then return 0.3240093926334695;  // std dev = 0.327, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.41353619365204153;  // std dev = 0.378, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return -0.13337885469306698;  // std dev = 0.042, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return -1.7598295720039348E-4;  // std dev = 0.778, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.006499630227680113;  // std dev = 2.155, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.15286113517007124;  // std dev = 1.049, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15055330131066308;  // std dev = 0.012, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2017614228889029;  // std dev = 0.033, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.1389688667775856;  // std dev = 0.956, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.1375723624400311;  // std dev = 0.326, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.040678467611715084;  // std dev = 0.990, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | | | else return 0.006779268193207711;  // std dev = 0.952, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.24157658121776357;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, M), location(A, N) )
%   | | | then return -0.019602288405441974;  // std dev = 2.384, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.026363467345050722;  // std dev = 2.151, 93.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=32 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.13591295772152148;  // std dev = 0.014, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.1948736123730612;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( complex(A, E), location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(G, H) )
%   | | | then return 0.29158084510478893;  // std dev = 1.285, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.08281204986872703;  // std dev = 1.523, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( complex(I, E), interaction(J, I) )
%   | | | then return -0.1123391596302231;  // std dev = 0.216, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.319967806158634;  // std dev = 0.021, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.18246125529084276;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.025858016354933604;  // std dev = 1.206, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.03195281374717747;  // std dev = 2.734, 111.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=41 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '44.593', 'seconds']
Refined model CLL: -0.172513


******************************************
Best model found
******************************************
Results 

CLL : -0.185975 

AUC ROC : 0.984984 

AUC PR : 0.241484 

Precision : 0.150463 

Recall : 0.918728 

F1 : 0.258578 

Total Learning Time : 10.515 

Total Inference Time : 10.76105284690857 

Total revision time: 33.729757915496826
Best scored revision CLL: -0.172513


Results 

CLL : -0.185975 

AUC ROC : 0.984984 

AUC PR : 0.241484 

Precision : 0.150463 

Recall : 0.918728 

F1 : 0.258578 

Total Learning Time : 44.457236419677734 

Total Inference Time : 10.76105284690857 

