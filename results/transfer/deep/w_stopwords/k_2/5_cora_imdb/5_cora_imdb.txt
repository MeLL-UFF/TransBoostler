Starting experiment 5_cora_imdb 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.955
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.23398786127401014;  // std dev = 0.484, 149.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15469974389312915;  // std dev = 6.137, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13145824034939338;  // std dev = 6.137, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12181888866079373;  // std dev = 6.082, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0903872938264115;  // std dev = 6.128, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10083726595932964;  // std dev = 6.002, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07230943461018419;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.045147544125260376;  // std dev = 6.101, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.029843319162176547;  // std dev = 6.128, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06255345609466999;  // std dev = 0.482, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.107', 'seconds']
Parameter learned model CLL:-0.397245 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.484, 93, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.137, 115, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.137, 115, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.082, 109, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.128, 114, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.002, 101, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.476, 105, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.101, 111, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.128, 114, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.482, 96, 56], 'false': [0.0, 0, 0]}]
{'': [0.23458402774649806, nan]}
{'': [0.22023870592660902, nan]}
{'': [0.22023870592661018, nan]}
{'': [0.22420569329660428, nan]}
{'': [0.22089965397923755, nan]}
{'': [0.22946164144590006, nan]}
{'': [0.2268431001890363, nan]}
{'': [0.2228835741690271, nan]}
{'': [0.22089965397923755, nan]}
{'': [0.23268698060941895, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.678
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.94e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( female(A) )
%   | | then return 0.822434649385226;  // std dev = 0.186, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.8248156017661784;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7263798063385709;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.2736906118584958;  // std dev = 0.000386, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12688545124772663;  // std dev = 0.148, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.5344343149240924;  // std dev = 0.146, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.5357230087365744;  // std dev = 0.141, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return -0.11384572760576887;  // std dev = 0.136, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10132554999765259;  // std dev = 1.05e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.42919191292428965;  // std dev = 0.003, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.32836308678884785;  // std dev = 0.000661, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09246450864396576;  // std dev = 7.67e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.3286404675489069;  // std dev = 0.003, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.2605749916656825;  // std dev = 0.000774, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08499226220395019;  // std dev = 3.94e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( female(A) )
%   | | then return 0.26094143895367794;  // std dev = 3.33e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.2296506337791012;  // std dev = 0.116, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07861144260886734;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21624834287381142;  // std dev = 0.017, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.25670008813591555;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07310279912801045;  // std dev = 4.47e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.18184360336047387;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.21045369592960822;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0683014191748183;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( female(A) )
%   | | then return 0.14248255576225105;  // std dev = 0.062, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.1469358151484233;  // std dev = 0.060, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.064081048017421;  // std dev = 1.05e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1381726530930654;  // std dev = 0.010, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.20022334817707196;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.137', 'seconds']
Refined model CLL: -0.068306


******************************************
Best model found
******************************************
Results 

CLL : -0.085197 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.678 

Total Inference Time : 1.9954278469085693 

Total revision time: 8.873266799926757
Best scored revision CLL: -0.068306


Results 

CLL : -0.085197 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 8.884315593719482 

Total Inference Time : 1.9954278469085693 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.997
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1821712814682287;  // std dev = 0.468, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16033816247044258;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11323189512447053;  // std dev = 6.362, 192.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1626161559468125;  // std dev = 6.048, 157.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14682194937039272;  // std dev = 5.989, 152.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05306678446974098;  // std dev = 6.302, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.017456064235800314;  // std dev = 0.454, 200.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06119075432533685;  // std dev = 6.200, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05682565887008446;  // std dev = 6.162, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.006664784484357955;  // std dev = 0.461, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.965', 'seconds']
Parameter learned model CLL:-0.372975 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.468, 121, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.253, 120, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.362, 134, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.048, 99, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.989, 94, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.302, 126, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.454, 142, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.2, 114, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.162, 110, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.461, 131, 58], 'false': [0.0, 0, 0]}]
{'': [0.2190318654224278, nan]}
{'': [0.21966923368261723, nan]}
{'': [0.2108289930555565, nan]}
{'': [0.2329506268002762, nan]}
{'': [0.2359764542936275, nan]}
{'': [0.21585538752363073, nan]}
{'': [0.20589999999999978, nan]}
{'': [0.2234991887506773, nan]}
{'': [0.226048752834467, nan]}
{'': [0.21270401164581063, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 5.102
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14185106490048763;  // std dev = 8.69e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839136;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.11335423333197618;  // std dev = 0.115, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.3927940644608743;  // std dev = 0.111, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.4175135841583102;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else return -0.10150163892476215;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09261198688802529;  // std dev = 1.49e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.3225770149039675;  // std dev = 0.020, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1456521624437741;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2564462789542788;  // std dev = 0.017, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12923376475198375;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.0850766419432086;  // std dev = 0.004, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07872192552329603;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21065832853778818;  // std dev = 0.015, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11491977931478715;  // std dev = 0.003, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17775744017234904;  // std dev = 0.013, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10323981602068273;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07309730094389412;  // std dev = 0.008, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15324550588524216;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09397234889826397;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.06834422117908143;  // std dev = 0.005, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06416365710454651;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( female(A) )
%   | | then return 0.13628819648654167;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.12237741992082915;  // std dev = 0.048, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '23.550', 'seconds']
Refined model CLL: -0.065576


******************************************
Best model found
******************************************
Results 

CLL : -0.070181 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.102 

Total Inference Time : 3.1586716175079346 

Total revision time: 10.538034700393677
Best scored revision CLL: -0.065576


Results 

CLL : -0.070181 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.549083494186402 

Total Inference Time : 3.1586716175079346 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.694
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.18475443968666383;  // std dev = 0.469, 545.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15954972488778293;  // std dev = 10.958, 547.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1467225377541297;  // std dev = 10.873, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12510221152749754;  // std dev = 10.857, 527.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09527275097324314;  // std dev = 10.924, 540.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08333425960519746;  // std dev = 10.878, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0557286626287311;  // std dev = 0.468, 550.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06006935526177113;  // std dev = 10.847, 525.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05374121363544079;  // std dev = 10.798, 516.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04119339913931787;  // std dev = 0.475, 518.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.058', 'seconds']
Parameter learned model CLL:-0.410807 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.469, 367, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.958, 369, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.873, 352, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.857, 349, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.924, 362, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.878, 353, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.468, 372, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.847, 347, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.798, 338, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.475, 340, 178], 'false': [0.0, 0, 0]}]
{'': [0.21993434896052821, nan]}
{'': [0.21951879789712375, nan]}
{'': [0.22305446778212581, nan]}
{'': [0.22367847794073098, nan]}
{'': [0.22097393689986647, nan]}
{'': [0.22284642202290678, nan]}
{'': [0.21889586776859563, nan]}
{'': [0.22409433106575488, nan]}
{'': [0.2259629829938134, nan]}
{'': [0.22554821782620826, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 10.575
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 5.77e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.14185106490048807;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.1254446385283918;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1123163781936064;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.11231637819360678;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783617;  // std dev = 4.94e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return -0.10159632948783656;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926104;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.09269127618926065;  // std dev = 1.12e-07, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 7.45e-09, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.08518475138839678;  // std dev = 8.16e-08, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109169;  // std dev = 2.98e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.07877675473109144;  // std dev = 5.37e-08, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.07324622576333682;  // std dev = 1.03e-07, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0684269778442027;  // std dev = 1.05e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.06842697784420279;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.287', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.575 

Total Inference Time : 4.062627077102661 

Total revision time: 17.672647661209105
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 17.68369645500183 

Total Inference Time : 4.062627077102661 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.805
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.2270013941159059;  // std dev = 0.482, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16655652783435146;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16905781790845406;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11601746963140204;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09258801869571447;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03667906678492305;  // std dev = 5.612, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0730139042397646;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0777590205027781;  // std dev = 5.354, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09697466615905088;  // std dev = 5.204, 113.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05930274194798349;  // std dev = 0.486, 118.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.167', 'seconds']
Parameter learned model CLL:-0.424095 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.482, 77, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.457, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.342, 78, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.446, 87, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.457, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.612, 105, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.475, 86, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.354, 79, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.204, 68, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.486, 73, 45], 'false': [0.0, 0, 0]}]
{'': [0.2328003224939541, nan]}
{'': [0.22386794052801118, nan]}
{'': [0.23200475907198115, nan]}
{'': [0.22469008264462834, nan]}
{'': [0.22386794052801268, nan]}
{'': [0.20999999999999952, nan]}
{'': [0.22551133383835512, nan]}
{'': [0.2312044745057233, nan]}
{'': [0.23964288511238066, nan]}
{'': [0.23592358517667314, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.325
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.88e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839144;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360622;  // std dev = 6.99e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783619;  // std dev = 4.71e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09269127618926107;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839679;  // std dev = 2.79e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07877675473109175;  // std dev = 1.97e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 4.21e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A) )
%   | | then return -0.06419184008202625;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else return -0.15977324518990524;  // std dev = 0.253, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.899', 'seconds']
Refined model CLL: -0.066604


******************************************
Best model found
******************************************
Results 

CLL : -0.077777 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 3.325 

Total Inference Time : 1.4150524139404297 

Total revision time: 6.428195838928223
Best scored revision CLL: -0.066604


Results 

CLL : -0.077777 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 6.439244632720948 

Total Inference Time : 1.4150524139404297 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.902
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17957750652808366;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.19485338858098153;  // std dev = 5.367, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1550472013269667;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16876311058813237;  // std dev = 5.248, 116.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08392283868438469;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03455085530742917;  // std dev = 5.612, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07391341139974544;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04620490672626818;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.022470796890680066;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return -0.003374976946945097;  // std dev = 0.457, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.906', 'seconds']
Parameter learned model CLL:-0.375595 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 95, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.367, 80, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.413, 84, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.248, 71, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.477, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.612, 105, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.476, 85, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.477, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.535, 96, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.457, 106, 45], 'false': [0.0, 0, 0]}]
{'': [0.2181122448979602, nan]}
{'': [0.2304000000000012, nan]}
{'': [0.2271498107084917, nan]}
{'': [0.23744054696789438, nan]}
{'': [0.22222222222222118, nan]}
{'': [0.21000000000000119, nan]}
{'': [0.22633136094674544, nan]}
{'': [0.22222222222222213, nan]}
{'': [0.21729289271163352, nan]}
{'': [0.20920135081794533, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.785
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1254446385283914;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360624;  // std dev = 5.87e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783624;  // std dev = 4.83e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( female(A) )
%   | | then return 0.3958840044230538;  // std dev = 0.104, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.39494358791282524;  // std dev = 0.106, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09269127618926107;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32554308224152206;  // std dev = 0.000692, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14380481030989253;  // std dev = 9.45e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 3.49e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2584661529674337;  // std dev = 0.000604, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12695440695570268;  // std dev = 8.51e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109161;  // std dev = 5.05e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21208180454103082;  // std dev = 0.000527, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11359974979732741;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( female(A) )
%   | | then return 0.1787317331319569;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.16663345316025152;  // std dev = 0.057, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 4.47e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( female(A) )
%   | | then return 0.14255370696932157;  // std dev = 0.055, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.14374855069977305;  // std dev = 0.056, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13699852794207343;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.13565407010433977;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.06490567011262385;  // std dev = 0.070, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.001', 'seconds']
Refined model CLL: -0.069208


******************************************
Best model found
******************************************
Results 

CLL : -0.088218 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.785 

Total Inference Time : 1.204143762588501 

Total revision time: 6.8059157962799075
Best scored revision CLL: -0.069208


Results 

CLL : -0.088218 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 6.816964590072632 

Total Inference Time : 1.204143762588501 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.776
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.19347827641687884;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.17648619550613495;  // std dev = 6.063, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.14425624898268116;  // std dev = 6.092, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1207813292142417;  // std dev = 6.092, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.13066073451493665;  // std dev = 5.947, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06911683778616866;  // std dev = 6.119, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07859617304688567;  // std dev = 0.478, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.05601912290451431;  // std dev = 6.043, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0338322535396386;  // std dev = 6.092, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.045971632969018496;  // std dev = 0.479, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.882', 'seconds']
Parameter learned model CLL:-0.399113 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.472, 111, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.063, 107, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.092, 110, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.092, 110, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.947, 96, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.119, 113, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.478, 102, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.043, 105, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.092, 110, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.479, 101, 56], 'false': [0.0, 0, 0]}]
{'': [0.22288357416902752, nan]}
{'': [0.22552598893447154, nan]}
{'': [0.223544781535783, nan]}
{'': [0.22354478153578203, nan]}
{'': [0.23268698060941737, nan]}
{'': [0.2215608697174458, nan]}
{'': [0.2288094856593494, nan]}
{'': [0.226843100189037, nan]}
{'': [0.22354478153578125, nan]}
{'': [0.22946164144590006, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 1.916
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.74e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839133;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 8.82e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( female(A) )
%   | | then return 0.5093193460607749;  // std dev = 0.169, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else return 0.5553664367462845;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783626;  // std dev = 4.59e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( female(A) )
%   | | then return 0.428752755478324;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.3789221882828546;  // std dev = 0.147, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.0926912761892609;  // std dev = 6.14e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.3287741698931771;  // std dev = 0.003, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.24383919180358857;  // std dev = 0.000806, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 5.77e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( female(A) )
%   | | then return 0.24377390062873677;  // std dev = 0.086, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.24560002365850706;  // std dev = 0.083, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109164;  // std dev = 4.71e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21632226527501483;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.24407565313159937;  // std dev = 0.000396, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07324622576333721;  // std dev = 1.83e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.18189652408420232;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.2018665151734176;  // std dev = 0.000258, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.15624177952516674;  // std dev = 2.11e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.1353584412428645;  // std dev = 0.081, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else return -0.06842697784420265;  // std dev = 5.16e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13813969494763303;  // std dev = 0.010, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1919737175336012;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.007', 'seconds']
Refined model CLL: -0.069313


******************************************
Best model found
******************************************
Results 

CLL : -0.097965 

AUC ROC : 0.996995 

AUC PR : 0.899071 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.916 

Total Inference Time : 1.1088192462921143 

Total revision time: 4.6693542881011965
Best scored revision CLL: -0.069313


Results 

CLL : -0.097965 

AUC ROC : 0.996995 

AUC PR : 0.899071 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.683986751556397 

Total Inference Time : 1.1088192462921143 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.772
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1699768920887609;  // std dev = 0.463, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.17936807057640053;  // std dev = 6.172, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.17034767160132194;  // std dev = 6.091, 161.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.11776220793575398;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.10297134622087575;  // std dev = 6.182, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.04157816388259759;  // std dev = 6.377, 194.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0464099490916249;  // std dev = 0.463, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.049457794673849136;  // std dev = 6.262, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.03949782869048918;  // std dev = 6.262, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06539163204035135;  // std dev = 0.479, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.850', 'seconds']
Parameter learned model CLL:-0.379405 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.463, 128, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.172, 111, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.091, 103, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.209, 115, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.182, 112, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.377, 136, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.463, 128, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.262, 121, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.262, 121, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.479, 104, 58], 'false': [0.0, 0, 0]}]
{'': [0.2145912822291598, nan]}
{'': [0.2254122754805514, nan]}
{'': [0.23046950349137899, nan]}
{'': [0.22286077049016098, nan]}
{'': [0.2247750865051924, nan]}
{'': [0.2095865660537767, nan]}
{'': [0.21459128222916082, nan]}
{'': [0.21903186542242653, nan]}
{'': [0.2190318654224268, nan]}
{'': [0.22984301173601687, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 2.049
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048788;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839108;  // std dev = 7.45e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 9.06e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.10570650116607441;  // std dev = 0.479, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09234619057743447;  // std dev = 2.58e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08489180247415541;  // std dev = 4.47e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else return 0.24940347996003395;  // std dev = 0.337, 59.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.21071554342784166;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10673861878592547;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07878547386864548;  // std dev = 0.028, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07301029171589236;  // std dev = 2.36e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1777987007830079;  // std dev = 5.16e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09698044696237361;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15327634109362084;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.0888129867576313;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0684293979912936;  // std dev = 0.022, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06399704402295936;  // std dev = 2.58e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1344225941055284;  // std dev = 6.66e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08188338901244276;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.217', 'seconds']
Refined model CLL: -0.065183


******************************************
Best model found
******************************************
Results 

CLL : -0.075683 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 2.049 

Total Inference Time : 1.2429461479187012 

Total revision time: 4.946222682952881
Best scored revision CLL: -0.065183


Results 

CLL : -0.075683 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.960855146408081 

Total Inference Time : 1.2429461479187012 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.083
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.18716926781669824;  // std dev = 0.470, 541.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.15452474624311782;  // std dev = 10.996, 555.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1314173278997184;  // std dev = 11.001, 556.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1332927613299301;  // std dev = 10.814, 519.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08524071338515601;  // std dev = 11.019, 560.000 (wgt'ed) examples reached here.  /* #neg=382 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08267735820457985;  // std dev = 10.914, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06449037859268258;  // std dev = 0.470, 542.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.044080209421938445;  // std dev = 10.996, 555.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07260121220740882;  // std dev = 10.689, 497.000 (wgt'ed) examples reached here.  /* #neg=319 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.020713026372432608;  // std dev = 0.467, 554.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.643', 'seconds']
Parameter learned model CLL:-0.403192 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.47, 363, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.996, 377, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [11.001, 378, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.814, 341, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [11.019, 382, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.914, 360, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.47, 364, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.996, 377, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.689, 319, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.467, 376, 178], 'false': [0.0, 0, 0]}]
{'': [0.22076595337586277, nan]}
{'': [0.2178589400211052, nan]}
{'': [0.21765177785828868, nan]}
{'': [0.22534071376331571, nan]}
{'': [0.21682397959183974, nan]}
{'': [0.22138997526291945, nan]}
{'': [0.2205579989379211, nan]}
{'': [0.2178589400211039, nan]}
{'': [0.2298782635450511, nan]}
{'': [0.21806618097459585, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 4.855
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.66e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.14185106490048816;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.12544463852839186;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360636;  // std dev = 1.05e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.11231637819360674;  // std dev = 0.000, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1015963294878362;  // std dev = 3.94e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.10159632948783645;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.0926912761892607;  // std dev = 9.42e-08, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.08518475138839679;  // std dev = 8.43e-08, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0787767547310917;  // std dev = 2.98e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.07877675473109146;  // std dev = 4.94e-08, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.07324622576333698;  // std dev = 9.77e-08, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 1.97e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.06842697784420278;  // std dev = 0.000, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.020', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.855 

Total Inference Time : 1.9149460792541504 

Total revision time: 8.797024286270142
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.811656749725342 

Total Inference Time : 1.9149460792541504 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.65
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.19649479976116643;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.17085357989350725;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.14313502826458765;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.15291781514933228;  // std dev = 5.329, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07848319460547723;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.054830265976839494;  // std dev = 5.562, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07785786664675956;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.10407772856081784;  // std dev = 5.248, 116.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.030343668829932297;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.042378017352968686;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.181', 'seconds']
Parameter learned model CLL:-0.404712 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.473, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.457, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.467, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.329, 77, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.526, 95, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.562, 99, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.476, 85, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.248, 71, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.467, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.478, 82, 45], 'false': [0.0, 0, 0]}]
{'': [0.2238679405280127, nan]}
{'': [0.2238679405280111, nan]}
{'': [0.22304522165292887, nan]}
{'': [0.2328003224939537, nan]}
{'': [0.2181122448979604, nan]}
{'': [0.21484375000000053, nan]}
{'': [0.22633136094674572, nan]}
{'': [0.23744054696789532, nan]}
{'': [0.2230452216529282, nan]}
{'': [0.2287804575609156, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 1.56
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 6.66e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839152;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360622;  // std dev = 6.83e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783626;  // std dev = 4.71e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926105;  // std dev = 1.05e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 3.65e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109164;  // std dev = 4.41e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06842697784420267;  // std dev = 3.80e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06419184008202625;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.12299598166967574;  // std dev = 0.045, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.856', 'seconds']
Refined model CLL: -0.06655


******************************************
Best model found
******************************************
Results 

CLL : -0.073499 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.56 

Total Inference Time : 0.927349328994751 

Total revision time: 3.8433730220794677
Best scored revision CLL: -0.06655


Results 

CLL : -0.073499 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 3.858005485534668 

Total Inference Time : 0.927349328994751 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.607
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1561621801326247;  // std dev = 0.457, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.18961897396812827;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.18254769590227218;  // std dev = 5.316, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.11937455167649322;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08367115716193148;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07280257815329974;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09023651141623648;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.04297849830519768;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.036538554850573966;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.047085662749599015;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.309', 'seconds']
Parameter learned model CLL:-0.39423 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.457, 106, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.402, 83, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.316, 76, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.457, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.516, 94, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.497, 92, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.48, 80, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.487, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.477, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.477, 83, 45], 'false': [0.0, 0, 0]}]
{'': [0.20920135081794763, nan]}
{'': [0.22796630859375108, nan]}
{'': [0.2335906017348537, nan]}
{'': [0.22386794052801204, nan]}
{'': [0.21893276745510137, nan]}
{'': [0.22057648249773537, nan]}
{'': [0.23039999999999947, nan]}
{'': [0.2213992214532866, nan]}
{'': [0.2222222222222214, nan]}
{'': [0.22796630859374978, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 1.715
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.16e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.6490635746493422;  // std dev = 0.234, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5638300726752234;  // std dev = 0.058, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.225090913419907;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.1123163781936062;  // std dev = 8.16e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783617;  // std dev = 5.77e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( female(A) )
%   | | then return 0.4154567100835162;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.40602397318077205;  // std dev = 0.125, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3279214769428988;  // std dev = 0.059, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.2576379422635744;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09326090014267609;  // std dev = 0.052, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2601066364661987;  // std dev = 0.052, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.21062800464844594;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08580840447749993;  // std dev = 0.048, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2132498359026198;  // std dev = 0.045, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.17593650535202843;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.08053890937163191;  // std dev = 0.199, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17966148766624354;  // std dev = 0.039, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.15244114167653516;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07519834940664226;  // std dev = 0.188, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1546920933384293;  // std dev = 0.035, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.13284922130354251;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06905995634771181;  // std dev = 0.056, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06385981585998833;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1355297350214898;  // std dev = 0.031, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11660455438678896;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.215', 'seconds']
Refined model CLL: -0.065919


******************************************
Best model found
******************************************
Results 

CLL : -0.070774 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.715 

Total Inference Time : 0.9532368183135986 

Total revision time: 3.973620388031006
Best scored revision CLL: -0.065919


Results 

CLL : -0.070774 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.988252851486206 

Total Inference Time : 0.9532368183135986 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.985
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1781489350995135;  // std dev = 0.466, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1644620208053822;  // std dev = 6.128, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1444663443631361;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15163818195939582;  // std dev = 5.970, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12054039903543562;  // std dev = 5.991, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08045697341006318;  // std dev = 6.073, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.060528690309563184;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0025665291944220185;  // std dev = 6.298, 192.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.01806440855955694;  // std dev = 6.226, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06561574758948654;  // std dev = 0.480, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.973', 'seconds']
Parameter learned model CLL:-0.380474 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.466, 119, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.128, 114, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.11, 112, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.97, 98, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.991, 100, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.073, 108, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.473, 110, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.298, 136, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.226, 126, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.48, 100, 56], 'false': [0.0, 0, 0]}]
{'': [0.2176000000000004, nan]}
{'': [0.22089965397923905, nan]}
{'': [0.22222222222222465, nan]}
{'': [0.2314049586776849, nan]}
{'': [0.23011176857330823, nan]}
{'': [0.2248661511005373, nan]}
{'': [0.22354478153578233, nan]}
{'': [0.20659722222222107, nan]}
{'': [0.2130177514792892, nan]}
{'': [0.23011176857330817, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.433
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.60e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( female(A) )
%   | | then return 0.7891834178581324;  // std dev = 0.253, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1254446385283913;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7260819095775913;  // std dev = 0.051, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.2736733312606816;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 9.06e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5619172107216208;  // std dev = 0.063, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.222755971446696;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4224302367666792;  // std dev = 0.063, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.18919566645769476;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1079250700860644;  // std dev = 0.496, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09216040184816944;  // std dev = 8.36e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( female(A) )
%   | | then return 0.33189808620662453;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.3007546256592768;  // std dev = 0.086, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08473401876627056;  // std dev = 3.80e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2590309646347936;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.20660253110958587;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07838958098384984;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( female(A) )
%   | | then return 0.18901530857973411;  // std dev = 0.098, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else return 0.20943012701946181;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.18102100295707155;  // std dev = 0.032, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.20446868958757086;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07423542017813367;  // std dev = 0.150, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15571733691023706;  // std dev = 0.029, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.16986287878727843;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then return -0.06804872291306703;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else return -0.14023494369173284;  // std dev = 0.204, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06368903777398624;  // std dev = 0.008, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13632605696147002;  // std dev = 0.026, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14723397112957062;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.005', 'seconds']
Refined model CLL: -0.06686


******************************************
Best model found
******************************************
Results 

CLL : -0.085545 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.433 

Total Inference Time : 2.065857172012329 

Total revision time: 8.757093685150146
Best scored revision CLL: -0.06686


Results 

CLL : -0.085545 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 8.770365970611572 

Total Inference Time : 2.065857172012329 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.993
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.20134420137170295;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15585277696608024;  // std dev = 6.262, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.148069626694951;  // std dev = 6.191, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12412857432265864;  // std dev = 6.191, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08909701913055072;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08203933031870127;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03621721878507676;  // std dev = 0.461, 190.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03728580108712821;  // std dev = 6.310, 185.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.057432517243197374;  // std dev = 6.182, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.01965773173354891;  // std dev = 0.465, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.064', 'seconds']
Parameter learned model CLL:-0.370346 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.475, 111, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.262, 121, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.191, 113, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.191, 113, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.253, 120, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.209, 115, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.461, 132, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.31, 127, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.182, 112, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.465, 126, 58], 'false': [0.0, 0, 0]}]
{'': [0.22541227548055062, nan]}
{'': [0.2190318654224265, nan]}
{'': [0.224137341404191, nan]}
{'': [0.22413734140419417, nan]}
{'': [0.21966923368261776, nan]}
{'': [0.22286077049016179, nan]}
{'': [0.21207756232687103, nan]}
{'': [0.21522279035792413, nan]}
{'': [0.22477508650519085, nan]}
{'': [0.21585538752362865, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.334
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.69e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12688058250302703;  // std dev = 0.154, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11217329223492933;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10147838526611414;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09259231611907884;  // std dev = 2.18e-05, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.08510076484096865;  // std dev = 2.02e-05, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0787046416505957;  // std dev = 1.88e-05, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07318380945458691;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( female(A) )
%   | | then return 0.17709649774527744;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.1645793615698468;  // std dev = 0.055, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06837234092849;  // std dev = 1.49e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15380977956027508;  // std dev = 0.006, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08596867694423446;  // std dev = 0.000850, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13483870751892055;  // std dev = 0.005, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07922123172510583;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.06438191741710862;  // std dev = 0.020, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.253', 'seconds']
Refined model CLL: -0.064748


******************************************
Best model found
******************************************
Results 

CLL : -0.071725 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.334 

Total Inference Time : 2.8286988735198975 

Total revision time: 9.437329389572144
Best scored revision CLL: -0.064748


Results 

CLL : -0.071725 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 9.45060167503357 

Total Inference Time : 2.8286988735198975 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.691
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16933774628831902;  // std dev = 0.463, 572.000 (wgt'ed) examples reached here.  /* #neg=394 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17274427264618292;  // std dev = 10.868, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15887027885489124;  // std dev = 10.776, 512.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13469427710186146;  // std dev = 10.765, 510.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10117047373948765;  // std dev = 10.847, 525.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08299299791450551;  // std dev = 10.841, 524.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06362983757960967;  // std dev = 0.473, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04581182337918802;  // std dev = 10.909, 537.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.01828165993253783;  // std dev = 11.055, 568.000 (wgt'ed) examples reached here.  /* #neg=390 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.02829020117647721;  // std dev = 0.469, 544.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.024', 'seconds']
Parameter learned model CLL:-0.403093 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.463, 394, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.868, 351, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.776, 334, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.765, 332, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.847, 347, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.841, 346, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.473, 351, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.909, 359, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [11.055, 390, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.469, 366, 178], 'false': [0.0, 0, 0]}]
{'': [0.21435033497970848, nan]}
{'': [0.223262495488507, nan]}
{'': [0.22679138183593647, nan]}
{'': [0.22720492118415941, nan]}
{'': [0.224094331065759, nan]}
{'': [0.22430219684167635, nan]}
{'': [0.22326249548851204, nan]}
{'': [0.22159802197878872, nan]}
{'': [0.2151730807379526, nan]}
{'': [0.22014219290657333, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 10.78
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.14185106490048818;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.12544463852839183;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360628;  // std dev = 4.34e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.11231637819360686;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1015963294878362;  // std dev = 3.94e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.10159632948783656;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.09269127618926064;  // std dev = 2.98e-08, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.08518475138839679;  // std dev = 8.43e-08, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.07877675473109144;  // std dev = 5.96e-08, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.07324622576333684;  // std dev = 9.77e-08, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420267;  // std dev = 3.57e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return -0.06842697784420286;  // std dev = 0.000, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.308', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.78 

Total Inference Time : 4.384803295135498 

Total revision time: 18.195907159805298
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 18.209179445266724 

Total Inference Time : 4.384803295135498 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.813
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.18661608838418378;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16721400147080104;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0942184060376183;  // std dev = 5.673, 158.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11587706353877321;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09862098194910526;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0832987407131721;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07490525394358469;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09886009465070239;  // std dev = 5.316, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03298985800489695;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 2.134625919920271E-5;  // std dev = 0.458, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.884', 'seconds']
Parameter learned model CLL:-0.376347 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.47, 92, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.477, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.673, 113, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.526, 95, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.516, 94, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.507, 93, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.316, 76, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.507, 93, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.458, 105, 45], 'false': [0.0, 0, 0]}]
{'': [0.22057648249773662, nan]}
{'': [0.22222222222222154, nan]}
{'': [0.203693318378464, nan]}
{'': [0.2181122448979584, nan]}
{'': [0.21893276745510037, nan]}
{'': [0.2197542533081294, nan]}
{'': [0.22222222222222088, nan]}
{'': [0.2335906017348535, nan]}
{'': [0.21975425330812898, nan]}
{'': [0.20999999999999988, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.104
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.88e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12724791700816648;  // std dev = 0.154, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11213671443955435;  // std dev = 4.71e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10144823067153112;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09256726044109634;  // std dev = 4.47e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.08507902148969727;  // std dev = 3.49e-05, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07868639539273034;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.073167833726572;  // std dev = 2.36e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( female(A) )
%   | | then return 0.1562346041195595;  // std dev = 0.069, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.16994384850217423;  // std dev = 0.247, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06835835547289275;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15410971791091824;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08529624699394557;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06413129105953165;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13507251226348066;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07883108528421763;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.350', 'seconds']
Refined model CLL: -0.067034


******************************************
Best model found
******************************************
Results 

CLL : -0.075535 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 3.104 

Total Inference Time : 1.2907660007476807 

Total revision time: 6.106947128295898
Best scored revision CLL: -0.067034


Results 

CLL : -0.075535 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 6.120219413757324 

Total Inference Time : 1.2907660007476807 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.778
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17957750652808366;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16094034510272065;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17730711648801256;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09531978751178646;  // std dev = 5.562, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.089919162655492;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0931970298929308;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09179308541149635;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.013398202560110685;  // std dev = 5.612, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08565097624907443;  // std dev = 5.303, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.014155019847605286;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.289', 'seconds']
Parameter learned model CLL:-0.388477 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 95, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.507, 93, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.342, 78, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.562, 99, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.516, 94, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.435, 86, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.48, 80, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.612, 105, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.303, 75, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 95, 45], 'false': [0.0, 0, 0]}]
{'': [0.2181122448979602, nan]}
{'': [0.2197542533081299, nan]}
{'': [0.23200475907198026, nan]}
{'': [0.21484374999999947, nan]}
{'': [0.21893276745510148, nan]}
{'': [0.22551133383835537, nan]}
{'': [0.23040000000000074, nan]}
{'': [0.2100000000000003, nan]}
{'': [0.23437500000000017, nan]}
{'': [0.21811224489795916, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.355
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.43e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( female(A) )
%   | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.7748156017661786;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7275438991647452;  // std dev = 0.055, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.2763996342331301;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1270016512816161;  // std dev = 0.138, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11216123550754752;  // std dev = 6.50e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5633914459967004;  // std dev = 0.069, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.2138985475927123;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4235514458095562;  // std dev = 0.068, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1885519170297935;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10263838534012981;  // std dev = 0.101, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.324845648979148;  // std dev = 0.061, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.15766211183737863;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09542775755598495;  // std dev = 0.240, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08478191756127369;  // std dev = 1.83e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return 0.25801318457466815;  // std dev = 0.054, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07843073854417776;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21177592045648355;  // std dev = 0.047, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.17343870371351214;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then return 0.17132593116042524;  // std dev = 0.333, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | else return -0.07435279279756239;  // std dev = 0.112, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15482390542345104;  // std dev = 0.037, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.17194349939409062;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07033957557774578;  // std dev = 0.149, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06374571657741661;  // std dev = 2.47e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1356327112189986;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14988984966589713;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.182', 'seconds']
Refined model CLL: -0.067431


******************************************
Best model found
******************************************
Results 

CLL : -0.076305 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.355 

Total Inference Time : 1.6483759880065918 

Total revision time: 6.700160129547119
Best scored revision CLL: -0.067431


Results 

CLL : -0.076305 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.713432415008545 

Total Inference Time : 1.6483759880065918 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.999
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.24171057893512993;  // std dev = 0.486, 146.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12398009942318299;  // std dev = 6.270, 188.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1665462290948283;  // std dev = 5.991, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12818567273606468;  // std dev = 6.043, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06529435201648547;  // std dev = 6.226, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14828828106925618;  // std dev = 5.783, 139.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03444382673014568;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.057036219495521276;  // std dev = 6.043, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.026720465537708443;  // std dev = 6.128, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.041639278603297754;  // std dev = 0.477, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.983', 'seconds']
Parameter learned model CLL:-0.394471 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.486, 90, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.27, 132, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.991, 100, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.043, 105, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.226, 126, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.783, 83, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.466, 120, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.043, 105, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.128, 114, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.477, 104, 56], 'false': [0.0, 0, 0]}]
{'': [0.2364421092137363, nan]}
{'': [0.20914440923494754, nan]}
{'': [0.23011176857330673, nan]}
{'': [0.2268431001890351, nan]}
{'': [0.21301775147929172, nan]}
{'': [0.2405672584234752, nan]}
{'': [0.21694214876033124, nan]}
{'': [0.22684310018903678, nan]}
{'': [0.22089965397923964, nan]}
{'': [0.22750000000000026, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.109
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 6.32e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( female(A) )
%   | | then return 0.822434649385226;  // std dev = 0.186, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.8248156017661784;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839136;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7263798063385707;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.27361174347778155;  // std dev = 0.000580, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 8.94e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5621648003949385;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.2227712162539723;  // std dev = 0.000337, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.42257487269269217;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.18634323189199958;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10608792295774269;  // std dev = 0.474, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09231422539453144;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32414516131455223;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.15993607146626002;  // std dev = 0.000369, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08486465881088096;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2575136152315955;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.13961077324174825;  // std dev = 0.000342, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07850182752680274;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2114102791788665;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12348453886867622;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07300767481152114;  // std dev = 6.58e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17830763584124001;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11096300676740417;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0682181290977637;  // std dev = 4.71e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15366201281572128;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10039378574189595;  // std dev = 0.000236, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06400754070380187;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else return 0.13075345067662061;  // std dev = 0.224, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.267', 'seconds']
Refined model CLL: -0.066315


******************************************
Best model found
******************************************
Results 

CLL : -0.086001 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.109 

Total Inference Time : 1.7397000789642334 

Total revision time: 8.128618438720704
Best scored revision CLL: -0.066315


Results 

CLL : -0.086001 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 24.179528911590577 

Total Inference Time : 1.7397000789642334 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.983
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.20134420137170295;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14034106889523762;  // std dev = 6.333, 188.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11335811508933648;  // std dev = 6.362, 192.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15580387323309136;  // std dev = 6.081, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0961349530045593;  // std dev = 6.236, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08037813620415055;  // std dev = 6.227, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08084180479516014;  // std dev = 0.476, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03437977807488805;  // std dev = 6.294, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04567874183548165;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return -0.006138828291469681;  // std dev = 0.455, 198.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.102', 'seconds']
Parameter learned model CLL:-0.367806 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.475, 111, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.333, 130, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.362, 134, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.081, 102, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.236, 118, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.227, 117, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.476, 109, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.294, 125, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.209, 115, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.455, 140, 58], 'false': [0.0, 0, 0]}]
{'': [0.22541227548055062, nan]}
{'': [0.21333182435491063, nan]}
{'': [0.21082899305555283, nan]}
{'': [0.23109374999999832, nan]}
{'': [0.22094524793388237, nan]}
{'': [0.22158367346938798, nan]}
{'': [0.22668435583921884, nan]}
{'': [0.216488996386872, nan]}
{'': [0.22286077049015943, nan]}
{'': [0.20712172227323647, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.194
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.43e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839127;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783627;  // std dev = 4.21e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09269127618926083;  // std dev = 7.30e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 5.27e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109155;  // std dev = 6.99e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.07324622576333721;  // std dev = 1.83e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06842697784420267;  // std dev = 4.59e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.934', 'seconds']
Refined model CLL: -0.065332


******************************************
Best model found
******************************************
Results 

CLL : -0.08154 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.194 

Total Inference Time : 2.0659358501434326 

Total revision time: 8.548411800384521
Best scored revision CLL: -0.065332


Results 

CLL : -0.08154 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 24.599322273254394 

Total Inference Time : 2.0659358501434326 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.734
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.20785423961817195;  // std dev = 0.477, 509.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1869177823810794;  // std dev = 10.707, 500.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14931568122814606;  // std dev = 10.787, 514.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10254749511282248;  // std dev = 10.968, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09036616232162505;  // std dev = 10.919, 539.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06572694013878011;  // std dev = 10.982, 552.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06137684268682973;  // std dev = 0.471, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04249555743624383;  // std dev = 10.968, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04928582661487998;  // std dev = 10.841, 524.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.028960482565897682;  // std dev = 0.470, 540.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.003', 'seconds']
Parameter learned model CLL:-0.405422 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.477, 331, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.707, 322, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.787, 336, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.968, 371, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.919, 361, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.982, 374, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 360, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.968, 371, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.841, 346, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.47, 362, 178], 'false': [0.0, 0, 0]}]
{'': [0.2274115045101757, nan]}
{'': [0.22926399999999927, nan]}
{'': [0.2263773864857922, nan]}
{'': [0.21910345353864183, nan]}
{'': [0.22118194553922005, nan]}
{'': [0.21848088636841023, nan]}
{'': [0.22138997526291687, nan]}
{'': [0.21910345353863914, nan]}
{'': [0.2243021968416715, nan]}
{'': [0.2209739368998595, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 11.233
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.14185106490048804;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( actor(A), director(B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839127;  // std dev = 3.94e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.125444638528392;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360626;  // std dev = 4.71e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.11231637819360678;  // std dev = 0.000, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( actor(A), director(B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783626;  // std dev = 2.36e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return -0.10159632948783662;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926103;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.09269127618926067;  // std dev = 6.99e-08, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839678;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return -0.08518475138839679;  // std dev = 8.69e-08, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109172;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.07877675473109147;  // std dev = 5.37e-08, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333703;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.0732462257633369;  // std dev = 1.07e-07, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420262;  // std dev = 1.49e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return -0.0684269778442028;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202616;  // std dev = 5.27e-09, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '36.630', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.233 

Total Inference Time : 4.442286014556885 

Total revision time: 18.739962808609008
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 34.79087328147888 

Total Inference Time : 4.442286014556885 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.777
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.21529179224236955;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.18143278186794976;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15426563477591065;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12869090421089868;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07094927035486914;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06439483707894758;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0939478638465399;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.005154678012277991;  // std dev = 5.628, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07094083920933547;  // std dev = 5.354, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.014587930110652637;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.409', 'seconds']
Parameter learned model CLL:-0.389597 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.479, 81, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.402, 83, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.402, 83, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.402, 83, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.544, 97, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.516, 94, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.482, 78, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.628, 107, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.354, 79, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 95, 45], 'false': [0.0, 0, 0]}]
{'': [0.2295918367346948, nan]}
{'': [0.22796630859374967, nan]}
{'': [0.22796630859375114, nan]}
{'': [0.22796630859374914, nan]}
{'': [0.2164749057726638, nan]}
{'': [0.21893276745509987, nan]}
{'': [0.23200475907198112, nan]}
{'': [0.20840547091412648, nan]}
{'': [0.23120447450572382, nan]}
{'': [0.21811224489795955, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.424
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.30e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.11413411652904341;  // std dev = 0.143, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10143053641422388;  // std dev = 2.98e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( female(A) )
%   | | then return 0.4175135841583098;  // std dev = 4.21e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.388674144511302;  // std dev = 0.119, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32548322033124727;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1436717570310515;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09309790647827292;  // std dev = 0.050, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08502446700371465;  // std dev = 3.33e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.25842733046123567;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12688434483240058;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0786391039927754;  // std dev = 5.16e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21205562268224035;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1128961146395142;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17878082126032935;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10207395101118018;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07729174795835933;  // std dev = 0.325, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15402087992975516;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09363848917517387;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.07140412279604419;  // std dev = 0.310, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06366623116105492;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13500353106520527;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08593744182945126;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.687', 'seconds']
Refined model CLL: -0.065711


******************************************
Best model found
******************************************
Results 

CLL : -0.069758 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.424 

Total Inference Time : 1.6631596088409424 

Total revision time: 6.774973417282105
Best scored revision CLL: -0.065711


Results 

CLL : -0.069758 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 22.825883890151978 

Total Inference Time : 1.6631596088409424 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.829
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.19396983062190035;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.171205362570404;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1592144635800822;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10085056950524511;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15193532381251365;  // std dev = 5.248, 116.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0816762489708291;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03401684498306843;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06674349961912718;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03945598765054489;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0651737815786576;  // std dev = 0.484, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.922', 'seconds']
Parameter learned model CLL:-0.407109 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.472, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.457, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.402, 83, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.535, 96, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.248, 71, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.424, 85, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.464, 98, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.39, 82, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.446, 87, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.484, 75, 45], 'false': [0.0, 0, 0]}]
{'': [0.22304522165293034, nan]}
{'': [0.22386794052801295, nan]}
{'': [0.2279663085937503, nan]}
{'': [0.21729289271163385, nan]}
{'': [0.23744054696789646, nan]}
{'': [0.2263313609467447, nan]}
{'': [0.21565846740672037, nan]}
{'': [0.22878045756091572, nan]}
{'': [0.22469008264462872, nan]}
{'': [0.2343749999999993, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.62
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839152;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1123163781936062;  // std dev = 8.30e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( female(A) )
%   | | then return 0.5275463194571225;  // std dev = 0.133, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.5263367491402023;  // std dev = 0.136, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.42443890881096535;  // std dev = 0.000991, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.17648381210626482;  // std dev = 0.000176, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1026498447666654;  // std dev = 0.074, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3254106600776191;  // std dev = 0.000890, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.15230494046000728;  // std dev = 0.000127, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09343851996665203;  // std dev = 0.069, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08504452606302507;  // std dev = 2.36e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2583759398349642;  // std dev = 0.000777, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.13361759941677728;  // std dev = 0.000162, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.19813208837274857;  // std dev = 0.066, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.19773144288068464;  // std dev = 0.067, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( actor(A) )
%   | | then return -0.07865633243253002;  // std dev = 3.16e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else return -0.22033230028129394;  // std dev = 0.430, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1808293228463784;  // std dev = 0.000800, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14119919676858098;  // std dev = 0.000178, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A) )
%   | | then return -0.07314174981356711;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( female(B) )
%   | | | then return -0.06409921991117011;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.18217791697507482;  // std dev = 0.409, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0678801891520605;  // std dev = 0.023, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1555697248482684;  // std dev = 0.000709, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12498714242904829;  // std dev = 0.000176, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06352482536588279;  // std dev = 0.024, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13620929547228466;  // std dev = 0.000635, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1119060894570688;  // std dev = 0.000139, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '22.676', 'seconds']
Refined model CLL: -0.066


******************************************
Best model found
******************************************
Results 

CLL : -0.073961 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.62 

Total Inference Time : 1.626966953277588 

Total revision time: 7.016247867584228
Best scored revision CLL: -0.066


Results 

CLL : -0.073961 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 23.0671583404541 

Total Inference Time : 1.626966953277588 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.935
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.20814893509951354;  // std dev = 0.477, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.19688944746239836;  // std dev = 5.958, 153.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14077709529613314;  // std dev = 6.082, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11335272270108387;  // std dev = 6.101, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09518172323727976;  // std dev = 6.092, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07129966670656533;  // std dev = 6.119, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0478248573748678;  // std dev = 0.467, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.032754044802995465;  // std dev = 6.187, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return -0.013104411559087812;  // std dev = 6.362, 202.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06904835205303701;  // std dev = 0.479, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.090', 'seconds']
Parameter learned model CLL:-0.373473 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.477, 104, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.958, 97, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.082, 109, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.101, 111, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.092, 110, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.119, 113, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 118, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.187, 121, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.362, 146, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.479, 101, 56], 'false': [0.0, 0, 0]}]
{'': [0.22750000000000026, nan]}
{'': [0.23204750309709854, nan]}
{'': [0.22420569329660414, nan]}
{'': [0.22288357416902527, nan]}
{'': [0.22354478153578092, nan]}
{'': [0.22156086971744865, nan]}
{'': [0.2182586867485798, nan]}
{'': [0.21628523093619217, nan]}
{'': [0.20037251249877544, nan]}
{'': [0.22946164144589942, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.315
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 6.66e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( female(A) )
%   | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.7936328060672536;  // std dev = 0.246, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839136;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7261202067615339;  // std dev = 0.048, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.2779595498936493;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1123163781936062;  // std dev = 7.74e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5619492569679123;  // std dev = 0.059, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.223507714812538;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783631;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.42244913342921375;  // std dev = 0.059, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.18858899609460172;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09269127618926092;  // std dev = 5.77e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32408216681327945;  // std dev = 0.053, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.16069048279844259;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0851847513883968;  // std dev = 5.37e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2574838809568876;  // std dev = 0.046, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.13761137381022007;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.19395505782129602;  // std dev = 0.062, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.21657855870709417;  // std dev = 3.94e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109162;  // std dev = 4.94e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else return -0.19621753582472745;  // std dev = 0.643, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07285126484642314;  // std dev = 0.017, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17911519433087478;  // std dev = 0.023, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14558356990258772;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06806024526757609;  // std dev = 0.017, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15427494188261406;  // std dev = 0.020, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12933887232895816;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06379407556255343;  // std dev = 0.018, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else if ( female(A) )
%   | | then return 0.12371359717351085;  // std dev = 0.047, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.13756228375773094;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.424', 'seconds']
Refined model CLL: -0.067231


******************************************
Best model found
******************************************
Results 

CLL : -0.088309 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.315 

Total Inference Time : 1.7956392765045166 

Total revision time: 8.39861273765564
Best scored revision CLL: -0.067231


Results 

CLL : -0.088309 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 8.409486770629883 

Total Inference Time : 1.7956392765045166 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.926
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.20754652546095936;  // std dev = 0.477, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17213748038194515;  // std dev = 6.182, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13872128287681176;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13211869965269601;  // std dev = 6.143, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10261046159101438;  // std dev = 6.172, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11436609304021676;  // std dev = 6.025, 155.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08937696768111021;  // std dev = 0.483, 156.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0076330788203970495;  // std dev = 6.333, 188.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.017956373101524068;  // std dev = 6.278, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.027045754970243894;  // std dev = 0.471, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.110', 'seconds']
Parameter learned model CLL:-0.387231 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.477, 108, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.182, 112, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.218, 116, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.143, 108, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.172, 111, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.025, 97, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.483, 98, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.333, 130, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.278, 123, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 116, 58], 'false': [0.0, 0, 0]}]
{'': [0.22731891421106132, nan]}
{'': [0.22477508650519126, nan]}
{'': [0.2222222222222211, nan]}
{'': [0.22731891421106298, nan]}
{'': [0.22541227548055143, nan]}
{'': [0.23417273673257125, nan]}
{'': [0.23356344510190774, nan]}
{'': [0.213331824354913, nan]}
{'': [0.2177589206678673, nan]}
{'': [0.22222222222222238, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.39
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.69e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1254446385283913;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.11231637819360622;  // std dev = 8.30e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.3915580884760029;  // std dev = 0.113, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return -0.1015963294878364;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09269127618926087;  // std dev = 6.75e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32443366566687276;  // std dev = 0.021, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14491959396749007;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25771215743115156;  // std dev = 0.018, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12738661771346682;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08909263215229804;  // std dev = 0.385, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07849362242517603;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21155144297487793;  // std dev = 0.016, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11388571527317741;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1784117334876524;  // std dev = 0.014, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10288847584446477;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.07295522008125746;  // std dev = 0.006, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15374135172545825;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09366685558230248;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.06816814041034508;  // std dev = 0.005, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1347856115257615;  // std dev = 0.011, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08563149922628452;  // std dev = 0.002, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.06748503402148688;  // std dev = 0.402, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.738', 'seconds']
Refined model CLL: -0.064629


******************************************
Best model found
******************************************
Results 

CLL : -0.071073 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.39 

Total Inference Time : 3.0694315433502197 

Total revision time: 9.675247922897338
Best scored revision CLL: -0.064629


Results 

CLL : -0.071073 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 9.686121955871581 

Total Inference Time : 3.0694315433502197 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.694
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.19210765930213453;  // std dev = 0.472, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1905482788612372;  // std dev = 10.695, 498.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12797071322412945;  // std dev = 10.977, 551.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13374640756102216;  // std dev = 10.759, 509.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08714270396016074;  // std dev = 10.948, 545.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09539336540257404;  // std dev = 10.747, 507.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.059693869415563885;  // std dev = 0.472, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04765351541678181;  // std dev = 10.888, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04162014575133318;  // std dev = 10.857, 527.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.01641054828317189;  // std dev = 0.467, 554.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.832', 'seconds']
Parameter learned model CLL:-0.407354 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.472, 355, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.695, 320, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.977, 373, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.759, 331, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.948, 367, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.747, 329, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.472, 355, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.888, 355, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.857, 349, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 376, 178], 'false': [0.0, 0, 0]}]
{'': [0.22243029473158366, nan]}
{'': [0.22967371494007988, nan]}
{'': [0.218688344241294, nan]}
{'': [0.22741150451017292, nan]}
{'': [0.21993434896052802, nan]}
{'': [0.22782426696855487, nan]}
{'': [0.2224302947315828, nan]}
{'': [0.22243029473158393, nan]}
{'': [0.22367847794072993, nan]}
{'': [0.21806618097460181, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 11.283
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 5.96e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.14185106490048807;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.1254446385283919;  // std dev = 0.000, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360626;  // std dev = 5.16e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return -0.11231637819360682;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783623;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.10159632948783656;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.09269127618926067;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return -0.08518475138839679;  // std dev = 8.43e-08, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( actor(A), director(B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109168;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return -0.07877675473109143;  // std dev = 3.65e-08, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.07324622576333682;  // std dev = 1.02e-07, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 2.89e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return -0.06842697784420278;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '37.168', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.283 

Total Inference Time : 4.309755086898804 

Total revision time: 18.653542282104493
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 18.664416315078736 

Total Inference Time : 4.309755086898804 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.83
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.23950486730290235;  // std dev = 0.486, 118.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1673334807281435;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10931568130684781;  // std dev = 5.579, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12925758067457946;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10125709780549133;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09297658544115373;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08319281770247615;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06337660688752263;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.012064474052402598;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03649630443349779;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.366', 'seconds']
Parameter learned model CLL:-0.399799 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.486, 73, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.446, 87, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.579, 101, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.424, 85, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.446, 87, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.402, 83, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.48, 80, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.379, 81, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.535, 96, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.476, 85, 45], 'false': [0.0, 0, 0]}]
{'': [0.2359235851766742, nan]}
{'': [0.22469008264462798, nan]}
{'': [0.21322011634453006, nan]}
{'': [0.22633136094674572, nan]}
{'': [0.22469008264462847, nan]}
{'': [0.2279663085937502, nan]}
{'': [0.23039999999999977, nan]}
{'': [0.22959183673469308, nan]}
{'': [0.2172928927116348, nan]}
{'': [0.22633136094674522, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.439
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048766;  // std dev = 8.69e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.28052658778904555;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1123163781936062;  // std dev = 8.43e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1699173383731395;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.19904162733678463;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.101526894808325;  // std dev = 0.005, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.16919592718495;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09264144328732807;  // std dev = 0.005, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14672365477391403;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08519404616923844;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0787847359344518;  // std dev = 3.33e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.19092176378223524;  // std dev = 0.078, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1791831470686403;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.15234391410948248;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.0733947353862121;  // std dev = 0.011, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15432516604988655;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1340608357500104;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06991522309203294;  // std dev = 0.139, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06409970657990655;  // std dev = 1.05e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13524047078072507;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1189156248690388;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '32.400', 'seconds']
Refined model CLL: -0.06726


******************************************
Best model found
******************************************
Results 

CLL : -0.069697 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.439 

Total Inference Time : 1.8144710063934326 

Total revision time: 6.956838315963745
Best scored revision CLL: -0.06726


Results 

CLL : -0.069697 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.967712348937988 

Total Inference Time : 1.8144710063934326 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.797
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17957750652808366;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.20370584759737495;  // std dev = 5.329, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13570552692248825;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14262184208359702;  // std dev = 5.367, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10089523594952889;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04871101784128601;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04799641578639136;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.029603348622324163;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05158809769832353;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03839696045254473;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.133', 'seconds']
Parameter learned model CLL:-0.382041 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 95, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.329, 77, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.487, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.367, 80, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.435, 86, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.571, 100, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.466, 96, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.571, 100, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.457, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.472, 89, 45], 'false': [0.0, 0, 0]}]
{'': [0.2181122448979602, nan]}
{'': [0.23280032249395438, nan]}
{'': [0.2213992214532866, nan]}
{'': [0.23040000000000058, nan]}
{'': [0.2255113338383547, nan]}
{'': [0.2140309155766949, nan]}
{'': [0.21729289271163438, nan]}
{'': [0.2140309155766941, nan]}
{'': [0.2238679405280127, nan]}
{'': [0.22304522165293014, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.357
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.94e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839136;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11636902679190025;  // std dev = 0.330, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10122702273572871;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09238159996276321;  // std dev = 3.08e-05, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0849222149848084;  // std dev = 3.49e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( female(A) )
%   | | then return 0.2551722425694895;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.22680915973966564;  // std dev = 0.094, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07855127271383291;  // std dev = 3.65e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21207512327929542;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10549890810378093;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07305058558100773;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17879533186675672;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09594954351301993;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06825570302464533;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else return 0.14878824262633095;  // std dev = 0.239, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0640407026772288;  // std dev = 4.34e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1356258756363304;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10063174142759812;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.813', 'seconds']
Refined model CLL: -0.066736


******************************************
Best model found
******************************************
Results 

CLL : -0.078311 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.357 

Total Inference Time : 1.475592851638794 

Total revision time: 6.52028794670105
Best scored revision CLL: -0.066736


Results 

CLL : -0.078311 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 6.531161979675293 

Total Inference Time : 1.475592851638794 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.747
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.19347827641687884;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.11864219901183168;  // std dev = 6.325, 196.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.17019016723290104;  // std dev = 6.013, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1548100908173154;  // std dev = 5.958, 153.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0764622404218221;  // std dev = 6.195, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06409060479475479;  // std dev = 6.187, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08985589009556867;  // std dev = 0.478, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0489371805517656;  // std dev = 6.119, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.013564811680338788;  // std dev = 6.234, 183.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.03032054692025343;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.852', 'seconds']
Parameter learned model CLL:-0.372954 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.472, 111, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.325, 140, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.013, 102, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.958, 97, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.195, 122, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.187, 121, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.478, 102, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.119, 113, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.234, 127, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.469, 116, 56], 'false': [0.0, 0, 0]}]
{'': [0.22288357416902752, nan]}
{'': [0.2040816326530599, nan]}
{'': [0.22880948565935105, nan]}
{'': [0.2320475030971004, nan]}
{'': [0.21562933972983217, nan]}
{'': [0.21628523093619362, nan]}
{'': [0.2288094856593484, nan]}
{'': [0.22156086971744596, nan]}
{'': [0.21236824031771506, nan]}
{'': [0.21957815035154069, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 2.018
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048763;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839133;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 7.15e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.22751829855267264;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783628;  // std dev = 3.65e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1900175797366686;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.16247682877816094;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09384845947293523;  // std dev = 0.158, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08509461732726045;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14156033701618326;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07869935272272693;  // std dev = 2.36e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( female(A) )
%   | | then return 0.1866561854083568;  // std dev = 0.085, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else return 0.20975771563253548;  // std dev = 3.33e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07317907567221545;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17873183639513623;  // std dev = 0.013, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1496345326332022;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06836819692366804;  // std dev = 2.11e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15398372763886511;  // std dev = 0.011, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.13037569306863286;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06413997509799983;  // std dev = 4.83e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13497453030280462;  // std dev = 0.010, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11771972328455198;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.762', 'seconds']
Refined model CLL: -0.065403


******************************************
Best model found
******************************************
Results 

CLL : -0.073447 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.018 

Total Inference Time : 1.2097222805023193 

Total revision time: 4.862821474075317
Best scored revision CLL: -0.065403


Results 

CLL : -0.073447 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.87756194114685 

Total Inference Time : 1.2097222805023193 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.701
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.20338703033760883;  // std dev = 0.475, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.14337242542683207;  // std dev = 6.318, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1363393525864157;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1056055742712117;  // std dev = 6.294, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09821172914661054;  // std dev = 6.245, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07672594276200195;  // std dev = 6.262, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0639893547666094;  // std dev = 0.469, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.04781357855786123;  // std dev = 6.270, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.031186702307795612;  // std dev = 6.302, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.03542748071376635;  // std dev = 0.469, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.850', 'seconds']
Parameter learned model CLL:-0.367789 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.475, 110, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.318, 128, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.253, 120, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.294, 125, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.245, 119, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.262, 121, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.469, 120, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.27, 122, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.302, 126, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.469, 120, 58], 'false': [0.0, 0, 0]}]
{'': [0.22604875283446732, nan]}
{'': [0.21459128222916057, nan]}
{'': [0.21966923368261856, nan]}
{'': [0.21648899638687122, nan]}
{'': [0.22030706374285822, nan]}
{'': [0.21903186542242592, nan]}
{'': [0.21966923368261584, nan]}
{'': [0.21839506172839585, nan]}
{'': [0.2158553875236274, nan]}
{'': [0.21966923368261632, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 2.045
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.88e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.12544463852839133;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.11231637819360621;  // std dev = 8.02e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783638;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.09269127618926096;  // std dev = 4.71e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.08518475138839683;  // std dev = 5.67e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109158;  // std dev = 5.77e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 5.11e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.228', 'seconds']
Refined model CLL: -0.064234


******************************************
Best model found
******************************************
Results 

CLL : -0.071589 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 2.045 

Total Inference Time : 1.2349576950073242 

Total revision time: 4.900361009597779
Best scored revision CLL: -0.064234


Results 

CLL : -0.071589 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.915101476669312 

Total Inference Time : 1.2349576950073242 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.029
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.20785423961817195;  // std dev = 0.477, 509.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1551436475905511;  // std dev = 10.968, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.114358312559637;  // std dev = 11.112, 581.000 (wgt'ed) examples reached here.  /* #neg=403 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.12738214051244787;  // std dev = 10.857, 527.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.12873555354941524;  // std dev = 10.665, 493.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09851738942628101;  // std dev = 10.718, 502.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06120634687355929;  // std dev = 0.473, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.04015385476814623;  // std dev = 10.938, 543.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.03675812586368508;  // std dev = 10.899, 535.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.02842130494461111;  // std dev = 0.471, 536.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.669', 'seconds']
Parameter learned model CLL:-0.408985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.477, 331, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.968, 371, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [11.112, 403, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.857, 349, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.665, 315, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.718, 324, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.473, 351, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.938, 365, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.899, 357, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.471, 358, 178], 'false': [0.0, 0, 0]}]
{'': [0.2274115045101757, nan]}
{'': [0.21910345353863955, nan]}
{'': [0.2125067765529774, nan]}
{'': [0.2236784779407307, nan]}
{'': [0.2306942221527318, nan]}
{'': [0.22885351026173908, nan]}
{'': [0.22326249548851007, nan]}
{'': [0.220350077497291, nan]}
{'': [0.22201414970740152, nan]}
{'': [0.2218060815326387, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 4.896
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 5.96e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.14185106490048824;  // std dev = 0.000, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.12544463852839188;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1123163781936063;  // std dev = 3.33e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.11231637819360682;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783623;  // std dev = 3.80e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.10159632948783642;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.09269127618926064;  // std dev = 2.98e-08, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.67e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.08518475138839679;  // std dev = 8.69e-08, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109175;  // std dev = 2.11e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.07877675473109144;  // std dev = 5.58e-08, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.07324622576333686;  // std dev = 8.94e-08, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 2.24e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06419184008202618;  // std dev = 6.14e-08, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.06419184008202615;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.368', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.896 

Total Inference Time : 1.9091801643371582 

Total revision time: 8.800800848007203
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.815541315078736 

Total Inference Time : 1.9091801643371582 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.615
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.19649479976116643;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.13452113805064495;  // std dev = 5.604, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.13205185554590038;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.12531832458322792;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08308438230535442;  // std dev = 5.562, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07930842859350722;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09495600407625022;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07353460802195205;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08512482779058154;  // std dev = 5.290, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.05193692498521663;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.269', 'seconds']
Parameter learned model CLL:-0.406192 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.473, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.604, 104, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.535, 96, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.477, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.562, 99, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.516, 94, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.478, 82, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.402, 83, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.29, 74, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.481, 79, 45], 'false': [0.0, 0, 0]}]
{'': [0.2238679405280127, nan]}
{'': [0.21080131525606877, nan]}
{'': [0.21729289271163346, nan]}
{'': [0.2222222222222234, nan]}
{'': [0.21484375000000003, nan]}
{'': [0.2189327674551013, nan]}
{'': [0.2287804575609141, nan]}
{'': [0.22796630859375058, nan]}
{'': [0.23515288468328432, nan]}
{'': [0.23120447450572354, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 1.508
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048768;  // std dev = 7.88e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839144;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 7.15e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462844;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.5182729470274015;  // std dev = 0.153, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783631;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.424349574097243;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.17726205529089728;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3253554830570242;  // std dev = 0.023, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.15106341019484856;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09331893354415986;  // std dev = 0.058, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2583415807337102;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.13269375926897797;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08577521155482314;  // std dev = 0.054, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07868840009731855;  // std dev = 1.67e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21199595280347422;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11871259484839665;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07316957304931115;  // std dev = 2.24e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1787376321912745;  // std dev = 0.016, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10673069123156906;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06835987812678353;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15398849548407023;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09660885067048963;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13497850731113195;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08910724324868383;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.0644747113109387;  // std dev = 0.033, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.784', 'seconds']
Refined model CLL: -0.066724


******************************************
Best model found
******************************************
Results 

CLL : -0.072322 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.508 

Total Inference Time : 0.9646215438842773 

Total revision time: 3.8052628974914553
Best scored revision CLL: -0.066724


Results 

CLL : -0.072322 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 3.8200033645629885 

Total Inference Time : 0.9646215438842773 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.604
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.21529179224236955;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.12398792892677346;  // std dev = 5.636, 153.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.14010996812080265;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.14928322839926592;  // std dev = 5.367, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08947176484009844;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08519078901158393;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.04290227992814602;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06538261718432299;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.05739288151194194;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 6.175865072913856E-4;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.198', 'seconds']
Parameter learned model CLL:-0.379443 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.479, 81, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.636, 108, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.497, 92, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.367, 80, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.507, 93, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.457, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.464, 99, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.435, 86, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.413, 84, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.46, 103, 45], 'false': [0.0, 0, 0]}]
{'': [0.2295918367346948, nan]}
{'': [0.20761245674740417, nan]}
{'': [0.22057648249773448, nan]}
{'': [0.23040000000000002, nan]}
{'': [0.2197542533081284, nan]}
{'': [0.22386794052801173, nan]}
{'': [0.21484374999999967, nan]}
{'': [0.22551133383835406, nan]}
{'': [0.22714981070849197, nan]}
{'': [0.21160518626734814, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 1.535
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048766;  // std dev = 7.45e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.1254446385283915;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 7.45e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783623;  // std dev = 4.83e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.09269127618926101;  // std dev = 3.33e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839679;  // std dev = 2.58e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( female(A) )
%   | | then return 0.22794368305285861;  // std dev = 0.092, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.2551722425694895;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then return 0.21208279061774343;  // std dev = 0.015, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(A) )
%   | | then return -0.0787767547310917;  // std dev = 2.98e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( female(B) )
%   | | | then return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1624606101951682;  // std dev = 0.458, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1788008655857509;  // std dev = 0.013, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12859933130810122;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07354540672314028;  // std dev = 0.019, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.0682868683986612;  // std dev = 0.007, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1540361638093018;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11417503046013128;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13501551776647439;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10354609528471444;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.06418228512009791;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.16350618076837767;  // std dev = 0.444, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.251', 'seconds']
Refined model CLL: -0.065659


******************************************
Best model found
******************************************
Results 

CLL : -0.072524 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.535 

Total Inference Time : 0.8475403785705566 

Total revision time: 3.6690726890563967
Best scored revision CLL: -0.065659


Results 

CLL : -0.072524 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.68381315612793 

Total Inference Time : 0.8475403785705566 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.035
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1498156017661799;  // std dev = 0.455, 192.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.19789032978833754;  // std dev = 5.991, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16255250015040995;  // std dev = 6.023, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12556685835227194;  // std dev = 6.073, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09741979493148631;  // std dev = 6.101, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06581838117053253;  // std dev = 6.163, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07063661190262702;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.028247240301432924;  // std dev = 6.211, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03507056857251755;  // std dev = 6.154, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.025956431182644922;  // std dev = 0.467, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.034', 'seconds']
Parameter learned model CLL:-0.372561 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.455, 136, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.991, 100, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.023, 103, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.073, 108, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.101, 111, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.163, 118, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.474, 109, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.211, 124, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.154, 117, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 118, 56], 'false': [0.0, 0, 0]}]
{'': [0.20659722222222276, nan]}
{'': [0.23011176857330634, nan]}
{'': [0.22815553182231535, nan]}
{'': [0.22486615110053731, nan]}
{'': [0.222883574169026, nan]}
{'': [0.21825868674857976, nan]}
{'': [0.22420569329660123, nan]}
{'': [0.21432098765432023, nan]}
{'': [0.21891810618463597, nan]}
{'': [0.2182586867485801, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.339
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12670546738416874;  // std dev = 0.154, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11219073321194505;  // std dev = 4.21e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10149266829223837;  // std dev = 1.14e-05, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.09481299938028491;  // std dev = 0.257, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.0849392673444935;  // std dev = 9.73e-06, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07856599390456241;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( female(A) )
%   | | then return 0.19843458673955497;  // std dev = 0.059, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.199189461999087;  // std dev = 0.057, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07306336063593472;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1786953199735263;  // std dev = 0.000414, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1278850348718277;  // std dev = 6.87e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06826688872689314;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15395564667947317;  // std dev = 0.000368, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11428756159673799;  // std dev = 6.24e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06405057454758369;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13495234556461444;  // std dev = 0.000330, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10318957246515864;  // std dev = 6.05e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.168', 'seconds']
Refined model CLL: -0.065011


******************************************
Best model found
******************************************
Results 

CLL : -0.073332 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.339 

Total Inference Time : 2.3362765312194824 

Total revision time: 8.932525562286378
Best scored revision CLL: -0.065011


Results 

CLL : -0.073332 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.945542978286744 

Total Inference Time : 2.3362765312194824 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.972
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1768302537808323;  // std dev = 0.466, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13731514610359444;  // std dev = 6.362, 192.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15266455764782524;  // std dev = 6.200, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12470114898588781;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06296075988596629;  // std dev = 6.404, 198.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08637678046930397;  // std dev = 6.245, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06297032333388089;  // std dev = 0.467, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07554515652274388;  // std dev = 6.162, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05043176715121077;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.02523015541120106;  // std dev = 0.467, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.095', 'seconds']
Parameter learned model CLL:-0.371452 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.466, 124, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.362, 134, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.2, 114, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.218, 116, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.404, 140, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.245, 119, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 123, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.162, 110, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.209, 115, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 123, 58], 'false': [0.0, 0, 0]}]
{'': [0.2171235358048548, nan]}
{'': [0.21082899305555813, nan]}
{'': [0.22349918875067487, nan]}
{'': [0.22222222222222232, nan]}
{'': [0.20712172227323908, nan]}
{'': [0.22030706374285924, nan]}
{'': [0.21775892066786826, nan]}
{'': [0.22604875283446765, nan]}
{'': [0.22286077049016093, nan]}
{'': [0.21775892066786784, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.442
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048785;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839108;  // std dev = 7.60e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 8.82e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( female(A) )
%   | | then return 0.4946679990244763;  // std dev = 0.192, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return 0.5553664367462842;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1015963294878362;  // std dev = 5.27e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4226278327187728;  // std dev = 0.054, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.17771607270197531;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09269127618926087;  // std dev = 6.99e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32419911299519727;  // std dev = 0.048, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.15425875829877447;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25756105771920745;  // std dev = 0.042, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.136590215755741;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(A) )
%   | | then return -0.0851847513883968;  // std dev = 6.14e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.30560953770013694;  // std dev = 0.540, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.08518475138839691;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07834358435928723;  // std dev = 0.025, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21145018847528196;  // std dev = 0.037, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12000198977830083;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1783409386484542;  // std dev = 0.032, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10712897531681387;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.072994584748311;  // std dev = 0.019, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06822930766728302;  // std dev = 0.018, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15368993929231106;  // std dev = 0.029, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09730540745552319;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06405214186924142;  // std dev = 0.017, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13474705099990567;  // std dev = 0.026, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.0907154261701694;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.119', 'seconds']
Refined model CLL: -0.066319


******************************************
Best model found
******************************************
Results 

CLL : -0.083107 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.442 

Total Inference Time : 1.976745843887329 

Total revision time: 8.688010896682739
Best scored revision CLL: -0.066319


Results 

CLL : -0.083107 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 8.701028312683105 

Total Inference Time : 1.976745843887329 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.727
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.19336550760421597;  // std dev = 0.472, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1519400212747116;  // std dev = 11.010, 558.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13028898672527026;  // std dev = 11.005, 557.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12324706388288964;  // std dev = 10.893, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08887468085405781;  // std dev = 11.001, 556.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07098038619625915;  // std dev = 11.015, 559.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.061565178830680224;  // std dev = 0.467, 552.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05668589100565005;  // std dev = 10.924, 540.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04651863968962893;  // std dev = 10.914, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04131996483495745;  // std dev = 0.472, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.858', 'seconds']
Parameter learned model CLL:-0.400269 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.472, 353, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [11.01, 380, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [11.005, 379, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.893, 356, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [11.001, 378, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [11.015, 381, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 374, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.924, 362, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.914, 360, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.472, 353, 178], 'false': [0.0, 0, 0]}]
{'': [0.22284642202290697, nan]}
{'': [0.21723770249610785, nan]}
{'': [0.2174446976460837, nan]}
{'': [0.22222222222222193, nan]}
{'': [0.21765177785828696, nan]}
{'': [0.21703079547236617, nan]}
{'': [0.2184808863684103, nan]}
{'': [0.22097393689986378, nan]}
{'': [0.22138997526291682, nan]}
{'': [0.2228464220228998, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 10.868
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.14185106490048816;  // std dev = 0.000, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return -0.12544463852839183;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360635;  // std dev = 1.83e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.1123163781936069;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783634;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.10159632948783655;  // std dev = 0.000, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926104;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.09269127618926062;  // std dev = 3.65e-08, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.05e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.08518475138839678;  // std dev = 7.88e-08, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0787767547310917;  // std dev = 2.36e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.07877675473109146;  // std dev = 5.96e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.07324622576333698;  // std dev = 9.66e-08, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 2.69e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.388', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.868 

Total Inference Time : 3.95894193649292 

Total revision time: 17.85060402870178
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 17.863621444702147 

Total Inference Time : 3.95894193649292 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.812
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17505034355021643;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.18431382652782327;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13702024731831702;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0946620288871091;  // std dev = 5.579, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13596739860025356;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04516438505605785;  // std dev = 5.612, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10234704118804931;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06231015107201491;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07217386004611626;  // std dev = 5.329, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04518687444294008;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.965', 'seconds']
Parameter learned model CLL:-0.405554 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.465, 97, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.413, 84, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.497, 92, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.579, 101, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.342, 78, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.612, 105, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.482, 78, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.424, 85, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.329, 77, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.479, 81, 45], 'false': [0.0, 0, 0]}]
{'': [0.21647490577266518, nan]}
{'': [0.227149810708491, nan]}
{'': [0.22057648249773537, nan]}
{'': [0.2132201163445307, nan]}
{'': [0.23200475907198218, nan]}
{'': [0.21000000000000046, nan]}
{'': [0.23200475907198084, nan]}
{'': [0.22633136094674466, nan]}
{'': [0.2328003224939533, nan]}
{'': [0.22959183673469308, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.2
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048768;  // std dev = 6.50e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1254446385283914;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360622;  // std dev = 6.50e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10159632948783617;  // std dev = 5.37e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926105;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839678;  // std dev = 4.08e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109161;  // std dev = 4.94e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A) )
%   | | then return -0.06842697784420268;  // std dev = 2.69e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return -0.11554866776008478;  // std dev = 0.125, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06383630223604572;  // std dev = 0.008, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '29.538', 'seconds']
Refined model CLL: -0.064725


******************************************
Best model found
******************************************
Results 

CLL : -0.068642 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.2 

Total Inference Time : 1.679429292678833 

Total revision time: 6.6015035266876225
Best scored revision CLL: -0.064725


Results 

CLL : -0.068642 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.614520942687989 

Total Inference Time : 1.679429292678833 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.816
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.18903128804068875;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.19354583590405933;  // std dev = 5.367, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13826742007051035;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15420680850113155;  // std dev = 5.316, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05095811716437694;  // std dev = 5.628, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0762374162800969;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08217908475687065;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.028824740675383213;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return -0.005156911571518437;  // std dev = 5.666, 157.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.060845888674914764;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.949', 'seconds']
Parameter learned model CLL:-0.379248 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.367, 80, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.477, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.316, 76, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.628, 107, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.487, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.477, 83, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.553, 98, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.666, 112, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.477, 83, 45], 'false': [0.0, 0, 0]}]
{'': [0.2213992214532882, nan]}
{'': [0.23040000000000163, nan]}
{'': [0.2222222222222229, nan]}
{'': [0.23359060173485316, nan]}
{'': [0.20840547091412612, nan]}
{'': [0.22139922145328686, nan]}
{'': [0.22796630859375064, nan]}
{'': [0.21565846740671918, nan]}
{'': [0.20447076960525842, nan]}
{'': [0.22796630859375017, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.565
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.30e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1254446385283914;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11663218579178951;  // std dev = 0.330, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10120308301267561;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( female(A) )
%   | | then return 0.3958840044230538;  // std dev = 0.104, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.4175135841583099;  // std dev = 3.65e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09236191699139185;  // std dev = 5.05e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( female(A) )
%   | | then return 0.3058885709001824;  // std dev = 0.094, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.32071184716014955;  // std dev = 2.11e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2587448144847511;  // std dev = 0.023, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.18854234028384295;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then return -0.08490515627812316;  // std dev = 5.37e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.25610316527940347;  // std dev = 0.419, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.10001354012466056;  // std dev = 0.098, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.21228075293618215;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.15890716900485594;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07911977233447572;  // std dev = 0.099, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07263474838860676;  // std dev = 0.015, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17894645098264747;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1410079577458449;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then return 0.14804002112724132;  // std dev = 0.278, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | else if ( actor(A) )
%   | | then return -0.06823312069612439;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( female(B) )
%   | | | then return -0.06178409877223494;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.1816668441236501;  // std dev = 0.429, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1358172667681258;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14260139057140747;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.06402077222775929;  // std dev = 2.24e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.13510393125599116;  // std dev = 0.417, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '23.846', 'seconds']
Refined model CLL: -0.066806


******************************************
Best model found
******************************************
Results 

CLL : -0.075216 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.565 

Total Inference Time : 1.7123432159423828 

Total revision time: 7.022307592391968
Best scored revision CLL: -0.066806


Results 

CLL : -0.075216 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 7.035325008392334 

Total Inference Time : 1.7123432159423828 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.929
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.2017072173081025;  // std dev = 0.475, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1361274687884479;  // std dev = 6.242, 184.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15332704515508555;  // std dev = 6.073, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12264803258711178;  // std dev = 6.101, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10961728090067219;  // std dev = 6.063, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10713522184159709;  // std dev = 5.981, 155.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09834074528236515;  // std dev = 0.484, 150.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.01266621482386694;  // std dev = 6.226, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.01518185569727142;  // std dev = 6.203, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0801014150304117;  // std dev = 0.486, 147.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.948', 'seconds']
Parameter learned model CLL:-0.395376 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.475, 107, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.242, 128, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.073, 108, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.101, 111, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.063, 107, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.981, 99, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.484, 94, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.226, 126, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.203, 123, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.486, 91, 56], 'false': [0.0, 0, 0]}]
{'': [0.22552598893447276, nan]}
{'': [0.2117202268431011, nan]}
{'': [0.22486615110053712, nan]}
{'': [0.22288357416902668, nan]}
{'': [0.2255259889344704, nan]}
{'': [0.23075962539022035, nan]}
{'': [0.23395555555555717, nan]}
{'': [0.21301775147928906, nan]}
{'': [0.21497456384007935, nan]}
{'': [0.2358276643990933, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.163
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1418510649004877;  // std dev = 5.58e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839108;  // std dev = 7.88e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 8.56e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5048577441463519;  // std dev = 0.192, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.42389993806186543;  // std dev = 0.046, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.3363596390816809;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1037519772983209;  // std dev = 0.225, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09251014616796026;  // std dev = 1.49e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32505848155991485;  // std dev = 0.041, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.2646047986736938;  // std dev = 0.013, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08503100653119688;  // std dev = 2.98e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2581441444976998;  // std dev = 0.036, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.2153372765045804;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07864472075952794;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21185975547078736;  // std dev = 0.032, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.18243010300495632;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07313167469030298;  // std dev = 3.80e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1786398165615879;  // std dev = 0.028, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.15677991086166576;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06832669981508406;  // std dev = 4.21e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1539156628750735;  // std dev = 0.025, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1348884946120499;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1349225864793558;  // std dev = 0.022, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11971726344550455;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06485131619512018;  // std dev = 0.080, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.258', 'seconds']
Refined model CLL: -0.066452


******************************************
Best model found
******************************************
Results 

CLL : -0.085384 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.163 

Total Inference Time : 2.0182321071624756 

Total revision time: 8.316167823791504
Best scored revision CLL: -0.066452


Results 

CLL : -0.085384 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 24.36468838882446 

Total Inference Time : 2.0182321071624756 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.969
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.21397715595840927;  // std dev = 0.479, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.21416176935926906;  // std dev = 5.977, 151.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10294382966949309;  // std dev = 6.348, 190.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14764594936760728;  // std dev = 6.059, 158.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11447289979262577;  // std dev = 6.091, 161.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.060076738721631946;  // std dev = 6.245, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04813901493137757;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.020818575905307356;  // std dev = 6.325, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04753513711022067;  // std dev = 6.182, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05006187010532826;  // std dev = 0.478, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.247', 'seconds']
Parameter learned model CLL:-0.390291 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.479, 105, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.977, 93, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.348, 132, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.059, 100, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.091, 103, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.245, 119, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.469, 119, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.325, 129, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.182, 112, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.478, 106, 58], 'false': [0.0, 0, 0]}]
{'': [0.22921449809928882, nan]}
{'': [0.2365685715538787, nan]}
{'': [0.21207756232686797, nan]}
{'': [0.23233456176894804, nan]}
{'': [0.23046950349137915, nan]}
{'': [0.2203070637428564, nan]}
{'': [0.2203070637428592, nan]}
{'': [0.21396093682976525, nan]}
{'': [0.22477508650519015, nan]}
{'': [0.2285841760856634, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.225
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839105;  // std dev = 8.02e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11767633279134991;  // std dev = 0.466, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10110814587830336;  // std dev = 8.16e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09596403686791441;  // std dev = 0.425, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08455220235205452;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07823332489549191;  // std dev = 4.71e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07277459639112925;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06801399265777186;  // std dev = 5.67e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0638273378972622;  // std dev = 5.27e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.550', 'seconds']
Refined model CLL: -0.064462


******************************************
Best model found
******************************************
Results 

CLL : -0.076272 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.225 

Total Inference Time : 1.9985997676849365 

Total revision time: 8.438508028030395
Best scored revision CLL: -0.064462


Results 

CLL : -0.076272 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 24.487028593063354 

Total Inference Time : 1.9985997676849365 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.758
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.20378000306067295;  // std dev = 0.476, 515.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1432232146782528;  // std dev = 11.068, 571.000 (wgt'ed) examples reached here.  /* #neg=393 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13468507848599925;  // std dev = 10.968, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12411725339427981;  // std dev = 10.878, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11111974249415327;  // std dev = 10.809, 518.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07368090673370546;  // std dev = 10.948, 545.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07002271051311129;  // std dev = 0.473, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05673351396910166;  // std dev = 10.857, 527.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0557050883804902;  // std dev = 10.770, 511.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.024726262923176603;  // std dev = 0.470, 541.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.171', 'seconds']
Parameter learned model CLL:-0.408792 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.476, 337, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [11.068, 393, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.968, 371, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.878, 353, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.809, 340, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.948, 367, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.473, 350, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.857, 349, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.77, 333, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.47, 363, 178], 'false': [0.0, 0, 0]}]
{'': [0.22617023282119272, nan]}
{'': [0.2145558380694489, nan]}
{'': [0.2191034535386444, nan]}
{'': [0.22284642202290303, nan]}
{'': [0.2255482178262135, nan]}
{'': [0.21993434896052716, nan]}
{'': [0.2234705004591344, nan]}
{'': [0.22367847794072487, nan]}
{'': [0.2269982115570905, nan]}
{'': [0.22076595337585966, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 10.732
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.14185106490048813;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.12544463852839186;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360628;  // std dev = 4.59e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.1123163781936068;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1015963294878362;  // std dev = 4.59e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.10159632948783644;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.0926912761892607;  // std dev = 9.42e-08, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0851847513883968;  // std dev = 1.97e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.08518475138839679;  // std dev = 8.69e-08, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109169;  // std dev = 3.33e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.07877675473109144;  // std dev = 4.71e-08, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 1.29e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.07324622576333692;  // std dev = 1.05e-07, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0684269778442027;  // std dev = 1.97e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.06842697784420289;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.307', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.732 

Total Inference Time : 4.316125392913818 

Total revision time: 18.32366322517395
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 34.372183790206904 

Total Inference Time : 4.316125392913818 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.796
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.2270013941159059;  // std dev = 0.482, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16403155869508537;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0958107609440704;  // std dev = 5.644, 154.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11412779400350832;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08525332103651162;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09634370032497921;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07029287478724852;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.039688298827351504;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.040945284767796214;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08537387597268396;  // std dev = 0.486, 118.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.896', 'seconds']
Parameter learned model CLL:-0.395145 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.482, 77, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.467, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.644, 109, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.507, 93, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.544, 97, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.435, 86, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.472, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.535, 96, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.497, 92, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.486, 73, 45], 'false': [0.0, 0, 0]}]
{'': [0.2328003224939541, nan]}
{'': [0.2230452216529288, nan]}
{'': [0.2068223983808401, nan]}
{'': [0.21975425330812853, nan]}
{'': [0.21647490577266426, nan]}
{'': [0.2255113338383548, nan]}
{'': [0.22304522165292948, nan]}
{'': [0.21729289271163332, nan]}
{'': [0.22057648249773473, nan]}
{'': [0.23592358517667406, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.351
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.7043027812533584;  // std dev = 0.361, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.8581489350995115;  // std dev = 2.38e-07, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.14185106490048766;  // std dev = 7.15e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7268017622874641;  // std dev = 0.086, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.28052658778904543;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 7.30e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5627559905689262;  // std dev = 0.109, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.2201176868965571;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783623;  // std dev = 5.05e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.42316580284140926;  // std dev = 0.109, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.18738161742577297;  // std dev = 0.021, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3246424956364031;  // std dev = 0.099, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.16162463938717428;  // std dev = 0.019, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.09252592306535566;  // std dev = 0.015, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25791017002686417;  // std dev = 0.086, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1399175225824058;  // std dev = 0.016, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.08500944600252164;  // std dev = 0.014, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.21172498000646492;  // std dev = 0.076, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12659358830398038;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08008271063212793;  // std dev = 0.142, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07318072718929881;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17856033244159966;  // std dev = 0.067, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11081946892622369;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0683696426834197;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15386820737664583;  // std dev = 0.059, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10068129334893963;  // std dev = 0.012, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06414125081597057;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1348944010741759;  // std dev = 0.053, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09214565636426784;  // std dev = 0.011, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.432', 'seconds']
Refined model CLL: -0.065808


******************************************
Best model found
******************************************
Results 

CLL : -0.068134 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.351 

Total Inference Time : 1.6947603225708008 

Total revision time: 6.71274296951294
Best scored revision CLL: -0.065808


Results 

CLL : -0.068134 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 22.761263534545897 

Total Inference Time : 1.6947603225708008 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.78
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.2124796437609297;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.20526694850363228;  // std dev = 5.303, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09935266358248183;  // std dev = 5.612, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1290969888391753;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08394600960614122;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06599843348185754;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04216151608575667;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0893152619312041;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07714203830168276;  // std dev = 5.316, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05185868339651976;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.002', 'seconds']
Parameter learned model CLL:-0.404808 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.478, 82, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.303, 75, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.612, 105, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.424, 85, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.516, 94, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.526, 95, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.463, 100, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.342, 78, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.316, 76, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.481, 79, 45], 'false': [0.0, 0, 0]}]
{'': [0.22878045756091603, nan]}
{'': [0.23437500000000097, nan]}
{'': [0.21000000000000077, nan]}
{'': [0.22633136094674625, nan]}
{'': [0.21893276745510012, nan]}
{'': [0.21811224489796008, nan]}
{'': [0.21403091557669424, nan]}
{'': [0.2320047590719803, nan]}
{'': [0.2335906017348542, nan]}
{'': [0.23120447450572382, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.489
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 6.83e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12720693340635345;  // std dev = 0.154, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11214079491672001;  // std dev = 5.16e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10145159468021604;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( female(A) )
%   | | then return 0.4175135841583099;  // std dev = 4.21e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.3742544246877977;  // std dev = 0.143, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09257007771713058;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.3253545457951544;  // std dev = 0.032, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14253202673150484;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25834371115707255;  // std dev = 0.028, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12598405867628557;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0855949912169774;  // std dev = 0.039, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.21199912858550607;  // std dev = 0.024, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11384404112864259;  // std dev = 0.007, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.08390308773580686;  // std dev = 0.444, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.16394890301793727;  // std dev = 0.056, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.16968969214392263;  // std dev = 0.058, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( actor(A) )
%   | | then return -0.07278210046245273;  // std dev = 2.79e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return -0.14466920709786102;  // std dev = 0.394, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15555435102265663;  // std dev = 0.017, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12126451182792566;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06801691576617597;  // std dev = 0.028, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13619813488713448;  // std dev = 0.015, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10623315086352227;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06436026645196094;  // std dev = 0.035, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.879', 'seconds']
Refined model CLL: -0.065541


******************************************
Best model found
******************************************
Results 

CLL : -0.071776 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.489 

Total Inference Time : 1.7791838645935059 

Total revision time: 6.975606149673462
Best scored revision CLL: -0.065541


Results 

CLL : -0.071776 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 23.02412671470642 

Total Inference Time : 1.7791838645935059 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.928
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17633075328133166;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15713962279472013;  // std dev = 6.163, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15399274743966418;  // std dev = 6.073, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13793735747671457;  // std dev = 6.033, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0821572120859751;  // std dev = 6.179, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10327172462482845;  // std dev = 6.013, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05450546104693681;  // std dev = 0.469, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.00668057207240518;  // std dev = 6.312, 194.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04802716212917794;  // std dev = 6.119, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.048276805199334;  // std dev = 0.474, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.037', 'seconds']
Parameter learned model CLL:-0.375231 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.466, 120, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.163, 118, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.073, 108, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.033, 104, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.179, 120, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.013, 102, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.469, 116, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.312, 138, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.119, 113, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.474, 108, 56], 'false': [0.0, 0, 0]}]
{'': [0.21694214876033097, nan]}
{'': [0.21825868674858234, nan]}
{'': [0.2248661511005365, nan]}
{'': [0.22750000000000137, nan]}
{'': [0.2169421487603292, nan]}
{'': [0.22880948565934897, nan]}
{'': [0.2195781503515401, nan]}
{'': [0.2053353172494413, nan]}
{'': [0.22156086971744807, nan]}
{'': [0.22486615110053595, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.697
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.30e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839133;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1123163781936062;  // std dev = 8.16e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.5122901261050012;  // std dev = 0.164, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.422957148784473;  // std dev = 0.039, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.17750876730361914;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10233886166342965;  // std dev = 0.072, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09262884841121702;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.324414616953793;  // std dev = 0.035, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.15398858893904166;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08513176695228725;  // std dev = 7.22e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2577031480569358;  // std dev = 0.031, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.13539583107578224;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07873125604270037;  // std dev = 4.94e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21154748692483896;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1188606359850748;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07320675440223211;  // std dev = 3.94e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17841034916108253;  // std dev = 0.024, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10588527337571395;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0683924267313396;  // std dev = 5.37e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.153741302514333;  // std dev = 0.021, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09753489395547087;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13478626150995482;  // std dev = 0.019, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.08840505123028003;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06446928120612928;  // std dev = 0.029, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.434', 'seconds']
Refined model CLL: -0.064963


******************************************
Best model found
******************************************
Results 

CLL : -0.075725 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.697 

Total Inference Time : 2.334085702896118 

Total revision time: 9.196598529815674
Best scored revision CLL: -0.064963


Results 

CLL : -0.075725 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 9.207524061203003 

Total Inference Time : 2.334085702896118 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.946
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1993254056877489;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.18151023823813736;  // std dev = 6.143, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16323207173544244;  // std dev = 6.102, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1060086942994686;  // std dev = 6.245, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06316188154693513;  // std dev = 6.355, 191.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08110477319854949;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09019403614618587;  // std dev = 0.479, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04745007219927356;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.006415373787533374;  // std dev = 6.362, 192.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.025216522228228823;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.913', 'seconds']
Parameter learned model CLL:-0.373898 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.474, 112, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.143, 108, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.102, 104, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.245, 119, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.355, 133, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.218, 116, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.479, 104, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.218, 116, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.362, 134, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 122, 58], 'false': [0.0, 0, 0]}]
{'': [0.22477508650519057, nan]}
{'': [0.2273189142110633, nan]}
{'': [0.22984301173601634, nan]}
{'': [0.22030706374285938, nan]}
{'': [0.21145253693703703, nan]}
{'': [0.22222222222222265, nan]}
{'': [0.22984301173601498, nan]}
{'': [0.22222222222222196, nan]}
{'': [0.21082899305555736, nan]}
{'': [0.21839506172839596, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.409
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.14185106490048763;  // std dev = 8.43e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839133;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.11231637819360621;  // std dev = 7.45e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783623;  // std dev = 4.83e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09449353291532477;  // std dev = 0.192, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.08504440952647963;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.08078676354602005;  // std dev = 0.240, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07504297568156439;  // std dev = 0.228, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06807920040854838;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06388490712172697;  // std dev = 4.65e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '22.680', 'seconds']
Refined model CLL: -0.063571


******************************************
Best model found
******************************************
Results 

CLL : -0.067782 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.409 

Total Inference Time : 2.804640769958496 

Total revision time: 9.438349704742432
Best scored revision CLL: -0.063571


Results 

CLL : -0.067782 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 9.449275236129761 

Total Inference Time : 2.804640769958496 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.678
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.18356026965161024;  // std dev = 0.469, 547.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1454923508660127;  // std dev = 11.073, 572.000 (wgt'ed) examples reached here.  /* #neg=394 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16290664485891682;  // std dev = 10.759, 509.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13896377132489282;  // std dev = 10.742, 506.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0950676842199933;  // std dev = 10.904, 536.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06782238996975551;  // std dev = 10.982, 552.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06748982706827346;  // std dev = 0.472, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04969141349030849;  // std dev = 10.914, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.025410909366560524;  // std dev = 11.028, 562.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0386277233331804;  // std dev = 0.472, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.034', 'seconds']
Parameter learned model CLL:-0.40289 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.469, 369, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [11.073, 394, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.759, 331, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.742, 328, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.904, 358, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.982, 374, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.472, 353, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.914, 360, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [11.028, 384, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.472, 353, 178], 'false': [0.0, 0, 0]}]
{'': [0.21951879789712508, nan]}
{'': [0.21435033497971062, nan]}
{'': [0.22741150451017147, nan]}
{'': [0.22803043322032696, nan]}
{'': [0.22180608153263268, nan]}
{'': [0.218480886368407, nan]}
{'': [0.22284642202290098, nan]}
{'': [0.22138997526292098, nan]}
{'': [0.2164106330973539, nan]}
{'': [0.22284642202290691, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 11.152
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.50e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.14185106490048818;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.12544463852839188;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360626;  // std dev = 4.94e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.11231637819360678;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1015963294878362;  // std dev = 4.47e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.10159632948783655;  // std dev = 0.000, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( director(B), actor(A) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926082;  // std dev = 1.49e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.09269127618926044;  // std dev = 1.32e-07, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( director(B), actor(A) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839678;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.08518475138839678;  // std dev = 1.13e-07, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109176;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.07877675473109147;  // std dev = 5.77e-08, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333707;  // std dev = 1.49e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.07324622576333681;  // std dev = 1.06e-07, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 2.69e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.06842697784420293;  // std dev = 0.000, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202626;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '37.723', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.152 

Total Inference Time : 4.174395799636841 

Total revision time: 18.40464289665222
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 18.41556842803955 

Total Inference Time : 4.174395799636841 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.81
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.18188994229375685;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.2003879772576896;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11110351106897681;  // std dev = 5.588, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11782912301422319;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11536169706908449;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10239108939257237;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08822930367583458;  // std dev = 0.481, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03828598925342237;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03029896574512759;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.021475695091690165;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.078', 'seconds']
Parameter learned model CLL:-0.391781 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.468, 94, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.342, 78, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.588, 102, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.487, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.413, 84, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.379, 81, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.481, 79, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.487, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.487, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.47, 92, 45], 'false': [0.0, 0, 0]}]
{'': [0.21893276745510165, nan]}
{'': [0.23200475907198045, nan]}
{'': [0.21241149521032818, nan]}
{'': [0.22139922145328828, nan]}
{'': [0.2271498107084903, nan]}
{'': [0.22959183673469324, nan]}
{'': [0.23120447450572432, nan]}
{'': [0.22139922145328714, nan]}
{'': [0.22139922145328753, nan]}
{'': [0.22057648249773687, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.339
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839158;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.11231637819360625;  // std dev = 5.96e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783615;  // std dev = 5.67e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.09761083694256058;  // std dev = 0.426, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0848021598648358;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.19372802283455617;  // std dev = 0.066, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return -0.07844754882490122;  // std dev = 3.87e-05, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0729611100684613;  // std dev = 3.80e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17887066640612576;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09437668257576948;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15408856733441173;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08671934538976116;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06816062274847251;  // std dev = 0.001, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06397255169508567;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13505605529953993;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08029019837357025;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '22.886', 'seconds']
Refined model CLL: -0.066311


******************************************
Best model found
******************************************
Results 

CLL : -0.072804 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 3.339 

Total Inference Time : 1.5804576873779297 

Total revision time: 6.61799938583374
Best scored revision CLL: -0.066311


Results 

CLL : -0.072804 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 6.628924917221069 

Total Inference Time : 1.5804576873779297 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.794
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17064893509951218;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.19041143044134642;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14162372738504295;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09572773562062377;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11764439917836832;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09075103023634411;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08404879589410409;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06438745571867982;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04297749157983353;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.021237250504542646;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.142', 'seconds']
Parameter learned model CLL:-0.393773 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.464, 99, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.39, 82, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.477, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.571, 100, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.413, 84, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.435, 86, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.478, 82, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.402, 83, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.435, 86, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 91, 45], 'false': [0.0, 0, 0]}]
{'': [0.214843750000001, nan]}
{'': [0.2287804575609163, nan]}
{'': [0.22222222222222104, nan]}
{'': [0.214030915576695, nan]}
{'': [0.22714981070849025, nan]}
{'': [0.2255113338383555, nan]}
{'': [0.22878045756091464, nan]}
{'': [0.22796630859375022, nan]}
{'': [0.2255113338383555, nan]}
{'': [0.22139922145328764, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.635
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.74e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( female(A) )
%   | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.8146706742299468;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.723722334802978;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.2753120009715622;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360624;  // std dev = 6.05e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5595550873766878;  // std dev = 0.036, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.22540705460691002;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783619;  // std dev = 5.58e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( female(A) )
%   | | then return 0.3669341830362788;  // std dev = 0.165, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.42605916453103687;  // std dev = 4.21e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09269127618926107;  // std dev = 1.49e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32827451864704416;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.2553256804727013;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.24218311110807575;  // std dev = 0.094, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.25878717729000744;  // std dev = 2.98e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.08662127499256093;  // std dev = 0.126, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07867256786981523;  // std dev = 1.49e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21509022680192225;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.2549109670985606;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07315583653173174;  // std dev = 1.97e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( female(A) )
%   | | then return 0.18333582299339565;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.16156492355223273;  // std dev = 0.080, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06834785266026998;  // std dev = 3.80e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( female(A) )
%   | | then return 0.1409580680465859;  // std dev = 0.079, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.13883244112514342;  // std dev = 0.081, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06412202328266105;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( female(A) )
%   | | then return 0.13964972400799838;  // std dev = 2.36e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.10486357170858662;  // std dev = 0.112, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.311', 'seconds']
Refined model CLL: -0.077904


******************************************
Best model found
******************************************
Results 

CLL : -0.105998 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.635 

Total Inference Time : 1.27610182762146 

Total revision time: 6.65163240814209
Best scored revision CLL: -0.077904


Results 

CLL : -0.105998 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 6.662557939529419 

Total Inference Time : 1.27610182762146 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.665
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.17633075328133166;  // std dev = 0.466, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.18097955468062887;  // std dev = 6.053, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.14420016145013273;  // std dev = 6.101, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1189139970945515;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.10222087256370434;  // std dev = 6.092, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06417486931345504;  // std dev = 6.179, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08146806526266298;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.05075576192001317;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.042349622554033496;  // std dev = 6.101, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.031504947667194416;  // std dev = 0.471, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.942', 'seconds']
Parameter learned model CLL:-0.38234 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.466, 120, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.053, 106, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.101, 111, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.11, 112, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.092, 110, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.179, 120, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.476, 105, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.11, 112, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.101, 111, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.471, 112, 56], 'false': [0.0, 0, 0]}]
{'': [0.21694214876033097, nan]}
{'': [0.22618503276939758, nan]}
{'': [0.22288357416902696, nan]}
{'': [0.22222222222222418, nan]}
{'': [0.2235447815357829, nan]}
{'': [0.21694214876032875, nan]}
{'': [0.22684310018903459, nan]}
{'': [0.22222222222222177, nan]}
{'': [0.22288357416902804, nan]}
{'': [0.22222222222222185, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 2.108
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048782;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.12544463852839105;  // std dev = 8.02e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 8.43e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783624;  // std dev = 4.71e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.09269127618926094;  // std dev = 5.48e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.0851847513883968;  // std dev = 6.05e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109158;  // std dev = 5.87e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333707;  // std dev = 4.34e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else return -0.1918449062815585;  // std dev = 0.530, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06811463348831347;  // std dev = 0.016, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06400340496435099;  // std dev = 0.012, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801087;  // std dev = 2.79e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.12122000613123426;  // std dev = 0.049, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.906', 'seconds']
Refined model CLL: -0.06452


******************************************
Best model found
******************************************
Results 

CLL : -0.075997 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 2.108 

Total Inference Time : 1.1749145984649658 

Total revision time: 4.803019283294677
Best scored revision CLL: -0.06452


Results 

CLL : -0.075997 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.817917583465576 

Total Inference Time : 1.1749145984649658 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.758
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1699768920887609;  // std dev = 0.463, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.16950613763754444;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1356340776762161;  // std dev = 6.262, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.10521033679331637;  // std dev = 6.302, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09784861682635888;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.10584203316399286;  // std dev = 6.133, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.04940657613207534;  // std dev = 0.465, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08921623656362859;  // std dev = 6.070, 159.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0515127567838442;  // std dev = 6.162, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.02131864048236034;  // std dev = 0.469, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.793', 'seconds']
Parameter learned model CLL:-0.383104 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.463, 128, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.218, 116, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.262, 121, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.302, 126, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.253, 120, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.133, 107, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.465, 126, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.07, 101, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.162, 110, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.469, 120, 58], 'false': [0.0, 0, 0]}]
{'': [0.2145912822291598, nan]}
{'': [0.22222222222222332, nan]}
{'': [0.21903186542242598, nan]}
{'': [0.21585538752362962, nan]}
{'': [0.21966923368261485, nan]}
{'': [0.2279522497704316, nan]}
{'': [0.21585538752362773, nan]}
{'': [0.23171551758237272, nan]}
{'': [0.2260487528344682, nan]}
{'': [0.219669233682615, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 2.164
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.14185106490048766;  // std dev = 8.43e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.1254446385283914;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( female(A) )
%   | | then return 0.7194734122109542;  // std dev = 5.96e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.6978088468073818;  // std dev = 0.134, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5588670962570225;  // std dev = 0.019, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.2246794468796876;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.1015963294878364;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4201185159056039;  // std dev = 0.019, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.18713699235613898;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3224806293511848;  // std dev = 0.017, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.16208145609097335;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09333534695462245;  // std dev = 0.067, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25638013714022145;  // std dev = 0.015, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1396812266406872;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08572904810153079;  // std dev = 0.063, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.21061139628086914;  // std dev = 0.013, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12477715538422035;  // std dev = 0.004, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.07919450804878474;  // std dev = 0.059, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07313727503059474;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17772288670128547;  // std dev = 0.011, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11270315483838772;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06833160279119468;  // std dev = 4.71e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15321920665677818;  // std dev = 0.010, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10176731517083057;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13437824924540234;  // std dev = 0.009, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09274373662113955;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then return -0.06410768393258684;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.1610943672654788;  // std dev = 0.336, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06410768393258676;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.864', 'seconds']
Refined model CLL: -0.065155


******************************************
Best model found
******************************************
Results 

CLL : -0.071958 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.164 

Total Inference Time : 1.4287848472595215 

Total revision time: 5.303765604019166
Best scored revision CLL: -0.065155


Results 

CLL : -0.071958 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.318663904190064 

Total Inference Time : 1.4287848472595215 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.034
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.18237480030897962;  // std dev = 0.468, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.18144591287899348;  // std dev = 10.781, 513.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1514916383639476;  // std dev = 10.809, 518.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.14067638021807766;  // std dev = 10.695, 498.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09875951950395144;  // std dev = 10.836, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.05602547301576455;  // std dev = 11.033, 563.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06798268927707318;  // std dev = 0.473, 525.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.04676656317216377;  // std dev = 10.909, 537.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.03900975204526463;  // std dev = 10.893, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.021735578216578785;  // std dev = 0.468, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.630', 'seconds']
Parameter learned model CLL:-0.40579 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.468, 371, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.781, 335, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.809, 340, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.695, 320, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.836, 345, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [11.033, 385, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.473, 347, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.909, 359, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.893, 356, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.468, 371, 178], 'false': [0.0, 0, 0]}]
{'': [0.21910345353864422, nan]}
{'': [0.2265844381367135, nan]}
{'': [0.22554821782620788, nan]}
{'': [0.22967371494008518, nan]}
{'': [0.22451001539141707, nan]}
{'': [0.2162041082881914, nan]}
{'': [0.22409433106576462, nan]}
{'': [0.22159802197878184, nan]}
{'': [0.2222222222222188, nan]}
{'': [0.21910345353863872, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 4.905
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048768;  // std dev = 5.37e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.1418510649004882;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return -0.12544463852839183;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360629;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.11231637819360679;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783616;  // std dev = 5.37e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return -0.10159632948783646;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return -0.09269127618926065;  // std dev = 2.11e-08, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.67e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.08518475138839678;  // std dev = 7.88e-08, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109175;  // std dev = 1.97e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.07877675473109146;  // std dev = 5.37e-08, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.07324622576333682;  // std dev = 1.01e-07, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0684269778442027;  // std dev = 1.67e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.0684269778442028;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.718', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.905 

Total Inference Time : 1.9248642921447754 

Total revision time: 8.774965156555176
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.789863456726074 

Total Inference Time : 1.9248642921447754 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.584
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.14661047356105053;  // std dev = 0.453, 156.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.18025771946200994;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1444152915661261;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1143692593300198;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09953439520707369;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06124446635303612;  // std dev = 5.579, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.11031199893554175;  // std dev = 0.482, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.03665837304768333;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07815716733587985;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.02211211248458962;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.185', 'seconds']
Parameter learned model CLL:-0.387885 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.453, 111, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.446, 87, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.487, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.516, 94, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.497, 92, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.579, 101, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.482, 77, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.544, 97, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.342, 78, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.469, 93, 45], 'false': [0.0, 0, 0]}]
{'': [0.2052514792899419, nan]}
{'': [0.2246900826446288, nan]}
{'': [0.22139922145328753, nan]}
{'': [0.21893276745510007, nan]}
{'': [0.22057648249773612, nan]}
{'': [0.21322011634453011, nan]}
{'': [0.23280032249395202, nan]}
{'': [0.21647490577266526, nan]}
{'': [0.23200475907198106, nan]}
{'': [0.21975425330812942, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 1.534
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.88e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.1254446385283914;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.1123163781936062;  // std dev = 7.88e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783621;  // std dev = 5.27e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.09269127618926105;  // std dev = 1.05e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 5.58e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109169;  // std dev = 3.33e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.19372802283455617;  // std dev = 0.066, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1788706664061258;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09403305803145981;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.15251439872780082;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.14771442311514313;  // std dev = 0.040, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return -0.06861735398429314;  // std dev = 0.018, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13566613733324637;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09908068201965886;  // std dev = 0.002, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.06436389850045617;  // std dev = 0.017, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.302', 'seconds']
Refined model CLL: -0.068726


******************************************
Best model found
******************************************
Results 

CLL : -0.07936 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.534 

Total Inference Time : 0.9148426055908203 

Total revision time: 3.742396324157715
Best scored revision CLL: -0.068726


Results 

CLL : -0.07936 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 3.7572946243286136 

Total Inference Time : 0.9148426055908203 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.594
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.19905802600860323;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.18648070648032924;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.13535100211801698;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07835091742725052;  // std dev = 5.628, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.10956893064477814;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1332212032789479;  // std dev = 5.262, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06622647414626885;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06081218193590834;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.01570059162152774;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.03673430765528661;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.234', 'seconds']
Parameter learned model CLL:-0.394373 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.474, 87, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.39, 82, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.487, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.628, 107, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.446, 87, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.262, 72, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.475, 86, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.402, 83, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.535, 96, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.475, 86, 45], 'false': [0.0, 0, 0]}]
{'': [0.22469008264462906, nan]}
{'': [0.22878045756091553, nan]}
{'': [0.2213992214532872, nan]}
{'': [0.20840547091412814, nan]}
{'': [0.22469008264462711, nan]}
{'': [0.2366863905325444, nan]}
{'': [0.22551133383835426, nan]}
{'': [0.22796630859374986, nan]}
{'': [0.21729289271163513, nan]}
{'': [0.22551133383835373, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 1.601
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.88e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( female(A) )
%   | | then return 0.8164822684328453;  // std dev = 0.200, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.8146706742299468;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7279810357883602;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.27201497824529747;  // std dev = 0.000359, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12710817229238597;  // std dev = 0.146, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5637566143049693;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.2216397113047955;  // std dev = 0.000361, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.11376093935324419;  // std dev = 0.134, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( director(B) )
%   | | then return 0.4237655664118663;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10131299070992858;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.11123760913479483;  // std dev = 0.194, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.09192357354944312;  // std dev = 0.004, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.3249534581255041;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.16941646669354835;  // std dev = 0.000221, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08450831281116966;  // std dev = 0.003, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.25806443913325017;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.146892445276907;  // std dev = 0.000197, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.21179865680061213;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12950725335048627;  // std dev = 0.000167, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.08299202954137229;  // std dev = 0.373, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07235793617260979;  // std dev = 0.003, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17859199401378545;  // std dev = 0.000891, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11554486943358795;  // std dev = 0.000203, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15387740052278473;  // std dev = 0.000791, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10429621950597415;  // std dev = 0.000239, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.07002164249668434;  // std dev = 0.116, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06333052914320872;  // std dev = 0.002, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1348913500642892;  // std dev = 0.000709, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09496807896338713;  // std dev = 0.000139, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.525', 'seconds']
Refined model CLL: -0.065203


******************************************
Best model found
******************************************
Results 

CLL : -0.072586 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.601 

Total Inference Time : 0.928992509841919 

Total revision time: 3.834231204986572
Best scored revision CLL: -0.065203


Results 

CLL : -0.072586 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.8491295051574705 

Total Inference Time : 0.928992509841919 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.961
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17275567667254715;  // std dev = 0.464, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13525702955122743;  // std dev = 6.263, 187.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.159934649362313;  // std dev = 6.063, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.139006050501264;  // std dev = 6.043, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12625986124147337;  // std dev = 5.991, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07147074122082629;  // std dev = 6.137, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.051975731014446885;  // std dev = 0.467, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06759996735882971;  // std dev = 6.043, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.013631035832114217;  // std dev = 6.226, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.007448976260563137;  // std dev = 0.460, 184.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.102', 'seconds']
Parameter learned model CLL:-0.368699 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.464, 122, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.263, 131, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.063, 107, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.043, 105, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.991, 100, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.137, 115, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 118, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.043, 105, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.226, 126, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.46, 128, 56], 'false': [0.0, 0, 0]}]
{'': [0.21562933972983248, nan]}
{'': [0.20978581028911197, nan]}
{'': [0.22552598893447284, nan]}
{'': [0.2268431001890367, nan]}
{'': [0.2301117685733047, nan]}
{'': [0.22023870592660985, nan]}
{'': [0.2182586867485782, nan]}
{'': [0.22684310018903625, nan]}
{'': [0.2130177514792894, nan]}
{'': [0.2117202268431007, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.386
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.56e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1268170451590166;  // std dev = 0.154, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.11217962010320308;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10148360177493937;  // std dev = 6.99e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09259688217633527;  // std dev = 5.37e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08510463422139583;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( female(A) )
%   | | then return 0.25517224256948956;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.23321372683027108;  // std dev = 0.084, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07870795520580208;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21165464142414042;  // std dev = 0.014, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1063962810453579;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07318653916730879;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1784871426027536;  // std dev = 0.012, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09623994395334745;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06837473053423974;  // std dev = 3.94e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15379837177763972;  // std dev = 0.011, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.08877868795587955;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06414574023926377;  // std dev = 5.96e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13483000142269244;  // std dev = 0.010, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.0814154434847843;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.569', 'seconds']
Refined model CLL: -0.064744


******************************************
Best model found
******************************************
Results 

CLL : -0.075208 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.386 

Total Inference Time : 1.940943956375122 

Total revision time: 8.490697500228881
Best scored revision CLL: -0.064744


Results 

CLL : -0.075208 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 8.503586408615112 

Total Inference Time : 1.940943956375122 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.987
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17336632640386143;  // std dev = 0.465, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1690412971219264;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1425927302456214;  // std dev = 6.227, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11237092134825723;  // std dev = 6.262, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10620139123719613;  // std dev = 6.200, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07003208614136691;  // std dev = 6.278, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09424113413894182;  // std dev = 0.479, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05084543730005438;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.025774656187820506;  // std dev = 6.286, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06422673939121877;  // std dev = 0.481, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.204', 'seconds']
Parameter learned model CLL:-0.386988 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.465, 126, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.218, 116, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.227, 117, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.262, 121, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.2, 114, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.278, 123, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.479, 104, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.218, 116, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.286, 124, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.481, 102, 58], 'false': [0.0, 0, 0]}]
{'': [0.21585538752362982, nan]}
{'': [0.22222222222222396, nan]}
{'': [0.22158367346938745, nan]}
{'': [0.219031865422429, nan]}
{'': [0.2234991887506781, nan]}
{'': [0.21775892066786934, nan]}
{'': [0.22984301173601712, nan]}
{'': [0.22222222222222363, nan]}
{'': [0.21712353580485547, nan]}
{'': [0.2310937499999996, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.477
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.14185106490048774;  // std dev = 4.21e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12544463852839108;  // std dev = 7.45e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360622;  // std dev = 7.60e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.10234214762390624;  // std dev = 0.079, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09262857223073323;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.08513149007245227;  // std dev = 4.86e-06, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07873105781845072;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07320658243092985;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06839227619199928;  // std dev = 2.11e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06416103273191802;  // std dev = 1.54e-05, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '19.163', 'seconds']
Refined model CLL: -0.063714


******************************************
Best model found
******************************************
Results 

CLL : -0.067093 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.477 

Total Inference Time : 2.4606716632843018 

Total revision time: 9.162150873184205
Best scored revision CLL: -0.063714


Results 

CLL : -0.067093 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 9.175039781570435 

Total Inference Time : 2.4606716632843018 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.708
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.19590984591544716;  // std dev = 0.473, 527.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16592259785799487;  // std dev = 10.893, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1491668952041546;  // std dev = 10.831, 522.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10938932720874767;  // std dev = 10.958, 547.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1288860933120343;  // std dev = 10.640, 489.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07115532832839866;  // std dev = 10.919, 539.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06736703744035258;  // std dev = 0.474, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05185376929123131;  // std dev = 10.852, 526.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05451224344230193;  // std dev = 10.742, 506.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03287232781481085;  // std dev = 0.474, 521.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.111', 'seconds']
Parameter learned model CLL:-0.416537 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.473, 349, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.893, 356, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.831, 344, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.958, 369, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.64, 311, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.919, 361, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.474, 345, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.852, 348, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.742, 328, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.474, 343, 178], 'false': [0.0, 0, 0]}]
{'': [0.2236784779407295, nan]}
{'': [0.22222222222222135, nan]}
{'': [0.22471778159451894, nan]}
{'': [0.21951879789712495, nan]}
{'': [0.23150622488196038, nan]}
{'': [0.221181945539218, nan]}
{'': [0.22451001539142595, nan]}
{'': [0.2238864231086137, nan]}
{'': [0.22803043322033026, nan]}
{'': [0.22492549025386818, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 10.677
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 7.60e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return -0.14185106490048816;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.12544463852839188;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360626;  // std dev = 4.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.1123163781936068;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783617;  // std dev = 5.05e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.10159632948783644;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.09269127618926064;  // std dev = 2.98e-08, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.08518475138839678;  // std dev = 7.88e-08, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109172;  // std dev = 2.69e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.07877675473109146;  // std dev = 5.58e-08, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.07324622576333692;  // std dev = 1.05e-07, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 2.11e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.06842697784420265;  // std dev = 3.65e-08, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '32.725', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.677 

Total Inference Time : 4.251307964324951 

Total revision time: 17.936505804061888
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 17.949394712448118 

Total Inference Time : 4.251307964324951 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.779
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.2043027812533585;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14610146737378368;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1534476623135538;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10661457043136023;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09512477730990689;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1371420413739273;  // std dev = 5.248, 116.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03291904689327706;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.042014097660324885;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05345940376455497;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04495403179544692;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.005', 'seconds']
Parameter learned model CLL:-0.394335 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.476, 85, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.553, 98, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.435, 86, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.526, 95, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.497, 92, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.248, 71, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.463, 100, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.507, 93, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.424, 85, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.477, 84, 45], 'false': [0.0, 0, 0]}]
{'': [0.2263313609467465, nan]}
{'': [0.21565846740672096, nan]}
{'': [0.2255113338383542, nan]}
{'': [0.21811224489795802, nan]}
{'': [0.22057648249773637, nan]}
{'': [0.23744054696789538, nan]}
{'': [0.21403091557669504, nan]}
{'': [0.21975425330812862, nan]}
{'': [0.2263313609467451, nan]}
{'': [0.2271498107084921, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.533
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.14185106490048766;  // std dev = 7.60e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839152;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.11377463035005013;  // std dev = 0.114, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10146330553593792;  // std dev = 3.49e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09257988516531766;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0850897369540132;  // std dev = 2.66e-05, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07869559892568569;  // std dev = 4.08e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07317531132501638;  // std dev = 3.09e-05, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06836537817596859;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.064137487866061;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.095', 'seconds']
Refined model CLL: -0.064852


******************************************
Best model found
******************************************
Results 

CLL : -0.068675 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.533 

Total Inference Time : 1.6493895053863525 

Total revision time: 6.854524099349975
Best scored revision CLL: -0.064852


Results 

CLL : -0.068675 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.867413007736205 

Total Inference Time : 1.6493895053863525 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.846
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.21814893509951241;  // std dev = 0.480, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1678123788382699;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11908748373721206;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11586640541266276;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09811654124643865;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09551438229960617;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04733797878684055;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03562032829339426;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03061100833165833;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03602003688337135;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.109', 'seconds']
Parameter learned model CLL:-0.377895 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.48, 80, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.457, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.553, 98, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.487, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.477, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.413, 84, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.466, 96, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.544, 97, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.535, 96, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 91, 45], 'false': [0.0, 0, 0]}]
{'': [0.23040000000000088, nan]}
{'': [0.22386794052801165, nan]}
{'': [0.21565846740672, nan]}
{'': [0.22139922145328675, nan]}
{'': [0.22222222222222215, nan]}
{'': [0.22714981070849014, nan]}
{'': [0.21729289271163363, nan]}
{'': [0.21647490577266343, nan]}
{'': [0.2172928927116349, nan]}
{'': [0.2213992214532865, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.55
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.56e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( female(A) )
%   | | then return 0.7781489350995119;  // std dev = 0.271, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839147;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7275794276357729;  // std dev = 0.053, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.2741827496304922;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5634213764231397;  // std dev = 0.066, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.2217342273917114;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1160310418399637;  // std dev = 0.332, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10125777678943013;  // std dev = 3.65e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.42356920264965486;  // std dev = 0.065, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.18705089951546403;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09240773676703037;  // std dev = 5.37e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( female(A) )
%   | | then return 0.3131257778169754;  // std dev = 0.097, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.3158912382480849;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.26779383279906194;  // std dev = 2.98e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.23168241069353068;  // std dev = 0.095, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return -0.08764698792180324;  // std dev = 0.204, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07837457893041426;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( female(A) )
%   | | then return 0.19930487226498372;  // std dev = 0.093, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.19056104022978626;  // std dev = 0.095, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07289722700648402;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( female(A) )
%   | | then return 0.1668907106315314;  // std dev = 0.094, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.1602641945607681;  // std dev = 0.096, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06812140561527694;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( female(A) )
%   | | then return 0.14241960608102264;  // std dev = 0.096, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.13722059133084266;  // std dev = 0.099, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0639221650254142;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( female(A) )
%   | | then return 0.10443467981526439;  // std dev = 0.134, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.14083906301685364;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.409', 'seconds']
Refined model CLL: -0.083104


******************************************
Best model found
******************************************
Results 

CLL : -0.115584 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.55 

Total Inference Time : 1.412677526473999 

Total revision time: 6.74831876373291
Best scored revision CLL: -0.083104


Results 

CLL : -0.115584 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 6.7612076721191405 

Total Inference Time : 1.412677526473999 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.926
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.21257931484634898;  // std dev = 0.478, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.18468328176569815;  // std dev = 6.013, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14617619604680096;  // std dev = 6.063, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1002726512704134;  // std dev = 6.163, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10421595438127494;  // std dev = 6.063, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12473434077515981;  // std dev = 5.875, 146.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05592890385450789;  // std dev = 0.474, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07105194313529854;  // std dev = 5.958, 153.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.010050930240061977;  // std dev = 6.171, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.029360549418456332;  // std dev = 0.474, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.165', 'seconds']
Parameter learned model CLL:-0.39604 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.478, 102, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.013, 102, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.063, 107, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.163, 118, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.063, 107, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.875, 90, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.474, 109, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.958, 97, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.171, 119, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.474, 108, 56], 'false': [0.0, 0, 0]}]
{'': [0.2288094856593497, nan]}
{'': [0.22880948565934905, nan]}
{'': [0.22552598893447165, nan]}
{'': [0.21825868674857762, nan]}
{'': [0.22552598893447165, nan]}
{'': [0.23644210921373654, nan]}
{'': [0.2242056932966029, nan]}
{'': [0.23204750309709854, nan]}
{'': [0.21760000000000101, nan]}
{'': [0.22486615110053426, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.964
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.88e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( female(A) )
%   | | then return 0.822434649385226;  // std dev = 0.186, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.6909105759500754;  // std dev = 0.186, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.6861400788776213;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return -0.12845593851403517;  // std dev = 0.217, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11201649765760988;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5672436877168444;  // std dev = 0.028, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.4345195077253145;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1013491131959849;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.42638987904383097;  // std dev = 0.028, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.3305581255517269;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09248424558034134;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.3267410980141932;  // std dev = 0.025, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.25889256973068037;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08500901836249834;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2592852464737988;  // std dev = 0.022, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.2134267246569402;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07862583500346529;  // std dev = 5.37e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21266077453617477;  // std dev = 0.019, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.18116068253924653;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07311528764667828;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.179224019865271;  // std dev = 0.017, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.15611153482102416;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15435666500609294;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.13697826763459942;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.06831235305657396;  // std dev = 3.49e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else return -0.2826094968347991;  // std dev = 0.525, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0634805379160914;  // std dev = 0.026, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1352654020274633;  // std dev = 0.014, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12069793962891347;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.022', 'seconds']
Refined model CLL: -0.065456


******************************************
Best model found
******************************************
Results 

CLL : -0.078213 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.964 

Total Inference Time : 2.132157325744629 

Total revision time: 9.36070050239563
Best scored revision CLL: -0.065456


Results 

CLL : -0.078213 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 25.409084215164185 

Total Inference Time : 2.132157325744629 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.983
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.20134420137170295;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.20362530239223658;  // std dev = 6.036, 156.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1594188103464652;  // std dev = 6.102, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12003733633619137;  // std dev = 6.162, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0903761836046529;  // std dev = 6.200, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.056425890620274824;  // std dev = 6.278, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04009210990249918;  // std dev = 0.465, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.02696787077990875;  // std dev = 6.325, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04272982398887484;  // std dev = 6.227, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04362449006193476;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.113', 'seconds']
Parameter learned model CLL:-0.37995 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.475, 111, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.036, 98, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.102, 104, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.162, 110, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.2, 114, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.278, 123, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.465, 126, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.325, 129, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.227, 117, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.474, 112, 58], 'false': [0.0, 0, 0]}]
{'': [0.22541227548055062, nan]}
{'': [0.23356344510190596, nan]}
{'': [0.2298430117360171, nan]}
{'': [0.22604875283446818, nan]}
{'': [0.22349918875067765, nan]}
{'': [0.21775892066786576, nan]}
{'': [0.21585538752363065, nan]}
{'': [0.2139609368297621, nan]}
{'': [0.22158367346938623, nan]}
{'': [0.22477508650518918, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.519
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048774;  // std dev = 4.21e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12544463852839108;  // std dev = 8.02e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360622;  // std dev = 8.16e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783628;  // std dev = 3.33e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09269127618926097;  // std dev = 4.94e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 5.87e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109155;  // std dev = 6.91e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07324622576333707;  // std dev = 4.59e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 5.96e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 3.49e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( female(A) )
%   | | then return 0.13400703000801117;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.12409708650350923;  // std dev = 0.043, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.765', 'seconds']
Refined model CLL: -0.064532


******************************************
Best model found
******************************************
Results 

CLL : -0.069767 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.519 

Total Inference Time : 2.756223678588867 

Total revision time: 9.54161181640625
Best scored revision CLL: -0.064532


Results 

CLL : -0.069767 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 25.589995529174807 

Total Inference Time : 2.756223678588867 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.713
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.19914510368188337;  // std dev = 0.474, 522.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14942838735771005;  // std dev = 11.024, 561.000 (wgt'ed) examples reached here.  /* #neg=383 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15719643552482834;  // std dev = 10.781, 513.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13525601316206998;  // std dev = 10.753, 508.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0907758758988496;  // std dev = 10.924, 540.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0720625807844001;  // std dev = 10.938, 543.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0575039964601383;  // std dev = 0.469, 544.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08061178346629812;  // std dev = 10.658, 492.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03683323896627568;  // std dev = 10.883, 532.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04419346555465556;  // std dev = 0.477, 509.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.876', 'seconds']
Parameter learned model CLL:-0.415459 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.474, 344, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [11.024, 383, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.781, 335, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.753, 330, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.924, 362, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.938, 365, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.469, 366, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.658, 314, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.883, 354, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.477, 331, 178], 'false': [0.0, 0, 0]}]
{'': [0.22471778159451875, nan]}
{'': [0.21661725782518837, nan]}
{'': [0.2265844381367082, nan]}
{'': [0.22761795523591216, nan]}
{'': [0.22097393689986292, nan]}
{'': [0.2203500774972918, nan]}
{'': [0.22014219290657466, nan]}
{'': [0.23089761385419114, nan]}
{'': [0.2226383628243574, nan]}
{'': [0.22741150451016864, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 10.551
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.14185106490048835;  // std dev = 0.000, 263.000 (wgt'ed) examples reached here.  /* #neg=263 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.1254446385283918;  // std dev = 0.000, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360626;  // std dev = 4.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.11231637819360676;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783624;  // std dev = 3.33e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.10159632948783658;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.09269127618926065;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.08518475138839679;  // std dev = 7.88e-08, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109179;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.07877675473109146;  // std dev = 6.14e-08, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.07324622576333689;  // std dev = 1.08e-07, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0684269778442027;  // std dev = 1.39e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.06842697784420282;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '32.508', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.551 

Total Inference Time : 4.008794784545898 

Total revision time: 17.71252590560913
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 33.76090961837768 

Total Inference Time : 4.008794784545898 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.83
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.18661608838418378;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.18003451429131384;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1311636614689855;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13235645513741873;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08226309219810145;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10225385070590921;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08249173627529714;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.007581423623196605;  // std dev = 5.628, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05880737983911831;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.01914175109748789;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.082', 'seconds']
Parameter learned model CLL:-0.384769 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.47, 92, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.424, 85, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.516, 94, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.424, 85, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.535, 96, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.39, 82, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.478, 82, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.628, 107, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.413, 84, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 95, 45], 'false': [0.0, 0, 0]}]
{'': [0.22057648249773662, nan]}
{'': [0.2263313609467449, nan]}
{'': [0.21893276745509985, nan]}
{'': [0.22633136094674491, nan]}
{'': [0.21729289271163454, nan]}
{'': [0.22878045756091417, nan]}
{'': [0.2287804575609162, nan]}
{'': [0.20840547091412767, nan]}
{'': [0.2271498107084904, nan]}
{'': [0.2181122448979599, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.553
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.88e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( female(A) )
%   | | then return 0.7748156017661789;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.8295775065280829;  // std dev = 0.167, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1254446385283914;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7278382077391181;  // std dev = 0.031, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.27479629830942615;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360622;  // std dev = 6.23e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5636365315919818;  // std dev = 0.039, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.22352888605339757;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.42369456855112186;  // std dev = 0.039, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.18713303539662565;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A) )
%   | | then return -0.10159632948783616;  // std dev = 5.77e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.22109241489123227;  // std dev = 0.414, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3249173198500626;  // std dev = 0.035, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.16031573748344524;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2580469779006176;  // std dev = 0.030, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.13989089492937626;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.08573805973426792;  // std dev = 0.067, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.21179068105919271;  // std dev = 0.027, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12389111071330623;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A) )
%   | | then return -0.07873660996091132;  // std dev = 2.58e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return -0.14850307083689568;  // std dev = 0.166, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17858889497830974;  // std dev = 0.023, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10999963736755443;  // std dev = 0.007, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.07309959825323907;  // std dev = 0.054, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06797752462590233;  // std dev = 0.012, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15387686617386626;  // std dev = 0.021, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10065407656483776;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13489218315082338;  // std dev = 0.019, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09022582608227665;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( actor(A) )
%   | | then return -0.06419682119884387;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else return -0.16031086396159547;  // std dev = 0.455, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '28.206', 'seconds']
Refined model CLL: -0.066086


******************************************
Best model found
******************************************
Results 

CLL : -0.071755 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 3.553 

Total Inference Time : 1.709181308746338 

Total revision time: 6.970879657745361
Best scored revision CLL: -0.066086


Results 

CLL : -0.071755 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 23.019263370513915 

Total Inference Time : 1.709181308746338 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.834
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17064893509951218;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1645478750646006;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1455995444430276;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13520302951007;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1406663625483404;  // std dev = 5.303, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08833004927699131;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07368294944684872;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.02624487884252412;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0451423931256395;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.015836443418896656;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.948', 'seconds']
Parameter learned model CLL:-0.389822 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.464, 99, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.497, 92, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.477, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.424, 85, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.303, 75, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.413, 84, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.477, 83, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.535, 96, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.435, 86, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.468, 94, 45], 'false': [0.0, 0, 0]}]
{'': [0.214843750000001, nan]}
{'': [0.22057648249773695, nan]}
{'': [0.22222222222222257, nan]}
{'': [0.2263313609467464, nan]}
{'': [0.2343749999999999, nan]}
{'': [0.22714981070849133, nan]}
{'': [0.227966308593751, nan]}
{'': [0.21729289271163463, nan]}
{'': [0.22551133383835378, nan]}
{'': [0.21893276745510146, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.688
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.14185106490048766;  // std dev = 7.74e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1254446385283914;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( female(A) )
%   | | then return 0.6842684934301482;  // std dev = 0.169, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5598005837456403;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.225475638957652;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.1136716949037129;  // std dev = 0.115, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10147269039149508;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4208208179387581;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.18854342392807422;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32296144229569224;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.16153239788711773;  // std dev = 0.007, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.09448221621873766;  // std dev = 0.121, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08494949905018803;  // std dev = 2.98e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2567105763352062;  // std dev = 0.023, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.13968162774871962;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07857471025769948;  // std dev = 3.33e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21084614691119574;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12336137790575248;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07307092454775319;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17789589125836136;  // std dev = 0.017, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11062876427649249;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06827351149734653;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15335099449361722;  // std dev = 0.015, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09914098848897528;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06405641934504454;  // std dev = 1.05e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( actor(A) )
%   | | then if ( movie(E, A), movie(E, B) )
%   | | | then return 0.13448151348411558;  // std dev = 0.014, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09063164646941052;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.2224144617867886;  // std dev = 0.276, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '19.847', 'seconds']
Refined model CLL: -0.065365


******************************************
Best model found
******************************************
Results 

CLL : -0.070783 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.688 

Total Inference Time : 1.4595084190368652 

Total revision time: 6.9060878009796145
Best scored revision CLL: -0.065365


Results 

CLL : -0.070783 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 22.954471513748167 

Total Inference Time : 1.4595084190368652 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.94
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.21257931484634898;  // std dev = 0.478, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13132817083606704;  // std dev = 6.256, 186.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1309343074027306;  // std dev = 6.171, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11003861761397316;  // std dev = 6.171, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10256449435474994;  // std dev = 6.119, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09616343539541895;  // std dev = 6.063, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06563008956437248;  // std dev = 0.471, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.027279239066834413;  // std dev = 6.234, 183.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07243902105543716;  // std dev = 6.002, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.057473852809766426;  // std dev = 0.479, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.261', 'seconds']
Parameter learned model CLL:-0.386309 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.478, 102, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.256, 130, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.171, 119, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.171, 119, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.119, 113, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.063, 107, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 113, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.234, 127, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.002, 101, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.479, 101, 56], 'false': [0.0, 0, 0]}]
{'': [0.2288094856593497, nan]}
{'': [0.21042895132385228, nan]}
{'': [0.21760000000000035, nan]}
{'': [0.21759999999999974, nan]}
{'': [0.22156086971744718, nan]}
{'': [0.22552598893447248, nan]}
{'': [0.22156086971744685, nan]}
{'': [0.2123682403177161, nan]}
{'': [0.22946164144590056, nan]}
{'': [0.22946164144590064, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.213
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048763;  // std dev = 8.43e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1254446385283913;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360624;  // std dev = 7.45e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.2275182985526726;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.19001757973666863;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10230369948982704;  // std dev = 0.088, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.16247682877816094;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.09335230373304922;  // std dev = 0.082, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08507817499372429;  // std dev = 6.75e-08, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1415603370161833;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07868523179389618;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1252144726180555;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1121301248458317;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07623868663180847;  // std dev = 0.327, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06816210014923181;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936708;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10144279806637808;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06395808686272648;  // std dev = 7.45e-09, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( female(A) )
%   | | then return 0.11838153064638812;  // std dev = 0.057, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else return 0.13400703000801084;  // std dev = 2.98e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.462', 'seconds']
Refined model CLL: -0.065364


******************************************
Best model found
******************************************
Results 

CLL : -0.075242 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.213 

Total Inference Time : 2.3335378170013428 

Total revision time: 8.79036915588379
Best scored revision CLL: -0.065364


Results 

CLL : -0.075242 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 8.801443222045899 

Total Inference Time : 2.3335378170013428 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.939
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.18583255091872267;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1771844445253587;  // std dev = 6.172, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11486532446266634;  // std dev = 6.340, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16372736592903508;  // std dev = 6.025, 155.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10022139005858126;  // std dev = 6.191, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05928035955983829;  // std dev = 6.294, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03450492251296309;  // std dev = 0.460, 191.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07765716086779384;  // std dev = 6.123, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.025154062253375974;  // std dev = 6.294, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.02883176962482773;  // std dev = 0.469, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.944', 'seconds']
Parameter learned model CLL:-0.374939 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.469, 119, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.172, 111, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.34, 131, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.025, 97, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.191, 113, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.294, 125, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.46, 133, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.123, 106, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.294, 125, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.469, 120, 58], 'false': [0.0, 0, 0]}]
{'': [0.22030706374285833, nan]}
{'': [0.22541227548055107, nan]}
{'': [0.21270401164581015, nan]}
{'': [0.23417273673257266, nan]}
{'': [0.22413734140419503, nan]}
{'': [0.2164889963868755, nan]}
{'': [0.21145253693703556, nan]}
{'': [0.22858417608566484, nan]}
{'': [0.21648899638687488, nan]}
{'': [0.21966923368261695, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.208
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.69e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839127;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.11231637819360622;  // std dev = 8.02e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783631;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0926912761892609;  // std dev = 6.32e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0851847513883968;  // std dev = 6.23e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( female(A) )
%   | | then return 0.25517224256948945;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2381543928715953;  // std dev = 0.074, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109157;  // std dev = 6.32e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21161499993551394;  // std dev = 0.010, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10599462203577144;  // std dev = 0.002, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 4.47e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17845785068475284;  // std dev = 0.009, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09643633668869994;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 6.14e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15377600770344863;  // std dev = 0.008, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08823944321053157;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13481244261182204;  // std dev = 0.007, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08160656838914149;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06432774872109813;  // std dev = 0.017, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '15.705', 'seconds']
Refined model CLL: -0.065786


******************************************
Best model found
******************************************
Results 

CLL : -0.079916 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.208 

Total Inference Time : 2.147749662399292 

Total revision time: 8.646877452850342
Best scored revision CLL: -0.065786


Results 

CLL : -0.079916 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 8.657951519012451 

Total Inference Time : 2.147749662399292 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.727
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17263656760834176;  // std dev = 0.464, 566.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14483591302295043;  // std dev = 11.090, 576.000 (wgt'ed) examples reached here.  /* #neg=398 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17674266195977978;  // std dev = 10.658, 492.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11766197377824487;  // std dev = 10.914, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07489737641643755;  // std dev = 11.095, 577.000 (wgt'ed) examples reached here.  /* #neg=399 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08235958616335909;  // std dev = 10.924, 540.000 (wgt'ed) examples reached here.  /* #neg=362 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07548678007243313;  // std dev = 0.473, 526.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.061890335451454025;  // std dev = 10.841, 524.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04673082663377371;  // std dev = 10.862, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04619011459139511;  // std dev = 0.476, 514.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.201', 'seconds']
Parameter learned model CLL:-0.409221 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.464, 388, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [11.09, 398, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.658, 314, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.914, 360, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [11.095, 399, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.924, 362, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.473, 348, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.841, 346, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.862, 350, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.476, 336, 178], 'false': [0.0, 0, 0]}]
{'': [0.21558516150782547, nan]}
{'': [0.21352961033951068, nan]}
{'': [0.2308976138541857, nan]}
{'': [0.22138997526291548, nan]}
{'': [0.21332476293744734, nan]}
{'': [0.22097393689986303, nan]}
{'': [0.2238864231086211, nan]}
{'': [0.22430219684167724, nan]}
{'': [0.22347050045913558, nan]}
{'': [0.22637738648578798, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 11.497
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.66e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return -0.14185106490048807;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return -0.12544463852839188;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( director(B), actor(A) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360615;  // std dev = 3.33e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.11231637819360696;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783616;  // std dev = 4.83e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.10159632948783655;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926103;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.09269127618926064;  // std dev = 7.60e-08, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.05e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.08518475138839679;  // std dev = 8.94e-08, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109177;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.07877675473109147;  // std dev = 4.21e-08, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return -0.07324622576333695;  // std dev = 1.03e-07, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420264;  // std dev = 2.47e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.06842697784420289;  // std dev = 0.000, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.459', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.497 

Total Inference Time : 4.261927366256714 

Total revision time: 18.84384348297119
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 18.8549175491333 

Total Inference Time : 4.261927366256714 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.828
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.23950486730290235;  // std dev = 0.486, 118.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11304859364070868;  // std dev = 5.666, 157.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11572759174242857;  // std dev = 5.588, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1372786728326429;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0912752702115366;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05697511119998071;  // std dev = 5.588, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06147115457581468;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.028043513141198535;  // std dev = 5.612, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03067481436101521;  // std dev = 5.579, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03316456002155039;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.038', 'seconds']
Parameter learned model CLL:-0.363983 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.486, 73, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.666, 112, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.588, 102, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.424, 85, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.516, 94, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.588, 102, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 95, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.612, 105, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.579, 101, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.465, 97, 45], 'false': [0.0, 0, 0]}]
{'': [0.2359235851766742, nan]}
{'': [0.20447076960525815, nan]}
{'': [0.21241149521032918, nan]}
{'': [0.22633136094674722, nan]}
{'': [0.21893276745510074, nan]}
{'': [0.21241149521032932, nan]}
{'': [0.21811224489795936, nan]}
{'': [0.209999999999999, nan]}
{'': [0.2132201163445307, nan]}
{'': [0.21647490577266318, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.292
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.14185106490048766;  // std dev = 6.83e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839147;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360624;  // std dev = 5.77e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.10159632948783621;  // std dev = 5.05e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839679;  // std dev = 2.79e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109166;  // std dev = 3.87e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 4.08e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.487', 'seconds']
Refined model CLL: -0.064794


******************************************
Best model found
******************************************
Results 

CLL : -0.068254 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.292 

Total Inference Time : 1.641875982284546 

Total revision time: 6.6567627143859855
Best scored revision CLL: -0.064794


Results 

CLL : -0.068254 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.667836780548095 

Total Inference Time : 1.641875982284546 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.833
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17064893509951218;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15522965795014185;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.142150164776497;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11725347093939019;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1311326396333362;  // std dev = 5.367, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11007506226199452;  // std dev = 5.354, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10081857594484234;  // std dev = 0.484, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05145927914992764;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.046060342369749076;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return -0.021243742827170488;  // std dev = 0.456, 153.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.079', 'seconds']
Parameter learned model CLL:-0.38915 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.464, 99, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.535, 96, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.497, 92, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.507, 93, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.367, 80, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.354, 79, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.484, 75, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.424, 85, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.402, 83, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.456, 108, 45], 'false': [0.0, 0, 0]}]
{'': [0.214843750000001, nan]}
{'': [0.21729289271163557, nan]}
{'': [0.2205764824977367, nan]}
{'': [0.2197542533081284, nan]}
{'': [0.23040000000000035, nan]}
{'': [0.23120447450572287, nan]}
{'': [0.2343750000000002, nan]}
{'': [0.2263313609467459, nan]}
{'': [0.22796630859374967, nan]}
{'': [0.20761245674740428, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.595
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.14185106490048763;  // std dev = 8.02e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1123163781936062;  // std dev = 8.02e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( female(A) )
%   | | then return 0.5275463194571225;  // std dev = 0.133, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.5263367491402023;  // std dev = 0.136, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783616;  // std dev = 5.77e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( female(A) )
%   | | then return 0.3992583584932079;  // std dev = 0.120, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.3984601160193005;  // std dev = 0.123, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B) )
%   | then if ( female(A) )
%   | | then return 0.33083143121619324;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.28351458049268236;  // std dev = 0.158, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else return -0.09269127618926108;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.23831470716808567;  // std dev = 0.114, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.24696521287628623;  // std dev = 0.116, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return -0.08774338820289822;  // std dev = 0.211, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.22208222535625327;  // std dev = 0.024, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.3539307124076321;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08075204747634568;  // std dev = 0.200, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07293905197878912;  // std dev = 2.47e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.18608680362491517;  // std dev = 0.021, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.2811522958051879;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06815803544581645;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15953173974643772;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.22625855332849173;  // std dev = 0.009, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06395449898111055;  // std dev = 3.73e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( female(A) )
%   | | then return 0.12316814874350179;  // std dev = 0.066, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.14177807042021334;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.276', 'seconds']
Refined model CLL: -0.071559


******************************************
Best model found
******************************************
Results 

CLL : -0.084595 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.595 

Total Inference Time : 1.619471549987793 

Total revision time: 6.956285026550293
Best scored revision CLL: -0.071559


Results 

CLL : -0.084595 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.967359092712402 

Total Inference Time : 1.619471549987793 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.742
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.15761417574122452;  // std dev = 0.458, 187.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.19228969529386408;  // std dev = 6.013, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.14534256920221875;  // std dev = 6.101, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.11799485907554973;  // std dev = 6.119, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09557262400023674;  // std dev = 6.128, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.10529289986557865;  // std dev = 6.002, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.051975407092849;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0289805507414716;  // std dev = 6.211, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06865094306626815;  // std dev = 6.002, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.012289228354019922;  // std dev = 0.464, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.868', 'seconds']
Parameter learned model CLL:-0.377439 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.458, 131, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.013, 102, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.101, 111, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.119, 113, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.128, 114, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.002, 101, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.468, 117, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.211, 124, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.002, 101, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.464, 122, 56], 'false': [0.0, 0, 0]}]
{'': [0.20978581028911372, nan]}
{'': [0.22880948565935105, nan]}
{'': [0.22288357416902876, nan]}
{'': [0.22156086971744707, nan]}
{'': [0.22089965397923783, nan]}
{'': [0.2294616414459026, nan]}
{'': [0.21891810618463828, nan]}
{'': [0.21432098765432198, nan]}
{'': [0.22946164144590078, nan]}
{'': [0.2156293397298315, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 2.154
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.14185106490048763;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839133;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 8.69e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783621;  // std dev = 5.27e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.09269127618926101;  // std dev = 3.80e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( female(A) )
%   | | then return 0.3059474498976706;  // std dev = 0.077, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.3069317430485025;  // std dev = 0.074, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2578909301127837;  // std dev = 0.000704, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12189515773617442;  // std dev = 8.60e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( actor(A) )
%   | | then return -0.08518475138839682;  // std dev = 5.27e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else return -0.15671305650785794;  // std dev = 0.392, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07828293406161009;  // std dev = 0.015, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2116763282995727;  // std dev = 0.000614, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10943748402388744;  // std dev = 0.000111, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07288344657639996;  // std dev = 0.014, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17850243629129353;  // std dev = 0.000540, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09918926167906428;  // std dev = 0.000102, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.14514301674962196;  // std dev = 0.045, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.15374780264373325;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( actor(A) )
%   | | then return -0.06848160175813335;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else return -0.14875034184193636;  // std dev = 0.464, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06352142145958739;  // std dev = 0.025, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13533137623656644;  // std dev = 0.004, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10393576469826309;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.322', 'seconds']
Refined model CLL: -0.065015


******************************************
Best model found
******************************************
Results 

CLL : -0.074812 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 2.154 

Total Inference Time : 1.2093884944915771 

Total revision time: 4.951279016494751
Best scored revision CLL: -0.065015


Results 

CLL : -0.074812 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.966021867752075 

Total Inference Time : 1.2093884944915771 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.799
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.17336632640386143;  // std dev = 0.465, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.16713653521716448;  // std dev = 6.227, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.10438504429269513;  // std dev = 6.404, 198.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.12080683304937614;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1177664735044595;  // std dev = 6.172, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.086679466150083;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07409792376567116;  // std dev = 0.473, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.027535522141130222;  // std dev = 6.348, 190.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0462606700594806;  // std dev = 6.236, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.025910613034774335;  // std dev = 0.466, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.854', 'seconds']
Parameter learned model CLL:-0.368319 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.465, 126, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.227, 117, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.404, 140, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.253, 120, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.172, 111, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.218, 116, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.473, 114, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.348, 132, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.236, 118, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.466, 124, 58], 'false': [0.0, 0, 0]}]
{'': [0.21585538752362982, nan]}
{'': [0.22158367346938954, nan]}
{'': [0.20712172227323636, nan]}
{'': [0.21966923368261584, nan]}
{'': [0.22541227548055118, nan]}
{'': [0.22222222222222124, nan]}
{'': [0.22349918875067434, nan]}
{'': [0.212077562326869, nan]}
{'': [0.2209452479338844, nan]}
{'': [0.21712353580485547, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 2.028
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048766;  // std dev = 7.88e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.1254446385283913;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360621;  // std dev = 7.88e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783633;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.09269127618926086;  // std dev = 7.07e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 5.96e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( female(A) )
%   | | then return 0.25517224256948945;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2381543928715953;  // std dev = 0.074, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.21161499993551391;  // std dev = 0.010, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10648034878645173;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.08197474468685753;  // std dev = 0.331, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then return 0.173805646811578;  // std dev = 0.272, 59.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   | else return -0.07323218862772268;  // std dev = 0.025, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06822429631989994;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1543823645115555;  // std dev = 0.008, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11284425045872572;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06401298390897205;  // std dev = 2.98e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13528503632703903;  // std dev = 0.007, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10196623061014436;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.131', 'seconds']
Refined model CLL: -0.065581


******************************************
Best model found
******************************************
Results 

CLL : -0.072806 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.028 

Total Inference Time : 1.2615339756011963 

Total revision time: 4.949071027755737
Best scored revision CLL: -0.065581


Results 

CLL : -0.072806 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.9638138790130615 

Total Inference Time : 1.2615339756011963 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.148
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.2170199028414434;  // std dev = 0.480, 496.000 (wgt'ed) examples reached here.  /* #neg=318 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.16738706925465405;  // std dev = 10.857, 527.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.13065393844044348;  // std dev = 10.953, 546.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.111702629910518;  // std dev = 10.934, 542.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.10085073481551876;  // std dev = 10.862, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08153428183898097;  // std dev = 10.868, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06321478965929347;  // std dev = 0.472, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.03502132807427299;  // std dev = 11.015, 559.000 (wgt'ed) examples reached here.  /* #neg=381 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07048435560647456;  // std dev = 10.665, 493.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.025543517061081635;  // std dev = 0.471, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.745', 'seconds']
Parameter learned model CLL:-0.410266 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.48, 318, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.857, 349, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.953, 368, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.934, 364, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.862, 350, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.868, 351, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.472, 355, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [11.015, 381, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.665, 315, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.471, 360, 178], 'false': [0.0, 0, 0]}]
{'': [0.23008259625390545, nan]}
{'': [0.22367847794072862, nan]}
{'': [0.21972654939687392, nan]}
{'': [0.22055799893792702, nan]}
{'': [0.22347050045914005, nan]}
{'': [0.22326249548850952, nan]}
{'': [0.22243029473157702, nan]}
{'': [0.21703079547236995, nan]}
{'': [0.23069422215273402, nan]}
{'': [0.22138997526291632, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 4.977
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 5.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.1418510649004881;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.12544463852839188;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360629;  // std dev = 3.94e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.11231637819360685;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783627;  // std dev = 2.98e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.10159632948783655;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.09269127618926061;  // std dev = 4.71e-08, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return -0.08518475138839678;  // std dev = 7.88e-08, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109175;  // std dev = 2.11e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.07877675473109146;  // std dev = 5.16e-08, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.07324622576333682;  // std dev = 1.03e-07, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0684269778442027;  // std dev = 1.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.06842697784420289;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.765', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.977 

Total Inference Time : 1.9348540306091309 

Total revision time: 9.013242959976196
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 9.02798581123352 

Total Inference Time : 1.9348540306091309 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.596
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.18423589162125137;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.13826417388117607;  // std dev = 5.596, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.14028162008946482;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1278530175913028;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.13018662636503137;  // std dev = 5.367, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.052460971860664195;  // std dev = 5.588, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08511626789279798;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08232625123123358;  // std dev = 5.354, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.035842529654542425;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.025846863109403116;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.263', 'seconds']
Parameter learned model CLL:-0.390389 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.469, 93, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.596, 103, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.507, 93, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.467, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.367, 80, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.588, 102, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.477, 84, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.354, 79, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.477, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.471, 91, 45], 'false': [0.0, 0, 0]}]
{'': [0.21975425330812953, nan]}
{'': [0.2116051862673498, nan]}
{'': [0.2197542533081274, nan]}
{'': [0.22304522165292998, nan]}
{'': [0.2303999999999993, nan]}
{'': [0.21241149521033031, nan]}
{'': [0.22714981070849138, nan]}
{'': [0.23120447450572368, nan]}
{'': [0.22222222222222196, nan]}
{'': [0.22139922145328692, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 1.769
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048766;  // std dev = 7.88e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12544463852839152;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360622;  // std dev = 6.83e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.10159632948783624;  // std dev = 4.71e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.09269127618926101;  // std dev = 3.49e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.08649982395412571;  // std dev = 0.130, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.19372802283455617;  // std dev = 0.066, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return -0.08048192874556641;  // std dev = 0.122, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17887066640612584;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09437668257576948;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07432432884756703;  // std dev = 0.115, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15408856733441173;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08661331827378674;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.0693534251365208;  // std dev = 0.109, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06389065444348051;  // std dev = 7.45e-09, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13505605529953996;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08004436158205348;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.558', 'seconds']
Refined model CLL: -0.064782


******************************************
Best model found
******************************************
Results 

CLL : -0.066264 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.769 

Total Inference Time : 1.0156331062316895 

Total revision time: 4.070134153366089
Best scored revision CLL: -0.064782


Results 

CLL : -0.066264 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.084877004623413 

Total Inference Time : 1.0156331062316895 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.592
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.164271384079104;  // std dev = 0.461, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.16069389839760193;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.15997527857367738;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.12670441618958933;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.10735582318511001;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.12803895820790448;  // std dev = 5.276, 118.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07885297376352739;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.03648196859436053;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return -0.007917512003593344;  // std dev = 5.636, 153.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.04054040122136465;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.234', 'seconds']
Parameter learned model CLL:-0.386672 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.461, 102, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.516, 94, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.424, 85, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.457, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.446, 87, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.276, 73, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.479, 81, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.487, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.636, 108, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.474, 87, 45], 'false': [0.0, 0, 0]}]
{'': [0.21241149521033006, nan]}
{'': [0.21893276745509932, nan]}
{'': [0.22633136094674552, nan]}
{'': [0.22386794052801076, nan]}
{'': [0.2246900826446276, nan]}
{'': [0.2359235851766722, nan]}
{'': [0.22959183673469477, nan]}
{'': [0.22139922145328658, nan]}
{'': [0.20761245674740514, nan]}
{'': [0.2246900826446292, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 1.55
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048768;  // std dev = 6.32e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.1254446385283914;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11231637819360622;  // std dev = 6.83e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10272040999282123;  // std dev = 0.106, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.09259678473713365;  // std dev = 5.37e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08510455151359615;  // std dev = 4.21e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.1977354460340511;  // std dev = 0.058, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.19721273866020397;  // std dev = 0.059, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else return -0.07870771751327281;  // std dev = 1.26e-05, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07318648884824432;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( female(A) )
%   | | then return 0.1674707515319418;  // std dev = 0.055, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.1789321307316314;  // std dev = 1.83e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.15556650523914325;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.13205986120520352;  // std dev = 0.073, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else return -0.07109194858956251;  // std dev = 0.249, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06398277438668233;  // std dev = 2.36e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( female(A) )
%   | | then return 0.12528844604797393;  // std dev = 0.052, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.13769223985885407;  // std dev = 2.24e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.306', 'seconds']
Refined model CLL: -0.067711


******************************************
Best model found
******************************************
Results 

CLL : -0.074856 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.55 

Total Inference Time : 0.9032104015350342 

Total revision time: 3.7478428287506107
Best scored revision CLL: -0.067711


Results 

CLL : -0.074856 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.762585680007935 

Total Inference Time : 0.9032104015350342 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.932
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1781489350995135;  // std dev = 0.466, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16641120284506197;  // std dev = 6.119, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12368338455587209;  // std dev = 6.203, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07539498772753442;  // std dev = 6.331, 197.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12839912265802775;  // std dev = 6.033, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0773017456206022;  // std dev = 6.163, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0762310777794507;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05541328354314667;  // std dev = 6.128, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.042326999651275135;  // std dev = 6.137, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return -0.006684827756209209;  // std dev = 0.452, 195.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.064', 'seconds']
Parameter learned model CLL:-0.360693 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.466, 119, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.119, 113, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.203, 123, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.331, 141, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.033, 104, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.163, 118, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.472, 111, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.128, 114, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.137, 115, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.452, 139, 56], 'false': [0.0, 0, 0]}]
{'': [0.2176000000000004, nan]}
{'': [0.22156086971744715, nan]}
{'': [0.2149745638400776, nan]}
{'': [0.20345796078229028, nan]}
{'': [0.22750000000000078, nan]}
{'': [0.21825868674857854, nan]}
{'': [0.22288357416902807, nan]}
{'': [0.22089965397923828, nan]}
{'': [0.22023870592661043, nan]}
{'': [0.20470742932281275, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.339
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.60e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1254446385283913;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1150181439258022;  // std dev = 0.331, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1013499924355342;  // std dev = 5.37e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( female(A) )
%   | | then return 0.39897394438523337;  // std dev = 0.096, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.40020992037010517;  // std dev = 0.093, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0924849820328889;  // std dev = 2.79e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( female(A) )
%   | | then return 0.3080145779256145;  // std dev = 0.087, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.3244931866139112;  // std dev = 3.65e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08500964358217171;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( female(A) )
%   | | then return 0.24516513890375152;  // std dev = 0.083, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.25775078433578247;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07862637201705185;  // std dev = 2.11e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2140357781035964;  // std dev = 0.019, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.22662657115379678;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07311575361664177;  // std dev = 2.98e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1802290976545298;  // std dev = 0.017, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.19312988595802655;  // std dev = 0.006, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15511687426338439;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1628674206948266;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06936651120366921;  // std dev = 0.096, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06402787843970016;  // std dev = 6.01e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13585741106157054;  // std dev = 0.013, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1424791129472574;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.598', 'seconds']
Refined model CLL: -0.066987


******************************************
Best model found
******************************************
Results 

CLL : -0.086014 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.339 

Total Inference Time : 2.1565451622009277 

Total revision time: 8.651664348602296
Best scored revision CLL: -0.066987


Results 

CLL : -0.086014 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 8.664616437911988 

Total Inference Time : 2.1565451622009277 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.971
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.18957750652808503;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.19597003582375855;  // std dev = 6.081, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14766252966408167;  // std dev = 6.172, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1174020436482109;  // std dev = 6.200, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13359264215058284;  // std dev = 6.025, 155.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0394159127101563;  // std dev = 6.348, 190.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04861142794487434;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03356211247837624;  // std dev = 6.294, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.045017452268994486;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04770223909939085;  // std dev = 0.476, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.955', 'seconds']
Parameter learned model CLL:-0.383994 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 117, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.081, 102, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.172, 111, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.2, 114, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.025, 97, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.348, 132, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 122, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.294, 125, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.209, 115, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.476, 109, 58], 'false': [0.0, 0, 0]}]
{'': [0.22158367346938804, nan]}
{'': [0.23109374999999982, nan]}
{'': [0.22541227548055126, nan]}
{'': [0.2234991887506772, nan]}
{'': [0.2341727367325716, nan]}
{'': [0.2120775623268704, nan]}
{'': [0.2183950617283941, nan]}
{'': [0.2164889963868725, nan]}
{'': [0.22286077049016187, nan]}
{'': [0.22668435583922053, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.451
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.12544463852839133;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.11231637819360621;  // std dev = 8.43e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09269127618926098;  // std dev = 4.21e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0851847513883968;  // std dev = 6.50e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.0787767547310916;  // std dev = 6.05e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07324622576333711;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06842697784420265;  // std dev = 5.37e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.745', 'seconds']
Refined model CLL: -0.064134


******************************************
Best model found
******************************************
Results 

CLL : -0.070679 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.451 

Total Inference Time : 2.5614013671875 

Total revision time: 9.280867168426514
Best scored revision CLL: -0.064134


Results 

CLL : -0.070679 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 9.293819257736207 

Total Inference Time : 2.5614013671875 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.684
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.19527014722072;  // std dev = 0.473, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1685274661658421;  // std dev = 10.873, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13150224391529203;  // std dev = 10.972, 550.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1342811966191681;  // std dev = 10.776, 512.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10487140563645504;  // std dev = 10.825, 521.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06679826120395783;  // std dev = 10.977, 551.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07644366891135299;  // std dev = 0.476, 515.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.055855824944322834;  // std dev = 10.836, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04763577922625294;  // std dev = 10.809, 518.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.029201101059445136;  // std dev = 0.472, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.058', 'seconds']
Parameter learned model CLL:-0.412105 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.473, 350, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.873, 352, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.972, 372, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.776, 334, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.825, 343, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.977, 373, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.476, 337, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.836, 345, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.809, 340, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.472, 353, 178], 'false': [0.0, 0, 0]}]
{'': [0.22347050045913994, nan]}
{'': [0.22305446778213445, nan]}
{'': [0.2188958677685914, nan]}
{'': [0.22679138183593928, nan]}
{'': [0.22492549025386893, nan]}
{'': [0.21868834424129027, nan]}
{'': [0.2261702328211917, nan]}
{'': [0.22451001539141585, nan]}
{'': [0.22554821782620854, nan]}
{'': [0.22284642202290547, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 11.237
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( actor(A), director(B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1418510649004877;  // std dev = 4.94e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return -0.14185106490048796;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839116;  // std dev = 6.66e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.12544463852839194;  // std dev = 0.000, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360629;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.11231637819360678;  // std dev = 0.000, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783621;  // std dev = 3.94e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.10159632948783644;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.0926912761892607;  // std dev = 1.03e-07, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.08518475138839678;  // std dev = 8.69e-08, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109175;  // std dev = 2.11e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.07877675473109147;  // std dev = 5.16e-08, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.0732462257633368;  // std dev = 1.06e-07, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 2.24e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.0684269778442028;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '36.768', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.237 

Total Inference Time : 4.378803968429565 

Total revision time: 18.580221410751342
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 18.593173500061035 

Total Inference Time : 4.378803968429565 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.781
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16016235791830408;  // std dev = 0.459, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16839519708088602;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16211374087042574;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12830989301581489;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1112847854174239;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08289219624070908;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05934602635061266;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.02478614025671679;  // std dev = 5.579, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04732691624829151;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04520652635400091;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.068', 'seconds']
Parameter learned model CLL:-0.386788 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.459, 104, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.487, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.413, 84, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.446, 87, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.424, 85, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.457, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.579, 101, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.467, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.475, 86, 45], 'false': [0.0, 0, 0]}]
{'': [0.21080131525607057, nan]}
{'': [0.22139922145328855, nan]}
{'': [0.2271498107084922, nan]}
{'': [0.22469008264462753, nan]}
{'': [0.22633136094674508, nan]}
{'': [0.2238679405280116, nan]}
{'': [0.22139922145328736, nan]}
{'': [0.2132201163445299, nan]}
{'': [0.22304522165292884, nan]}
{'': [0.2255113338383543, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.663
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.7748156017661789;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.8295775065280829;  // std dev = 0.167, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return -0.14185106490048766;  // std dev = 7.15e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839147;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( female(A) )
%   | | then return 0.735981226434616;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.6966322731191457;  // std dev = 0.167, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5689466436541692;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.43071754442121346;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11470804502930067;  // std dev = 0.156, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10137823916766303;  // std dev = 4.21e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( female(A) )
%   | | then return 0.36735607593530567;  // std dev = 0.209, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.40509751717604303;  // std dev = 0.126, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( director(B), actor(A) )
%   | | then return 0.3346617657479175;  // std dev = 0.034, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10280897456324098;  // std dev = 0.180, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( actor(B) )
%   | | then return -0.0925086410279701;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return -0.42084877747871186;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.26467692730986075;  // std dev = 0.030, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.3226980392104064;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.08703464537099057;  // std dev = 0.172, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.21645404924207184;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.2580521718760576;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07961286567569308;  // std dev = 0.109, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07267571493756118;  // std dev = 0.003, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.18199530275359585;  // std dev = 0.023, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.21273739742782746;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06797026817525118;  // std dev = 0.002, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15645181749297724;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1765214148308665;  // std dev = 0.009, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06382143224761938;  // std dev = 0.002, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13689639319662572;  // std dev = 0.018, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1557405924012432;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.485', 'seconds']
Refined model CLL: -0.069475


******************************************
Best model found
******************************************
Results 

CLL : -0.073929 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.663 

Total Inference Time : 1.6942687034606934 

Total revision time: 7.0325469913482666
Best scored revision CLL: -0.069475


Results 

CLL : -0.073929 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 7.045499080657959 

Total Inference Time : 1.6942687034606934 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.796
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17957750652808366;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1585943957752261;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14269447127904988;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11046609985060966;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08921203448485945;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0847700547947123;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04187731075586625;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05810937625266121;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.046494740259348716;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07437306281803527;  // std dev = 0.482, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.893', 'seconds']
Parameter learned model CLL:-0.384141 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 95, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.516, 94, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.487, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.526, 95, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.535, 96, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.487, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.46, 103, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.497, 92, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.497, 92, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.482, 78, 45], 'false': [0.0, 0, 0]}]
{'': [0.2181122448979602, nan]}
{'': [0.21893276745510207, nan]}
{'': [0.2213992214532869, nan]}
{'': [0.21811224489795875, nan]}
{'': [0.21729289271163538, nan]}
{'': [0.22139922145328803, nan]}
{'': [0.21160518626734715, nan]}
{'': [0.22057648249773568, nan]}
{'': [0.22057648249773446, nan]}
{'': [0.23200475907198156, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.484
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.14185106490048766;  // std dev = 6.83e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.12544463852839133;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11231637819360624;  // std dev = 6.14e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783619;  // std dev = 5.05e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09269127618926108;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14652771257609323;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 4.94e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1291352689757512;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109162;  // std dev = 4.94e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11529486901823491;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10404596413741515;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07460229309979684;  // std dev = 0.109, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06834058627588034;  // std dev = 1.05e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09473859223841927;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08691955874622978;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.067058307042416;  // std dev = 0.183, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.144', 'seconds']
Refined model CLL: -0.064507


******************************************
Best model found
******************************************
Results 

CLL : -0.066691 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.484 

Total Inference Time : 1.7544817924499512 

Total revision time: 6.939375905990601
Best scored revision CLL: -0.064507


Results 

CLL : -0.066691 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 6.952327995300293 

Total Inference Time : 1.7544817924499512 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.014
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16249676118646986;  // std dev = 0.460, 184.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.2032079882314346;  // std dev = 5.958, 153.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.18340860964924963;  // std dev = 5.912, 149.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10881425197343492;  // std dev = 6.119, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11703428786978873;  // std dev = 5.991, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05055953960964495;  // std dev = 6.195, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06747468413982954;  // std dev = 0.474, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.025235834340090933;  // std dev = 6.203, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0253702872023028;  // std dev = 6.179, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.014756655286556127;  // std dev = 0.464, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.015', 'seconds']
Parameter learned model CLL:-0.372386 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.46, 128, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.958, 97, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.912, 93, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.119, 113, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.991, 100, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.195, 122, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.474, 108, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.203, 123, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.179, 120, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.464, 123, 56], 'false': [0.0, 0, 0]}]
{'': [0.21172022684310066, nan]}
{'': [0.23204750309709918, nan]}
{'': [0.23458402774649734, nan]}
{'': [0.2215608697174457, nan]}
{'': [0.23011176857330568, nan]}
{'': [0.21562933972983317, nan]}
{'': [0.22486615110053576, nan]}
{'': [0.21497456384007899, nan]}
{'': [0.21694214876032963, nan]}
{'': [0.21497456384008082, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.587
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.69e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 8.82e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783633;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.09269127618926105;  // std dev = 1.49e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 5.48e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.19945291311954882;  // std dev = 0.054, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.20013989995374792;  // std dev = 0.052, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else if ( actor(A) )
%   | | then return -0.07877675473109157;  // std dev = 6.32e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( female(B) )
%   | | | then return -0.0787767547310918;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.20574345521478588;  // std dev = 0.568, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1785510711455671;  // std dev = 0.000377, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09458071492239328;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.0730129324733436;  // std dev = 0.014, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15384640506020278;  // std dev = 0.000334, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.0867750878804535;  // std dev = 4.87e-05, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06812512280861856;  // std dev = 0.017, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06385680695254702;  // std dev = 0.017, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13486718428300848;  // std dev = 0.000300, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.0801507662137726;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.097', 'seconds']
Refined model CLL: -0.064696


******************************************
Best model found
******************************************
Results 

CLL : -0.075745 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.587 

Total Inference Time : 2.6243138313293457 

Total revision time: 9.468456674575805
Best scored revision CLL: -0.064696


Results 

CLL : -0.075745 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 25.517011571884154 

Total Inference Time : 2.6243138313293457 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.031
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1821712814682287;  // std dev = 0.468, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15671768806345132;  // std dev = 6.270, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15489781145812695;  // std dev = 6.172, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1055601191777948;  // std dev = 6.286, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07715158425031579;  // std dev = 6.333, 188.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0823212496800237;  // std dev = 6.245, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08847526533992228;  // std dev = 0.477, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.033486806965511796;  // std dev = 6.318, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05605925106787392;  // std dev = 6.182, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07994360179372131;  // std dev = 0.485, 154.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.845', 'seconds']
Parameter learned model CLL:-0.389384 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.468, 121, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.27, 122, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.172, 111, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.286, 124, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.333, 130, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.245, 119, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.477, 108, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.318, 128, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.182, 112, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.485, 96, 58], 'false': [0.0, 0, 0]}]
{'': [0.2190318654224278, nan]}
{'': [0.21839506172839648, nan]}
{'': [0.22541227548054837, nan]}
{'': [0.21712353580485605, nan]}
{'': [0.21333182435491024, nan]}
{'': [0.2203070637428564, nan]}
{'': [0.22731891421105943, nan]}
{'': [0.21459128222915894, nan]}
{'': [0.22477508650519099, nan]}
{'': [0.2347782088041823, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.036
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048788;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1254446385283911;  // std dev = 7.45e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360617;  // std dev = 9.54e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783628;  // std dev = 3.33e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09269127618926094;  // std dev = 5.16e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839682;  // std dev = 5.67e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07877675473109161;  // std dev = 5.67e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07324622576333714;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 4.71e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.06419184008202619;  // std dev = 5.89e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.884', 'seconds']
Refined model CLL: -0.065318


******************************************
Best model found
******************************************
Results 

CLL : -0.08141 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.036 

Total Inference Time : 2.0754990577697754 

Total revision time: 8.490522472381592
Best scored revision CLL: -0.065318


Results 

CLL : -0.08141 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 24.53907736968994 

Total Inference Time : 2.0754990577697754 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.748
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1794485740886775;  // std dev = 0.467, 554.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.165726182729944;  // std dev = 10.914, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1367472590164296;  // std dev = 10.953, 546.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12855641192830602;  // std dev = 10.841, 524.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10187205938885668;  // std dev = 10.878, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08378790780218696;  // std dev = 10.873, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09958573353179433;  // std dev = 0.482, 484.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03139652262557085;  // std dev = 11.005, 557.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05368107210620843;  // std dev = 10.770, 511.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.02739946335802845;  // std dev = 0.471, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.895', 'seconds']
Parameter learned model CLL:-0.411527 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 376, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.914, 360, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.953, 368, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.841, 346, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.878, 353, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.873, 352, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.482, 306, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [11.005, 379, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.77, 333, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 356, 178], 'false': [0.0, 0, 0]}]
{'': [0.2180661809746019, nan]}
{'': [0.22138997526292034, nan]}
{'': [0.21972654939687744, nan]}
{'': [0.2243021968416787, nan]}
{'': [0.22284642202290117, nan]}
{'': [0.22305446778213117, nan]}
{'': [0.2325148555426546, nan]}
{'': [0.21744469764608296, nan]}
{'': [0.2269982115570936, nan]}
{'': [0.2222222222222205, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 11.245
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.99e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return -0.14185106490048824;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return -0.12544463852839186;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360625;  // std dev = 5.37e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.11231637819360685;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783621;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.10159632948783644;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return -0.09269127618926061;  // std dev = 4.21e-08, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.08518475138839678;  // std dev = 8.43e-08, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109166;  // std dev = 3.87e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return -0.07877675473109146;  // std dev = 6.14e-08, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.07324622576333682;  // std dev = 1.00e-07, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0684269778442027;  // std dev = 1.39e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.0684269778442027;  // std dev = 0.000, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.720', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.245 

Total Inference Time : 4.078185081481934 

Total revision time: 18.40397283363342
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 34.45252773094177 

Total Inference Time : 4.078185081481934 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.766
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.18903128804068875;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13354583590405908;  // std dev = 5.612, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1576944561339747;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10603792757650884;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1067721831962906;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0662394574050558;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12359635436150783;  // std dev = 0.487, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06877798032571597;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.02867850861486133;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.015585517742680922;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.919', 'seconds']
Parameter learned model CLL:-0.388539 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.612, 105, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.435, 86, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.544, 97, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.467, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.553, 98, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.487, 72, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.39, 82, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.497, 92, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 95, 45], 'false': [0.0, 0, 0]}]
{'': [0.2213992214532882, nan]}
{'': [0.210000000000002, nan]}
{'': [0.22551133383835364, nan]}
{'': [0.21647490577266468, nan]}
{'': [0.22304522165292942, nan]}
{'': [0.21565846740671918, nan]}
{'': [0.23668639053254414, nan]}
{'': [0.22878045756091406, nan]}
{'': [0.22057648249773523, nan]}
{'': [0.21811224489795944, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.518
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1254446385283915;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.11231637819360624;  // std dev = 6.50e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10159632948783623;  // std dev = 4.47e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09269127618926107;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08518475138839679;  // std dev = 2.79e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109168;  // std dev = 3.57e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07407042947054202;  // std dev = 0.064, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06837445788880361;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.06414546749217809;  // std dev = 3.14e-06, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '31.631', 'seconds']
Refined model CLL: -0.063988


******************************************
Best model found
******************************************
Results 

CLL : -0.064824 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.518 

Total Inference Time : 1.9136574268341064 

Total revision time: 7.076066812515259
Best scored revision CLL: -0.063988


Results 

CLL : -0.064824 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 23.124621709823607 

Total Inference Time : 1.9136574268341064 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.857
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17283424978482687;  // std dev = 0.464, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17929245532831176;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17552457473855881;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1272983910996742;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10211712879212977;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07776143707573197;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05024303900465211;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03543624385360475;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08486830001314298;  // std dev = 5.290, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return -0.013163386620926549;  // std dev = 0.457, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.959', 'seconds']
Parameter learned model CLL:-0.385872 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.464, 98, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.435, 86, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.342, 78, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.424, 85, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.435, 86, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.457, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.469, 93, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.526, 95, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.29, 74, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.457, 106, 45], 'false': [0.0, 0, 0]}]
{'': [0.21565846740672015, nan]}
{'': [0.22551133383835364, nan]}
{'': [0.23200475907198012, nan]}
{'': [0.22633136094674491, nan]}
{'': [0.2255113338383551, nan]}
{'': [0.22386794052801187, nan]}
{'': [0.21975425330812964, nan]}
{'': [0.21811224489795883, nan]}
{'': [0.23515288468328466, nan]}
{'': [0.20920135081794636, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.45
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.69e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( female(A) )
%   | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.8146706742299468;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7237223348029779;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.2761810987744761;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12951105439593363;  // std dev = 0.204, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11191158950068926;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5595550873766879;  // std dev = 0.036, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.2237415698198145;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10126260345648956;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( female(A) )
%   | | then return 0.41546303948912644;  // std dev = 6.66e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.375167946916748;  // std dev = 0.169, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09241178013274821;  // std dev = 4.47e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32835542011354285;  // std dev = 0.062, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.25981378845320097;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08494749453418944;  // std dev = 2.11e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( female(A) )
%   | | then return 0.23297208952382129;  // std dev = 0.094, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.26865221247992466;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.21508536109681065;  // std dev = 0.027, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.25634180456510847;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then return -0.07857298837375824;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( female(B) )
%   | | | then return -0.0785729883737582;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1834061674690312;  // std dev = 0.469, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07277420181669435;  // std dev = 0.013, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.18099724417610033;  // std dev = 0.024, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.2105867936794635;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06809173973673607;  // std dev = 0.011, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1556984942061922;  // std dev = 0.021, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.17712533778872244;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06401140932755027;  // std dev = 0.006, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( female(A) )
%   | | then return 0.12152643492915095;  // std dev = 0.058, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.12669040612036805;  // std dev = 0.059, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.052', 'seconds']
Refined model CLL: -0.070276


******************************************
Best model found
******************************************
Results 

CLL : -0.086166 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.45 

Total Inference Time : 1.397369384765625 

Total revision time: 6.620530683517456
Best scored revision CLL: -0.070276


Results 

CLL : -0.086166 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 22.669085580825808 

Total Inference Time : 1.397369384765625 

Run: 5
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.963
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.18184835706483143;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13561532982918098;  // std dev = 6.256, 186.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12434763539361351;  // std dev = 6.219, 181.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13485909206727678;  // std dev = 6.082, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1484878899843537;  // std dev = 5.912, 149.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07884991487322893;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.037962093122385444;  // std dev = 0.462, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10893403894730426;  // std dev = 5.863, 145.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.02037739975080897;  // std dev = 6.171, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.008933004129393402;  // std dev = 0.464, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.236', 'seconds']
Parameter learned model CLL:-0.378655 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.468, 117, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.256, 130, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.219, 125, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.082, 109, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.912, 93, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.11, 112, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.462, 126, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.863, 89, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.171, 119, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.464, 123, 56], 'false': [0.0, 0, 0]}]
{'': [0.21891810618463733, nan]}
{'': [0.21042895132385353, nan]}
{'': [0.21366869143188325, nan]}
{'': [0.224205693296604, nan]}
{'': [0.23458402774649892, nan]}
{'': [0.22222222222222354, nan]}
{'': [0.2130177514792907, nan]}
{'': [0.23705112960760993, nan]}
{'': [0.2176000000000011, nan]}
{'': [0.21497456384007887, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.144
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.69e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839136;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 8.82e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.22751829855267264;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783637;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1900175797366686;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.092691276189261;  // std dev = 3.65e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.16247682877816094;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0851847513883968;  // std dev = 6.14e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( female(A) )
%   | | then return 0.24100322187000126;  // std dev = 0.074, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.25517224256948956;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.210894756780657;  // std dev = 0.009, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.17480817842238347;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07973429598823403;  // std dev = 0.096, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07318125325322816;  // std dev = 1.83e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( female(A) )
%   | | then return 0.16726081385066394;  // std dev = 0.061, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.165979480394195;  // std dev = 0.059, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06837010320587382;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15485321228859328;  // std dev = 0.006, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.17329148761230787;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06414165717383181;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13565171767272505;  // std dev = 0.006, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.15067223763697352;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.707', 'seconds']
Refined model CLL: -0.067734


******************************************
Best model found
******************************************
Results 

CLL : -0.09177 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.144 

Total Inference Time : 1.830822229385376 

Total revision time: 8.142616636276244
Best scored revision CLL: -0.067734


Results 

CLL : -0.09177 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 8.154088384628295 

Total Inference Time : 1.830822229385376 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.996
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1699768920887609;  // std dev = 0.463, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14800076129345824;  // std dev = 6.318, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16427544026736488;  // std dev = 6.143, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14032175772912736;  // std dev = 6.133, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14110789946199143;  // std dev = 6.013, 154.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04340194992203271;  // std dev = 6.348, 190.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08332190039780794;  // std dev = 0.478, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03875964900222099;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04017926998323964;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04589088872211953;  // std dev = 0.477, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.072', 'seconds']
Parameter learned model CLL:-0.388925 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.463, 128, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.318, 128, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.143, 108, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.133, 107, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.013, 96, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.348, 132, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.478, 106, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.253, 120, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.209, 115, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.477, 108, 58], 'false': [0.0, 0, 0]}]
{'': [0.2145912822291598, nan]}
{'': [0.2145912822291607, nan]}
{'': [0.22731891421105996, nan]}
{'': [0.2279522497704301, nan]}
{'': [0.23477820880418132, nan]}
{'': [0.2120775623268712, nan]}
{'': [0.2285841760856639, nan]}
{'': [0.21966923368261465, nan]}
{'': [0.22286077049016098, nan]}
{'': [0.22731891421106074, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.344
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 6.32e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839127;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360618;  // std dev = 9.06e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.1015963294878362;  // std dev = 5.37e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.09269127618926086;  // std dev = 6.99e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0851847513883968;  // std dev = 6.50e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( female(A) )
%   | | then return 0.25517224256948945;  // std dev = 1.49e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.2381543928715953;  // std dev = 0.074, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.19667935188012833;  // std dev = 0.069, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | else return -0.0792140563485045;  // std dev = 0.038, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07321654673688817;  // std dev = 2.69e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17999807697718487;  // std dev = 0.016, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12658704178795152;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06840099862420329;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15494211928300833;  // std dev = 0.014, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11281800620881888;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06416891810127477;  // std dev = 5.00e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13572130655428005;  // std dev = 0.013, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10281359432726882;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.224', 'seconds']
Refined model CLL: -0.066383


******************************************
Best model found
******************************************
Results 

CLL : -0.07877 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.344 

Total Inference Time : 2.334777593612671 

Total revision time: 8.927809801101684
Best scored revision CLL: -0.066383


Results 

CLL : -0.07877 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 8.939281549453735 

Total Inference Time : 2.334777593612671 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.805
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.2004566274072002;  // std dev = 0.474, 520.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17164921196851793;  // std dev = 10.841, 524.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14115945569587648;  // std dev = 10.883, 532.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13676859450522036;  // std dev = 10.730, 504.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08852505954224996;  // std dev = 10.929, 541.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09614043884809284;  // std dev = 10.730, 504.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04959315437175329;  // std dev = 0.469, 547.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0551628324379829;  // std dev = 10.831, 522.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.027000294811171787;  // std dev = 10.968, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05453355674307788;  // std dev = 0.479, 498.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.087', 'seconds']
Parameter learned model CLL:-0.41492 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.474, 342, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.841, 346, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.883, 354, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.73, 326, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.929, 363, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.73, 326, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.469, 369, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.831, 344, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.968, 371, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.479, 320, 178], 'false': [0.0, 0, 0]}]
{'': [0.2251331360946777, nan]}
{'': [0.22430219684167307, nan]}
{'': [0.2226383628243572, nan]}
{'': [0.22844230284706876, nan]}
{'': [0.22076595337586208, nan]}
{'': [0.22844230284706957, nan]}
{'': [0.21951879789712375, nan]}
{'': [0.22471778159451142, nan]}
{'': [0.21910345353864366, nan]}
{'': [0.2296737149400768, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 10.452
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 5.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.1418510649004883;  // std dev = 0.000, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.12544463852839183;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360632;  // std dev = 2.79e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.11231637819360679;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783617;  // std dev = 4.71e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.10159632948783655;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.09269127618926062;  // std dev = 3.65e-08, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.67e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.08518475138839678;  // std dev = 7.88e-08, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109176;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.07877675473109144;  // std dev = 6.32e-08, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.07324622576333696;  // std dev = 9.88e-08, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 1.67e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.06842697784420268;  // std dev = 1.49e-08, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '31.191', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.452 

Total Inference Time : 4.1132423877716064 

Total revision time: 17.701044113159178
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 17.71251586151123 

Total Inference Time : 4.1132423877716064 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.828
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1581489350995121;  // std dev = 0.458, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17111998811631218;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14898937619249286;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11793848744835439;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12634352005541022;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.029031820814502115;  // std dev = 5.680, 159.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06421390044548443;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06885265068729118;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.028781315541562873;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03192490909852841;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.913', 'seconds']
Parameter learned model CLL:-0.374339 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.458, 105, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.477, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.467, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.497, 92, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.379, 81, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.68, 114, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.468, 94, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.446, 87, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.553, 98, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.468, 94, 45], 'false': [0.0, 0, 0]}]
{'': [0.21000000000000105, nan]}
{'': [0.222222222222222, nan]}
{'': [0.2230452216529296, nan]}
{'': [0.22057648249773681, nan]}
{'': [0.2295918367346945, nan]}
{'': [0.20291918832324746, nan]}
{'': [0.21893276745510082, nan]}
{'': [0.22469008264462825, nan]}
{'': [0.21565846740671898, nan]}
{'': [0.21893276745509982, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.495
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.60e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839144;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 7.45e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.1015963294878362;  // std dev = 5.37e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09269127618926103;  // std dev = 3.16e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.08518475138839682;  // std dev = 4.94e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109162;  // std dev = 5.16e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333707;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else return -0.1574962927378645;  // std dev = 0.206, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06813924888734899;  // std dev = 0.010, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( female(A) )
%   | | then return 0.11871757564169022;  // std dev = 0.080, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else return 0.15274385809367083;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13498434956306804;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07761124534650773;  // std dev = 0.003, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.06389497434521042;  // std dev = 0.015, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '23.070', 'seconds']
Refined model CLL: -0.066367


******************************************
Best model found
******************************************
Results 

CLL : -0.073732 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 3.495 

Total Inference Time : 1.5637962818145752 

Total revision time: 6.758823440551758
Best scored revision CLL: -0.066367


Results 

CLL : -0.073732 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 6.770295188903809 

Total Inference Time : 1.5637962818145752 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.894
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.21529179224236955;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17602412802179593;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12045971394480429;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10074790148165416;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0996227614402774;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09953984444403409;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06457564472219922;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03048849450144948;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0479062096662726;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.037935290632261975;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.223', 'seconds']
Parameter learned model CLL:-0.385981 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.479, 81, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.424, 85, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.544, 97, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.544, 97, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.477, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.402, 83, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.472, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.553, 98, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.457, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.473, 88, 45], 'false': [0.0, 0, 0]}]
{'': [0.2295918367346948, nan]}
{'': [0.22633136094674522, nan]}
{'': [0.2164749057726635, nan]}
{'': [0.21647490577266437, nan]}
{'': [0.2222222222222221, nan]}
{'': [0.22796630859375053, nan]}
{'': [0.22304522165292998, nan]}
{'': [0.21565846740672018, nan]}
{'': [0.22386794052801193, nan]}
{'': [0.223867940528011, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.421
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.94e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839144;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360624;  // std dev = 6.32e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.1015963294878363;  // std dev = 2.11e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A) )
%   | | then return -0.09269127618926107;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else return -0.17649082999648802;  // std dev = 0.205, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08469417483399522;  // std dev = 0.016, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07845815711996083;  // std dev = 0.013, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0728379304227077;  // std dev = 0.014, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0679756132436555;  // std dev = 0.014, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06387720342781279;  // std dev = 0.012, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( female(A) )
%   | | then return 0.12513885853221082;  // std dev = 0.043, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.12475328585934994;  // std dev = 0.043, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.187', 'seconds']
Refined model CLL: -0.066813


******************************************
Best model found
******************************************
Results 

CLL : -0.079684 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.421 

Total Inference Time : 1.3121891021728516 

Total revision time: 6.529847803115844
Best scored revision CLL: -0.066813


Results 

CLL : -0.079684 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 6.541319551467895 

Total Inference Time : 1.3121891021728516 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.681
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.23398786127401014;  // std dev = 0.484, 149.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.16660830317010955;  // std dev = 6.082, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.10479197192458535;  // std dev = 6.249, 185.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.13935715170693005;  // std dev = 6.013, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09986334168728525;  // std dev = 6.082, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0636479260322393;  // std dev = 6.163, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.11038452860463262;  // std dev = 0.486, 147.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.057103742626880095;  // std dev = 6.033, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.03660226256579189;  // std dev = 6.073, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.01673890759701979;  // std dev = 0.470, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.875', 'seconds']
Parameter learned model CLL:-0.393042 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.484, 93, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.082, 109, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.249, 129, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.013, 102, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.082, 109, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.163, 118, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.486, 91, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.033, 104, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.073, 108, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.47, 114, 56], 'false': [0.0, 0, 0]}]
{'': [0.23458402774649806, nan]}
{'': [0.22420569329660142, nan]}
{'': [0.21107377647918366, nan]}
{'': [0.22880948565935005, nan]}
{'': [0.22420569329660345, nan]}
{'': [0.21825868674858095, nan]}
{'': [0.23582766439909233, nan]}
{'': [0.22749999999999898, nan]}
{'': [0.2248661511005349, nan]}
{'': [0.220899653979238, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 2.18
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.60e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.1254446385283913;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.11231637819360621;  // std dev = 8.43e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783633;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.09269127618926079;  // std dev = 7.74e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14652771257609323;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1291352689757512;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then return -0.08518475138839682;  // std dev = 5.05e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.21377251867740252;  // std dev = 0.445, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839691;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07861746262291198;  // std dev = 0.012, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1152948690182349;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10404596413741514;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07345308155983829;  // std dev = 0.037, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.068287886600409;  // std dev = 0.011, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( female(A) )
%   | | then return 0.14390519915323902;  // std dev = 0.046, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.14449444308260115;  // std dev = 0.044, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06404022915363335;  // std dev = 0.010, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13500043737930514;  // std dev = 0.000257, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10785853039880351;  // std dev = 4.63e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.514', 'seconds']
Refined model CLL: -0.065605


******************************************
Best model found
******************************************
Results 

CLL : -0.078742 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 2.18 

Total Inference Time : 1.3009870052337646 

Total revision time: 5.0425485954284675
Best scored revision CLL: -0.065605


Results 

CLL : -0.078742 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 5.057317672729493 

Total Inference Time : 1.3009870052337646 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.711
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1683093629070002;  // std dev = 0.463, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1736104098253117;  // std dev = 6.200, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.11974951322715997;  // std dev = 6.333, 188.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1458738305277069;  // std dev = 6.123, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.14137373627649838;  // std dev = 6.025, 155.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.10807144652670053;  // std dev = 6.059, 158.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06290287157615845;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.001261016311033024;  // std dev = 6.397, 197.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.039916736052281444;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.010067997656751588;  // std dev = 0.463, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.900', 'seconds']
Parameter learned model CLL:-0.376052 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.463, 129, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.2, 114, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.333, 130, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.123, 106, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.025, 97, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.059, 100, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.475, 111, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.397, 139, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [6.218, 116, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.463, 128, 58], 'false': [0.0, 0, 0]}]
{'': [0.21396093682976386, nan]}
{'': [0.22349918875067382, nan]}
{'': [0.2133318243549107, nan]}
{'': [0.22858417608566478, nan]}
{'': [0.23417273673257133, nan]}
{'': [0.23233456176894532, nan]}
{'': [0.2254122754805511, nan]}
{'': [0.20773531912700594, nan]}
{'': [0.2222222222222222, nan]}
{'': [0.2145912822291595, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 2.08
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.16e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.12544463852839133;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360622;  // std dev = 7.88e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.0926912761892609;  // std dev = 6.14e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.0851847513883968;  // std dev = 6.14e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109157;  // std dev = 6.50e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07324622576333717;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06842697784420264;  // std dev = 5.48e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.06419184008202619;  // std dev = 5.89e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.144', 'seconds']
Refined model CLL: -0.064118


******************************************
Best model found
******************************************
Results 

CLL : -0.070532 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.08 

Total Inference Time : 1.326117992401123 

Total revision time: 5.006421915054322
Best scored revision CLL: -0.064118


Results 

CLL : -0.070532 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.021190992355347 

Total Inference Time : 1.326117992401123 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.111
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.18475443968666383;  // std dev = 0.469, 545.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.18801512989830474;  // std dev = 10.724, 503.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.14042814211944132;  // std dev = 10.888, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.11446047011051846;  // std dev = 10.914, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0938092368733115;  // std dev = 10.919, 539.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07645737492657423;  // std dev = 10.919, 539.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.07776989522366748;  // std dev = 0.476, 514.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.06289708726310016;  // std dev = 10.781, 513.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.03628812201691755;  // std dev = 10.893, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.029280837643206204;  // std dev = 0.472, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.579', 'seconds']
Parameter learned model CLL:-0.410463 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.469, 367, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.724, 325, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.888, 355, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.914, 360, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.919, 361, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.919, 361, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.476, 336, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.781, 335, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [10.893, 356, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.472, 355, 178], 'false': [0.0, 0, 0]}]
{'': [0.21993434896052821, nan]}
{'': [0.22864799275915176, nan]}
{'': [0.22243029473158296, nan]}
{'': [0.22138997526291937, nan]}
{'': [0.22118194553922219, nan]}
{'': [0.22118194553922613, nan]}
{'': [0.22637738648579128, nan]}
{'': [0.22658443813671303, nan]}
{'': [0.22222222222222562, nan]}
{'': [0.22243029473157996, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 5.144
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 5.96e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.14185106490048824;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839152;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return -0.1254446385283918;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360625;  // std dev = 5.37e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.11231637819360688;  // std dev = 0.000, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783619;  // std dev = 4.59e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.10159632948783642;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.09269127618926061;  // std dev = 5.16e-08, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.08518475138839678;  // std dev = 8.43e-08, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return -0.07877675473109144;  // std dev = 5.58e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.07324622576333695;  // std dev = 1.02e-07, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 2.11e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.687', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.144 

Total Inference Time : 1.940596103668213 

Total revision time: 9.117839698791503
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 9.132608776092528 

Total Inference Time : 1.940596103668213 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.671
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.18188994229375685;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.13453431872110425;  // std dev = 5.612, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.12545689513405803;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1312746859680651;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09935270735917114;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.08384281140168211;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.056454808142905905;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0643541907645436;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.03252175693043865;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.025857176611385483;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.160', 'seconds']
Parameter learned model CLL:-0.37165 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.468, 94, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.612, 105, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.571, 100, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.467, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.507, 93, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.497, 92, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.465, 97, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.467, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.544, 97, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.465, 97, 45], 'false': [0.0, 0, 0]}]
{'': [0.21893276745510165, nan]}
{'': [0.2099999999999995, nan]}
{'': [0.21403091557669335, nan]}
{'': [0.22304522165293006, nan]}
{'': [0.21975425330812934, nan]}
{'': [0.22057648249773484, nan]}
{'': [0.21647490577266423, nan]}
{'': [0.22304522165292823, nan]}
{'': [0.21647490577266393, nan]}
{'': [0.21647490577266462, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 1.547
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 6.99e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.1271871323403089;  // std dev = 0.154, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11214276642969544;  // std dev = 4.47e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.10145322001900027;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09257143889402708;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.08508303717464807;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12341331800382295;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07868940754778403;  // std dev = 2.79e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1106705598268047;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07317044713183929;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1002382240198338;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09155298692982805;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.06829306194735502;  // std dev = 0.006, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08421784707829943;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06407145053780279;  // std dev = 0.006, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.513', 'seconds']
Refined model CLL: -0.065482


******************************************
Best model found
******************************************
Results 

CLL : -0.067965 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.547 

Total Inference Time : 0.9452235698699951 

Total revision time: 3.877480333328247
Best scored revision CLL: -0.065482


Results 

CLL : -0.067965 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.8922494106292724 

Total Inference Time : 0.9452235698699951 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.603
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.18661608838418378;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.18821137679888503;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.10614802620039954;  // std dev = 5.612, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.11510632091558073;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.09296208102357698;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.1577127217119543;  // std dev = 5.173, 111.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.060112845581855;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.0724390090890414;  // std dev = 5.354, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.02047006959686818;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then return 0.006923260175779163;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.159', 'seconds']
Parameter learned model CLL:-0.390054 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.47, 92, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.39, 82, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.612, 105, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.507, 93, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.516, 94, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.173, 66, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.473, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.354, 79, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [5.507, 93, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'genre(C, D)'}, {'true': [0.465, 97, 45], 'false': [0.0, 0, 0]}]
{'': [0.22057648249773662, nan]}
{'': [0.22878045756091445, nan]}
{'': [0.21000000000000052, nan]}
{'': [0.21975425330812967, nan]}
{'': [0.2189327674551015, nan]}
{'': [0.24105186267348433, nan]}
{'': [0.22386794052801168, nan]}
{'': [0.23120447450572332, nan]}
{'': [0.21975425330812806, nan]}
{'': [0.21647490577266496, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(C, D).;true;true
1;;workedunder(A, B) :- genre(C, D).;true;true
2;;workedunder(A, B) :- genre(C, D).;true;true
3;;workedunder(A, B) :- genre(C, D).;true;true
4;;workedunder(A, B) :- genre(C, D).;true;true
5;;workedunder(A, B) :- genre(C, D).;true;true
6;;workedunder(A, B) :- genre(C, D).;true;true
7;;workedunder(A, B) :- genre(C, D).;true;true
8;;workedunder(A, B) :- genre(C, D).;true;true
9;;workedunder(A, B) :- genre(C, D).;true;true


Refining candidate
***************************
Model training time 1.538
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.16e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( female(A) )
%   | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.8146706742299468;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.723722334802978;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.27762959511266594;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1272298942751173;  // std dev = 0.145, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.11213850883273815;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5595550873766879;  // std dev = 0.036, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.2261371310153638;  // std dev = 0.009, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.10144970999955359;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.42064336728739343;  // std dev = 0.036, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.18626393209499034;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.0925684993443381;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.3228445275748305;  // std dev = 0.032, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.15888323862805992;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25663291421038714;  // std dev = 0.028, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14035626133824036;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.08584943066846343;  // std dev = 0.071, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07863154160581327;  // std dev = 2.36e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21079258675568147;  // std dev = 0.024, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12189571437311052;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.07312023927972543;  // std dev = 2.24e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17785743117593308;  // std dev = 0.021, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1105154250903756;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(B) )
%   | then return -0.06831668822222617;  // std dev = 3.41e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( female(A) )
%   | | then return 0.1302714963883979;  // std dev = 0.069, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.15620782111529596;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13565411946775952;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11530887377701027;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.06486325573666323;  // std dev = 0.072, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.244', 'seconds']
Refined model CLL: -0.067072


******************************************
Best model found
******************************************
Results 

CLL : -0.078234 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.538 

Total Inference Time : 0.8793678283691406 

Total revision time: 3.7380542430877686
Best scored revision CLL: -0.067072


Results 

CLL : -0.078234 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.752823320388794 

Total Inference Time : 0.8793678283691406 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.941
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1914822684328469;  // std dev = 0.471, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1767637734401357;  // std dev = 6.063, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17803538281124298;  // std dev = 5.936, 151.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12576898750143442;  // std dev = 6.043, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08104169966913856;  // std dev = 6.146, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07957462630859972;  // std dev = 6.082, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06605105596518768;  // std dev = 0.474, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.015560751125845318;  // std dev = 6.242, 184.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06929676511903567;  // std dev = 5.981, 155.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11452950592441849;  // std dev = 0.494, 133.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.966', 'seconds']
Parameter learned model CLL:-0.414242 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 112, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.063, 107, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.936, 95, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.043, 105, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.146, 116, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.082, 109, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.474, 108, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.242, 128, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.981, 99, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.494, 77, 56], 'false': [0.0, 0, 0]}]
{'': [0.22222222222222254, nan]}
{'': [0.22552598893447165, nan]}
{'': [0.23332309986404232, nan]}
{'': [0.226843100189037, nan]}
{'': [0.21957815035154069, nan]}
{'': [0.22420569329660178, nan]}
{'': [0.22486615110053576, nan]}
{'': [0.21172022684309952, nan]}
{'': [0.23075962539021838, nan]}
{'': [0.24376731301939014, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.394
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048785;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839108;  // std dev = 7.88e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.10671218147032403;  // std dev = 0.478, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.09226193064301563;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08482024913630207;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07846367312344783;  // std dev = 4.83e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07297456035851108;  // std dev = 5.37e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( female(A) )
%   | | then return 0.1681556861913984;  // std dev = 0.046, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.16875174029499035;  // std dev = 0.045, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15386432650285276;  // std dev = 0.000290, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.08553547733522127;  // std dev = 5.71e-05, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.06833828660323209;  // std dev = 0.017, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06397301436608324;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13488115598202818;  // std dev = 0.000260, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.07907783358504697;  // std dev = 4.34e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.021', 'seconds']
Refined model CLL: -0.064728


******************************************
Best model found
******************************************
Results 

CLL : -0.077357 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.394 

Total Inference Time : 2.35600209236145 

Total revision time: 8.941191158294679
Best scored revision CLL: -0.064728


Results 

CLL : -0.077357 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 8.954896173477174 

Total Inference Time : 2.35600209236145 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.921
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1973302216492212;  // std dev = 0.473, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15641353916463846;  // std dev = 6.262, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1526168630522586;  // std dev = 6.172, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11244617012577673;  // std dev = 6.245, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.104343564100572;  // std dev = 6.191, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0811574600999174;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05065275655272884;  // std dev = 0.467, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.011573759411990292;  // std dev = 6.411, 199.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05895433528572342;  // std dev = 6.182, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0261255331416424;  // std dev = 0.467, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.069', 'seconds']
Parameter learned model CLL:-0.370484 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.473, 113, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.262, 121, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.172, 111, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.245, 119, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.191, 113, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.209, 115, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 123, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.411, 141, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.182, 112, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 123, 58], 'false': [0.0, 0, 0]}]
{'': [0.22413734140419297, nan]}
{'': [0.21903186542242697, nan]}
{'': [0.22541227548054812, nan]}
{'': [0.2203070637428578, nan]}
{'': [0.2241373414041947, nan]}
{'': [0.22286077049015884, nan]}
{'': [0.21775892066786884, nan]}
{'': [0.20650993661776051, nan]}
{'': [0.22477508650518904, nan]}
{'': [0.21775892066786812, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.211
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048768;  // std dev = 6.32e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839133;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 7.45e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783634;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.09269127618926087;  // std dev = 6.99e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( actor(A) )
%   | | then return -0.0851847513883968;  // std dev = 6.14e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return -0.22858069088186642;  // std dev = 0.497, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.08518475138839691;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07851891797294357;  // std dev = 0.017, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07316628494030149;  // std dev = 0.009, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.06836796838494646;  // std dev = 0.009, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.06414968463817436;  // std dev = 0.008, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.014', 'seconds']
Refined model CLL: -0.064495


******************************************
Best model found
******************************************
Results 

CLL : -0.074739 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.211 

Total Inference Time : 2.565438747406006 

Total revision time: 8.942954570770265
Best scored revision CLL: -0.064495


Results 

CLL : -0.074739 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 8.95665958595276 

Total Inference Time : 2.565438747406006 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.783
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.19399799170328147;  // std dev = 0.472, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17582282242255434;  // std dev = 10.814, 519.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13413511581897825;  // std dev = 10.943, 544.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10939431891601728;  // std dev = 10.968, 549.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11110257981204695;  // std dev = 10.798, 516.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06695004132291901;  // std dev = 10.991, 554.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05815685014222691;  // std dev = 0.469, 547.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06885996323914859;  // std dev = 10.776, 512.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.030785958092418315;  // std dev = 10.972, 550.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.025551268999085323;  // std dev = 0.468, 548.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.807', 'seconds']
Parameter learned model CLL:-0.402819 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.472, 352, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.814, 341, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.943, 366, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.968, 371, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.798, 338, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.991, 376, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.469, 369, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.776, 334, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.972, 372, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.468, 370, 178], 'false': [0.0, 0, 0]}]
{'': [0.22305446778213198, nan]}
{'': [0.22534071376331835, nan]}
{'': [0.2201421929065783, nan]}
{'': [0.21910345353864158, nan]}
{'': [0.22596298299380663, nan]}
{'': [0.21806618097459637, nan]}
{'': [0.21951879789712547, nan]}
{'': [0.22679138183593403, nan]}
{'': [0.21889586776859088, nan]}
{'': [0.2193110980872702, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 10.838
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.83e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.14185106490048807;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.12544463852839188;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360633;  // std dev = 2.79e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.11231637819360675;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783619;  // std dev = 4.47e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.10159632948783645;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.09269127618926071;  // std dev = 9.88e-08, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0851847513883968;  // std dev = 1.83e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.08518475138839679;  // std dev = 8.69e-08, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109179;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.07877675473109147;  // std dev = 5.58e-08, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 1.18e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.07324622576333686;  // std dev = 8.69e-08, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 2.69e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.06842697784420274;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.654', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 10.838 

Total Inference Time : 4.1746132373809814 

Total revision time: 18.089775033950804
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 18.1034800491333 

Total Inference Time : 4.1746132373809814 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.76
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.2124796437609297;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16861281316528628;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15672959649782292;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13373150996483454;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.049669727591599946;  // std dev = 5.636, 153.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07234937360197052;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07583184160336055;  // std dev = 0.475, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.040937089853411185;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04215300743860737;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.01694498922997417;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.014', 'seconds']
Parameter learned model CLL:-0.381031 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.478, 82, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.457, 88, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.402, 83, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.39, 82, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.636, 108, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.507, 93, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.475, 86, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.516, 94, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.477, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.465, 97, 45], 'false': [0.0, 0, 0]}]
{'': [0.22878045756091603, nan]}
{'': [0.22386794052801284, nan]}
{'': [0.2279663085937496, nan]}
{'': [0.2287804575609157, nan]}
{'': [0.207612456747405, nan]}
{'': [0.21975425330812906, nan]}
{'': [0.22551133383835553, nan]}
{'': [0.218932767455101, nan]}
{'': [0.22222222222222152, nan]}
{'': [0.21647490577266454, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.644
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.7748156017661789;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.8295775065280829;  // std dev = 0.167, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return -0.14185106490048766;  // std dev = 8.02e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7278382077391181;  // std dev = 0.031, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.27344910771642084;  // std dev = 0.010, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.5636365315919818;  // std dev = 0.039, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.22376279655527706;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.11231637819360624;  // std dev = 6.14e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783627;  // std dev = 3.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.42369456855112186;  // std dev = 0.039, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.185254060794443;  // std dev = 0.010, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.3249173198500626;  // std dev = 0.035, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.15981267002223132;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.09334924129647228;  // std dev = 0.054, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08513349127234508;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2580469779006176;  // std dev = 0.030, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14031198669623368;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.21179068105919271;  // std dev = 0.027, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12276613727460452;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07851181865905278;  // std dev = 0.013, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.18471255437695389;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.16060320854308993;  // std dev = 0.066, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return -0.07295390412281563;  // std dev = 0.012, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06842382590821314;  // std dev = 2.79e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15544048702952928;  // std dev = 0.012, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12809214397700316;  // std dev = 0.003, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06418905911913962;  // std dev = 7.45e-09, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13610914183099682;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11434976070919618;  // std dev = 0.003, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '28.522', 'seconds']
Refined model CLL: -0.066866


******************************************
Best model found
******************************************
Results 

CLL : -0.06865 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.644 

Total Inference Time : 1.7658627033233643 

Total revision time: 7.110954956054687
Best scored revision CLL: -0.066866


Results 

CLL : -0.06865 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 7.1246599712371825 

Total Inference Time : 1.7658627033233643 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.799
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.2124796437609297;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.16360028183696548;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12063753960367901;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07670949057072941;  // std dev = 5.651, 155.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0946467855179971;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06024826215998486;  // std dev = 5.596, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07579824632004695;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.042747717549150833;  // std dev = 5.562, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03864602711897927;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.054826351311349886;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.922', 'seconds']
Parameter learned model CLL:-0.371264 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.478, 82, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.477, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.553, 98, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.651, 110, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.526, 95, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.596, 103, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 91, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.562, 99, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.544, 97, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.474, 87, 45], 'false': [0.0, 0, 0]}]
{'': [0.22878045756091603, nan]}
{'': [0.22222222222222332, nan]}
{'': [0.2156584674067198, nan]}
{'': [0.20603537981269507, nan]}
{'': [0.21811224489795908, nan]}
{'': [0.21160518626734803, nan]}
{'': [0.22139922145328741, nan]}
{'': [0.2148437500000005, nan]}
{'': [0.21647490577266468, nan]}
{'': [0.22469008264462753, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.547
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.69e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( female(A) )
%   | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.8146706742299468;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( female(A) )
%   | | then return 0.6394734122109543;  // std dev = 0.271, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.7281643902400936;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360625;  // std dev = 5.58e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5696046068533822;  // std dev = 0.037, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.43162699400729665;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783619;  // std dev = 5.58e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( female(A) )
%   | | then return 0.37295563589703234;  // std dev = 0.206, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.4225193547463716;  // std dev = 4.21e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09269127618926108;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.33489077712770293;  // std dev = 0.071, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.418411235942447;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0851847513883968;  // std dev = 5.37e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.2648559137317089;  // std dev = 0.062, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.31443622690362155;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109162;  // std dev = 5.05e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( female(A) )
%   | | then return 0.22444829565022642;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.18762133158969677;  // std dev = 0.097, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.18355534215961605;  // std dev = 0.029, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.29943649927204885;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06842697784420268;  // std dev = 2.69e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( female(A) )
%   | | then return 0.14478663556725582;  // std dev = 0.080, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.13624658948396462;  // std dev = 0.082, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( female(A) )
%   | | then return 0.14273962172563853;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.11894114656898501;  // std dev = 0.084, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.645', 'seconds']
Refined model CLL: -0.079001


******************************************
Best model found
******************************************
Results 

CLL : -0.1117 

AUC ROC : 0.993093 

AUC PR : 0.649298 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.547 

Total Inference Time : 1.1501622200012207 

Total revision time: 6.427011533737183
Best scored revision CLL: -0.079001


Results 

CLL : -0.1117 

AUC ROC : 0.993093 

AUC PR : 0.649298 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 6.440716548919678 

Total Inference Time : 1.1501622200012207 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.956
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.18950988184507572;  // std dev = 0.471, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15166123994675987;  // std dev = 6.179, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15703250175345207;  // std dev = 6.053, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11749810176715933;  // std dev = 6.119, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09905309801300165;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11112166401339972;  // std dev = 5.970, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06329003550631528;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05052008526523603;  // std dev = 6.092, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.024565207192962287;  // std dev = 6.163, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03289832094674315;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.018', 'seconds']
Parameter learned model CLL:-0.383583 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 113, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.179, 120, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.053, 106, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.119, 113, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.11, 112, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.97, 98, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.473, 110, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.092, 110, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.163, 118, 56], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.472, 111, 56], 'false': [0.0, 0, 0]}]
{'': [0.22156086971744715, nan]}
{'': [0.21694214876033227, nan]}
{'': [0.22618503276939564, nan]}
{'': [0.22156086971744757, nan]}
{'': [0.2222222222222213, nan]}
{'': [0.2314049586776867, nan]}
{'': [0.22354478153578167, nan]}
{'': [0.22354478153578244, nan]}
{'': [0.21825868674858065, nan]}
{'': [0.22288357416902804, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.402
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048774;  // std dev = 4.21e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.689297767541692;  // std dev = 0.157, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.12544463852839108;  // std dev = 8.02e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 8.43e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5589528166351133;  // std dev = 0.028, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.2248883811706233;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783635;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( female(A) )
%   | | then return 0.3819380958798168;  // std dev = 0.155, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | else return 0.41664164982325913;  // std dev = 2.98e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09269127618926086;  // std dev = 7.15e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.3270068399482108;  // std dev = 0.053, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.25801117742838187;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0851847513883968;  // std dev = 6.75e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.25947675906529155;  // std dev = 0.047, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.2088921789516515;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07877675473109157;  // std dev = 6.41e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21280201969015072;  // std dev = 0.041, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.17963020745783667;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 4.28e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17933133397754997;  // std dev = 0.036, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.15326326708890586;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 4.89e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15444052053411966;  // std dev = 0.032, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1381881021312676;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 3.16e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.13533255182727302;  // std dev = 0.028, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12026937109297138;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.117', 'seconds']
Refined model CLL: -0.066313


******************************************
Best model found
******************************************
Results 

CLL : -0.082755 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.402 

Total Inference Time : 1.8339948654174805 

Total revision time: 8.444409091949463
Best scored revision CLL: -0.066313


Results 

CLL : -0.082755 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 24.492992361068726 

Total Inference Time : 1.8339948654174805 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.973
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.22292880931335002;  // std dev = 0.481, 159.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13087266047139423;  // std dev = 6.362, 192.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1909916419032052;  // std dev = 5.989, 152.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12550528612089482;  // std dev = 6.153, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.10102192187036264;  // std dev = 6.162, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05534116294835673;  // std dev = 6.286, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.057213006185213994;  // std dev = 0.471, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06791053116979319;  // std dev = 6.123, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.03545267539571392;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return -0.01584489146900322;  // std dev = 0.454, 199.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=58 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.978', 'seconds']
Parameter learned model CLL:-0.376125 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.481, 101, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.362, 134, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.989, 94, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.153, 109, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.162, 110, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.286, 124, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 117, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.123, 106, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [6.209, 115, 58], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.454, 141, 58], 'false': [0.0, 0, 0]}]
{'': [0.2317155175823743, nan]}
{'': [0.21082899305555466, nan]}
{'': [0.23597645429362757, nan]}
{'': [0.22668435583922028, nan]}
{'': [0.22604875283446665, nan]}
{'': [0.21712353580485355, nan]}
{'': [0.2215836734693889, nan]}
{'': [0.2285841760856638, nan]}
{'': [0.2228607704901608, nan]}
{'': [0.206509936617763, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 4.366
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.56e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( female(A) )
%   | | then return 0.8105298874804645;  // std dev = 0.213, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.832507909458486;  // std dev = 0.158, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839136;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7261241329559047;  // std dev = 0.016, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.27538066388109667;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360617;  // std dev = 9.88e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5619155249619598;  // std dev = 0.020, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.222987249940544;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.42239227266481477;  // std dev = 0.019, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1864639422808723;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.10582519110931576;  // std dev = 0.476, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09233624266099484;  // std dev = 5.77e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.32402354845752973;  // std dev = 0.017, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.15883267443629492;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08488335521107256;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.25743210203356565;  // std dev = 0.015, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14049839571061337;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07851788966760599;  // std dev = 2.79e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21135362247557296;  // std dev = 0.013, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.12369477617759354;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07302161463849527;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.17826666871226424;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11151587795530835;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0682303355082467;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( female(A) )
%   | | then return 0.14339055846417628;  // std dev = 0.054, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return 0.1461415307780937;  // std dev = 0.040, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06401831405715523;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1356875300773742;  // std dev = 0.011, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11416208274799912;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.158', 'seconds']
Refined model CLL: -0.067508


******************************************
Best model found
******************************************
Results 

CLL : -0.085898 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.366 

Total Inference Time : 1.7563717365264893 

Total revision time: 8.355168117523192
Best scored revision CLL: -0.067508


Results 

CLL : -0.085898 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 24.403751386642455 

Total Inference Time : 1.7563717365264893 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 1.747
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.15882461077518348;  // std dev = 0.459, 592.000 (wgt'ed) examples reached here.  /* #neg=414 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17609785120616264;  // std dev = 10.852, 526.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.138913547416076;  // std dev = 10.948, 545.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.12990006241816054;  // std dev = 10.841, 524.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08179247102612124;  // std dev = 11.051, 567.000 (wgt'ed) examples reached here.  /* #neg=389 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.08629512246983873;  // std dev = 10.893, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05728290827142629;  // std dev = 0.467, 555.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.040900377684050755;  // std dev = 11.037, 564.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.06004111993081125;  // std dev = 10.814, 519.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.04638636706832175;  // std dev = 0.474, 521.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=178 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.806', 'seconds']
Parameter learned model CLL:-0.403251 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.459, 414, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.852, 348, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.948, 367, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.841, 346, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [11.051, 389, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.893, 356, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 377, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [11.037, 386, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [10.814, 341, 178], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.474, 343, 178], 'false': [0.0, 0, 0]}]
{'': [0.21026981373265435, nan]}
{'': [0.22388642310861295, nan]}
{'': [0.21993434896053002, nan]}
{'': [0.22430219684167305, nan]}
{'': [0.2153790642914677, nan]}
{'': [0.22222222222222573, nan]}
{'': [0.21785894002110376, nan]}
{'': [0.2159976862330903, nan]}
{'': [0.22534071376331458, nan]}
{'': [0.22492549025386468, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 11.039
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.83e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.14185106490048816;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.1254446385283918;  // std dev = 0.000, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( movie(E, A), movie(E, B) )
%   | then if ( director(B), actor(A) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360615;  // std dev = 3.16e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.1123163781936068;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783616;  // std dev = 4.83e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.10159632948783644;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926104;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.09269127618926075;  // std dev = 7.30e-08, 270.000 (wgt'ed) examples reached here.  /* #neg=270 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.05e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.08518475138839678;  // std dev = 8.43e-08, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109168;  // std dev = 3.16e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.07877675473109146;  // std dev = 4.21e-08, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.07324622576333681;  // std dev = 1.12e-07, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420262;  // std dev = 2.24e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.0684269778442028;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.666', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 11.039 

Total Inference Time : 4.215898275375366 

Total revision time: 18.29455588912964
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 34.3431391582489 

Total Inference Time : 4.215898275375366 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.766
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.20698614440183793;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13925888709694048;  // std dev = 5.579, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.17347888050630975;  // std dev = 5.354, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.14835042757971745;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.11333695494448628;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.0705185007763063;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.02478096909793367;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.039452842999879896;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07051981043881772;  // std dev = 5.354, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.014244368624458865;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.925', 'seconds']
Parameter learned model CLL:-0.389962 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.477, 84, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.579, 101, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.354, 79, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.342, 78, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.379, 81, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.467, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.46, 103, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.516, 94, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.354, 79, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.467, 95, 45], 'false': [0.0, 0, 0]}]
{'': [0.227149810708492, nan]}
{'': [0.21322011634453059, nan]}
{'': [0.23120447450572434, nan]}
{'': [0.23200475907198043, nan]}
{'': [0.22959183673469308, nan]}
{'': [0.22304522165292873, nan]}
{'': [0.21160518626734898, nan]}
{'': [0.21893276745510012, nan]}
{'': [0.23120447450572237, nan]}
{'': [0.21811224489796005, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.433
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.30e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.12754034054542746;  // std dev = 0.154, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11210760344835323;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.10142379814371877;  // std dev = 2.66e-05, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.30890032935016637;  // std dev = 0.069, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return -0.09254696912906424;  // std dev = 1.74e-05, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.2568732806609658;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12250465664677823;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.08506229814233311;  // std dev = 1.62e-05, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.07867176243907424;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21095878221708797;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10960201881990138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1779770469114109;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09935474239705279;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07312579301267619;  // std dev = 0.002, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.15341159716467592;  // std dev = 0.004, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09102901740672695;  // std dev = 0.001, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else return -0.06832581895446056;  // std dev = 0.002, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06412453000057455;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.1345281643711013;  // std dev = 0.004, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08366110253277591;  // std dev = 0.000862, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '32.593', 'seconds']
Refined model CLL: -0.065657


******************************************
Best model found
******************************************
Results 

CLL : -0.068816 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.433 

Total Inference Time : 1.928809642791748 

Total revision time: 7.034367679595947
Best scored revision CLL: -0.065657


Results 

CLL : -0.068816 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 23.082950948715208 

Total Inference Time : 1.928809642791748 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
0;true;haswordtitle(B, C).;true;true
0;true,true;author(E, D), title(E, A).;false;false
0;true,false;haswordvenue(F, C).;true;false
0;true,false,true;author(G, D), title(G, B).;false;false
0;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
0;false,true;haswordvenue(J, H).;false;false
1;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
1;true;haswordtitle(B, C).;false;true
1;true,false;haswordvenue(E, C).;false;false
1;false;haswordtitle(B, F), haswordauthor(G, F).;true;false
1;false,true;haswordvenue(H, F).;false;false
2;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
2;true;haswordtitle(B, C).;false;true
2;true,false;haswordvenue(E, C).;false;false
3;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;false
3;true;haswordtitle(B, C).;false;true
3;true,false;haswordvenue(E, C).;false;false
4;;sametitle(A, B) :- haswordtitle(A, C), haswordauthor(D, C).;true;true
4;true;haswordtitle(B, C).;true;true
4;true,true;author(E, D), title(E, A).;false;false
4;true,false;author(F, D), title(F, B).;false;true
4;true,false,false;haswordvenue(G, C).;false;false
4;false;haswordtitle(B, H), haswordauthor(I, H).;true;false
4;false,true;haswordvenue(J, H).;false;false
5;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
5;true;haswordtitle(A, C).;false;true
5;true,false;author(E, D), title(E, A).;false;true
5;true,false,false;haswordvenue(F, C).;false;false
5;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
5;false,true;author(I, H), title(I, B).;false;true
5;false,true,false;haswordvenue(J, G).;false;false
6;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
6;true;haswordvenue(E, C).;true;false
6;true,true;haswordtitle(A, C).;false;true
6;true,true,false;author(F, D), title(F, A).;false;false
7;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
7;true;haswordtitle(A, C).;false;true
7;true,false;haswordvenue(E, C).;false;false
7;false;haswordtitle(A, F), haswordauthor(G, F).;true;false
7;false,true;author(H, G), title(H, B).;false;true
7;false,true,false;haswordvenue(I, F).;false;false
8;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;true
8;true;haswordtitle(A, C).;false;true
8;true,false;author(E, D), title(E, A).;false;true
8;true,false,false;haswordvenue(F, C).;false;false
8;false;haswordtitle(A, G), haswordauthor(H, G).;true;false
8;false,true;author(I, H), title(I, B).;false;true
8;false,true,false;haswordvenue(J, G).;false;false
9;;sametitle(A, B) :- haswordtitle(B, C), haswordauthor(D, C).;true;false
9;true;haswordtitle(A, C).;false;true
9;true,false;haswordvenue(E, C).;true;false
9;true,false,true;author(F, D), venue(F, E).;false;false


Model training time 0.76
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1914822684328456;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.20205795024794143;  // std dev = 5.329, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.09166849612529207;  // std dev = 5.659, 156.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.1241347023120293;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.13571093200424267;  // std dev = 5.329, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07754436394201673;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05033327784539498;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.05738916060449053;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.028419875848695528;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then return 0.07688156442487108;  // std dev = 0.485, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.017', 'seconds']
Parameter learned model CLL:-0.398537 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.471, 90, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.329, 77, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.659, 111, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.467, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.329, 77, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.467, 89, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.468, 94, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.446, 87, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [5.516, 94, 45], 'false': [0.0, 0, 0]}]
['workedunder(A, B)', {'': 'movie(C, D)'}, {'true': [0.485, 74, 45], 'false': [0.0, 0, 0]}]
{'': [0.2222222222222232, nan]}
{'': [0.23280032249395277, nan]}
{'': [0.20525147928994136, nan]}
{'': [0.2230452216529289, nan]}
{'': [0.23280032249395313, nan]}
{'': [0.22304522165292898, nan]}
{'': [0.21893276745510107, nan]}
{'': [0.22469008264462795, nan]}
{'': [0.2189327674550995, nan]}
{'': [0.2351528846832842, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(C, D).;true;true
1;;workedunder(A, B) :- movie(C, D).;true;true
2;;workedunder(A, B) :- movie(C, D).;true;true
3;;workedunder(A, B) :- movie(C, D).;true;true
4;;workedunder(A, B) :- movie(C, D).;true;true
5;;workedunder(A, B) :- movie(C, D).;true;true
6;;workedunder(A, B) :- movie(C, D).;true;true
7;;workedunder(A, B) :- movie(C, D).;true;true
8;;workedunder(A, B) :- movie(C, D).;true;true
9;;workedunder(A, B) :- movie(C, D).;true;true


Refining candidate
***************************
Model training time 3.31
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.45e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( female(A) )
%   | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.7748156017661786;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.12544463852839144;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.7275438991647452;  // std dev = 0.055, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.26814572712129925;  // std dev = 0.020, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.11231637819360622;  // std dev = 6.50e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( female(A) )
%   | | then return 0.49072673111036835;  // std dev = 0.212, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.5738656161343166;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.10159632948783619;  // std dev = 5.48e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.4313551029616567;  // std dev = 0.000160, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.32753538580323044;  // std dev = 5.61e-05, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.09269127618926108;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.3301117656601015;  // std dev = 0.000144, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.25982499125912567;  // std dev = 5.12e-05, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.08518475138839679;  // std dev = 3.16e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.26157637568238123;  // std dev = 0.000126, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.21301864056275266;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.0787767547310916;  // std dev = 5.37e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.21427144394444497;  // std dev = 0.000110, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.17949888110964748;  // std dev = 2.86e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( director(B), actor(A) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.1804000919294564;  // std dev = 9.64e-05, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1545562517630968;  // std dev = 2.27e-05, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07423774947232041;  // std dev = 0.081, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(B) )
%   | then return -0.06836380047622034;  // std dev = 4.21e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( movie(E, A), movie(E, B) )
%   | | then return 0.15524537397508853;  // std dev = 8.55e-05, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.13736127950573926;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(C, D) )
%   then if ( actor(A), director(B) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.13595690888146322;  // std dev = 7.66e-05, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12014418429880591;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.06481046058933469;  // std dev = 0.064, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.122', 'seconds']
Refined model CLL: -0.068281


******************************************
Best model found
******************************************
Results 

CLL : -0.08504 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.31 

Total Inference Time : 1.3483164310455322 

Total revision time: 6.369505472183228
Best scored revision CLL: -0.068281


Results 

CLL : -0.08504 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 22.41808874130249 

Total Inference Time : 1.3483164310455322 

