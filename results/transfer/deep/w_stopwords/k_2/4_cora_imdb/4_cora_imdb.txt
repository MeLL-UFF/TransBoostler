Starting experiment 4_cora_imdb 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.686
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16085163780221604;  // std dev = 6.249, 185.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20584007423988301;  // std dev = 5.947, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17583731467620345;  // std dev = 5.947, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10417183806164153;  // std dev = 6.146, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08952476614882096;  // std dev = 6.128, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10009906927364848;  // std dev = 6.002, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04024123840187001;  // std dev = 6.187, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.01203759865554229;  // std dev = 0.457, 189.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0332858372030734;  // std dev = 6.171, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.01244147230953198;  // std dev = 6.234, 183.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.218', 'seconds']
Parameter learned model CLL:-0.36561 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.249, 129, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.947, 96, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.947, 96, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.146, 116, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.128, 114, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.002, 101, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.187, 121, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.457, 133, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.171, 119, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.234, 127, 56]}]
{'': [nan, 0.21107377647918235], 'false': [nan, 0.21107377647918235]}
{'': [nan, 0.23268698060941714], 'false': [nan, 0.23268698060941714]}
{'': [nan, 0.2326869806094185], 'false': [nan, 0.2326869806094185]}
{'': [nan, 0.21957815035153985], 'false': [nan, 0.21957815035153985]}
{'': [nan, 0.22089965397923791], 'false': [nan, 0.22089965397923791]}
{'': [nan, 0.22946164144589884], 'false': [nan, 0.22946164144589884]}
{'': [nan, 0.2162852309361946], 'false': [nan, 0.2162852309361946]}
{'': [nan, 0.20850480109739228]}
{'': [nan, 0.21760000000000124], 'false': [nan, 0.21760000000000124]}
{'': [nan, 0.21236824031771717], 'false': [nan, 0.21236824031771717]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.633
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839108;  // std dev = 7.74e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360621;  // std dev = 8.30e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else if ( female(A) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.5331103429149548;  // std dev = 0.656, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783665;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.420321573071679;  // std dev = 0.020, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.17784941542186244;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926085;  // std dev = 7.22e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else if ( female(A) )
%   | | | then return 0.32010041882497403;  // std dev = 5.16e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.2941335223760847;  // std dev = 0.654, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2595519657247239;  // std dev = 0.035, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.1995994243587767;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839682;  // std dev = 5.27e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | | else return -0.30211712914463906;  // std dev = 0.531, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.2086697152833906;  // std dev = 2.11e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.20400134856982646;  // std dev = 0.376, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else return -0.07868008069589934;  // std dev = 0.081, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.18034393466838314;  // std dev = 0.029, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.19779740732809997;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then return -0.07325278838516086;  // std dev = 3.65e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else return -0.20880277107877762;  // std dev = 0.516, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0670067106830297;  // std dev = 0.056, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1552052263052822;  // std dev = 0.026, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.16827538836537115;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06331540568600871;  // std dev = 0.043, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13592724108352486;  // std dev = 0.023, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.14990319473494831;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.394', 'seconds']
Refined model CLL: -0.066173


******************************************
Best model found
******************************************
Results 

CLL : -0.080502 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.633 

Total Inference Time : 1.0239686965942383 

Total revision time: 4.172052854537964
Best scored revision CLL: -0.066173


Results 

CLL : -0.080502 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.18788575553894 

Total Inference Time : 1.0239686965942383 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.687
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17336632640386143;  // std dev = 6.302, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1789032300607824;  // std dev = 6.172, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13919435581982623;  // std dev = 6.236, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.138783238791319;  // std dev = 6.133, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09836045470967328;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10964149472485121;  // std dev = 6.070, 159.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04931492401472749;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05873647516598888;  // std dev = 0.475, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04453788707561491;  // std dev = 6.172, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04995551175311039;  // std dev = 6.102, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.121', 'seconds']
Parameter learned model CLL:-0.396577 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.302, 126, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.172, 111, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.236, 118, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.133, 107, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.209, 115, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.07, 101, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.253, 120, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.475, 110, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.172, 111, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.102, 104, 58]}]
{'': [nan, 0.21585538752362982], 'false': [nan, 0.21585538752362982]}
{'': [nan, 0.2254122754805521], 'false': [nan, 0.2254122754805521]}
{'': [nan, 0.22094524793388645], 'false': [nan, 0.22094524793388645]}
{'': [nan, 0.2279522497704297], 'false': [nan, 0.2279522497704297]}
{'': [nan, 0.22286077049016134], 'false': [nan, 0.22286077049016134]}
{'': [nan, 0.23171551758237371], 'false': [nan, 0.23171551758237371]}
{'': [nan, 0.2196692336826143], 'false': [nan, 0.2196692336826143]}
{'': [nan, 0.2260487528344666]}
{'': [nan, 0.2254122754805507], 'false': [nan, 0.2254122754805507]}
{'': [nan, 0.22984301173601573], 'false': [nan, 0.22984301173601573]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.663
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.69e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( female(A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.8081489350995117;  // std dev = 1.378, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7260120165429664;  // std dev = 0.036, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.2780315940307778;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12685339555972713;  // std dev = 0.144, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5618228849272731;  // std dev = 0.045, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.22361722034323903;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11335210220988759;  // std dev = 0.133, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10137342785771378;  // std dev = 3.33e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4223385627180926;  // std dev = 0.044, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.18415769186371148;  // std dev = 0.007, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09250461122514039;  // std dev = 3.16e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32399685644499954;  // std dev = 0.040, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.15933321112049395;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2574196568590399;  // std dev = 0.034, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.1414305646192591;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.08580469230576694;  // std dev = 0.086, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21134830525262657;  // std dev = 0.030, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12352654595378562;  // std dev = 0.007, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07930748554372682;  // std dev = 0.081, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07303027805407168;  // std dev = 3.49e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.1782649545435578;  // std dev = 0.026, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11055699544666675;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06823792148828534;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15363146324418003;  // std dev = 0.023, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.10014492092298606;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06402500931779015;  // std dev = 5.87e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13470082112978857;  // std dev = 0.021, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09175398420258221;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.466', 'seconds']
Refined model CLL: -0.065296


******************************************
Best model found
******************************************
Results 

CLL : -0.073155 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.663 

Total Inference Time : 0.9826984405517578 

Total revision time: 4.161041355133056
Best scored revision CLL: -0.065296


Results 

CLL : -0.073155 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.176874256134033 

Total Inference Time : 0.9826984405517578 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.329
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21414893509950841;  // std dev = 10.707, 500.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1797368805301976;  // std dev = 10.759, 509.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14811356528091896;  // std dev = 10.798, 516.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09882561837770241;  // std dev = 11.001, 556.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0773461861559159;  // std dev = 11.033, 563.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07955019384890301;  // std dev = 10.899, 535.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0758003505794441;  // std dev = 10.804, 517.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(B, I) )
%   | then return 0.4451738162870937;  // std dev = 5.915, 177.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=129 */
%   | else return -0.13649259588779505;  // std dev = 6.465, 333.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05247773993733412;  // std dev = 10.001, 506.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.029735722246086782;  // std dev = 10.093, 524.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.513', 'seconds']
Parameter learned model CLL:-0.366674 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 14, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.707, 322, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.759, 331, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.45e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.798, 338, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.001, 378, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.033, 385, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.27e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.899, 357, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.73e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.804, 339, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.73e-09, 12, 0], 'false,true': [5.915, 48, 129], 'false,false': [6.465, 284, 49]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 17, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.001, 328, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.97e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.093, 346, 178]}]
{'': [-1.1895246692412391e-17, 0.22926400000000294], 'false': [nan, 0.22926400000000294], 'true': [nan, -1.1895246692412391e-17], 'true,false': [nan, -1.1895246692412391e-17], 'true,false,false': [nan, -1.1895246692412391e-17]}
{'': [0.0, 0.22741150451017064], 'false': [nan, 0.22741150451017322], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [5.046468293750712e-18, 0.22596298299380863], 'false': [nan, 0.22596298299380863], 'true': [nan, 5.046468293750712e-18], 'true,false': [nan, 5.046468293750712e-18], 'true,false,false': [nan, 5.046468293750712e-18]}
{'': [0.0, 0.21765177785828624], 'false': [nan, 0.2176517778582897], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [0.0, 0.21620410828819062], 'false': [nan, 0.2162041082881914], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.2220141497074012], 'false': [nan, 0.2220141497074012], 'true': [nan, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan]}
{'': [1.1564823173178713e-18, 0.22575564276868487], 'false': [nan, 0.22575564276868487], 'true': [nan, 1.1564823173178713e-18], 'true,false': [1.1564823173178713e-18, nan]}
{'': [1.1564823173178713e-18, 0.227204921184158], 'false': [0.19764435507037798, 0.12549486423360146], 'true': [nan, 1.1564823173178713e-18], 'true,false': [nan, 1.1564823173178713e-18], 'true,false,false': [nan, 1.1564823173178713e-18]}
{'': [-8.163404592832033e-19, 0.197651993088516], 'false': [nan, 0.19765199308851614], 'true': [nan, -8.163404592832033e-19], 'true,false': [-8.163404592832033e-19, nan]}
{'': [3.469446951953614e-18, 0.19441678283604394], 'false': [nan, 0.19441678283604394], 'true': [nan, 3.469446951953614e-18], 'true,false': [nan, 3.469446951953614e-18], 'true,false,false': [nan, 3.469446951953614e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 2.261
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 5.96e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.14185106490048813;  // std dev = 0.000, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.12544463852839194;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360628;  // std dev = 4.47e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.11231637819360689;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A), director(B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783623;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.1015963294878366;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926094;  // std dev = 9.13e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926104;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.09269127618926067;  // std dev = 7.30e-08, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 7.45e-09, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.08518475138839679;  // std dev = 8.16e-08, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109175;  // std dev = 1.05e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.07877675473109144;  // std dev = 5.37e-08, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( director(B), actor(A) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333703;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.07324622576333689;  // std dev = 1.06e-07, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 2.11e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.06842697784420271;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06419184008202619;  // std dev = 5.89e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.400', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.261 

Total Inference Time : 1.1026170253753662 

Total revision time: 5.850340929031372
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.8661738300323485 

Total Inference Time : 1.1026170253753662 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.637
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20166038548119172;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1726952863242345;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10423498933304545;  // std dev = 5.620, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0816238804278645;  // std dev = 5.644, 154.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1016136245181418;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06984382740914391;  // std dev = 5.562, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07274597216610208;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0562760241921838;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04270046058164401;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.014305496890938272;  // std dev = 5.596, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.292', 'seconds']
Parameter learned model CLL:-0.36681 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.435, 86, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.446, 87, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.62, 106, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.644, 109, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.507, 93, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.562, 99, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.497, 92, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.469, 93, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.516, 94, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.596, 103, 45]}]
{'': [nan, 0.22551133383835537], 'false': [nan, 0.22551133383835537]}
{'': [nan, 0.2246900826446274], 'false': [nan, 0.2246900826446274]}
{'': [nan, 0.20920135081794655], 'false': [nan, 0.20920135081794655]}
{'': [nan, 0.2068223983808402], 'false': [nan, 0.2068223983808402]}
{'': [nan, 0.21975425330812917], 'false': [nan, 0.21975425330812917]}
{'': [nan, 0.21484375000000014], 'false': [nan, 0.21484375000000014]}
{'': [nan, 0.22057648249773618], 'false': [nan, 0.22057648249773618]}
{'': [nan, 0.21975425330812942]}
{'': [nan, 0.21893276745510007], 'false': [nan, 0.21893276745510007]}
{'': [nan, 0.2116051862673484], 'false': [nan, 0.2116051862673484]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.503
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.14185106490048766;  // std dev = 7.45e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1254446385283915;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11231637819360626;  // std dev = 5.58e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783626;  // std dev = 4.71e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926107;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08518475138839678;  // std dev = 3.65e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08260309400528737;  // std dev = 0.335, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then return 0.17165426462552502;  // std dev = 0.248, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | else return -0.07298691294940739;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0681999484550219;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15344948653347498;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08578615119950496;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06399149409994277;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13455766246279935;  // std dev = 4.59e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07929292121393748;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.574', 'seconds']
Refined model CLL: -0.065615


******************************************
Best model found
******************************************
Results 

CLL : -0.069799 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.503 

Total Inference Time : 0.8523919582366943 

Total revision time: 3.7232118988037106
Best scored revision CLL: -0.065615


Results 

CLL : -0.069799 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.739044799804687 

Total Inference Time : 0.8523919582366943 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.638
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21529179224236955;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21780131635070826;  // std dev = 5.248, 116.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1457171649466285;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1157843017945867;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07973870194366926;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06454209090243332;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.056680251973027854;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.028763375526505906;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.020611734966826237;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05596016371109396;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.191', 'seconds']
Parameter learned model CLL:-0.388371 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.379, 81, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.248, 71, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.413, 84, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.435, 86, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.497, 92, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.497, 92, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.477, 90, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.465, 97, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.553, 98, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.39, 82, 45]}]
{'': [nan, 0.2295918367346948], 'false': [nan, 0.2295918367346948]}
{'': [nan, 0.23744054696789527], 'false': [nan, 0.23744054696789527]}
{'': [nan, 0.22714981070849077], 'false': [nan, 0.22714981070849077]}
{'': [nan, 0.22551133383835378], 'false': [nan, 0.22551133383835378]}
{'': [nan, 0.22057648249773454], 'false': [nan, 0.22057648249773454]}
{'': [nan, 0.22057648249773643], 'false': [nan, 0.22057648249773643]}
{'': [nan, 0.22222222222222146], 'false': [nan, 0.22222222222222146]}
{'': [nan, 0.21647490577266532]}
{'': [nan, 0.2156584674067197], 'false': [nan, 0.2156584674067197]}
{'': [nan, 0.22878045756091514], 'false': [nan, 0.22878045756091514]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.417
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048766;  // std dev = 7.74e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1254446385283914;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1123163781936062;  // std dev = 7.74e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783615;  // std dev = 5.96e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926096;  // std dev = 5.05e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08518475138839683;  // std dev = 3.80e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07877675473109165;  // std dev = 4.47e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else return 0.20348522714636968;  // std dev = 0.285, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.1780124605643971;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09486758149476647;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06842697784420268;  // std dev = 2.47e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1534383532310792;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.0870286763957845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06419184008202626;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13454897839812577;  // std dev = 3.49e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08035780363246851;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.363', 'seconds']
Refined model CLL: -0.066883


******************************************
Best model found
******************************************
Results 

CLL : -0.082141 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.417 

Total Inference Time : 0.8386366367340088 

Total revision time: 3.6334981250762937
Best scored revision CLL: -0.066883


Results 

CLL : -0.082141 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.6493310260772702 

Total Inference Time : 0.8386366367340088 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.753
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19961234973365988;  // std dev = 6.073, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1431836687431436;  // std dev = 6.211, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12571140007847612;  // std dev = 6.195, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13255083271752421;  // std dev = 6.073, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09582185310373607;  // std dev = 6.137, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13179660447011218;  // std dev = 5.888, 147.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09380423182872877;  // std dev = 5.947, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then return 0.6554603879353446;  // std dev = 1.687, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | else return -0.2936921544375369;  // std dev = 1.84e-07, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.015406422022239323;  // std dev = 4.951, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.030474084791589574;  // std dev = 4.845, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.303', 'seconds']
Parameter learned model CLL:-0.29965 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.073, 108, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.211, 124, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.195, 122, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.073, 108, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.137, 115, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.888, 91, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.947, 96, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [1.687, 3, 56], 'false,false': [1.84e-07, 89, 0]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.951, 115, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.845, 105, 56]}]
{'': [nan, 0.22486615110053565], 'false': [nan, 0.22486615110053565]}
{'': [nan, 0.2143209876543232], 'false': [nan, 0.21432098765432114]}
{'': [nan, 0.21562933972983273], 'false': [nan, 0.21562933972983273]}
{'': [0.0, 0.22486615110053282], 'false': [nan, 0.22486615110053507], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [nan, 0.22023870592660943], 'false': [nan, 0.22023870592660977]}
{'': [nan, 0.23582766439909483], 'false': [nan, 0.23582766439909483]}
{'': [nan, 0.23268698060941878], 'false': [nan, 0.23268698060941878]}
{'': [nan, 0.23520818115412573], 'false': [0.0482619936799755, 3.792222466135366e-16]}
{'': [0.0, 0.14337396205802663], 'false': [nan, 0.14337396205802647], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [nan, 0.14581660863877385], 'false': [nan, 0.14581660863877385]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 1.413
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048763;  // std dev = 8.69e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.689297767541692;  // std dev = 0.157, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.6913094771863096;  // std dev = 0.152, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.12544463852839133;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360617;  // std dev = 9.31e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5625484866787079;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.22243243263397708;  // std dev = 0.000348, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.10159632948783627;  // std dev = 3.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.4228616660789754;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1863893289198432;  // std dev = 0.000249, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926104;  // std dev = 2.98e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32433982173346015;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1596674914091897;  // std dev = 0.000220, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 5.37e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25764627889685243;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1394053753411614;  // std dev = 0.000264, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21150382987855246;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12363638453240806;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07870428238188794;  // std dev = 0.009, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.17837613899645616;  // std dev = 0.001, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10158561364099243;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.07325114542669262;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06843128409723227;  // std dev = 1.49e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.15371390605308052;  // std dev = 0.000979, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10118189562864133;  // std dev = 0.000158, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419563947888392;  // std dev = 3.80e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13476387890646055;  // std dev = 0.000877, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09230203035064202;  // std dev = 0.000169, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.235', 'seconds']
Refined model CLL: -0.064584


******************************************
Best model found
******************************************
Results 

CLL : -0.07049 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.413 

Total Inference Time : 0.8716204166412354 

Total revision time: 3.9723173294067387
Best scored revision CLL: -0.064584


Results 

CLL : -0.07049 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.994542470932007 

Total Inference Time : 0.8716204166412354 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.758
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22994380689438523;  // std dev = 6.036, 156.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1518139652587624;  // std dev = 6.262, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13839603861587088;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11010720910911241;  // std dev = 6.245, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09643116524963811;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03815475456253254;  // std dev = 6.404, 198.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0693422751134957;  // std dev = 6.227, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07579886294812595;  // std dev = 0.477, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05619802211503096;  // std dev = 6.153, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 8.256759764325187E-4;  // std dev = 6.355, 191.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.218', 'seconds']
Parameter learned model CLL:-0.374217 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.036, 98, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.262, 121, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.218, 116, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.245, 119, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.218, 116, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.404, 140, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.227, 117, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.477, 107, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.153, 109, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.355, 133, 58]}]
{'': [nan, 0.2335634451019068], 'false': [nan, 0.2335634451019068]}
{'': [nan, 0.21903186542242717], 'false': [nan, 0.21903186542242736]}
{'': [nan, 0.22222222222222274], 'false': [nan, 0.22222222222222274]}
{'': [nan, 0.2203070637428573], 'false': [nan, 0.22030706374285813]}
{'': [0.0, 0.22222222222222388], 'false': [nan, 0.22222222222222238], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2071217222732398], 'false': [nan, 0.2071217222732398]}
{'': [nan, 0.22158367346938673], 'false': [nan, 0.22158367346938673]}
{'': [nan, 0.22795224977043]}
{'': [nan, 0.2266843558392206], 'false': [nan, 0.22668435583921961]}
{'': [nan, 0.2114525369370346], 'false': [nan, 0.2114525369370346]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 1.597
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.832507909458486;  // std dev = 0.158, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else return -0.1418510649004878;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7228448795989211;  // std dev = 0.019, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.2775860598416462;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else return -0.12544463852839105;  // std dev = 8.30e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 8.69e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5586775921668293;  // std dev = 0.023, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.22518319691446373;  // std dev = 0.007, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4199788690477935;  // std dev = 0.023, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1882122240722037;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926078;  // std dev = 7.88e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.32238680360170413;  // std dev = 0.020, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.16228413625500537;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2563166846943529;  // std dev = 0.018, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.14058440664477775;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08686848727893914;  // std dev = 0.166, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2105669322776752;  // std dev = 0.015, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12378837741873601;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0802315690361256;  // std dev = 0.157, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17769050259667346;  // std dev = 0.014, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11139933076604176;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0743376268489721;  // std dev = 0.148, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06815783249146518;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15319479065687663;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10099565311047438;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06395431983427159;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1343592912556415;  // std dev = 0.011, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09224966195754304;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.366', 'seconds']
Refined model CLL: -0.064656


******************************************
Best model found
******************************************
Results 

CLL : -0.068768 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.597 

Total Inference Time : 0.9238760471343994 

Total revision time: 4.197849016189576
Best scored revision CLL: -0.064656


Results 

CLL : -0.068768 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.220074157714844 

Total Inference Time : 0.9238760471343994 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.237
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21993755298568732;  // std dev = 10.658, 492.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1669742726317708;  // std dev = 10.857, 527.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14788191654784563;  // std dev = 10.809, 518.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11832407583390252;  // std dev = 10.852, 526.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 9.13e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08796130679208926;  // std dev = 10.929, 541.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07581760248404089;  // std dev = 10.893, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05373086532821787;  // std dev = 10.953, 546.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, I) )
%   | then return 0.4416670443389693;  // std dev = 5.959, 178.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=129 */
%   | else return -0.14424185848434257;  // std dev = 6.496, 353.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.06842697784420274;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04434099014555707;  // std dev = 10.062, 525.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202619;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.048042803378194346;  // std dev = 9.987, 498.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.601', 'seconds']
Parameter learned model CLL:-0.366671 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 14, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.658, 314, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.857, 349, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.05e-08, 13, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.809, 340, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.852, 348, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [9.13e-09, 17, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.929, 363, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.73e-09, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.893, 356, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 11, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.953, 368, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 7, 0], 'false,true': [5.959, 49, 129], 'false,false': [6.496, 304, 49]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 18, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.062, 347, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.45e-09, 16, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.987, 320, 178]}]
{'': [-1.1895246692412391e-17, 0.23089761385419028], 'false': [nan, 0.23089761385419028], 'true': [nan, -1.1895246692412391e-17], 'true,false': [nan, -1.1895246692412391e-17], 'true,false,false': [nan, -1.1895246692412391e-17]}
{'': [0.0, 0.22367847794072906], 'false': [nan, 0.22367847794072773], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [8.540177112501205e-18, 0.22554821782620868], 'false': [nan, 0.22554821782620868], 'true': [nan, 8.540177112501205e-18], 'true,false': [nan, 8.540177112501205e-18], 'true,false,false': [nan, 8.540177112501205e-18]}
{'': [0.0, 0.22388642310862075], 'false': [nan, 0.22388642310861992], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [4.89804275569922e-18, 0.22076595337585544], 'false': [nan, 0.2207659533758591], 'true': [nan, 4.89804275569922e-18], 'true,false': [nan, 4.89804275569922e-18], 'true,false,false': [nan, 4.89804275569922e-18]}
{'': [1.5419764230904951e-18, 0.2222222222222214], 'false': [nan, 0.2222222222222214], 'true': [nan, 1.5419764230904951e-18], 'true,false': [1.5419764230904951e-18, nan]}
{'': [0.0, 0.2197265493968786], 'false': [nan, 0.2197265493968786], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [9.912705577010326e-19, 0.222846422022906], 'false': [0.1995013255902055, 0.1195419271481211], 'true': [nan, 9.912705577010326e-19], 'true,false': [nan, 9.912705577010326e-19], 'true,false,false': [nan, 9.912705577010326e-19]}
{'': [-1.5419764230904951e-18, 0.19285843894633778], 'false': [nan, 0.19285843894633492], 'true': [nan, -1.5419764230904951e-18], 'true,false': [-1.5419764230904951e-18, nan]}
{'': [3.469446951953614e-18, 0.20027222392927946], 'false': [nan, 0.20027222392927946], 'true': [nan, 3.469446951953614e-18], 'true,false': [nan, 3.469446951953614e-18], 'true,false,false': [nan, 3.469446951953614e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 2.201
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.83e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.14185106490048816;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.12544463852839183;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1123163781936063;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.11231637819360685;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783619;  // std dev = 4.21e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.10159632948783656;  // std dev = 0.000, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.09269127618926067;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return -0.08518475138839678;  // std dev = 8.69e-08, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A), director(B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109168;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return -0.07877675473109144;  // std dev = 4.71e-08, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.07324622576333684;  // std dev = 9.66e-08, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0684269778442027;  // std dev = 1.97e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.06842697784420276;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.438', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.201 

Total Inference Time : 0.9795269966125488 

Total revision time: 5.474121845245362
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.4963469867706305 

Total Inference Time : 0.9795269966125488 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.705
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17729787126972513;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1498527640205198;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1853909156051499;  // std dev = 5.316, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20824499654648965;  // std dev = 5.089, 106.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0724320642019708;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12712663163683716;  // std dev = 5.219, 114.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.028179244524044633;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.020025509371494766;  // std dev = 0.466, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03248233349728411;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.013494619484371237;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.554', 'seconds']
Parameter learned model CLL:-0.391765 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.535, 96, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.553, 98, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.316, 76, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.089, 61, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.507, 93, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.219, 69, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.466, 96, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.467, 89, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.516, 94, 45]}]
{'': [nan, 0.21729289271163507], 'false': [nan, 0.21729289271163507]}
{'': [nan, 0.21565846740672026], 'false': [nan, 0.21565846740671915]}
{'': [0.0, 0.23359060173485505], 'false': [nan, 0.23359060173485505], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.24430402278390914], 'false': [nan, 0.24430402278390898]}
{'': [0.0, 0.2197542533081276], 'false': [nan, 0.2197542533081286], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2389196675900288], 'false': [nan, 0.2389196675900288]}
{'': [nan, 0.21811224489795897], 'false': [nan, 0.21811224489795897]}
{'': [nan, 0.2172928927116332]}
{'': [nan, 0.22304522165292978], 'false': [nan, 0.22304522165292937]}
{'': [nan, 0.21893276745510018], 'false': [nan, 0.21893276745510018]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 1.476
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 7.60e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360622;  // std dev = 6.66e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783615;  // std dev = 5.67e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10257898415364328;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( actor(B) )
%   | then return -0.09269127618926108;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839682;  // std dev = 4.94e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109166;  // std dev = 3.94e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333707;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4.21e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( female(A) )
%   | then return 0.15274385809367078;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.14045658943045564;  // std dev = 0.051, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13508925028753221;  // std dev = 0.004, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07819505966833311;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.14511358923722376;  // std dev = 0.362, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.350', 'seconds']
Refined model CLL: -0.065718


******************************************
Best model found
******************************************
Results 

CLL : -0.072018 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.870801 

Recall : 1.0 

F1 : 0.930939 

Total Learning Time : 1.476 

Total Inference Time : 0.7582707405090332 

Total revision time: 3.709923034667969
Best scored revision CLL: -0.065718


Results 

CLL : -0.072018 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.870801 

Recall : 1.0 

F1 : 0.930939 

Total Learning Time : 3.7321481761932374 

Total Inference Time : 0.7582707405090332 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.642
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17505034355021648;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16880995055883147;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14676243822420695;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14173964022849003;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11704844902738865;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07670891708040982;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07472944950487331;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.034515970132592985;  // std dev = 0.468, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.01612809515609919;  // std dev = 5.562, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.036074700218716185;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.326', 'seconds']
Parameter learned model CLL:-0.384135 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.544, 97, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.477, 90, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.467, 89, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.39, 82, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.39, 82, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.467, 89, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.413, 84, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.468, 94, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.562, 99, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.467, 89, 45]}]
{'': [nan, 0.2164749057726651], 'false': [nan, 0.2164749057726651]}
{'': [nan, 0.22222222222222213], 'false': [nan, 0.2222222222222221]}
{'': [nan, 0.2230452216529286], 'false': [nan, 0.2230452216529286]}
{'': [nan, 0.2287804575609158], 'false': [nan, 0.22878045756091492]}
{'': [nan, 0.2287804575609157], 'false': [nan, 0.22878045756091533]}
{'': [nan, 0.22304522165293064], 'false': [nan, 0.22304522165293064]}
{'': [nan, 0.2271498107084921], 'false': [nan, 0.2271498107084921]}
{'': [nan, 0.21893276745510176]}
{'': [nan, 0.21484374999999928], 'false': [nan, 0.2148437500000002]}
{'': [nan, 0.22304522165292923], 'false': [nan, 0.22304522165292923]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
0;false;genre(A, D), movie(E, D).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;false;genre(B, D), movie(E, D).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;false;genre(A, D), movie(E, D).;true;true
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;false;genre(B, D), movie(E, D).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;false;genre(B, D), movie(E, D).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;false;genre(A, D), movie(E, D).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;false;genre(A, D), movie(E, D).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;false;genre(B, D), movie(E, D).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;false;genre(A, D), movie(E, D).;true;true


Refining candidate
***************************
Model training time 1.309
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.30e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1271871323403089;  // std dev = 0.154, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11214276642969537;  // std dev = 6.32e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10145322001900034;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09257143889402711;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( female(A) )
%   | | | then return 0.30348671702059077;  // std dev = 0.405, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.3027377983188709;  // std dev = 0.404, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08508303717464807;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2585300091043426;  // std dev = 0.000481, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12150861600625235;  // std dev = 9.23e-05, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07868940754778402;  // std dev = 2.98e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21212680637775982;  // std dev = 0.000420, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10915951791884383;  // std dev = 6.65e-05, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07317044713183929;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.1788321735345491;  // std dev = 0.000369, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.0989662144411459;  // std dev = 6.68e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06836064332250302;  // std dev = 1.05e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15405927153963983;  // std dev = 0.000327, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09048474939660422;  // std dev = 6.16e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06413330985727936;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13503311753430758;  // std dev = 0.000293, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08331843056169526;  // std dev = 6.60e-05, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.473', 'seconds']
Refined model CLL: -0.065183


******************************************
Best model found
******************************************
Results 

CLL : -0.071712 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.873057 

Recall : 1.0 

F1 : 0.932227 

Total Learning Time : 1.309 

Total Inference Time : 0.8225765228271484 

Total revision time: 3.534370685577392
Best scored revision CLL: -0.065183


Results 

CLL : -0.071712 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.873057 

Recall : 1.0 

F1 : 0.932227 

Total Learning Time : 3.5565958271026608 

Total Inference Time : 0.8225765228271484 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.691
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1781489350995135;  // std dev = 6.171, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13939808218645636;  // std dev = 6.242, 184.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12605391449887662;  // std dev = 6.211, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1305031699458149;  // std dev = 6.101, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11044885094483539;  // std dev = 6.092, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10983111228985325;  // std dev = 6.002, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07362471930176201;  // std dev = 6.073, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06103736753169749;  // std dev = 0.475, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03827746853214116;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0029314676163836647;  // std dev = 6.234, 183.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.186', 'seconds']
Parameter learned model CLL:-0.375786 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.171, 119, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.242, 128, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.211, 124, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.101, 111, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.092, 110, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.002, 101, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.073, 108, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.475, 107, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.11, 112, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.234, 127, 56]}]
{'': [nan, 0.2176000000000004], 'false': [nan, 0.2176000000000004]}
{'': [nan, 0.21172022684310043], 'false': [nan, 0.21172022684310043]}
{'': [nan, 0.21432098765432134], 'false': [nan, 0.21432098765432134]}
{'': [nan, 0.2228835741690268], 'false': [nan, 0.2228835741690268]}
{'': [nan, 0.22354478153578214], 'false': [nan, 0.22354478153578214]}
{'': [nan, 0.22946164144589817], 'false': [nan, 0.22946164144589817]}
{'': [nan, 0.22486615110053496], 'false': [nan, 0.22486615110053496]}
{'': [nan, 0.22552598893447134]}
{'': [nan, 0.22222222222222238], 'false': [nan, 0.22222222222222238]}
{'': [nan, 0.21236824031771487], 'false': [nan, 0.21236824031771487]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.404
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12684177320641524;  // std dev = 0.154, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11217715732821304;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( female(A) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.5122901261050012;  // std dev = 0.913, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10148157154120684;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.422957148784473;  // std dev = 0.039, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.17526284972673997;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09259518198777544;  // std dev = 4.71e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.324414616953793;  // std dev = 0.035, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.15279013337910152;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08510319107504388;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2577031480569357;  // std dev = 0.031, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.1340441302439267;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.19605060114703107;  // std dev = 0.324, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.20392888177525084;  // std dev = 0.327, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else if ( actor(A) )
%   | | | then return -0.07870671584378905;  // std dev = 1.05e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | | else return -0.14515881282461543;  // std dev = 0.497, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.1658944486010748;  // std dev = 0.060, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.18258721407446107;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return -0.07330421599148332;  // std dev = 0.031, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15572373913841622;  // std dev = 0.009, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.16527991702154107;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.0683266364217433;  // std dev = 0.030, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06388709221994102;  // std dev = 0.010, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13632929619371087;  // std dev = 0.008, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.14286037597304807;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.442', 'seconds']
Refined model CLL: -0.066347


******************************************
Best model found
******************************************
Results 

CLL : -0.078703 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.404 

Total Inference Time : 0.9563846588134766 

Total revision time: 3.8582975578308103
Best scored revision CLL: -0.066347


Results 

CLL : -0.078703 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 3.8787991714477537 

Total Inference Time : 0.9563846588134766 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.693
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18957750652808503;  // std dev = 6.227, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16115365164296758;  // std dev = 6.245, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1701343297315694;  // std dev = 6.091, 161.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13813063607884246;  // std dev = 6.112, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1072614945295665;  // std dev = 6.143, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07290090659213268;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06247153733163447;  // std dev = 6.191, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0664426300012261;  // std dev = 0.479, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.015443613267146999;  // std dev = 6.286, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.019332113259492432;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.070', 'seconds']
Parameter learned model CLL:-0.385267 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.227, 117, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.245, 119, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.091, 103, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.112, 105, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.143, 108, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.209, 115, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.191, 113, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.479, 105, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.286, 124, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.253, 120, 58]}]
{'': [nan, 0.22158367346938804], 'false': [nan, 0.22158367346938804]}
{'': [nan, 0.22030706374285777], 'false': [nan, 0.22030706374285777]}
{'': [nan, 0.23046950349137682], 'false': [nan, 0.23046950349137682]}
{'': [nan, 0.22921449809929062], 'false': [nan, 0.22921449809929062]}
{'': [nan, 0.22731891421106132], 'false': [nan, 0.22731891421106132]}
{'': [nan, 0.22286077049015826], 'false': [nan, 0.22286077049015826]}
{'': [nan, 0.22413734140419142], 'false': [nan, 0.22413734140419142]}
{'': [nan, 0.22921449809928934]}
{'': [nan, 0.21712353580485347], 'false': [nan, 0.21712353580485347]}
{'': [nan, 0.21966923368261604], 'false': [nan, 0.21966923368261604]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.483
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1418510649004877;  // std dev = 5.58e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else if ( female(A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.8081489350995117;  // std dev = 1.378, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839108;  // std dev = 7.60e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7260120165429667;  // std dev = 0.036, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.2738732711003315;  // std dev = 0.014, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360624;  // std dev = 6.99e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5618228849272727;  // std dev = 0.045, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.2217299956462492;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783666;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4223385627180925;  // std dev = 0.044, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.18812199762379508;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0926912761892608;  // std dev = 7.60e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3239968564449996;  // std dev = 0.040, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.1621855491110494;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08518475138839682;  // std dev = 5.27e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2574196568590399;  // std dev = 0.034, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.1393265852333009;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21134830525262657;  // std dev = 0.030, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12380700843090602;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(A) )
%   | | | then return -0.0787767547310916;  // std dev = 5.58e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | | else return -0.2037546016353844;  // std dev = 0.639, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07260780133677142;  // std dev = 0.024, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.1782649545435578;  // std dev = 0.026, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1108105850840277;  // std dev = 0.008, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.067734302125581;  // std dev = 0.023, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15363146324418003;  // std dev = 0.023, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09935250930292934;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.12017586629223836;  // std dev = 0.220, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.13088059926802617;  // std dev = 0.224, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | else return -0.06385610207216631;  // std dev = 0.029, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.360', 'seconds']
Refined model CLL: -0.067054


******************************************
Best model found
******************************************
Results 

CLL : -0.083702 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.483 

Total Inference Time : 0.9801235198974609 

Total revision time: 4.003101945877075
Best scored revision CLL: -0.067054


Results 

CLL : -0.083702 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.023603559494019 

Total Inference Time : 0.9801235198974609 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.239
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18296645334768363;  // std dev = 10.963, 548.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17343323227438706;  // std dev = 10.847, 525.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1546426296345832;  // std dev = 10.792, 515.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.112991046972821;  // std dev = 10.929, 541.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11600047580295897;  // std dev = 10.742, 506.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08966263626249377;  // std dev = 10.781, 513.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03474521015838854;  // std dev = 11.086, 575.000 (wgt'ed) examples reached here.  /* #neg=397 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( genre(B, I) )
%   | then return 0.41928854187456827;  // std dev = 6.210, 184.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=129 */
%   | else return -0.14454351268638801;  // std dev = 6.502, 357.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04084611769420361;  // std dev = 10.184, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06319150055753954;  // std dev = 9.898, 485.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.671', 'seconds']
Parameter learned model CLL:-0.367331 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 12, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.963, 370, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.847, 347, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.792, 337, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 15, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.929, 363, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.27e-09, 13, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.742, 328, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.27e-09, 11, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.781, 335, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.086, 397, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.73e-09, 15, 0], 'false,true': [6.21, 55, 129], 'false,false': [6.502, 308, 49]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 11, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.184, 352, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 9, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.898, 307, 178]}]
{'': [-1.1564823173178714e-17, 0.21931109808727425], 'false': [nan, 0.21931109808727425], 'true': [nan, -1.1564823173178714e-17], 'true,false': [nan, -1.1564823173178714e-17], 'true,false,false': [nan, -1.1564823173178714e-17]}
{'': [-1.982541115402065e-18, 0.22409433106575674], 'false': [nan, 0.22409433106576088], 'true': [nan, -1.982541115402065e-18], 'true,false': [nan, -1.982541115402065e-18]}
{'': [-1.5419764230904951e-18, 0.2261702328211879], 'false': [nan, 0.2261702328211879], 'true': [nan, -1.5419764230904951e-18], 'true,false': [nan, -1.5419764230904951e-18], 'true,false,false': [nan, -1.5419764230904951e-18]}
{'': [-5.551115123125783e-18, 0.22076595337585703], 'false': [nan, 0.22076595337586039], 'true': [nan, -5.551115123125783e-18], 'true,false': [-5.551115123125783e-18, nan]}
{'': [2.135044278125301e-18, 0.22803043322032904], 'false': [nan, 0.22803043322032965], 'true': [nan, 2.135044278125301e-18], 'true,false': [nan, 2.135044278125301e-18], 'true,false,false': [nan, 2.135044278125301e-18]}
{'': [2.523234146875356e-18, 0.22658443813671464], 'false': [nan, 0.22658443813671464], 'true': [nan, 2.523234146875356e-18], 'true,false': [2.523234146875356e-18, nan]}
{'': [0.0, 0.21373459357277527], 'false': [nan, 0.21373459357277527], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [9.251858538542971e-19, 0.22076595337585542], 'false': [0.20956403591682027, 0.1184159938485202], 'true': [nan, 9.251858538542971e-19], 'true,false': [nan, 9.251858538542971e-19], 'true,false,false': [nan, 9.251858538542971e-19]}
{'': [6.30808536718839e-19, 0.19567802693204966], 'false': [nan, 0.19567802693205263], 'true': [nan, 6.30808536718839e-19], 'true,false': [6.30808536718839e-19, nan]}
{'': [7.709882115452476e-19, 0.20198937503104045], 'false': [nan, 0.20198937503104045], 'true': [nan, 7.709882115452476e-19], 'true,false': [nan, 7.709882115452476e-19], 'true,false,false': [nan, 7.709882115452476e-19]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 2.162
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.14185106490048824;  // std dev = 0.000, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.12544463852839183;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360626;  // std dev = 4.83e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.1123163781936068;  // std dev = 0.000, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783621;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.10159632948783655;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.09269127618926064;  // std dev = 2.11e-08, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839683;  // std dev = 1.18e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.67e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return -0.08518475138839679;  // std dev = 8.16e-08, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A), director(B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109168;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.07877675473109144;  // std dev = 4.47e-08, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333707;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.07324622576333698;  // std dev = 9.66e-08, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A), director(B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420264;  // std dev = 1.49e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 254.000 (wgt'ed) examples reached here.  /* #neg=254 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06419184008202619;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.600', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.162 

Total Inference Time : 1.055161714553833 

Total revision time: 5.49615905380249
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.516660667419433 

Total Inference Time : 1.055161714553833 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.641
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19905802600860323;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16061715110358354;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11672412516576884;  // std dev = 5.579, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12311347835037391;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1201739457768312;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0702942700732988;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08186107754447564;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.008909211425167634;  // std dev = 0.455, 154.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.048222334717803926;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.01317839948416978;  // std dev = 5.579, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.128', 'seconds']
Parameter learned model CLL:-0.373461 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.446, 87, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.497, 92, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.579, 101, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.477, 90, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.402, 83, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.516, 94, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.413, 84, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.455, 109, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.477, 90, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.579, 101, 45]}]
{'': [nan, 0.22469008264462906], 'false': [nan, 0.22469008264462906]}
{'': [nan, 0.220576482497736], 'false': [nan, 0.220576482497736]}
{'': [nan, 0.21322011634452948], 'false': [nan, 0.21322011634452948]}
{'': [nan, 0.22222222222222232], 'false': [nan, 0.22222222222222232]}
{'': [nan, 0.22796630859374933], 'false': [nan, 0.22796630859374933]}
{'': [nan, 0.21893276745510065], 'false': [nan, 0.21893276745510065]}
{'': [nan, 0.22714981070849186], 'false': [nan, 0.22714981070849186]}
{'': [nan, 0.20682239838084004]}
{'': [nan, 0.22222222222222288], 'false': [nan, 0.22222222222222288]}
{'': [nan, 0.21322011634453028], 'false': [nan, 0.21322011634453028]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.387
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14185106490048766;  // std dev = 7.30e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1254446385283914;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360621;  // std dev = 7.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( female(A) )
%   | | | then return 0.4997262021679602;  // std dev = 0.639, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.5553664367462843;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783616;  // std dev = 5.27e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4208356696722046;  // std dev = 0.039, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.17997889380469348;  // std dev = 0.008, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.33221493269347063;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.2935711205949887;  // std dev = 0.654, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | else return -0.09336690830822225;  // std dev = 0.062, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08513211527344115;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( female(A) )
%   | | | then return 0.19248350917599616;  // std dev = 0.596, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.25972553556363925;  // std dev = 4.21e-08, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.2274295536724171;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.1876609649653063;  // std dev = 0.626, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | else return -0.08278534104292906;  // std dev = 0.399, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(B) )
%   | | then return -0.07293244907765305;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return 0.1848546752175716;  // std dev = 0.019, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else if ( actor(B) )
%   | | then return -0.07293244907765305;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.2770844422269212;  // std dev = 0.011, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06815225286766681;  // std dev = 2.47e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15860540251267957;  // std dev = 0.017, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.22652553495103409;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06394939470326;  // std dev = 2.89e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13856747431363878;  // std dev = 0.015, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.18930069017174564;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.634', 'seconds']
Refined model CLL: -0.072299


******************************************
Best model found
******************************************
Results 

CLL : -0.080308 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.387 

Total Inference Time : 0.8278920650482178 

Total revision time: 3.575147035598755
Best scored revision CLL: -0.072299


Results 

CLL : -0.080308 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 3.5956486492156983 

Total Inference Time : 0.8278920650482178 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.626
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.164271384079104;  // std dev = 5.588, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15385429965406153;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12097796717907151;  // std dev = 5.588, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11733391073675888;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15753943163909284;  // std dev = 5.276, 118.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08854117923950387;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06144554082326639;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08715076992753751;  // std dev = 0.482, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05747615906928747;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.029042957771150898;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.222', 'seconds']
Parameter learned model CLL:-0.399133 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.588, 102, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.544, 97, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.588, 102, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.276, 73, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.446, 87, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.487, 91, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.482, 77, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.379, 81, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.446, 87, 45]}]
{'': [nan, 0.21241149521033006], 'false': [nan, 0.21241149521033006]}
{'': [nan, 0.21647490577266282], 'false': [nan, 0.21647490577266282]}
{'': [nan, 0.21241149521033006], 'false': [nan, 0.21241149521033006]}
{'': [nan, 0.21811224489795938], 'false': [nan, 0.21811224489795938]}
{'': [nan, 0.23592358517667267], 'false': [nan, 0.23592358517667267]}
{'': [nan, 0.22469008264462892], 'false': [nan, 0.22469008264462892]}
{'': [nan, 0.2213992214532872], 'false': [nan, 0.2213992214532872]}
{'': [nan, 0.23280032249395274]}
{'': [nan, 0.2295918367346947], 'false': [nan, 0.2295918367346947]}
{'': [nan, 0.22469008264462825], 'false': [nan, 0.22469008264462825]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.411
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.16e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839155;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11577801553798235;  // std dev = 0.331, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.10128080568012247;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09242702812410461;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08496016320884894;  // std dev = 2.04e-05, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07877675473109177;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08284470389966318;  // std dev = 0.369, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07279101738308216;  // std dev = 3.80e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06802837716382433;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06384003791887533;  // std dev = 1.97e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( female(A) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.11749045750050806;  // std dev = 0.268, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.583', 'seconds']
Refined model CLL: -0.064972


******************************************
Best model found
******************************************
Results 

CLL : -0.071724 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.411 

Total Inference Time : 0.8722410202026367 

Total revision time: 3.6346650714874267
Best scored revision CLL: -0.064972


Results 

CLL : -0.071724 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.65516668510437 

Total Inference Time : 0.8722410202026367 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.721
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21257931484634898;  // std dev = 6.013, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17171631665300904;  // std dev = 6.073, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13024550886587027;  // std dev = 6.146, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10155938047149039;  // std dev = 6.179, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07675932708172524;  // std dev = 6.211, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09098950242836053;  // std dev = 6.082, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04361437999550628;  // std dev = 6.219, 181.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06095408270197875;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09170219637859323;  // std dev = 5.900, 148.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0014413090683344399;  // std dev = 6.242, 184.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.098', 'seconds']
Parameter learned model CLL:-0.378211 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.013, 102, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.073, 108, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.146, 116, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.179, 120, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.211, 124, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.082, 109, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.219, 125, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.472, 111, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.9, 92, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.242, 128, 56]}]
{'': [nan, 0.2288094856593497], 'false': [nan, 0.2288094856593497]}
{'': [nan, 0.22486615110053504], 'false': [nan, 0.22486615110053504]}
{'': [nan, 0.21957815035154135], 'false': [nan, 0.21957815035154135]}
{'': [nan, 0.21694214876033122], 'false': [nan, 0.21694214876033122]}
{'': [nan, 0.21432098765432311], 'false': [nan, 0.21432098765432311]}
{'': [nan, 0.22420569329660445], 'false': [nan, 0.22420569329660445]}
{'': [nan, 0.21366869143188616], 'false': [nan, 0.21366869143188616]}
{'': [nan, 0.22288357416902654]}
{'': [nan, 0.235208181154126], 'false': [nan, 0.235208181154126]}
{'': [nan, 0.21172022684309955], 'false': [nan, 0.21172022684309955]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.591
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 7.88e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1254446385283913;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else if ( female(A) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.6649625702277708;  // std dev = 1.156, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5623144202428032;  // std dev = 0.050, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.22437231106191638;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11336354609347553;  // std dev = 0.105, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10150078961285429;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4227119259348037;  // std dev = 0.050, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.18554343413715985;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09261127566443345;  // std dev = 5.77e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else if ( female(A) )
%   | | | then return 0.31807148262086116;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.313803536970892;  // std dev = 0.478, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08511685148527173;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( female(A) )
%   | | | then return 0.2533697542147821;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.24908991798985172;  // std dev = 0.459, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07871844717671016;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21397143818443015;  // std dev = 0.040, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.2571466392948862;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07319564183792343;  // std dev = 4.83e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( female(A) )
%   | | then return 0.16156223328407157;  // std dev = 0.072, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.1846729731377116;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15593381786702928;  // std dev = 0.020, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.23211902690716177;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07010332858987377;  // std dev = 0.183, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06404954703835487;  // std dev = 1.67e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1364933958656763;  // std dev = 0.018, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.19459326307073926;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.422', 'seconds']
Refined model CLL: -0.068702


******************************************
Best model found
******************************************
Results 

CLL : -0.091606 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.591 

Total Inference Time : 0.9569149017333984 

Total revision time: 4.166472637176514
Best scored revision CLL: -0.068702


Results 

CLL : -0.091606 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 30.40030499649048 

Total Inference Time : 0.9569149017333984 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.692
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20338703033760883;  // std dev = 6.162, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16297303986615616;  // std dev = 6.227, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13515144133420814;  // std dev = 6.245, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1458289354266111;  // std dev = 6.091, 161.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09917764639171865;  // std dev = 6.191, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06546530644994483;  // std dev = 6.262, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07189125206603529;  // std dev = 6.172, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07008018216351473;  // std dev = 0.479, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03499698388778789;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03757091579797172;  // std dev = 6.162, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.106', 'seconds']
Parameter learned model CLL:-0.392286 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.162, 110, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.227, 117, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.245, 119, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.091, 103, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.191, 113, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.262, 121, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.172, 111, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.479, 105, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.209, 115, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.162, 110, 58]}]
{'': [nan, 0.22604875283446732], 'false': [nan, 0.22604875283446732]}
{'': [nan, 0.22158367346938884], 'false': [nan, 0.22158367346938884]}
{'': [nan, 0.22030706374285686], 'false': [nan, 0.22030706374285686]}
{'': [nan, 0.23046950349137865], 'false': [nan, 0.23046950349137865]}
{'': [nan, 0.22413734140419142], 'false': [nan, 0.22413734140419142]}
{'': [nan, 0.2190318654224285], 'false': [nan, 0.2190318654224285]}
{'': [nan, 0.22541227548055115], 'false': [nan, 0.22541227548055115]}
{'': [nan, 0.2292144980992879]}
{'': [nan, 0.22286077049016048], 'false': [nan, 0.22286077049016048]}
{'': [nan, 0.22604875283446813], 'false': [nan, 0.22604875283446813]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.515
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14185106490048763;  // std dev = 8.69e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360621;  // std dev = 7.88e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783627;  // std dev = 4.21e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926087;  // std dev = 6.83e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08518475138839682;  // std dev = 5.67e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07877675473109164;  // std dev = 5.05e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 4.83e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06842697784420265;  // std dev = 5.48e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06624551042958596;  // std dev = 0.217, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.429', 'seconds']
Refined model CLL: -0.063594


******************************************
Best model found
******************************************
Results 

CLL : -0.066725 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.515 

Total Inference Time : 1.0377750396728516 

Total revision time: 4.0847015209198
Best scored revision CLL: -0.063594


Results 

CLL : -0.066725 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 30.318533880233765 

Total Inference Time : 1.0377750396728516 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.295
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1800295860940834;  // std dev = 10.987, 553.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 1.86e-09, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1656460680723816;  // std dev = 10.914, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16809278188479929;  // std dev = 10.695, 498.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13184525421458665;  // std dev = 10.770, 511.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10661468406008004;  // std dev = 10.787, 514.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07746797273369238;  // std dev = 10.862, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06880936175366095;  // std dev = 10.809, 518.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(B, I) )
%   | then return 0.4442110285541773;  // std dev = 5.869, 176.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=129 */
%   | else return -0.15449694155790242;  // std dev = 6.513, 365.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.030364884666758036;  // std dev = 10.108, 543.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03998564805719925;  // std dev = 10.013, 509.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.541', 'seconds']
Parameter learned model CLL:-0.365962 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 13, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.987, 375, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.86e-09, 17, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.914, 360, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.45e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.695, 320, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 15, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.77, 333, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.45e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.787, 336, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.73e-09, 10, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.862, 350, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 10, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.809, 340, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 10, 0], 'false,true': [5.869, 47, 129], 'false,false': [6.513, 316, 49]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 17, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.108, 365, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.97e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.013, 331, 178]}]
{'': [-1.2810265668751807e-17, 0.21827349750988628], 'false': [nan, 0.21827349750988628], 'true': [nan, -1.2810265668751807e-17], 'true,false': [nan, -1.2810265668751807e-17], 'true,false,false': [nan, -1.2810265668751807e-17]}
{'': [0.0, 0.2213899752629125], 'false': [nan, 0.22138997526291807], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [5.046468293750712e-18, 0.22967371494007993], 'false': [nan, 0.22967371494007993], 'true': [nan, 5.046468293750712e-18], 'true,false': [nan, 5.046468293750712e-18], 'true,false,false': [nan, 5.046468293750712e-18]}
{'': [-5.551115123125783e-18, 0.22699821155709776], 'false': [nan, 0.22699821155709435], 'true': [nan, -5.551115123125783e-18], 'true,false': [-5.551115123125783e-18, nan]}
{'': [3.96508223080413e-18, 0.2263773864857879], 'false': [nan, 0.22637738648579078], 'true': [nan, 3.96508223080413e-18], 'true,false': [nan, 3.96508223080413e-18], 'true,false,false': [nan, 3.96508223080413e-18]}
{'': [1.3877787807814458e-18, 0.22347050045913802], 'false': [nan, 0.22347050045913802], 'true': [nan, 1.3877787807814458e-18], 'true,false': [1.3877787807814458e-18, nan]}
{'': [0.0, 0.2255482178262106], 'false': [nan, 0.2255482178262106], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [6.938893903907229e-19, 0.2207659533758597], 'false': [0.19573217975206605, 0.1162244323512853], 'true': [nan, 6.938893903907229e-19], 'true,false': [nan, 6.938893903907229e-19], 'true,false,false': [nan, 6.938893903907229e-19]}
{'': [-8.163404592832033e-19, 0.18815421482549333], 'false': [nan, 0.18815421482549652], 'true': [nan, -8.163404592832033e-19], 'true,false': [-8.163404592832033e-19, nan]}
{'': [3.469446951953614e-18, 0.19696858936011433], 'false': [nan, 0.19696858936011433], 'true': [nan, 3.469446951953614e-18], 'true,false': [nan, 3.469446951953614e-18], 'true,false,false': [nan, 3.469446951953614e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 2.32
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.50e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.1418510649004883;  // std dev = 0.000, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.12544463852839183;  // std dev = 0.000, 270.000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360635;  // std dev = 1.39e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360626;  // std dev = 4.94e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.11231637819360686;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A), director(B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783621;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.1015963294878366;  // std dev = 0.000, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926103;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.09269127618926064;  // std dev = 7.30e-08, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 7.45e-09, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.08518475138839679;  // std dev = 8.43e-08, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109169;  // std dev = 2.98e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.07877675473109147;  // std dev = 5.58e-08, 270.000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.07324622576333685;  // std dev = 9.19e-08, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 1.97e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.06842697784420285;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.341', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.32 

Total Inference Time : 1.0171210765838623 

Total revision time: 5.730629196166992
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 31.96446155548096 

Total Inference Time : 1.0171210765838623 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.633
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23004976154579346;  // std dev = 5.316, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1277765142486377;  // std dev = 5.612, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13021961083242176;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1187223189791153;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12164927840435028;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08324361476257933;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06209303274713662;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05722212421830433;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.030629475411480974;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03394781825045987;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.168', 'seconds']
Parameter learned model CLL:-0.388423 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.316, 76, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.612, 105, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.487, 91, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.39, 82, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.477, 90, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.474, 87, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.507, 93, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.467, 89, 45]}]
{'': [nan, 0.23359060173485505], 'false': [nan, 0.23359060173485505]}
{'': [nan, 0.20999999999999897], 'false': [nan, 0.20999999999999897]}
{'': [nan, 0.21811224489795972], 'false': [nan, 0.21811224489795972]}
{'': [nan, 0.22139922145328755], 'false': [nan, 0.22139922145328755]}
{'': [nan, 0.22878045756091522], 'false': [nan, 0.22878045756091522]}
{'': [nan, 0.22386794052801154], 'false': [nan, 0.22386794052801154]}
{'': [nan, 0.22222222222222285], 'false': [nan, 0.22222222222222285]}
{'': [nan, 0.22469008264462775]}
{'': [nan, 0.21975425330812728], 'false': [nan, 0.21975425330812728]}
{'': [nan, 0.2230452216529288], 'false': [nan, 0.2230452216529288]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.325
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14185106490048766;  // std dev = 7.30e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839136;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11368782962645227;  // std dev = 0.115, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10283899640275858;  // std dev = 0.106, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09247166383071719;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0849981091217733;  // std dev = 1.70e-05, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.07861626368728827;  // std dev = 2.22e-05, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.07310662498058006;  // std dev = 2.90e-05, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06830546752788305;  // std dev = 1.29e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06408462061549176;  // std dev = 2.89e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.642', 'seconds']
Refined model CLL: -0.064235


******************************************
Best model found
******************************************
Results 

CLL : -0.066103 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.325 

Total Inference Time : 0.8680863380432129 

Total revision time: 3.5493276672363283
Best scored revision CLL: -0.064235


Results 

CLL : -0.066103 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 29.78316002655029 

Total Inference Time : 0.8680863380432129 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.637
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17283424978482687;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18734350494663238;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13451408011266594;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1250728477178876;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09587246476856782;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.051372778506687033;  // std dev = 5.596, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05439658173896076;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07298289151890772;  // std dev = 0.476, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03818807333913907;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08236035722074495;  // std dev = 5.290, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.144', 'seconds']
Parameter learned model CLL:-0.392451 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.553, 98, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.402, 83, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.507, 93, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.487, 91, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.596, 103, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.544, 97, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.476, 85, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.507, 93, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.29, 74, 45]}]
{'': [nan, 0.21565846740672015], 'false': [nan, 0.21565846740672015]}
{'': [nan, 0.22796630859374928], 'false': [nan, 0.22796630859374928]}
{'': [nan, 0.21975425330812834], 'false': [nan, 0.21975425330812834]}
{'': [nan, 0.22386794052801168], 'false': [nan, 0.22386794052801168]}
{'': [nan, 0.2213992214532866], 'false': [nan, 0.2213992214532866]}
{'': [nan, 0.21160518626734748], 'false': [nan, 0.21160518626734748]}
{'': [nan, 0.21647490577266343], 'false': [nan, 0.21647490577266343]}
{'': [nan, 0.22633136094674458]}
{'': [nan, 0.21975425330812845], 'false': [nan, 0.21975425330812845]}
{'': [nan, 0.2351528846832851], 'false': [nan, 0.2351528846832851]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.347
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048766;  // std dev = 7.60e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839144;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360624;  // std dev = 6.32e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.3759847910666182;  // std dev = 0.704, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.4175135841583099;  // std dev = 3.65e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.10159632948783617;  // std dev = 5.37e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926107;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3253700295257571;  // std dev = 0.031, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14396890157397807;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08518475138839679;  // std dev = 2.36e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else return 0.2583537855007233;  // std dev = 0.027, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21200594223203958;  // std dev = 0.023, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1582509414550707;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.0790590230310193;  // std dev = 0.024, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07322706735578148;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( female(A) )
%   | | then return 0.18172508597470127;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.14923465885689657;  // std dev = 0.088, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06841020788040658;  // std dev = 3.80e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( female(A) )
%   | | | then return 0.1310272906622871;  // std dev = 0.428, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.15505825693935502;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06417704372371308;  // std dev = 1.05e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13781900189854576;  // std dev = 0.013, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.18095752375263668;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.517', 'seconds']
Refined model CLL: -0.070082


******************************************
Best model found
******************************************
Results 

CLL : -0.086438 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.347 

Total Inference Time : 0.8442611694335938 

Total revision time: 3.5702092971801758
Best scored revision CLL: -0.070082


Results 

CLL : -0.086438 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 29.804041656494142 

Total Inference Time : 0.8442611694335938 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.701
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20814893509951354;  // std dev = 6.033, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1472605563579344;  // std dev = 6.187, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13857627630390235;  // std dev = 6.128, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09285635736149445;  // std dev = 6.234, 183.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12085722163272608;  // std dev = 6.033, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08214803533404813;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0567494377127572;  // std dev = 6.154, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.053160016512194375;  // std dev = 0.471, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.027383651064705705;  // std dev = 6.187, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05977073428051923;  // std dev = 6.013, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.140', 'seconds']
Parameter learned model CLL:-0.380596 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.033, 104, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.187, 121, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.128, 114, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.234, 127, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.033, 104, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.11, 112, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.154, 117, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.471, 113, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.187, 121, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.013, 102, 56]}]
{'': [nan, 0.22750000000000026], 'false': [nan, 0.22750000000000026]}
{'': [nan, 0.21628523093619206], 'false': [nan, 0.21628523093619206]}
{'': [nan, 0.22089965397923872], 'false': [nan, 0.22089965397923872]}
{'': [nan, 0.21236824031771526], 'false': [nan, 0.21236824031771526]}
{'': [nan, 0.22750000000000128], 'false': [nan, 0.22750000000000128]}
{'': [nan, 0.22222222222222157], 'false': [nan, 0.22222222222222157]}
{'': [nan, 0.2189181061846365], 'false': [nan, 0.2189181061846365]}
{'': [nan, 0.2215608697174478]}
{'': [nan, 0.2162852309361937], 'false': [nan, 0.2162852309361937]}
{'': [nan, 0.22880948565935072], 'false': [nan, 0.22880948565935072]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.413
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048766;  // std dev = 7.60e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12682929878964716;  // std dev = 0.154, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11217839970433537;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10148259571765184;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.18065305191124975;  // std dev = 9.13e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.15543654189802267;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09321034178958434;  // std dev = 0.062, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08505610095196642;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.13610567332265258;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07866627369124335;  // std dev = 4.59e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.12087984648100787;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.16689264523325203;  // std dev = 0.053, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.1675729020673871;  // std dev = 0.051, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return -0.07354182021197876;  // std dev = 0.041, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06831815173963317;  // std dev = 4.53e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15402315321547405;  // std dev = 0.000331, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.12588040156987657;  // std dev = 6.11e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13500496567453463;  // std dev = 0.000297, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.11266884199008924;  // std dev = 5.55e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06444155783334116;  // std dev = 0.032, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.487', 'seconds']
Refined model CLL: -0.065552


******************************************
Best model found
******************************************
Results 

CLL : -0.076887 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.413 

Total Inference Time : 0.9933466911315918 

Total revision time: 3.9225227012634276
Best scored revision CLL: -0.065552


Results 

CLL : -0.076887 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 3.9387509002685546 

Total Inference Time : 0.9933466911315918 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.697
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22064893509951355;  // std dev = 6.081, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16437270891510497;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11306061208742937;  // std dev = 6.333, 188.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11570301382397069;  // std dev = 6.236, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08300327899187027;  // std dev = 6.294, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1002589414224199;  // std dev = 6.143, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07483394736543124;  // std dev = 6.172, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03891564894978203;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.062384191062733;  // std dev = 6.123, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.025227300043507584;  // std dev = 6.236, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.274', 'seconds']
Parameter learned model CLL:-0.383964 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.081, 102, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.209, 115, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.333, 130, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.236, 118, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.294, 125, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.143, 108, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.172, 111, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.467, 122, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.123, 106, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.236, 118, 58]}]
{'': [nan, 0.23109375000000018], 'false': [nan, 0.23109375000000018]}
{'': [nan, 0.22286077049016115], 'false': [nan, 0.22286077049016115]}
{'': [nan, 0.21333182435491235], 'false': [nan, 0.21333182435491235]}
{'': [nan, 0.22094524793388626], 'false': [nan, 0.22094524793388626]}
{'': [nan, 0.21648899638687308], 'false': [nan, 0.21648899638687308]}
{'': [nan, 0.22731891421106218], 'false': [nan, 0.22731891421106218]}
{'': [nan, 0.22541227548054898], 'false': [nan, 0.22541227548054898]}
{'': [nan, 0.21839506172839498]}
{'': [nan, 0.22858417608566323], 'false': [nan, 0.22858417608566323]}
{'': [nan, 0.22094524793388368], 'false': [nan, 0.22094524793388368]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.667
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048768;  // std dev = 6.32e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else if ( female(A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.832507909458486;  // std dev = 0.987, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1254446385283913;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7228448795989211;  // std dev = 0.019, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.2764098486626864;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5586775921668293;  // std dev = 0.023, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.2237575270982233;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11355461318143531;  // std dev = 0.111, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4199788690477936;  // std dev = 0.023, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.18898477502345143;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.1032933768817566;  // std dev = 0.145, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32238680360170413;  // std dev = 0.020, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.16120726638528637;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09341348210457802;  // std dev = 0.095, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08490016160005243;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2563166846943529;  // std dev = 0.018, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.14124690022620429;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07853232768861403;  // std dev = 3.16e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21056693227767526;  // std dev = 0.015, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12432931003977231;  // std dev = 0.004, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0730341446351746;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17769050259667346;  // std dev = 0.014, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11144657204571909;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15319479065687663;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.10091248011245516;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06871209778695389;  // std dev = 0.058, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1343592912556415;  // std dev = 0.011, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09233383776037792;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06518718328615351;  // std dev = 0.077, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.409', 'seconds']
Refined model CLL: -0.065304


******************************************
Best model found
******************************************
Results 

CLL : -0.07374 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.667 

Total Inference Time : 0.9729244709014893 

Total revision time: 4.127029336929321
Best scored revision CLL: -0.065304


Results 

CLL : -0.07374 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.143257535934448 

Total Inference Time : 0.9729244709014893 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.219
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1984931033595467;  // std dev = 10.836, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17257305762372402;  // std dev = 10.836, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14578276022691083;  // std dev = 10.847, 525.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12268033882430737;  // std dev = 10.841, 524.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11181194101272401;  // std dev = 10.753, 508.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839685;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09091096939791873;  // std dev = 10.753, 508.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07032690656471896;  // std dev = 10.776, 512.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( genre(B, I) )
%   | then return 0.48081274483269176;  // std dev = 5.418, 167.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=129 */
%   | else return -0.15204120538652946;  // std dev = 6.493, 351.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03210151957956935;  // std dev = 10.008, 527.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.016760785051354154;  // std dev = 10.072, 542.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.504', 'seconds']
Parameter learned model CLL:-0.365698 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 14, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.836, 345, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.836, 345, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.45e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.847, 347, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 11, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.841, 346, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.45e-09, 15, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.753, 330, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [1.05e-08, 16, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.753, 330, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 11, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.776, 334, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 17, 0], 'false,true': [5.418, 38, 129], 'false,false': [6.493, 302, 49]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 13, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.008, 349, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.072, 364, 178]}]
{'': [-1.1895246692412391e-17, 0.2245100153914238], 'false': [nan, 0.2245100153914238], 'true': [nan, -1.1895246692412391e-17], 'true,false': [nan, -1.1895246692412391e-17], 'true,false,false': [nan, -1.1895246692412391e-17]}
{'': [0.0, 0.2245100153914213], 'false': [nan, 0.22451001539142074], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [5.046468293750712e-18, 0.22409433106576251], 'false': [nan, 0.22409433106576251], 'true': [nan, 5.046468293750712e-18], 'true,false': [nan, 5.046468293750712e-18], 'true,false,false': [nan, 5.046468293750712e-18]}
{'': [0.0, 0.22430219684167468], 'false': [nan, 0.22430219684167538], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [3.7007434154171884e-18, 0.22761795523591], 'false': [nan, 0.2276179552359109], 'true': [nan, 3.7007434154171884e-18], 'true,false': [nan, 3.7007434154171884e-18], 'true,false,false': [nan, 3.7007434154171884e-18]}
{'': [6.938893903907228e-18, 0.2276179552359098], 'false': [nan, 0.2276179552359098], 'true': [nan, 6.938893903907228e-18], 'true,false': [6.938893903907228e-18, nan]}
{'': [0.0, 0.22679138183593575], 'false': [nan, 0.22679138183593575], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [0.0, 0.2255482178262121], 'false': [0.1757682240309796, 0.12011266142320134], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [5.337610695313253e-19, 0.19006170176870918], 'false': [nan, 0.19006170176871282], 'true': [nan, 5.337610695313253e-19], 'true,false': [5.337610695313253e-19, nan]}
{'': [0.0, 0.1871697976097903], 'false': [nan, 0.1871697976097903], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 2.185
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.1418510649004881;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return -0.12544463852839194;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360628;  // std dev = 4.34e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.1123163781936068;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783616;  // std dev = 5.37e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return -0.10159632948783646;  // std dev = 0.000, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.09269127618926058;  // std dev = 5.96e-08, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.08518475138839678;  // std dev = 7.45e-08, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109166;  // std dev = 3.87e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else return -0.07877675473109143;  // std dev = 5.77e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return -0.07324622576333689;  // std dev = 1.08e-07, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420274;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 1.67e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.0684269778442028;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.393', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.185 

Total Inference Time : 1.0671985149383545 

Total revision time: 5.594015316009521
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.610243515014648 

Total Inference Time : 1.0671985149383545 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.663
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17957750652808366;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1783648389626609;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1348600453249345;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13319768280805636;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12101011719572645;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10425183698932348;  // std dev = 5.354, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07242380322483999;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10079468662409787;  // std dev = 0.489, 114.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.008454664574524087;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0020345492978731602;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.284', 'seconds']
Parameter learned model CLL:-0.399856 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.435, 86, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.507, 93, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.424, 85, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.379, 81, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.354, 79, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.402, 83, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.489, 69, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.516, 94, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.535, 96, 45]}]
{'': [nan, 0.2181122448979602], 'false': [nan, 0.2181122448979602]}
{'': [nan, 0.2255113338383557], 'false': [nan, 0.2255113338383557]}
{'': [nan, 0.21975425330812878], 'false': [nan, 0.21975425330812878]}
{'': [nan, 0.2263313609467458], 'false': [nan, 0.2263313609467458]}
{'': [nan, 0.2295918367346948], 'false': [nan, 0.2295918367346948]}
{'': [nan, 0.23120447450572235], 'false': [nan, 0.23120447450572235]}
{'': [nan, 0.22796630859374942], 'false': [nan, 0.22796630859374942]}
{'': [nan, 0.23891966759002684]}
{'': [nan, 0.2189327674551013], 'false': [nan, 0.2189327674551013]}
{'': [nan, 0.21729289271163316], 'false': [nan, 0.21729289271163316]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.424
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048766;  // std dev = 7.74e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1254446385283914;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360625;  // std dev = 6.14e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.10159632948783619;  // std dev = 5.16e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926108;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0851847513883968;  // std dev = 1.83e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.07877675473109166;  // std dev = 4.47e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06842697784420267;  // std dev = 4.08e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.725', 'seconds']
Refined model CLL: -0.063847


******************************************
Best model found
******************************************
Results 

CLL : -0.064062 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.424 

Total Inference Time : 0.9286303520202637 

Total revision time: 3.762448656082153
Best scored revision CLL: -0.063847


Results 

CLL : -0.064062 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.77867685508728 

Total Inference Time : 0.9286303520202637 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.647
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16636811318170394;  // std dev = 5.579, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15809513502920167;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1768007125207125;  // std dev = 5.354, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15752301011476347;  // std dev = 5.316, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12375594153316727;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08331418438797043;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.028259861923058165;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06648767610747684;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.01976642907525622;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05706079367682586;  // std dev = 5.354, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.252', 'seconds']
Parameter learned model CLL:-0.399073 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.579, 101, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.354, 79, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.316, 76, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.342, 78, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.413, 84, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.571, 100, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.478, 82, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.354, 79, 45]}]
{'': [nan, 0.21322011634453095], 'false': [nan, 0.21322011634453095]}
{'': [nan, 0.21811224489795933], 'false': [nan, 0.21811224489795933]}
{'': [nan, 0.2312044745057236], 'false': [nan, 0.2312044745057236]}
{'': [nan, 0.23359060173485466], 'false': [nan, 0.23359060173485466]}
{'': [nan, 0.23200475907198057], 'false': [nan, 0.23200475907198057]}
{'': [nan, 0.22714981070849194], 'false': [nan, 0.22714981070849194]}
{'': [nan, 0.21403091557669512], 'false': [nan, 0.21403091557669512]}
{'': [nan, 0.22878045756091392]}
{'': [nan, 0.21811224489795972], 'false': [nan, 0.21811224489795972]}
{'': [nan, 0.23120447450572218], 'false': [nan, 0.23120447450572218]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.297
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048766;  // std dev = 6.99e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1254446385283914;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( female(A) )
%   | | | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.6490635746493422;  // std dev = 1.144, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5638300726752233;  // std dev = 0.058, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.21538137288884476;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11357326837281646;  // std dev = 0.102, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10148166487927475;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.42386288584033294;  // std dev = 0.058, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1883318528251269;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.2789445741969668;  // std dev = 0.654, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.3329427173022035;  // std dev = 3.65e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.09337209120501692;  // std dev = 0.076, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.2408844592385004;  // std dev = 0.457, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.26350149089999125;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.08835365450465774;  // std dev = 0.194, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07841524540084355;  // std dev = 2.47e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21616181550728683;  // std dev = 0.004, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.24914887977571726;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07293252669394239;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( female(A) )
%   | | then return 0.16609671340455195;  // std dev = 0.077, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.16446839605890426;  // std dev = 0.079, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06815232084152378;  // std dev = 2.36e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15847235085078776;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.23365494508820958;  // std dev = 0.000669, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06394945470402291;  // std dev = 2.98e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( female(A) )
%   | | | then return 0.13873038557556844;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.12370187666486127;  // std dev = 0.326, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.515', 'seconds']
Refined model CLL: -0.071566


******************************************
Best model found
******************************************
Results 

CLL : -0.083423 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.297 

Total Inference Time : 0.8816554546356201 

Total revision time: 3.5770223083496093
Best scored revision CLL: -0.071566


Results 

CLL : -0.083423 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.5932505073547363 

Total Inference Time : 0.8816554546356201 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.728
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22178529873587707;  // std dev = 5.970, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16031247426458123;  // std dev = 6.119, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15068835346715403;  // std dev = 6.053, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1135987693014526;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08958237559052981;  // std dev = 6.128, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09566170829341351;  // std dev = 6.023, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05037608389974296;  // std dev = 6.146, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.02748254610000782;  // std dev = 0.464, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.054674912973682176;  // std dev = 6.053, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.017587817060416847;  // std dev = 6.171, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.221', 'seconds']
Parameter learned model CLL:-0.37848 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.97, 98, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.119, 113, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.053, 106, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.11, 112, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.128, 114, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.023, 103, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.146, 116, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false': [0.464, 123, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.053, 106, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.171, 119, 56]}]
{'': [nan, 0.23140495867768615], 'false': [nan, 0.23140495867768615]}
{'': [nan, 0.22156086971744668], 'false': [nan, 0.22156086971744715]}
{'': [nan, 0.22618503276939259], 'false': [nan, 0.22618503276939259]}
{'': [nan, 0.22222222222222165], 'false': [nan, 0.22222222222222218]}
{'': [nan, 0.2208996539792375], 'false': [nan, 0.2208996539792387]}
{'': [nan, 0.22815553182231682], 'false': [nan, 0.22815553182231682]}
{'': [nan, 0.21957815035154304], 'false': [nan, 0.21957815035154304]}
{'': [0.0, 0.21497456384007918], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2261850327693941], 'false': [nan, 0.2261850327693946]}
{'': [nan, 0.21760000000000104], 'false': [nan, 0.21760000000000104]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 1.563
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048777;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( female(A) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.8248156017661784;  // std dev = 0.180, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839105;  // std dev = 8.02e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7229317860663921;  // std dev = 0.025, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.2783005080660051;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 8.43e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( female(A) )
%   | then return 0.5545122820276269;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.536569923119666;  // std dev = 0.141, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783637;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42336150385754373;  // std dev = 0.047, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.33567353743378003;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32469330857955264;  // std dev = 0.042, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.26204668978021145;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09414774169367178;  // std dev = 0.165, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2578955453334841;  // std dev = 0.037, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.21344901391610982;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08642796702612947;  // std dev = 0.155, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07858105888927089;  // std dev = 1.05e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21168463721106787;  // std dev = 0.032, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.18209205763354386;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07307643372184186;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else return 0.17269324175801593;  // std dev = 0.330, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15457748234774077;  // std dev = 0.025, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.18069656544045554;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.06940336160257615;  // std dev = 0.127, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06399325628323987;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13543835871672316;  // std dev = 0.022, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.15547159740318944;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.320', 'seconds']
Refined model CLL: -0.067176


******************************************
Best model found
******************************************
Results 

CLL : -0.086308 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.563 

Total Inference Time : 0.9059011936187744 

Total revision time: 4.123238912582398
Best scored revision CLL: -0.067176


Results 

CLL : -0.086308 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.145867696762085 

Total Inference Time : 0.9059011936187744 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.838
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23477231172289012;  // std dev = 6.013, 154.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14231960420004325;  // std dev = 6.302, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15309929669327368;  // std dev = 6.153, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.094223527221817;  // std dev = 6.310, 185.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11781163011493856;  // std dev = 6.123, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10251330048347278;  // std dev = 6.091, 161.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09636538969583504;  // std dev = 6.025, 155.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then return 0.6086797239191031;  // std dev = 2.332, 64.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=58 */
%   | else return -0.2975702760808969;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.037377419143497695;  // std dev = 5.006, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.01700204449623035;  // std dev = 5.190, 197.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.286', 'seconds']
Parameter learned model CLL:-0.301706 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.013, 96, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.302, 126, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.153, 109, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.31, 127, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.123, 106, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'false': 'genre(A, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.091, 103, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.025, 97, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [2.332, 6, 58], 'false,false': [0.0, 102, 0]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.006, 105, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.19, 139, 58]}]
{'': [0.0, 0.23477820880418293], 'false': [nan, 0.23477820880418293], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21585538752362995], 'false': [nan, 0.21585538752362946]}
{'': [nan, 0.22668435583922097], 'false': [nan, 0.22668435583922097]}
{'': [nan, 0.21522279035792374], 'false': [nan, 0.21522279035792544]}
{'': [nan, 0.22858417608566384], 'false': [nan, 0.2285841760856636]}
{'': [0.0, 0.23046950349137607], 'false': [nan, 0.23046950349137607], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [nan, 0.23417273673256933], 'false': [nan, 0.23417273673256933]}
{'': [nan, 0.2273189142110603], 'false': [0.08496093750000033, -1.5673736818237505e-16]}
{'': [nan, 0.15374288523166835], 'false': [nan, 0.15374288523166788]}
{'': [nan, 0.13675041854257364], 'false': [nan, 0.13675041854257364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true


Refining candidate
***************************
Model training time 1.591
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048802;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839108;  // std dev = 7.60e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 8.82e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( female(A) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.5219822959992896;  // std dev = 0.146, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783637;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.42284704801847417;  // std dev = 0.029, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.17925623387483394;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32433529852025506;  // std dev = 0.026, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.15215080049450924;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.09705520142184167;  // std dev = 0.376, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.44207316215531695;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.0848452931059677;  // std dev = 5.96e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.25764638101665943;  // std dev = 0.023, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.13387778671174727;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.21150582089778228;  // std dev = 0.020, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11897502711070121;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07915163753259244;  // std dev = 0.053, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.17518402145971304;  // std dev = 2.36e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.16723936055023436;  // std dev = 0.079, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | else return -0.10804009989581298;  // std dev = 0.005, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.07294815264669284;  // std dev = 3.16e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06816600537378029;  // std dev = 2.36e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15481864297587009;  // std dev = 0.019, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09789731325036852;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13562556647412508;  // std dev = 0.017, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08958568468881738;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else return -0.06478419655208785;  // std dev = 0.049, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.268', 'seconds']
Refined model CLL: -0.064842


******************************************
Best model found
******************************************
Results 

CLL : -0.074323 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.86631 

Recall : 1.0 

F1 : 0.928367 

Total Learning Time : 1.591 

Total Inference Time : 0.9824895858764648 

Total revision time: 4.392364839553833
Best scored revision CLL: -0.064842


Results 

CLL : -0.074323 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.86631 

Recall : 1.0 

F1 : 0.928367 

Total Learning Time : 4.414993623733521 

Total Inference Time : 0.9824895858764648 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.143
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1965519769246035;  // std dev = 10.852, 526.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 1.86e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15322046309627058;  // std dev = 10.996, 555.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16890442095783365;  // std dev = 10.683, 496.000 (wgt'ed) examples reached here.  /* #neg=318 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13306862057130292;  // std dev = 10.753, 508.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926093;  // std dev = 1.05e-08, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10617051071985169;  // std dev = 10.781, 513.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07383838274450677;  // std dev = 10.883, 532.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06707736787337483;  // std dev = 10.820, 520.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( genre(B, I) )
%   | then return 0.44000307996454;  // std dev = 5.915, 177.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=129 */
%   | else return -0.13663656631401547;  // std dev = 6.445, 322.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.045824618146282005;  // std dev = 10.029, 507.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04930547144026847;  // std dev = 9.911, 487.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.497', 'seconds']
Parameter learned model CLL:-0.375669 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.852, 348, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.86e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.996, 377, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.45e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.683, 318, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.753, 330, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.05e-08, 18, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.781, 335, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.73e-09, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.883, 354, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.73e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.82, 342, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.73e-09, 15, 0], 'false,true': [5.915, 48, 129], 'false,false': [6.445, 273, 49]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.029, 329, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.97e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.911, 309, 178]}]
{'': [-1.0092936587501423e-17, 0.2238864231086208], 'false': [nan, 0.2238864231086208], 'true': [nan, -1.0092936587501423e-17], 'true,false': [nan, -1.0092936587501423e-17], 'true,false,false': [nan, -1.0092936587501423e-17]}
{'': [2.523234146875356e-18, 0.2178589400211002], 'false': [nan, 0.21785894002110423], 'true': [nan, 2.523234146875356e-18], 'true,false': [nan, 2.523234146875356e-18]}
{'': [5.046468293750712e-18, 0.23008259625390262], 'false': [nan, 0.23008259625390262], 'true': [nan, 5.046468293750712e-18], 'true,false': [nan, 5.046468293750712e-18], 'true,false,false': [nan, 5.046468293750712e-18]}
{'': [0.0, 0.22761795523591144], 'false': [nan, 0.22761795523591183], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [6.1679056923619804e-18, 0.22658443813671034], 'false': [nan, 0.22658443813671025], 'true': [nan, 6.1679056923619804e-18], 'true,false': [nan, 6.1679056923619804e-18], 'true,false,false': [nan, 6.1679056923619804e-18]}
{'': [1.5419764230904951e-18, 0.22263836282435284], 'false': [nan, 0.22263836282435284], 'true': [nan, 1.5419764230904951e-18], 'true,false': [1.5419764230904951e-18, nan]}
{'': [1.1564823173178713e-18, 0.22513313609467872], 'false': [nan, 0.22513313609467872], 'true': [nan, 1.1564823173178713e-18], 'true,false': [1.1564823173178713e-18, nan]}
{'': [9.251858538542971e-19, 0.22946895795598923], 'false': [0.19764435507038058, 0.12901701323251452], 'true': [nan, 9.251858538542971e-19], 'true,false': [nan, 9.251858538542971e-19], 'true,false,false': [nan, 9.251858538542971e-19]}
{'': [0.0, 0.1983792614401304], 'false': [nan, 0.19837926144013074], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [3.469446951953614e-18, 0.20167983182985605], 'false': [nan, 0.20167983182985605], 'true': [nan, 3.469446951953614e-18], 'true,false': [nan, 3.469446951953614e-18], 'true,false,false': [nan, 3.469446951953614e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 2.47
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 5.37e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.14185106490048813;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.12544463852839183;  // std dev = 0.000, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( director(B), actor(A) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360615;  // std dev = 3.16e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return -0.11231637819360696;  // std dev = 0.000, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A), director(B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783627;  // std dev = 1.83e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.10159632948783662;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926094;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.092691276189261;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.09269127618926064;  // std dev = 7.60e-08, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839678;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.08518475138839679;  // std dev = 8.16e-08, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A), director(B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109175;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return -0.07877675473109141;  // std dev = 4.47e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333703;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.07324622576333689;  // std dev = 1.10e-07, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420262;  // std dev = 2.11e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.06842697784420286;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202618;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.476', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.47 

Total Inference Time : 1.1054134368896484 

Total revision time: 5.764928424835205
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.787557209014892 

Total Inference Time : 1.1054134368896484 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.754
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14661047356105067;  // std dev = 5.659, 156.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15184862855291822;  // std dev = 5.562, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1260233612760062;  // std dev = 5.579, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1764213925799079;  // std dev = 5.290, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07870878110930747;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07548913265244932;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07561491211593425;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, I) )
%   | then return 0.5583099581840135;  // std dev = 2.739, 54.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   | else return -0.27502337514931946;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0812736852503724;  // std dev = 4.489, 116.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.010875876454603679;  // std dev = 4.738, 156.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.583', 'seconds']
Parameter learned model CLL:-0.297892 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.659, 111, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.562, 99, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.579, 101, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.29, 74, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.571, 100, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.467, 89, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [2.739, 9, 45], 'false,false': [0.0, 75, 0]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.489, 71, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.738, 111, 45]}]
{'': [0.0, 0.20525147928994178], 'false': [nan, 0.20525147928994178], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21484375000000075], 'false': [nan, 0.21484375]}
{'': [nan, 0.21322011634452892], 'false': [nan, 0.21322011634452892]}
{'': [0.0, 0.23515288468328455], 'false': [nan, 0.23515288468328527], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.0, 0.2140309155766941], 'false': [nan, 0.2140309155766944], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2181122448979584], 'false': [nan, 0.2181122448979584]}
{'': [0.0, 0.22304522165292925], 'false': [nan, 0.22304522165292925], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [0.0, 0.2271498107084907], 'false': [0.13888888888888942, -9.473903143468003e-17], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.17367965841481794], 'false': [nan, 0.17367965841481856]}
{'': [0.0, 0.14389513957386738], 'false': [nan, 0.14389513957386738], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;false;genre(B, I).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 1.335
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.16e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839147;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( female(A) )
%   | then return 0.7194734122109544;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6725335205032132;  // std dev = 0.194, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360624;  // std dev = 5.87e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5640998419850812;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22100293940319427;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.10159632948783616;  // std dev = 5.37e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.4240364826145079;  // std dev = 0.033, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.18566081965348596;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.33065641294991355;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.09269127618926107;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.3251461643698349;  // std dev = 0.030, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.16185059506469815;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2582008967053958;  // std dev = 0.026, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1373079119483805;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0857260708183542;  // std dev = 0.054, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1293517098889951;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.07873747960717006;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.21189794942821222;  // std dev = 0.022, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1218378911787705;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.2225354045547703;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.1495400695367994;  // std dev = 0.079, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.17205937056671047;  // std dev = 0.048, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return -0.07321215368590415;  // std dev = 2.69e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.12949775591650878;  // std dev = 0.078, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.1481834920853217;  // std dev = 0.047, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   else return -0.06871683505959984;  // std dev = 0.026, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06414633135401035;  // std dev = 3.41e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.13755989200585106;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14470678376441673;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.361', 'seconds']
Refined model CLL: -0.068766


******************************************
Best model found
******************************************
Results 

CLL : -0.076096 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.870801 

Recall : 1.0 

F1 : 0.930939 

Total Learning Time : 1.335 

Total Inference Time : 0.7810063362121582 

Total revision time: 3.7166330947875976
Best scored revision CLL: -0.068766


Results 

CLL : -0.076096 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.870801 

Recall : 1.0 

F1 : 0.930939 

Total Learning Time : 3.739261878967285 

Total Inference Time : 0.7810063362121582 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.664
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795775065280837;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1836905978833071;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13168906371675457;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1525361185610538;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06609092945871739;  // std dev = 5.588, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08861528057340835;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04097073920128094;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.02654067636657088;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0714646401029536;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.030882142545797756;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.320', 'seconds']
Parameter learned model CLL:-0.379668 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.413, 84, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.516, 94, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.342, 78, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.588, 102, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.446, 87, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.571, 100, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false': [0.46, 103, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.39, 82, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.497, 92, 45]}]
{'': [0.0, 0.2181122448979601], 'false': [nan, 0.2181122448979601], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22714981070849216], 'false': [nan, 0.22714981070849075]}
{'': [nan, 0.21893276745510107], 'false': [nan, 0.21893276745510107]}
{'': [nan, 0.23200475907198118], 'false': [nan, 0.23200475907198104]}
{'': [nan, 0.2124114952103302], 'false': [nan, 0.21241149521032907]}
{'': [nan, 0.22469008264462786], 'false': [nan, 0.22469008264462786]}
{'': [nan, 0.21403091557669526], 'false': [nan, 0.21403091557669526]}
{'': [0.0, 0.21160518626734898], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2287804575609154], 'false': [nan, 0.22878045756091528]}
{'': [nan, 0.22057648249773543], 'false': [nan, 0.22057648249773543]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 1.38
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048766;  // std dev = 7.60e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360624;  // std dev = 5.87e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.10174853600656182;  // std dev = 0.014, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09267847647492838;  // std dev = 4.21e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( female(A) )
%   | then return 0.30348671702059077;  // std dev = 0.083, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.32071184716014955;  // std dev = 2.11e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2568525614576805;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1223024769386134;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08556391853092694;  // std dev = 0.038, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07873912953230094;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21094453394034912;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11044284556164259;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.117657289404311;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.0732135850774182;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else return 0.17191627989836206;  // std dev = 0.275, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.14401855342955974;  // std dev = 0.054, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.14130320554312786;  // std dev = 0.055, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.06883039585589901;  // std dev = 0.037, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06414069482168497;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1364851163898975;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12688390922436601;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.316', 'seconds']
Refined model CLL: -0.06739


******************************************
Best model found
******************************************
Results 

CLL : -0.077355 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.873057 

Recall : 1.0 

F1 : 0.932227 

Total Learning Time : 1.38 

Total Inference Time : 0.7629313468933105 

Total revision time: 3.5862606468200684
Best scored revision CLL: -0.06739


Results 

CLL : -0.077355 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.873057 

Recall : 1.0 

F1 : 0.932227 

Total Learning Time : 3.608889430999756 

Total Inference Time : 0.7629313468933105 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.751
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16926004621062452;  // std dev = 6.211, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16568274451965814;  // std dev = 6.128, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13600436537855629;  // std dev = 6.154, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11068392090248996;  // std dev = 6.171, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10912578039186667;  // std dev = 6.092, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10418924076167778;  // std dev = 6.023, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06738041626010333;  // std dev = 6.101, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07083073074636653;  // std dev = 0.478, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.015911683455258955;  // std dev = 6.350, 200.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05307169538420166;  // std dev = 6.053, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.154', 'seconds']
Parameter learned model CLL:-0.375804 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.211, 124, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.128, 114, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.154, 117, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.171, 119, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.092, 110, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.023, 103, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.101, 111, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.478, 103, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.35, 144, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.053, 106, 56]}]
{'': [nan, 0.21432098765432142], 'false': [nan, 0.21432098765432142]}
{'': [nan, 0.22089965397923664], 'false': [nan, 0.22089965397923664]}
{'': [nan, 0.21891810618463792], 'false': [nan, 0.21891810618463792]}
{'': [nan, 0.21760000000000201], 'false': [nan, 0.21760000000000201]}
{'': [nan, 0.22354478153578292], 'false': [nan, 0.22354478153578292]}
{'': [nan, 0.22815553182231782], 'false': [nan, 0.22815553182231782]}
{'': [nan, 0.222883574169028], 'false': [nan, 0.222883574169028]}
{'': [nan, 0.22815553182231768]}
{'': [nan, 0.2016000000000008], 'false': [nan, 0.2016000000000008]}
{'': [nan, 0.22618503276939544], 'false': [nan, 0.22618503276939544]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.557
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839108;  // std dev = 7.88e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360621;  // std dev = 8.82e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | else if ( female(A) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.5122901261050012;  // std dev = 0.913, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783665;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else if ( female(A) )
%   | | | then return 0.41751358415831;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.4079456358986707;  // std dev = 0.592, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3267062695620481;  // std dev = 0.043, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.24590709765619237;  // std dev = 0.014, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( actor(A) )
%   | | | then return -0.09269127618926082;  // std dev = 7.45e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | | else return -0.16502694324030812;  // std dev = 0.548, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08484284734409975;  // std dev = 0.014, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else if ( female(A) )
%   | | | then return 0.25403461941251754;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.2342635413582203;  // std dev = 0.633, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07844502056035045;  // std dev = 0.013, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2152830065714567;  // std dev = 0.046, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.2523178861251089;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07300448744524658;  // std dev = 0.012, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.18114517129705748;  // std dev = 0.040, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.20073955922171166;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06844611370573486;  // std dev = 0.004, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1558126502140162;  // std dev = 0.036, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.16891581111561393;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06404503162164239;  // std dev = 0.009, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13640124151598268;  // std dev = 0.032, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.15076942103370886;  // std dev = 0.011, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.534', 'seconds']
Refined model CLL: -0.067397


******************************************
Best model found
******************************************
Results 

CLL : -0.088932 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.557 

Total Inference Time : 0.9663996696472168 

Total revision time: 4.121826084136963
Best scored revision CLL: -0.067397


Results 

CLL : -0.088932 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.141849191665649 

Total Inference Time : 0.9663996696472168 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.723
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18583255091872267;  // std dev = 6.245, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19423762545813827;  // std dev = 6.091, 161.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11059057262549338;  // std dev = 6.348, 190.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09106748912113453;  // std dev = 6.355, 191.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12758748948360674;  // std dev = 6.112, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11559916025404444;  // std dev = 6.059, 158.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06334120968318356;  // std dev = 6.200, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08044549413372423;  // std dev = 0.482, 158.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.008457358410336832;  // std dev = 6.318, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05508753033336909;  // std dev = 6.091, 161.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.087', 'seconds']
Parameter learned model CLL:-0.394002 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.245, 119, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.091, 103, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.348, 132, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.355, 133, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.112, 105, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.059, 100, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.2, 114, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.482, 100, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.318, 128, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.091, 103, 58]}]
{'': [nan, 0.22030706374285833], 'false': [nan, 0.22030706374285833]}
{'': [nan, 0.23046950349137826], 'false': [nan, 0.23046950349137826]}
{'': [nan, 0.2120775623268708], 'false': [nan, 0.2120775623268708]}
{'': [nan, 0.21145253693703658], 'false': [nan, 0.21145253693703658]}
{'': [nan, 0.22921449809928773], 'false': [nan, 0.22921449809928773]}
{'': [nan, 0.23233456176894648], 'false': [nan, 0.23233456176894648]}
{'': [nan, 0.22349918875067665], 'false': [nan, 0.22349918875067665]}
{'': [nan, 0.23233456176894618]}
{'': [nan, 0.21459128222916032], 'false': [nan, 0.21459128222916032]}
{'': [nan, 0.23046950349137854], 'false': [nan, 0.23046950349137854]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.51
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.94e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839133;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.1123163781936062;  // std dev = 8.69e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783631;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09269127618926097;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.09269127618926082;  // std dev = 7.60e-08, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08518475138839682;  // std dev = 5.87e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07877675473109158;  // std dev = 6.14e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07324622576333707;  // std dev = 4.21e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420265;  // std dev = 5.16e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | | else return -0.11225056828655194;  // std dev = 0.503, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06407855953740121;  // std dev = 0.006, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else if ( female(A) )
%   | | | then return 0.13400703000801117;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.12892500769801016;  // std dev = 0.196, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.381', 'seconds']
Refined model CLL: -0.064881


******************************************
Best model found
******************************************
Results 

CLL : -0.074068 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.51 

Total Inference Time : 1.057894229888916 

Total revision time: 4.105733354568481
Best scored revision CLL: -0.064881


Results 

CLL : -0.074068 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.125756462097168 

Total Inference Time : 1.057894229888916 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.327
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19399799170328208;  // std dev = 10.873, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1811921726331477;  // std dev = 10.770, 511.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1351116723989471;  // std dev = 10.929, 541.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12444026405685041;  // std dev = 10.836, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926094;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0968732555446793;  // std dev = 10.883, 532.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08077353030811901;  // std dev = 10.868, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109175;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.058857001748148646;  // std dev = 10.919, 539.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(B, I) )
%   | then return 0.45396531054504546;  // std dev = 5.823, 175.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=129 */
%   | else return -0.14277640046600465;  // std dev = 6.490, 349.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03338614371896889;  // std dev = 10.186, 532.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202618;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04585848728517189;  // std dev = 9.980, 506.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.517', 'seconds']
Parameter learned model CLL:-0.36435 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 15, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.873, 352, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.77, 333, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.929, 363, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.836, 345, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.45e-09, 15, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.883, 354, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.27e-09, 11, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.868, 351, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 18, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.919, 361, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 10, 0], 'false,true': [5.823, 46, 129], 'false,false': [6.49, 300, 49]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 7, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.186, 354, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.73e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.98, 328, 178]}]
{'': [-1.4802973661668754e-17, 0.22305446778213162], 'false': [nan, 0.22305446778213162], 'true': [nan, -1.4802973661668754e-17], 'true,false': [nan, -1.4802973661668754e-17], 'true,false,false': [nan, -1.4802973661668754e-17]}
{'': [0.0, 0.22699821155709818], 'false': [nan, 0.22699821155709674], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [-1.5419764230904951e-18, 0.22076595337585517], 'false': [nan, 0.22076595337585517], 'true': [nan, -1.5419764230904951e-18], 'true,false': [nan, -1.5419764230904951e-18], 'true,false,false': [nan, -1.5419764230904951e-18]}
{'': [0.0, 0.22451001539142], 'false': [nan, 0.22451001539142038], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [3.7007434154171884e-18, 0.22263836282435143], 'false': [nan, 0.2226383628243543], 'true': [nan, 3.7007434154171884e-18], 'true,false': [nan, 3.7007434154171884e-18], 'true,false,false': [nan, 3.7007434154171884e-18]}
{'': [2.523234146875356e-18, 0.22326249548850577], 'false': [nan, 0.22326249548850577], 'true': [nan, 2.523234146875356e-18], 'true,false': [2.523234146875356e-18, nan]}
{'': [-3.854941057726238e-18, 0.2211819455392174], 'false': [nan, 0.2211819455392174], 'true': [nan, -3.854941057726238e-18], 'true,false': [-3.854941057726238e-18, nan]}
{'': [6.938893903907229e-19, 0.22430219684167776], 'false': [0.19376326530612653, 0.12068866429668218], 'true': [nan, 6.938893903907229e-19], 'true,false': [nan, 6.938893903907229e-19], 'true,false,false': [nan, 6.938893903907229e-19]}
{'': [9.912705577010326e-19, 0.19501635977938575], 'false': [nan, 0.19501635977938286], 'true': [nan, 9.912705577010326e-19], 'true,false': [9.912705577010326e-19, nan]}
{'': [9.912705577010326e-19, 0.19684054819739522], 'false': [nan, 0.19684054819739522], 'true': [nan, 9.912705577010326e-19], 'true,false': [nan, 9.912705577010326e-19], 'true,false,false': [nan, 9.912705577010326e-19]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 2.209
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 5.96e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.14185106490048807;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.12544463852839183;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360636;  // std dev = 1.05e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.11231637819360678;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783631;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783634;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else return -0.10159632948783656;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926103;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.09269127618926074;  // std dev = 8.94e-08, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0851847513883968;  // std dev = 1.83e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.08518475138839678;  // std dev = 7.60e-08, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109169;  // std dev = 3.33e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.07877675473109144;  // std dev = 4.71e-08, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.07324622576333689;  // std dev = 1.07e-07, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 2.11e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.06842697784420279;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.0641918400820262;  // std dev = 6.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.552', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.209 

Total Inference Time : 1.022202491760254 

Total revision time: 5.634930120468139
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.654953227996826 

Total Inference Time : 1.022202491760254 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.639
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20698614440183793;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11405857693927707;  // std dev = 5.680, 159.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12475955744556498;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11855573798315482;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11315004319349622;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08778361595156245;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.033879928604884826;  // std dev = 5.628, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11915206129771516;  // std dev = 0.487, 116.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.013291513063142258;  // std dev = 5.588, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 4.617169080698629E-4;  // std dev = 5.628, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.176', 'seconds']
Parameter learned model CLL:-0.370706 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.413, 84, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.68, 114, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.571, 100, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.516, 94, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.477, 90, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.628, 107, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.487, 71, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.588, 102, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.628, 107, 45]}]
{'': [nan, 0.227149810708492], 'false': [nan, 0.227149810708492]}
{'': [nan, 0.20291918832324732], 'false': [nan, 0.20291918832324732]}
{'': [nan, 0.21403091557669485], 'false': [nan, 0.21403091557669485]}
{'': [nan, 0.21893276745509982], 'false': [nan, 0.21893276745509982]}
{'': [nan, 0.22386794052801257], 'false': [nan, 0.22386794052801257]}
{'': [nan, 0.2222222222222231], 'false': [nan, 0.2222222222222231]}
{'': [nan, 0.2084054709141283], 'false': [nan, 0.2084054709141283]}
{'': [nan, 0.23744054696789524]}
{'': [nan, 0.2124114952103297], 'false': [nan, 0.2124114952103297]}
{'': [nan, 0.20840547091412853], 'false': [nan, 0.20840547091412853]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.299
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048766;  // std dev = 7.88e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839147;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11231637819360628;  // std dev = 5.37e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1050257056172212;  // std dev = 0.314, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09240326959064589;  // std dev = 3.80e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.08494002259060927;  // std dev = 2.23e-05, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.07856654782788235;  // std dev = 2.07e-05, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.07306381968267943;  // std dev = 1.94e-05, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06826753167220721;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06405114196930425;  // std dev = 4.21e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.604', 'seconds']
Refined model CLL: -0.064958


******************************************
Best model found
******************************************
Results 

CLL : -0.069403 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.299 

Total Inference Time : 0.8426303863525391 

Total revision time: 3.5128033523559568
Best scored revision CLL: -0.064958


Results 

CLL : -0.069403 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.5328264598846433 

Total Inference Time : 0.8426303863525391 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.642
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18188994229375685;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1703552142434923;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11166608452197486;  // std dev = 5.604, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12766689895815014;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14192042269448024;  // std dev = 5.316, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10978467532016913;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07130117415586078;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0364103589136888;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0016283300592816411;  // std dev = 5.620, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.006822478013133121;  // std dev = 5.588, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.125', 'seconds']
Parameter learned model CLL:-0.375667 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.516, 94, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.467, 89, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.604, 104, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.467, 89, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.316, 76, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.342, 78, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.413, 84, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.47, 92, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.62, 106, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.588, 102, 45]}]
{'': [nan, 0.21893276745510165], 'false': [nan, 0.21893276745510165]}
{'': [nan, 0.2230452216529289], 'false': [nan, 0.2230452216529289]}
{'': [nan, 0.21080131525606946], 'false': [nan, 0.21080131525606946]}
{'': [nan, 0.22304522165292964], 'false': [nan, 0.22304522165292964]}
{'': [nan, 0.23359060173485324], 'false': [nan, 0.23359060173485324]}
{'': [nan, 0.23200475907198043], 'false': [nan, 0.23200475907198043]}
{'': [nan, 0.22714981070849177], 'false': [nan, 0.22714981070849177]}
{'': [nan, 0.22057648249773526]}
{'': [nan, 0.20920135081794555], 'false': [nan, 0.20920135081794555]}
{'': [nan, 0.2124114952103284], 'false': [nan, 0.2124114952103284]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.381
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048766;  // std dev = 7.74e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839144;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.4997262021679603;  // std dev = 0.904, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | else return -0.11554275863108301;  // std dev = 0.331, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4241577551860989;  // std dev = 0.046, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.17525978705879866;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10130222147925318;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09244496759334253;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32523653298072863;  // std dev = 0.041, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.15614586469146338;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0849756718451469;  // std dev = 4.34e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25826723092449916;  // std dev = 0.036, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.13451307349268168;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then return 0.2119475883839971;  // std dev = 0.031, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07851574221903915;  // std dev = 0.008, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07309595185743026;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17870478334055145;  // std dev = 0.027, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1437849670743672;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15396530680079742;  // std dev = 0.024, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12442293810180094;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06817253380326704;  // std dev = 0.011, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06408312764968115;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1349615927984157;  // std dev = 0.022, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11009720862221471;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.590', 'seconds']
Refined model CLL: -0.066543


******************************************
Best model found
******************************************
Results 

CLL : -0.074812 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.381 

Total Inference Time : 0.8566052913665771 

Total revision time: 3.6304211597442624
Best scored revision CLL: -0.066543


Results 

CLL : -0.074812 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.650444267272949 

Total Inference Time : 0.8566052913665771 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.692
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16926004621062452;  // std dev = 6.211, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16375635993073484;  // std dev = 6.137, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13259847415384474;  // std dev = 6.171, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15053941890501898;  // std dev = 5.991, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0820227471168151;  // std dev = 6.187, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11189183893732692;  // std dev = 5.981, 155.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07690040296358162;  // std dev = 6.043, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.050969337148767696;  // std dev = 0.473, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04664943679349984;  // std dev = 6.063, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.020746934985953466;  // std dev = 6.137, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.104', 'seconds']
Parameter learned model CLL:-0.385986 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.211, 124, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.137, 115, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.171, 119, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.991, 100, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.187, 121, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.981, 99, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.043, 105, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.473, 110, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.063, 107, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.137, 115, 56]}]
{'': [nan, 0.21432098765432142], 'false': [nan, 0.21432098765432142]}
{'': [nan, 0.22023870592660777], 'false': [nan, 0.22023870592660777]}
{'': [nan, 0.21760000000000146], 'false': [nan, 0.21760000000000146]}
{'': [nan, 0.23011176857330548], 'false': [nan, 0.23011176857330548]}
{'': [nan, 0.2162852309361947], 'false': [nan, 0.2162852309361947]}
{'': [nan, 0.23075962539021797], 'false': [nan, 0.23075962539021797]}
{'': [nan, 0.22684310018903658], 'false': [nan, 0.22684310018903658]}
{'': [nan, 0.22354478153578236]}
{'': [nan, 0.22552598893447298], 'false': [nan, 0.22552598893447298]}
{'': [nan, 0.22023870592660968], 'false': [nan, 0.22023870592660968]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.454
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14185106490048763;  // std dev = 8.69e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else if ( female(A) )
%   | | | then return 0.689297767541692;  // std dev = 0.830, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1123163781936062;  // std dev = 7.88e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5589528166351133;  // std dev = 0.028, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.226015488620073;  // std dev = 0.006, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.42018644508395936;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.18871388856322227;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10240226273177039;  // std dev = 0.088, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09262351976862945;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else if ( female(A) )
%   | | | then return 0.3086325333316404;  // std dev = 0.476, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.30327613973916784;  // std dev = 0.474, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08512724412816768;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2596027374445867;  // std dev = 0.018, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.20608642520861503;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07872737203605519;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21288371744756004;  // std dev = 0.016, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.17595075098836174;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.179386657490353;  // std dev = 0.014, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.15058786572719324;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.07710593450177858;  // std dev = 0.427, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06814125482380094;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15447946376423025;  // std dev = 0.012, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.13300126979201812;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06393968660194603;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13536088104856395;  // std dev = 0.011, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.11796872208696432;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.479', 'seconds']
Refined model CLL: -0.065629


******************************************
Best model found
******************************************
Results 

CLL : -0.077624 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.454 

Total Inference Time : 0.9625236988067627 

Total revision time: 3.932731243133545
Best scored revision CLL: -0.065629


Results 

CLL : -0.077624 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 30.163593383789063 

Total Inference Time : 0.9625236988067627 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.765
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18037115732173584;  // std dev = 6.270, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12620122275014511;  // std dev = 6.411, 199.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1638975715181395;  // std dev = 6.153, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1112048776089792;  // std dev = 6.278, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10319724773320997;  // std dev = 6.227, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05996218517878687;  // std dev = 6.340, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06944924401276364;  // std dev = 6.245, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06157435324953529;  // std dev = 0.471, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.038107565320345246;  // std dev = 6.270, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.030293392997311826;  // std dev = 6.270, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.187', 'seconds']
Parameter learned model CLL:-0.368408 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.27, 122, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.411, 141, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.153, 109, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.278, 123, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.227, 117, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.34, 131, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.245, 119, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.471, 116, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.27, 122, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.27, 122, 58]}]
{'': [nan, 0.21839506172839537], 'false': [nan, 0.21839506172839537]}
{'': [nan, 0.20650993661776199], 'false': [nan, 0.20650993661776199]}
{'': [nan, 0.2266843558392214], 'false': [nan, 0.2266843558392214]}
{'': [nan, 0.21775892066786864], 'false': [nan, 0.21775892066786864]}
{'': [nan, 0.2215836734693897], 'false': [nan, 0.2215836734693897]}
{'': [nan, 0.2127040116458109], 'false': [nan, 0.2127040116458109]}
{'': [nan, 0.2203070637428585], 'false': [nan, 0.2203070637428585]}
{'': [nan, 0.22222222222222124]}
{'': [nan, 0.21839506172839387], 'false': [nan, 0.21839506172839387]}
{'': [nan, 0.21839506172839415], 'false': [nan, 0.21839506172839415]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.472
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048766;  // std dev = 7.30e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839136;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360618;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.10159632948783623;  // std dev = 4.83e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926093;  // std dev = 5.77e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08518475138839682;  // std dev = 5.37e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.19601797894855336;  // std dev = 0.282, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.2023593958796219;  // std dev = 0.285, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | else return -0.0787767547310916;  // std dev = 5.96e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333725;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17849810825827103;  // std dev = 0.003, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09461591579679529;  // std dev = 0.000649, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06842697784420265;  // std dev = 4.15e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1538063200376963;  // std dev = 0.003, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.08681576645990485;  // std dev = 0.000600, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13483595229033385;  // std dev = 0.003, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.08007538581946988;  // std dev = 0.000572, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06415304075380182;  // std dev = 0.003, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.289', 'seconds']
Refined model CLL: -0.065563


******************************************
Best model found
******************************************
Results 

CLL : -0.078417 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.472 

Total Inference Time : 0.9721434116363525 

Total revision time: 4.026145946502686
Best scored revision CLL: -0.065563


Results 

CLL : -0.078417 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 30.257008087158205 

Total Inference Time : 0.9721434116363525 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.279
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21202567466213268;  // std dev = 10.724, 503.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17067508219665528;  // std dev = 10.836, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1267953247528496;  // std dev = 10.987, 553.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11819119458247303;  // std dev = 10.888, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08957012299324948;  // std dev = 10.953, 546.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0873568123819333;  // std dev = 10.836, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109173;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0778066529299085;  // std dev = 10.776, 512.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(B, I) )
%   | then return 0.43121524785766024;  // std dev = 6.046, 180.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=129 */
%   | else return -0.14424104416923916;  // std dev = 6.487, 347.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.038856877878085457;  // std dev = 10.109, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04396508522978497;  // std dev = 9.985, 510.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.505', 'seconds']
Parameter learned model CLL:-0.366931 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 16, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.724, 325, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.836, 345, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.45e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.987, 375, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.888, 355, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.953, 368, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.73e-09, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.836, 345, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.776, 334, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 10, 0], 'false,true': [6.046, 51, 129], 'false,false': [6.487, 298, 49]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.109, 353, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.27e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.985, 332, 178]}]
{'': [-6.938893903907228e-18, 0.22864799275915376], 'false': [nan, 0.22864799275915376], 'true': [nan, -6.938893903907228e-18], 'true,false': [nan, -6.938893903907228e-18], 'true,false,false': [nan, -6.938893903907228e-18]}
{'': [-1.982541115402065e-18, 0.2245100153914201], 'false': [nan, 0.22451001539142038], 'true': [nan, -1.982541115402065e-18], 'true,false': [nan, -1.982541115402065e-18]}
{'': [5.046468293750712e-18, 0.21827349750988567], 'false': [nan, 0.21827349750988567], 'true': [nan, 5.046468293750712e-18], 'true,false': [nan, 5.046468293750712e-18], 'true,false,false': [nan, 5.046468293750712e-18]}
{'': [0.0, 0.2224302947315813], 'false': [nan, 0.22243029473158085], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [0.0, 0.2197265493968812], 'false': [nan, 0.21972654939688108], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [1.5419764230904951e-18, 0.2245100153914226], 'false': [nan, 0.2245100153914226], 'true': [nan, 1.5419764230904951e-18], 'true,false': [1.5419764230904951e-18, nan]}
{'': [-1.1564823173178713e-18, 0.2267913818359386], 'false': [nan, 0.2267913818359386], 'true': [nan, -1.1564823173178713e-18], 'true,false': [-1.1564823173178713e-18, nan]}
{'': [6.938893903907229e-19, 0.22367847794072432], 'false': [0.20305555555555332, 0.1212700047338644], 'true': [nan, 6.938893903907229e-19], 'true,false': [nan, 6.938893903907229e-19], 'true,false,false': [nan, 6.938893903907229e-19]}
{'': [5.782411586589357e-19, 0.19243897540966803], 'false': [nan, 0.19243897540967206], 'true': [nan, 5.782411586589357e-19], 'true,false': [5.782411586589357e-19, nan]}
{'': [2.523234146875356e-18, 0.19550550968220112], 'false': [nan, 0.19550550968220112], 'true': [nan, 2.523234146875356e-18], 'true,false': [nan, 2.523234146875356e-18], 'true,false,false': [nan, 2.523234146875356e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 2.158
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.14185106490048804;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.12544463852839183;  // std dev = 0.000, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360628;  // std dev = 4.47e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.11231637819360686;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783619;  // std dev = 4.83e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.10159632948783658;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926094;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926105;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.09269127618926067;  // std dev = 0.000, 270.000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.08518475138839678;  // std dev = 7.45e-08, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0787767547310917;  // std dev = 2.79e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.07877675473109146;  // std dev = 6.66e-08, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.07324622576333682;  // std dev = 9.54e-08, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( director(B), actor(A) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420262;  // std dev = 1.83e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.06842697784420293;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 260.000 (wgt'ed) examples reached here.  /* #neg=260 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.345', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.158 

Total Inference Time : 1.1008503437042236 

Total revision time: 5.650205814361572
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 31.881067955017087 

Total Inference Time : 1.1008503437042236 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.657
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23630019560371418;  // std dev = 5.290, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15776596290335043;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20490952572908933;  // std dev = 5.188, 112.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09013552488490931;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.050308017432198864;  // std dev = 5.620, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07368386915981393;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08280527597481906;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.024289607211710473;  // std dev = 0.464, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.019281193321646104;  // std dev = 5.562, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.024198030135879952;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.309', 'seconds']
Parameter learned model CLL:-0.379419 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.29, 74, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.487, 91, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.188, 67, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.62, 106, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.487, 91, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.39, 82, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.464, 99, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.562, 99, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
{'': [nan, 0.2351528846832859], 'false': [nan, 0.2351528846832859]}
{'': [nan, 0.22139922145328758], 'false': [nan, 0.22139922145328758]}
{'': [nan, 0.24035395408163188], 'false': [nan, 0.24035395408163188]}
{'': [nan, 0.21811224489795827], 'false': [nan, 0.21811224489795827]}
{'': [nan, 0.20920135081794758], 'false': [nan, 0.20920135081794758]}
{'': [nan, 0.22139922145328783], 'false': [nan, 0.22139922145328783]}
{'': [nan, 0.22878045756091384], 'false': [nan, 0.22878045756091384]}
{'': [nan, 0.21484375000000075]}
{'': [nan, 0.21484375000000078], 'false': [nan, 0.21484375000000078]}
{'': [nan, 0.2181122448979601], 'false': [nan, 0.2181122448979601]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.381
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048766;  // std dev = 7.88e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839152;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360624;  // std dev = 6.14e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783615;  // std dev = 5.87e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926107;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08518475138839679;  // std dev = 3.16e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07877675473109177;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109162;  // std dev = 4.71e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | | else return -0.19735434300382057;  // std dev = 0.649, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07255942167584041;  // std dev = 0.019, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06775996856227258;  // std dev = 0.020, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06389267381284798;  // std dev = 0.015, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.485', 'seconds']
Refined model CLL: -0.066879


******************************************
Best model found
******************************************
Results 

CLL : -0.079022 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.381 

Total Inference Time : 0.8438522815704346 

Total revision time: 3.6184452896118167
Best scored revision CLL: -0.066879


Results 

CLL : -0.079022 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 29.849307430267334 

Total Inference Time : 0.8438522815704346 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.709
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16849376268571906;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1907065823822125;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15473229819611986;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11930170023455478;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09102704873388914;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08403257233451356;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08942476456039228;  // std dev = 5.367, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04723897431533376;  // std dev = 0.472, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03996967304546525;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.01693040214979777;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.301', 'seconds']
Parameter learned model CLL:-0.388651 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.571, 100, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.39, 82, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.424, 85, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.467, 89, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.497, 92, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.367, 80, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.472, 89, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.516, 94, 45]}]
{'': [nan, 0.21403091557669546], 'false': [nan, 0.21403091557669546]}
{'': [nan, 0.2287804575609139], 'false': [nan, 0.2287804575609139]}
{'': [nan, 0.22633136094674536], 'false': [nan, 0.22633136094674536]}
{'': [nan, 0.22304522165292953], 'false': [nan, 0.22304522165292953]}
{'': [nan, 0.22057648249773645], 'false': [nan, 0.22057648249773645]}
{'': [nan, 0.2238679405280106], 'false': [nan, 0.2238679405280106]}
{'': [nan, 0.23039999999999908], 'false': [nan, 0.23039999999999908]}
{'': [nan, 0.22304522165292973]}
{'': [nan, 0.22386794052801262], 'false': [nan, 0.22386794052801262]}
{'': [nan, 0.21893276745509962], 'false': [nan, 0.21893276745509962]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.298
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.56e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1254446385283914;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360621;  // std dev = 7.45e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783616;  // std dev = 5.96e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926108;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08518475138839682;  // std dev = 4.71e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07877675473109166;  // std dev = 4.15e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06842697784420267;  // std dev = 3.94e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06419184008202626;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.522', 'seconds']
Refined model CLL: -0.066646


******************************************
Best model found
******************************************
Results 

CLL : -0.083408 

AUC ROC : 0.995191 

AUC PR : 0.742291 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.298 

Total Inference Time : 0.8421609401702881 

Total revision time: 3.589366704940796
Best scored revision CLL: -0.066646


Results 

CLL : -0.083408 

AUC ROC : 0.995191 

AUC PR : 0.742291 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 29.820228845596315 

Total Inference Time : 0.8421609401702881 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.699
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1856343152164726;  // std dev = 6.137, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18401662241261163;  // std dev = 6.033, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16138607764759674;  // std dev = 6.013, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09341433832753139;  // std dev = 6.203, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09747982815106122;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.055520616376297356;  // std dev = 6.219, 181.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.053650479192676605;  // std dev = 6.179, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06022907734493641;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.007464491273729322;  // std dev = 6.284, 190.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08957527216107;  // std dev = 5.900, 148.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.091', 'seconds']
Parameter learned model CLL:-0.381021 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.137, 115, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.033, 104, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.013, 102, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.203, 123, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.11, 112, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.219, 125, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.179, 120, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.472, 111, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.284, 134, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.9, 92, 56]}]
{'': [nan, 0.2202387059266102], 'false': [nan, 0.2202387059266102]}
{'': [nan, 0.22749999999999834], 'false': [nan, 0.22749999999999834]}
{'': [nan, 0.22880948565935127], 'false': [nan, 0.22880948565935127]}
{'': [nan, 0.21497456384008246], 'false': [nan, 0.21497456384008246]}
{'': [nan, 0.22222222222222474], 'false': [nan, 0.22222222222222474]}
{'': [nan, 0.2136686914318847], 'false': [nan, 0.2136686914318847]}
{'': [nan, 0.21694214876032972], 'false': [nan, 0.21694214876032972]}
{'': [nan, 0.22288357416902688]}
{'': [nan, 0.2078670360110797], 'false': [nan, 0.2078670360110797]}
{'': [nan, 0.23520818115412764], 'false': [nan, 0.23520818115412764]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.507
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.69e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360624;  // std dev = 7.30e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783633;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926087;  // std dev = 6.75e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08518475138839682;  // std dev = 5.27e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07877675473109158;  // std dev = 6.14e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( female(A) )
%   | | | then return 0.2097577156325355;  // std dev = 2.98e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.19114258851230148;  // std dev = 0.395, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17850981811196914;  // std dev = 0.010, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09461029498672913;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06842697784420264;  // std dev = 5.96e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15381543795963634;  // std dev = 0.009, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.08644213872506021;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06419184008202626;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else if ( female(A) )
%   | | | then return 0.12605448602952288;  // std dev = 0.211, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.12870993344041187;  // std dev = 0.212, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.486', 'seconds']
Refined model CLL: -0.065337


******************************************
Best model found
******************************************
Results 

CLL : -0.076939 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.507 

Total Inference Time : 1.045365333557129 

Total revision time: 4.092513233184814
Best scored revision CLL: -0.065337


Results 

CLL : -0.076939 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.109169870376586 

Total Inference Time : 1.045365333557129 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.781
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1993254056877489;  // std dev = 6.182, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16932195020227297;  // std dev = 6.200, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13295468252792642;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11889857247047363;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10603425124359205;  // std dev = 6.182, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1243402978487835;  // std dev = 6.001, 153.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04316136444970841;  // std dev = 6.270, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04171890988255801;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.059374923106995096;  // std dev = 6.112, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06763855670214163;  // std dev = 6.013, 154.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.078', 'seconds']
Parameter learned model CLL:-0.403269 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.182, 112, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.2, 114, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.253, 120, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.218, 116, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.182, 112, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.001, 95, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.27, 122, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.47, 118, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.112, 105, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.013, 96, 58]}]
{'': [nan, 0.22477508650519057], 'false': [nan, 0.22477508650519057]}
{'': [nan, 0.22349918875067823], 'false': [nan, 0.22349918875067823]}
{'': [nan, 0.21966923368261349], 'false': [nan, 0.21966923368261349]}
{'': [nan, 0.22222222222222357], 'false': [nan, 0.22222222222222357]}
{'': [nan, 0.22477508650519065], 'false': [nan, 0.22477508650519065]}
{'': [nan, 0.235379554872059], 'false': [nan, 0.235379554872059]}
{'': [nan, 0.21839506172839399], 'false': [nan, 0.21839506172839399]}
{'': [nan, 0.22094524793388537]}
{'': [nan, 0.22921449809928812], 'false': [nan, 0.22921449809928812]}
{'': [nan, 0.23477820880418362], 'false': [nan, 0.23477820880418362]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.408
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.14185106490048774;  // std dev = 4.71e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1254446385283911;  // std dev = 7.30e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11231637819360626;  // std dev = 6.83e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.41751358415830986;  // std dev = 5.16e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.3915580884760029;  // std dev = 0.716, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | | else return -0.10241777293378695;  // std dev = 0.106, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3244336656668728;  // std dev = 0.021, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.14395472280232818;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09262221623119145;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25771215743115156;  // std dev = 0.018, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12797665712821327;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08512613771117826;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07872642188855586;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2115514429748779;  // std dev = 0.016, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.11370448411996975;  // std dev = 0.003, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07320256047093106;  // std dev = 1.05e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.1784117334876524;  // std dev = 0.014, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10323132441037469;  // std dev = 0.004, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1537413517254584;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09336870903462567;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06960942519369942;  // std dev = 0.158, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13478561152576155;  // std dev = 0.011, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.0858766145757747;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.06404876556896813;  // std dev = 0.004, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.379', 'seconds']
Refined model CLL: -0.064475


******************************************
Best model found
******************************************
Results 

CLL : -0.067495 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.408 

Total Inference Time : 1.0491740703582764 

Total revision time: 4.086562742233276
Best scored revision CLL: -0.064475


Results 

CLL : -0.067495 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.103219379425049 

Total Inference Time : 1.0491740703582764 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.189
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19023848733831442;  // std dev = 10.904, 536.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 1.86e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17833951327157999;  // std dev = 10.798, 516.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1319403013014482;  // std dev = 10.963, 548.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.10159632948783633;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1260919090167655;  // std dev = 10.836, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1127767972302844;  // std dev = 10.765, 510.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08710167528029594;  // std dev = 10.804, 517.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0648664431970496;  // std dev = 10.847, 525.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(B, I) )
%   | then return 0.4541020922510959;  // std dev = 5.776, 174.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=129 */
%   | else return -0.1464726203925803;  // std dev = 6.488, 348.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.037009429014547505;  // std dev = 10.065, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202619;  // std dev = 5.89e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03693773408723354;  // std dev = 9.988, 516.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.535', 'seconds']
Parameter learned model CLL:-0.367066 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 10, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.904, 358, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.86e-09, 15, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.798, 338, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.05e-08, 13, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.963, 370, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 22, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.836, 345, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.765, 332, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.73e-09, 10, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.804, 339, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.847, 347, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 9, 0], 'false,true': [5.776, 45, 129], 'false,false': [6.488, 299, 49]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.065, 350, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.89e-09, 12, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.988, 338, 178]}]
{'': [-1.1102230246251566e-17, 0.22180608153263806], 'false': [nan, 0.22180608153263806], 'true': [nan, -1.1102230246251566e-17], 'true,false': [nan, -1.1102230246251566e-17], 'true,false,false': [nan, -1.1102230246251566e-17]}
{'': [3.7007434154171884e-18, 0.22596298299381373], 'false': [nan, 0.2259629829938108], 'true': [nan, 3.7007434154171884e-18], 'true,false': [nan, 3.7007434154171884e-18]}
{'': [8.540177112501205e-18, 0.2193110980872715], 'false': [nan, 0.2193110980872715], 'true': [nan, 8.540177112501205e-18], 'true,false': [nan, 8.540177112501205e-18], 'true,false,false': [nan, 8.540177112501205e-18]}
{'': [-1.1354553660939102e-17, 0.22451001539141988], 'false': [nan, 0.22451001539142096], 'true': [nan, -1.1354553660939102e-17], 'true,false': [-1.1354553660939102e-17, nan]}
{'': [0.0, 0.22720492118415703], 'false': [nan, 0.22720492118416033], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [1.3877787807814458e-18, 0.22575564276868576], 'false': [nan, 0.22575564276868576], 'true': [nan, 1.3877787807814458e-18], 'true,false': [1.3877787807814458e-18, nan]}
{'': [0.0, 0.22409433106575977], 'false': [nan, 0.22409433106575977], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [7.709882115452476e-19, 0.22471778159451344], 'false': [0.19173602853745597, 0.12097866296736834], 'true': [nan, 7.709882115452476e-19], 'true,false': [nan, 7.709882115452476e-19], 'true,false,false': [nan, 7.709882115452476e-19]}
{'': [0.0, 0.19185018491800293], 'false': [nan, 0.19185018491799957], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [2.8912057932946786e-18, 0.193314472237061], 'false': [nan, 0.193314472237061], 'true': [nan, 2.8912057932946786e-18], 'true,false': [nan, 2.8912057932946786e-18], 'true,false,false': [nan, 2.8912057932946786e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 2.147
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048768;  // std dev = 4.47e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else return -0.1418510649004881;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.1254446385283918;  // std dev = 0.000, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360628;  // std dev = 4.47e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.11231637819360689;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783621;  // std dev = 3.49e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.10159632948783645;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.09269127618926068;  // std dev = 9.66e-08, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.67e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.08518475138839678;  // std dev = 7.88e-08, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109175;  // std dev = 2.11e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.07877675473109144;  // std dev = 6.50e-08, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 1.29e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.07324622576333681;  // std dev = 1.05e-07, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( director(B), actor(A) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420264;  // std dev = 2.24e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.06842697784420287;  // std dev = 0.000, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06419184008202619;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.357', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.147 

Total Inference Time : 1.1490440368652344 

Total revision time: 5.547533308029175
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.564189945220948 

Total Inference Time : 1.1490440368652344 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.65
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18661608838418378;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16476302107864416;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16978609695429342;  // std dev = 5.367, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14515459304212483;  // std dev = 5.354, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.060571481495953323;  // std dev = 5.596, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06661622999191716;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08117037221772104;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0704559901228509;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.020735862467571496;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.01865611497983588;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.212', 'seconds']
Parameter learned model CLL:-0.385284 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.497, 92, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.487, 91, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.367, 80, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.354, 79, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.596, 103, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.413, 84, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.478, 82, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.535, 96, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
{'': [nan, 0.22057648249773662], 'false': [nan, 0.22057648249773662]}
{'': [nan, 0.2213992214532865], 'false': [nan, 0.2213992214532865]}
{'': [nan, 0.2303999999999992], 'false': [nan, 0.2303999999999992]}
{'': [nan, 0.23120447450572273], 'false': [nan, 0.23120447450572273]}
{'': [nan, 0.21160518626734875], 'false': [nan, 0.21160518626734875]}
{'': [nan, 0.21811224489795958], 'false': [nan, 0.21811224489795958]}
{'': [nan, 0.2271498107084903], 'false': [nan, 0.2271498107084903]}
{'': [nan, 0.22878045756091497]}
{'': [nan, 0.21729289271163438], 'false': [nan, 0.21729289271163438]}
{'': [nan, 0.21811224489796036], 'false': [nan, 0.21811224489796036]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.414
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.14185106490048766;  // std dev = 6.99e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839155;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360621;  // std dev = 6.99e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783619;  // std dev = 5.58e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839679;  // std dev = 2.98e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.07877675473109166;  // std dev = 4.08e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( female(A) )
%   | | then return 0.1562346041195595;  // std dev = 0.069, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.16994384850217423;  // std dev = 0.247, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15410971791091824;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08534708365040404;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.0686506807759553;  // std dev = 0.017, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13507251226348063;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07891614653353932;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06438407372748388;  // std dev = 0.016, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.625', 'seconds']
Refined model CLL: -0.06565


******************************************
Best model found
******************************************
Results 

CLL : -0.069288 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.414 

Total Inference Time : 0.8589074611663818 

Total revision time: 3.6417921676635743
Best scored revision CLL: -0.06565


Results 

CLL : -0.069288 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.6584488048553467 

Total Inference Time : 0.8589074611663818 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.729
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1503567273073043;  // std dev = 5.644, 154.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14085625469912214;  // std dev = 5.604, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1547022689257669;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10091908136456745;  // std dev = 5.588, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12668458162647894;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07892991869261681;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06639133543446105;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08166900038371104;  // std dev = 0.478, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.051753948026822205;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06894464578239667;  // std dev = 5.329, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.274', 'seconds']
Parameter learned model CLL:-0.394286 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.644, 109, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.604, 104, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.467, 89, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.588, 102, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.413, 84, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.516, 94, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.507, 93, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.478, 82, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.446, 87, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.329, 77, 45]}]
{'': [nan, 0.206822398380841], 'false': [nan, 0.206822398380841]}
{'': [nan, 0.21080131525607007], 'false': [nan, 0.21080131525607007]}
{'': [nan, 0.22304522165292953], 'false': [nan, 0.22304522165292953]}
{'': [nan, 0.21241149521032807], 'false': [nan, 0.21241149521032807]}
{'': [nan, 0.22714981070849155], 'false': [nan, 0.22714981070849155]}
{'': [nan, 0.21893276745509957], 'false': [nan, 0.21893276745509957]}
{'': [nan, 0.21975425330812876], 'false': [nan, 0.21975425330812876]}
{'': [nan, 0.2287804575609156]}
{'': [nan, 0.22469008264462714], 'false': [nan, 0.22469008264462714]}
{'': [nan, 0.232800322493954], 'false': [nan, 0.232800322493954]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.434
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.69e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839144;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( female(A) )
%   | | | then return 0.6842684934301482;  // std dev = 0.827, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.6827378447875044;  // std dev = 0.826, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1123163781936062;  // std dev = 8.30e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.564225933826104;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.22121449606301335;  // std dev = 0.000215, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783616;  // std dev = 5.58e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.42411703753546665;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.18549355434891251;  // std dev = 0.000231, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.30485227018245237;  // std dev = 0.474, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.3043052592849182;  // std dev = 0.474, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return -0.09349970096142106;  // std dev = 0.066, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2621939150253248;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.20416281061089475;  // std dev = 0.000338, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(A) )
%   | | | then return -0.0851217733354552;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | | else return -0.17989941042510982;  // std dev = 0.519, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21470566055777307;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.17313051082216538;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07864388907850135;  // std dev = 0.051, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07281866513854457;  // std dev = 0.013, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( female(A) )
%   | | then return 0.16680447163501536;  // std dev = 0.066, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.16651184726900323;  // std dev = 0.067, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.14346043723030846;  // std dev = 0.322, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.14317895891920915;  // std dev = 0.322, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else if ( actor(A) )
%   | | | then return -0.06841518470844579;  // std dev = 1.83e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return -0.15449531260012236;  // std dev = 0.521, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06364577123334426;  // std dev = 0.020, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1392563670359006;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.19333949895832991;  // std dev = 0.000358, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.632', 'seconds']
Refined model CLL: -0.069353


******************************************
Best model found
******************************************
Results 

CLL : -0.081992 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.434 

Total Inference Time : 0.8744082450866699 

Total revision time: 3.7829436187744143
Best scored revision CLL: -0.069353


Results 

CLL : -0.081992 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.799600255966187 

Total Inference Time : 0.8744082450866699 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.752
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19754287449345298;  // std dev = 6.082, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18018760916091456;  // std dev = 6.043, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13510572314462757;  // std dev = 6.128, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1314928318398772;  // std dev = 6.043, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07872703445786039;  // std dev = 6.179, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09811647219944382;  // std dev = 6.023, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07907675364084389;  // std dev = 6.023, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, I) )
%   | then return 0.6442316022560711;  // std dev = 1.932, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | else return -0.2891017310772624;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.025494135615670998;  // std dev = 4.929, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05398272453257757;  // std dev = 4.788, 149.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.573', 'seconds']
Parameter learned model CLL:-0.30338 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.082, 109, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.043, 105, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.128, 114, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.043, 105, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.179, 120, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.023, 103, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.023, 103, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [1.932, 4, 56], 'false,false': [0.0, 135, 0]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.929, 114, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.788, 93, 56]}]
{'': [nan, 0.22420569329660267], 'false': [nan, 0.22420569329660267]}
{'': [0.0, 0.22684310018903345], 'false': [nan, 0.22684310018903572], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [nan, 0.2208996539792393], 'false': [nan, 0.2208996539792393]}
{'': [nan, 0.22684310018903406], 'false': [nan, 0.22684310018903583]}
{'': [nan, 0.21694214876032927], 'false': [nan, 0.2169421487603305]}
{'': [nan, 0.2281555318223177], 'false': [nan, 0.2281555318223177]}
{'': [nan, 0.2281555318223163], 'false': [nan, 0.2281555318223163]}
{'': [0.0, 0.20470742932281488], 'false': [0.062222222222221825, -1.1842378929335003e-16], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.14291242675663748], 'false': [nan, 0.1429124267566369]}
{'': [nan, 0.15384424876769504], 'false': [nan, 0.15384424876769504]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;false;genre(B, I).;true;true


Refining candidate
***************************
Model training time 1.425
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.14185106490048766;  // std dev = 7.74e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.12544463852839136;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.11244022970619852;  // std dev = 0.013, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10158502555883567;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09268181141599577;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.0863748963398095;  // std dev = 0.126, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0786829550373971;  // std dev = 0.000, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527747;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.1609453542931088;  // std dev = 0.062, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | else return -0.07316484879077412;  // std dev = 2.58e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06835574236286943;  // std dev = 4.47e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else return 0.15383234915403496;  // std dev = 0.008, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06412898524271686;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13485636979409074;  // std dev = 0.007, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09912968712698006;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.286', 'seconds']
Refined model CLL: -0.064708


******************************************
Best model found
******************************************
Results 

CLL : -0.071029 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.425 

Total Inference Time : 0.9036509990692139 

Total revision time: 4.108805372238159
Best scored revision CLL: -0.064708


Results 

CLL : -0.071029 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.131509496688842 

Total Inference Time : 0.9036509990692139 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.843
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1452776479708006;  // std dev = 6.430, 202.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1807047394103216;  // std dev = 6.182, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17844714966459083;  // std dev = 6.070, 159.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10202844607760582;  // std dev = 6.294, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11261204775251839;  // std dev = 6.162, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08193004662219643;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1175285726963706;  // std dev = 5.964, 150.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then return 0.6579467002436715;  // std dev = 1.689, 61.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | else return -0.29287297188747613;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.005034493136498344;  // std dev = 5.065, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.00854561222765548;  // std dev = 5.071, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.513', 'seconds']
Parameter learned model CLL:-0.296377 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.43, 144, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.182, 112, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 3, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.07, 101, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.294, 125, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.162, 110, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'false': 'genre(A, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.209, 115, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.964, 92, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [1.689, 3, 58], 'false,false': [0.0, 121, 0]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.065, 129, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.071, 123, 58]}]
{'': [0.0, 0.2046858151161655], 'false': [nan, 0.2046858151161655], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22477508650518968], 'false': [nan, 0.2247750865051904]}
{'': [0.0, 0.23171551758237335], 'false': [nan, 0.23171551758237335], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2164889963868743], 'false': [nan, 0.21648899638687294]}
{'': [nan, 0.22604875283446885], 'false': [nan, 0.22604875283446732]}
{'': [0.0, 0.2228607704901615], 'false': [nan, 0.2228607704901615], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [nan, 0.23715555555555654], 'false': [nan, 0.23715555555555654]}
{'': [nan, 0.21712353580485363], 'false': [0.0467616232195651, -3.0829333576367984e-16]}
{'': [nan, 0.13721131446470672], 'false': [nan, 0.13721131446470622]}
{'': [nan, 0.14209058494921542], 'false': [nan, 0.14209058494921542]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true


Refining candidate
***************************
Model training time 1.366
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048785;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839105;  // std dev = 8.30e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1272556476027624;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.11231637819360624;  // std dev = 7.30e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( female(A) )
%   | | then return 0.5553664367462845;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5219822959992896;  // std dev = 0.146, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4228470480184741;  // std dev = 0.029, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.17657899930503662;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10229602627364723;  // std dev = 0.074, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3243352985202551;  // std dev = 0.026, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.15235166162992134;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.09361475446981993;  // std dev = 0.119, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08505834523868104;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.25764638101665943;  // std dev = 0.023, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.13521708422662915;  // std dev = 0.006, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07866820120792635;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.21150582089778228;  // std dev = 0.020, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11821313505672805;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.17837880668995929;  // std dev = 0.018, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10465296479561992;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07315204782271481;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06834453583365808;  // std dev = 3.33e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15371672581480778;  // std dev = 0.016, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09806906702350687;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06411909645126103;  // std dev = 1.29e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13476662761350322;  // std dev = 0.014, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09027708544690283;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.355', 'seconds']
Refined model CLL: -0.064918


******************************************
Best model found
******************************************
Results 

CLL : -0.073851 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.86631 

Recall : 1.0 

F1 : 0.928367 

Total Learning Time : 1.366 

Total Inference Time : 0.9089930057525635 

Total revision time: 4.095471271514892
Best scored revision CLL: -0.064918


Results 

CLL : -0.073851 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.86631 

Recall : 1.0 

F1 : 0.928367 

Total Learning Time : 4.118175395965576 

Total Inference Time : 0.9089930057525635 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.262
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17944857408867812;  // std dev = 10.991, 554.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 1.86e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1887479037052059;  // std dev = 10.724, 503.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16389559673946608;  // std dev = 10.701, 499.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.10159632948783633;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11560098142184567;  // std dev = 10.878, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09202158963726102;  // std dev = 10.904, 536.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07421620906453805;  // std dev = 10.909, 537.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06352737865729771;  // std dev = 10.878, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(B, I) )
%   | then return 0.461224464864848;  // std dev = 5.728, 173.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=129 */
%   | else return -0.14679982558133983;  // std dev = 6.500, 356.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.031567840700057075;  // std dev = 10.097, 546.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202619;  // std dev = 6.97e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03402346434919477;  // std dev = 10.047, 525.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.671', 'seconds']
Parameter learned model CLL:-0.361966 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 14, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.991, 376, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.86e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.724, 325, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.05e-08, 13, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.701, 321, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 19, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.878, 353, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.904, 358, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.73e-09, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.909, 359, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 14, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.878, 353, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 9, 0], 'false,true': [5.728, 44, 129], 'false,false': [6.5, 307, 49]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.097, 368, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.97e-09, 13, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.047, 347, 178]}]
{'': [-1.1895246692412391e-17, 0.2180661809746015], 'false': [nan, 0.2180661809746015], 'true': [nan, -1.1895246692412391e-17], 'true,false': [nan, -1.1895246692412391e-17], 'true,false,false': [nan, -1.1895246692412391e-17]}
{'': [3.96508223080413e-18, 0.22864799275915165], 'false': [nan, 0.22864799275915199], 'true': [nan, 3.96508223080413e-18], 'true,false': [nan, 3.96508223080413e-18]}
{'': [8.540177112501205e-18, 0.22946895795599404], 'false': [nan, 0.22946895795599404], 'true': [nan, 8.540177112501205e-18], 'true,false': [nan, 8.540177112501205e-18], 'true,false,false': [nan, 8.540177112501205e-18]}
{'': [-1.0225738384705389e-17, 0.2228464220229064], 'false': [nan, 0.22284642202290328], 'true': [nan, -1.0225738384705389e-17], 'true,false': [-1.0225738384705389e-17, nan]}
{'': [0.0, 0.22180608153263423], 'false': [nan, 0.2218060815326342], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [1.5419764230904951e-18, 0.2215980219787854], 'false': [nan, 0.2215980219787854], 'true': [nan, 1.5419764230904951e-18], 'true,false': [1.5419764230904951e-18, nan]}
{'': [-9.912705577010326e-19, 0.22284642202290073], 'false': [nan, 0.22284642202290073], 'true': [nan, -9.912705577010326e-19], 'true,false': [-9.912705577010326e-19, nan]}
{'': [7.709882115452476e-19, 0.22326249548850885], 'false': [0.18964883557753526, 0.11869555611665118], 'true': [nan, 7.709882115452476e-19], 'true,false': [nan, 7.709882115452476e-19], 'true,false,false': [nan, 7.709882115452476e-19]}
{'': [0.0, 0.18671648959016607], 'false': [nan, 0.18671648959016954], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [3.736327486719277e-18, 0.19226077900362784], 'false': [nan, 0.19226077900362784], 'true': [nan, 3.736327486719277e-18], 'true,false': [nan, 3.736327486719277e-18], 'true,false,false': [nan, 3.736327486719277e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 2.074
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.14e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.14185106490048816;  // std dev = 0.000, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.12544463852839188;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360636;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360628;  // std dev = 4.47e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.11231637819360689;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783631;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783624;  // std dev = 3.16e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.10159632948783656;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.09269127618926064;  // std dev = 2.98e-08, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.97e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.08518475138839678;  // std dev = 7.74e-08, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0787767547310917;  // std dev = 3.07e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.07877675473109144;  // std dev = 5.58e-08, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.07324622576333678;  // std dev = 1.11e-07, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 2.47e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.06842697784420293;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.302', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.074 

Total Inference Time : 1.0731329917907715 

Total revision time: 5.480603490829468
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.503307615280152 

Total Inference Time : 1.0731329917907715 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.795
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22400259363609787;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16197023927883594;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1258289280860884;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10992902282695723;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09310361481639516;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.09269127618926096;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11937110660442092;  // std dev = 5.316, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.08518475138839687;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02629388108986998;  // std dev = 5.604, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then return 0.552332106000141;  // std dev = 2.739, 54.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   | else return -0.28100122733319216;  // std dev = 4.21e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02510606103981128;  // std dev = 4.639, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03907120833537687;  // std dev = 4.556, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.592', 'seconds']
Parameter learned model CLL:-0.301891 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.342, 78, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.477, 90, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.507, 93, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.497, 92, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.316, 76, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.604, 104, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [2.739, 9, 45], 'false,false': [4.21e-08, 72, 0]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.639, 98, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.556, 88, 45]}]
{'': [0.0, 0.23200475907198176], 'false': [nan, 0.23200475907198176], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.22222222222222343], 'false': [nan, 0.2222222222222221], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.0, 0.21811224489795833], 'false': [nan, 0.21811224489795833], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2197542533081295], 'false': [nan, 0.21975425330812864]}
{'': [0.0, 0.2205764824977354], 'false': [nan, 0.2205764824977356], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.23359060173485455], 'false': [nan, 0.23359060173485455], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [0.0, 0.21080131525606938], 'false': [nan, 0.21080131525606938], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [nan, 0.22959183673469383], 'false': [0.13888888888888895, 2.4671622769447922e-17]}
{'': [nan, 0.15048217869006125], 'false': [nan, 0.1504821786900607]}
{'': [nan, 0.1560766190174448], 'false': [nan, 0.1560766190174448]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true


Refining candidate
***************************
Model training time 1.351
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.56e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.12544463852839147;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 6.99e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783617;  // std dev = 5.77e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11471616191687953;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.09269127618926108;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09269127618926098;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1232451782328533;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.08518475138839682;  // std dev = 4.59e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09267443044297456;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( actor(B) )
%   | then return -0.0787767547310917;  // std dev = 3.25e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07622728291525872;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07324622576333707;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420267;  // std dev = 3.80e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.0682371954751152;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202625;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06402436855421462;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.347', 'seconds']
Refined model CLL: -0.064233


******************************************
Best model found
******************************************
Results 

CLL : -0.072382 

AUC ROC : 0.999645 

AUC PR : 0.987448 

Precision : 0.870801 

Recall : 1.0 

F1 : 0.930939 

Total Learning Time : 1.351 

Total Inference Time : 0.7550094127655029 

Total revision time: 3.748043867111206
Best scored revision CLL: -0.064233


Results 

CLL : -0.072382 

AUC ROC : 0.999645 

AUC PR : 0.987448 

Precision : 0.870801 

Recall : 1.0 

F1 : 0.930939 

Total Learning Time : 3.7707479915618896 

Total Inference Time : 0.7550094127655029 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.649
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17729787126972502;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19807067514165683;  // std dev = 5.354, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1576259555975835;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10869686091195761;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08949240284024627;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08271759579903105;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05919899497668519;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then return 0.63749849884391;  // std dev = 1.662, 38.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=35 */
%   | else return -0.18355413273503718;  // std dev = 3.000, 100.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04202894296843283;  // std dev = 4.758, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04631970430995872;  // std dev = 4.689, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.347', 'seconds']
Parameter learned model CLL:-0.327266 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.535, 96, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.354, 79, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.402, 83, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.497, 92, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.497, 92, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'false': 'genre(A, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.487, 91, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [1.662, 3, 35], 'false,false': [3.0, 90, 10]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.758, 86, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.689, 81, 45]}]
{'': [nan, 0.2172928927116352], 'false': [nan, 0.2172928927116352]}
{'': [nan, 0.23120447450572426], 'false': [nan, 0.23120447450572326]}
{'': [nan, 0.22796630859374892], 'false': [nan, 0.22796630859374892]}
{'': [nan, 0.22057648249773537], 'false': [nan, 0.22057648249773543]}
{'': [nan, 0.22057648249773615], 'false': [nan, 0.220576482497736]}
{'': [0.0, 0.22386794052801157], 'false': [nan, 0.22386794052801157], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [nan, 0.22139922145328642], 'false': [nan, 0.22139922145328642]}
{'': [nan, 0.21975425330812776], 'false': [0.07271468144044341, 0.09000000000000012]}
{'': [nan, 0.17282564005609774], 'false': [nan, 0.17282564005609785]}
{'': [nan, 0.174461939028351], 'false': [nan, 0.174461939028351]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 1.452
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 6.99e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( female(A) )
%   | then return 0.8164822684328453;  // std dev = 0.200, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7237321131963371;  // std dev = 0.028, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2784435275244562;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360625;  // std dev = 5.27e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5595631808348953;  // std dev = 0.034, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.22607257323930208;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.4206480929294758;  // std dev = 0.034, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.18844653560083313;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.10704309076641169;  // std dev = 0.488, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3228469050886421;  // std dev = 0.031, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15980605294226413;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A) )
%   | then return -0.09223422083870747;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( female(B) )
%   | | then return -0.09223422083870737;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.20875902562725918;  // std dev = 0.404, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.25663404406886303;  // std dev = 0.027, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.13874512784974977;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.085544683839938;  // std dev = 0.062, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07803315885393594;  // std dev = 0.016, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2107930867296144;  // std dev = 0.023, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12366112741439035;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.1687493273737811;  // std dev = 0.058, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.16221914137353743;  // std dev = 0.059, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.07325725310403168;  // std dev = 0.051, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06805676888948951;  // std dev = 0.007, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( female(A) )
%   | then return 0.14533822116688092;  // std dev = 0.057, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.15256990090092026;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06385732333075833;  // std dev = 0.007, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13642125718773673;  // std dev = 0.017, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14902902097085863;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.431', 'seconds']
Refined model CLL: -0.067744


******************************************
Best model found
******************************************
Results 

CLL : -0.078796 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.452 

Total Inference Time : 0.7666614055633545 

Total revision time: 3.635139633178711
Best scored revision CLL: -0.067744


Results 

CLL : -0.078796 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.6578437576293945 

Total Inference Time : 0.7666614055633545 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.733
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18184835706483143;  // std dev = 6.154, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13083635730827295;  // std dev = 6.278, 189.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1592332518663681;  // std dev = 6.063, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1278726012999391;  // std dev = 6.092, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07967314938529448;  // std dev = 6.211, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05196051832833356;  // std dev = 6.270, 188.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07965531264018327;  // std dev = 6.101, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07033805333450543;  // std dev = 0.474, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05210256923858115;  // std dev = 6.092, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04969170854564659;  // std dev = 6.053, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.131', 'seconds']
Parameter learned model CLL:-0.379523 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.154, 117, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.278, 133, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.063, 107, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.092, 110, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.211, 124, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.27, 132, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.101, 111, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.474, 108, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.092, 110, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.053, 106, 56]}]
{'': [nan, 0.21891810618463733], 'false': [nan, 0.21891810618463733]}
{'': [nan, 0.2085048010973948], 'false': [nan, 0.2085048010973948]}
{'': [nan, 0.22552598893447193], 'false': [nan, 0.22552598893447193]}
{'': [nan, 0.22354478153578072], 'false': [nan, 0.22354478153578072]}
{'': [nan, 0.21432098765432367], 'false': [nan, 0.21432098765432367]}
{'': [nan, 0.20914440923494626], 'false': [nan, 0.20914440923494626]}
{'': [nan, 0.2228835741690263], 'false': [nan, 0.2228835741690263]}
{'': [nan, 0.22486615110053434]}
{'': [nan, 0.22354478153578083], 'false': [nan, 0.22354478153578083]}
{'': [nan, 0.2261850327693957], 'false': [nan, 0.2261850327693957]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.579
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048763;  // std dev = 8.43e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.6913094771863096;  // std dev = 0.831, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else return -0.12544463852839133;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5589621067898783;  // std dev = 0.026, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.224243700503811;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360624;  // std dev = 6.83e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783628;  // std dev = 3.33e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4201923719708212;  // std dev = 0.026, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.18621636309616404;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926083;  // std dev = 7.45e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.322532696983738;  // std dev = 0.023, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.16039046505179094;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2564168067742908;  // std dev = 0.020, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.14063110627317785;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08621208911948063;  // std dev = 0.106, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07870223208295113;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else return 0.20478032627468074;  // std dev = 0.331, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07318157381021971;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else return 0.1728232047666864;  // std dev = 0.327, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06837038382498052;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15463819103563842;  // std dev = 0.014, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.1701704563352572;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06414190478762104;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13548461901040523;  // std dev = 0.012, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.14961483881816282;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.619', 'seconds']
Refined model CLL: -0.066216


******************************************
Best model found
******************************************
Results 

CLL : -0.074173 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.579 

Total Inference Time : 1.0233385562896729 

Total revision time: 4.178129159927368
Best scored revision CLL: -0.066216


Results 

CLL : -0.074173 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.198051416397095 

Total Inference Time : 1.0233385562896729 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.686
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16665957339738588;  // std dev = 6.333, 188.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16064907638303763;  // std dev = 6.262, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14872622899337487;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10000107074662662;  // std dev = 6.325, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14695394462291944;  // std dev = 6.025, 155.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06460907542795702;  // std dev = 6.286, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08931799264441402;  // std dev = 6.112, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03435119788117007;  // std dev = 0.466, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02045635651889628;  // std dev = 6.318, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03207035112473785;  // std dev = 6.245, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.140', 'seconds']
Parameter learned model CLL:-0.373948 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.333, 130, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.262, 121, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.209, 115, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.325, 129, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.025, 97, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.286, 124, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.112, 105, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.466, 124, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.318, 128, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.245, 119, 58]}]
{'': [nan, 0.2133318243549121], 'false': [nan, 0.2133318243549121]}
{'': [nan, 0.21903186542242964], 'false': [nan, 0.21903186542242964]}
{'': [nan, 0.2228607704901586], 'false': [nan, 0.2228607704901586]}
{'': [nan, 0.2139609368297621], 'false': [nan, 0.2139609368297621]}
{'': [nan, 0.23417273673257186], 'false': [nan, 0.23417273673257186]}
{'': [nan, 0.21712353580485302], 'false': [nan, 0.21712353580485302]}
{'': [nan, 0.22921449809928807], 'false': [nan, 0.22921449809928807]}
{'': [nan, 0.21712353580485433]}
{'': [nan, 0.21459128222915935], 'false': [nan, 0.21459128222915935]}
{'': [nan, 0.22030706374285733], 'false': [nan, 0.22030706374285733]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.447
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048763;  // std dev = 8.43e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839133;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.5235720169872421;  // std dev = 0.652, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.5382463645683382;  // std dev = 0.659, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | else return -0.11231637819360621;  // std dev = 8.16e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783626;  // std dev = 4.21e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4229182940318355;  // std dev = 0.013, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.17670734860945955;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926089;  // std dev = 6.58e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32437929121443476;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.15229046477864883;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25767378690682124;  // std dev = 0.010, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.13459009499247296;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.08510595807775496;  // std dev = 0.010, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21152359490095063;  // std dev = 0.009, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.1189509688062327;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07869771597350178;  // std dev = 0.009, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07325694031774144;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17839084371460662;  // std dev = 0.008, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10797559949389686;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15372519843005242;  // std dev = 0.007, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09800735707844732;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.06832951382716164;  // std dev = 0.010, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13477278968063225;  // std dev = 0.006, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.08888429922202051;  // std dev = 0.000972, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06694717719636398;  // std dev = 0.280, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.419', 'seconds']
Refined model CLL: -0.064746


******************************************
Best model found
******************************************
Results 

CLL : -0.069333 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.447 

Total Inference Time : 1.020789384841919 

Total revision time: 3.9706426696777344
Best scored revision CLL: -0.064746


Results 

CLL : -0.069333 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.990564926147461 

Total Inference Time : 1.020789384841919 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.277
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17829281999159463;  // std dev = 11.001, 556.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18336703116017292;  // std dev = 10.770, 511.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12719389814201137;  // std dev = 11.010, 558.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11794608926874144;  // std dev = 10.919, 539.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11094226555170991;  // std dev = 10.809, 518.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1000956344884519;  // std dev = 10.730, 504.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109175;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06984473782183424;  // std dev = 10.820, 520.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(B, I) )
%   | then return 0.45485347590767067;  // std dev = 5.776, 174.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=129 */
%   | else return -0.14155542023597345;  // std dev = 6.473, 338.000 (wgt'ed) examples reached here.  /* #neg=289 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.036300789220406846;  // std dev = 10.103, 525.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202618;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02934259042420229;  // std dev = 10.070, 527.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.554', 'seconds']
Parameter learned model CLL:-0.365293 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 12, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.001, 378, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.77, 333, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.39e-08, 15, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.01, 380, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.919, 361, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.27e-09, 12, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.809, 340, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.73e-09, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.73, 326, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 20, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.82, 342, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 13, 0], 'false,true': [5.776, 45, 129], 'false,false': [6.473, 289, 49]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.73e-09, 15, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.103, 347, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 10, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.07, 349, 178]}]
{'': [-1.1564823173178714e-17, 0.2176517778582916], 'false': [nan, 0.2176517778582916], 'true': [nan, -1.1564823173178714e-17], 'true,false': [nan, -1.1564823173178714e-17], 'true,false,false': [nan, -1.1564823173178714e-17]}
{'': [-1.982541115402065e-18, 0.2269982115570953], 'false': [nan, 0.22699821155709565], 'true': [nan, -1.982541115402065e-18], 'true,false': [nan, -1.982541115402065e-18]}
{'': [1.295260195396016e-17, 0.21723770249611804], 'false': [nan, 0.21723770249611804], 'true': [nan, 1.295260195396016e-17], 'true,false': [nan, 1.295260195396016e-17], 'true,false,false': [nan, 1.295260195396016e-17]}
{'': [0.0, 0.22118194553921985], 'false': [nan, 0.22118194553921997], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [2.3129646346357427e-18, 0.2255482178262071], 'false': [nan, 0.2255482178262103], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18], 'true,false,false': [nan, 2.3129646346357427e-18]}
{'': [1.5419764230904951e-18, 0.22844230284706774], 'false': [nan, 0.22844230284706774], 'true': [nan, 1.5419764230904951e-18], 'true,false': [1.5419764230904951e-18, nan]}
{'': [-4.8572257327350596e-18, 0.22513313609467633], 'false': [nan, 0.22513313609467633], 'true': [nan, -4.8572257327350596e-18], 'true,false': [-4.8572257327350596e-18, nan]}
{'': [0.0, 0.2267913818359398], 'false': [0.1917360285374556, 0.12395399320751903], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [9.251858538542971e-19, 0.19441936301685858], 'false': [nan, 0.19441936301685792], 'true': [nan, 9.251858538542971e-19], 'true,false': [9.251858538542971e-19, nan]}
{'': [0.0, 0.1924349008688681], 'false': [nan, 0.1924349008688681], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 2.22
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.32e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.1418510649004883;  // std dev = 0.000, 262.000 (wgt'ed) examples reached here.  /* #neg=262 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.12544463852839194;  // std dev = 0.000, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360628;  // std dev = 4.47e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.11231637819360688;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783619;  // std dev = 4.34e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.10159632948783656;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926105;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.09269127618926061;  // std dev = 4.71e-08, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.08518475138839679;  // std dev = 8.69e-08, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109179;  // std dev = 7.45e-09, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.07877675473109146;  // std dev = 6.66e-08, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 1.05e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.07324622576333682;  // std dev = 9.66e-08, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 2.47e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.06842697784420282;  // std dev = 0.000, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06419184008202619;  // std dev = 5.89e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.346', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.22 

Total Inference Time : 1.104191780090332 

Total revision time: 5.733403942108154
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.753326198577881 

Total Inference Time : 1.104191780090332 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.638
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16220298915356618;  // std dev = 5.596, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16811730631805732;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1673394064781703;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14055929655621038;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08774313798111148;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06226545556770906;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09336686903900267;  // std dev = 5.367, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08356957091544256;  // std dev = 0.482, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03828558869751237;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.035389936798441955;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.176', 'seconds']
Parameter learned model CLL:-0.400996 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.596, 103, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.487, 91, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.39, 82, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.39, 82, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.507, 93, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.544, 97, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.367, 80, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.482, 77, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.446, 87, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.424, 85, 45]}]
{'': [nan, 0.21160518626734948], 'false': [nan, 0.21160518626734948]}
{'': [nan, 0.2213992214532865], 'false': [nan, 0.2213992214532865]}
{'': [nan, 0.2287804575609158], 'false': [nan, 0.2287804575609158]}
{'': [nan, 0.22878045756091508], 'false': [nan, 0.22878045756091508]}
{'': [nan, 0.21975425330812925], 'false': [nan, 0.21975425330812925]}
{'': [nan, 0.21647490577266343], 'false': [nan, 0.21647490577266343]}
{'': [nan, 0.23039999999999888], 'false': [nan, 0.23039999999999888]}
{'': [nan, 0.23280032249395335]}
{'': [nan, 0.22469008264462698], 'false': [nan, 0.22469008264462698]}
{'': [nan, 0.22633136094674594], 'false': [nan, 0.22633136094674594]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.533
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360622;  // std dev = 6.99e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783615;  // std dev = 5.77e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926107;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08518475138839678;  // std dev = 3.65e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07877675473109161;  // std dev = 4.94e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06842697784420267;  // std dev = 3.87e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06419184008202626;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.586', 'seconds']
Refined model CLL: -0.06667


******************************************
Best model found
******************************************
Results 

CLL : -0.076562 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.533 

Total Inference Time : 0.8382811546325684 

Total revision time: 3.7361993751525877
Best scored revision CLL: -0.06667


Results 

CLL : -0.076562 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 3.7561216316223143 

Total Inference Time : 0.8382811546325684 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.651
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17283424978482687;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1618679614683715;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12702693544234622;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12067259336559472;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0930691830615252;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08329500027428892;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11408805180093019;  // std dev = 5.303, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04496307054166392;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05078582890956106;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.022737220086614874;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.159', 'seconds']
Parameter learned model CLL:-0.385621 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.553, 98, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.507, 93, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.553, 98, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.497, 92, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.497, 92, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.303, 75, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.47, 92, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.435, 86, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.507, 93, 45]}]
{'': [nan, 0.21565846740672015], 'false': [nan, 0.21565846740672015]}
{'': [nan, 0.21975425330812773], 'false': [nan, 0.21975425330812773]}
{'': [nan, 0.2156584674067192], 'false': [nan, 0.2156584674067192]}
{'': [nan, 0.22057648249773465], 'false': [nan, 0.22057648249773465]}
{'': [nan, 0.21811224489796005], 'false': [nan, 0.21811224489796005]}
{'': [nan, 0.22057648249773543], 'false': [nan, 0.22057648249773543]}
{'': [nan, 0.23437499999999964], 'false': [nan, 0.23437499999999964]}
{'': [nan, 0.22057648249773623]}
{'': [nan, 0.2255113338383542], 'false': [nan, 0.2255113338383542]}
{'': [nan, 0.2197542533081296], 'false': [nan, 0.2197542533081296]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.471
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048766;  // std dev = 7.88e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( female(A) )
%   | | | then return 0.8164822684328453;  // std dev = 0.979, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.8146706742299468;  // std dev = 0.978, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839155;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7279810357883602;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.27207476774042777;  // std dev = 0.000293, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5637566143049693;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.22168891404030902;  // std dev = 0.000289, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11341844595659561;  // std dev = 0.109, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10149578294384763;  // std dev = 3.80e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( female(A) )
%   | | | then return 0.39815814205322325;  // std dev = 0.597, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.3974892273073266;  // std dev = 0.596, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09260708300366162;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3306680536198973;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.2532026361385497;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08511329276204523;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( female(A) )
%   | | | then return 0.2421163816958581;  // std dev = 0.461, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.24174056066130184;  // std dev = 0.460, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2179308261808749;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.2513101114510452;  // std dev = 0.000537, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08074934807995282;  // std dev = 0.192, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07305513505214385;  // std dev = 2.58e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( female(A) )
%   | | then return 0.16660445680539748;  // std dev = 0.078, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return 0.166326717284289;  // std dev = 0.080, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06825968652002609;  // std dev = 3.33e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15947162150194646;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.2354031275644649;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06404421830676851;  // std dev = 1.67e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( female(A) )
%   | | | then return 0.1250857603045699;  // std dev = 0.328, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.12485921052953206;  // std dev = 0.328, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.563', 'seconds']
Refined model CLL: -0.073376


******************************************
Best model found
******************************************
Results 

CLL : -0.094815 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.471 

Total Inference Time : 0.8325247764587402 

Total revision time: 3.6698129386901854
Best scored revision CLL: -0.073376


Results 

CLL : -0.094815 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.689735195159912 

Total Inference Time : 0.8325247764587402 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.819
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21035019296114876;  // std dev = 6.023, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16791622525615124;  // std dev = 6.092, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13697099023739442;  // std dev = 6.119, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12265332365563668;  // std dev = 6.082, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07632251009618693;  // std dev = 6.195, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07507289078382;  // std dev = 6.137, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10899875709516875;  // std dev = 5.912, 149.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05698084302602063;  // std dev = 0.476, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.034790710811690086;  // std dev = 6.101, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.006704217886505261;  // std dev = 6.195, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.102', 'seconds']
Parameter learned model CLL:-0.383469 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.023, 103, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.092, 110, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.119, 113, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.082, 109, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.195, 122, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.137, 115, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.912, 93, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.476, 106, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.101, 111, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.195, 122, 56]}]
{'': [nan, 0.2281555318223174], 'false': [nan, 0.2281555318223174]}
{'': [nan, 0.22354478153578017], 'false': [nan, 0.22354478153578017]}
{'': [nan, 0.22156086971744918], 'false': [nan, 0.22156086971744918]}
{'': [nan, 0.224205693296601], 'false': [nan, 0.224205693296601]}
{'': [nan, 0.21562933972983117], 'false': [nan, 0.21562933972983117]}
{'': [nan, 0.22023870592660946], 'false': [nan, 0.22023870592660946]}
{'': [nan, 0.2345840277464976], 'false': [nan, 0.2345840277464976]}
{'': [nan, 0.2261850327693945]}
{'': [nan, 0.2228835741690274], 'false': [nan, 0.2228835741690274]}
{'': [nan, 0.2156293397298331], 'false': [nan, 0.2156293397298331]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.496
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048763;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839136;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360621;  // std dev = 7.60e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( female(A) )
%   | | | then return 0.5013743860360117;  // std dev = 1.068, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783642;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4238712033947583;  // std dev = 0.049, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.3295709564852652;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926098;  // std dev = 4.21e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32504095392839777;  // std dev = 0.044, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.26751411989203;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25813337885607085;  // std dev = 0.039, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.21418086091745472;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08628300173762836;  // std dev = 0.135, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07869709049091693;  // std dev = 2.58e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21185287865045524;  // std dev = 0.034, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.17966838409088193;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07317711294778745;  // std dev = 4.34e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17863523285509922;  // std dev = 0.030, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1546939221469373;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06836647872383582;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else if ( female(A) )
%   | | | then return 0.13745286996747577;  // std dev = 0.398, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return 0.1505207671977099;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13607238642036373;  // std dev = 0.029, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.15508523175586694;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(A) )
%   | | | then return -0.06413845897876881;  // std dev = 4.01e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | | else return -0.13499957428247522;  // std dev = 0.530, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.313', 'seconds']
Refined model CLL: -0.066877


******************************************
Best model found
******************************************
Results 

CLL : -0.082191 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.496 

Total Inference Time : 0.9938111305236816 

Total revision time: 4.133813800811767
Best scored revision CLL: -0.066877


Results 

CLL : -0.082191 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 30.364338340759275 

Total Inference Time : 0.9938111305236816 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.737
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2096640866146651;  // std dev = 6.133, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16787266080237834;  // std dev = 6.200, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1297466326523993;  // std dev = 6.262, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13191203955711295;  // std dev = 6.153, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13567242893630907;  // std dev = 6.025, 155.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08327646330647423;  // std dev = 6.153, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06677973454468057;  // std dev = 6.153, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043010101869780555;  // std dev = 0.473, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.024475181852748495;  // std dev = 6.245, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04525438974191522;  // std dev = 6.123, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.114', 'seconds']
Parameter learned model CLL:-0.395632 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.133, 107, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.2, 114, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.262, 121, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.153, 109, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.025, 97, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.153, 109, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.153, 109, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.473, 114, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.245, 119, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.123, 106, 58]}]
{'': [nan, 0.2279522497704318], 'false': [nan, 0.2279522497704318]}
{'': [nan, 0.22349918875067495], 'false': [nan, 0.22349918875067495]}
{'': [nan, 0.2190318654224289], 'false': [nan, 0.2190318654224289]}
{'': [nan, 0.22668435583922153], 'false': [nan, 0.22668435583922153]}
{'': [nan, 0.2341727367325685], 'false': [nan, 0.2341727367325685]}
{'': [nan, 0.2266843558392213], 'false': [nan, 0.2266843558392213]}
{'': [nan, 0.22668435583921814], 'false': [nan, 0.22668435583921814]}
{'': [nan, 0.22349918875067687]}
{'': [nan, 0.22030706374285822], 'false': [nan, 0.22030706374285822]}
{'': [nan, 0.22858417608566275], 'false': [nan, 0.22858417608566275]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.424
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.16e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839133;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.11367110770775277;  // std dev = 0.143, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.10147274392967648;  // std dev = 4.71e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09258778937782176;  // std dev = 4.83e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08509691606938519;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.19533099211435406;  // std dev = 0.398, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | | else return -0.08094828292249791;  // std dev = 0.251, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17848039067065835;  // std dev = 0.008, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09432443660093928;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.07302843033820176;  // std dev = 1.29e-05, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06823640088116911;  // std dev = 5.87e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else if ( female(A) )
%   | | | then return 0.1525648501741826;  // std dev = 1.97e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.14239616446039174;  // std dev = 0.332, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06402366726183838;  // std dev = 1.67e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1357525421674524;  // std dev = 0.010, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.0937769896574385;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.408', 'seconds']
Refined model CLL: -0.065315


******************************************
Best model found
******************************************
Results 

CLL : -0.071062 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.424 

Total Inference Time : 1.0228674411773682 

Total revision time: 4.017779098510742
Best scored revision CLL: -0.065315


Results 

CLL : -0.071062 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 30.248303638458253 

Total Inference Time : 1.0228674411773682 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.21
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2113235382741117;  // std dev = 10.730, 504.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 1.86e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1650162751791357;  // std dev = 10.883, 532.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15561688150249228;  // std dev = 10.759, 509.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12337485471026209;  // std dev = 10.814, 519.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.092691276189261;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08634421214418132;  // std dev = 10.938, 543.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07695664099199204;  // std dev = 10.883, 532.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07777319400674962;  // std dev = 10.753, 508.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(B, I) )
%   | then return 0.4705111225546306;  // std dev = 5.578, 170.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=129 */
%   | else return -0.15220129574602595;  // std dev = 6.506, 360.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.047004381390392355;  // std dev = 9.919, 512.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202619;  // std dev = 7.45e-09, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.023165825748759843;  // std dev = 10.095, 524.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.552', 'seconds']
Parameter learned model CLL:-0.3666 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 14, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.73, 326, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.86e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.883, 354, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [9.13e-09, 12, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.759, 331, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 7, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.814, 341, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 14, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.938, 365, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [8.33e-09, 14, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.883, 354, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.73e-09, 13, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.753, 330, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 9, 0], 'false,true': [5.578, 41, 129], 'false,false': [6.506, 311, 49]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 13, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.919, 334, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.45e-09, 16, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.095, 346, 178]}]
{'': [-1.1895246692412391e-17, 0.22844230284706762], 'false': [nan, 0.22844230284706762], 'true': [nan, -1.1895246692412391e-17], 'true,false': [nan, -1.1895246692412391e-17], 'true,false,false': [nan, -1.1895246692412391e-17]}
{'': [2.523234146875356e-18, 0.22263836282435745], 'false': [nan, 0.2226383628243531], 'true': [nan, 2.523234146875356e-18], 'true,false': [nan, 2.523234146875356e-18]}
{'': [6.938893903907228e-18, 0.22741150451017164], 'false': [nan, 0.22741150451017164], 'true': [nan, 6.938893903907228e-18], 'true,false': [nan, 6.938893903907228e-18], 'true,false,false': [nan, 6.938893903907228e-18]}
{'': [0.0, 0.2253407137633116], 'false': [nan, 0.22534071376331455], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [-2.9738116731030977e-18, 0.22035007749729812], 'false': [nan, 0.22035007749729477], 'true': [nan, -2.9738116731030977e-18], 'true,false': [nan, -2.9738116731030977e-18], 'true,false,false': [nan, -2.9738116731030977e-18]}
{'': [4.956352788505163e-18, 0.22263836282435606], 'false': [nan, 0.22263836282435606], 'true': [nan, 4.956352788505163e-18], 'true,false': [4.956352788505163e-18, nan]}
{'': [1.0675221390626506e-18, 0.22761795523591324], 'false': [nan, 0.22761795523591324], 'true': [nan, 1.0675221390626506e-18], 'true,false': [1.0675221390626506e-18, nan]}
{'': [7.709882115452476e-19, 0.22305446778212518], 'false': [0.18301038062283315, 0.11758487654321013], 'true': [nan, 7.709882115452476e-19], 'true,false': [nan, 7.709882115452476e-19], 'true,false,false': [nan, 7.709882115452476e-19]}
{'': [5.337610695313253e-19, 0.192146888675482], 'false': [nan, 0.19214688867548238], 'true': [nan, 5.337610695313253e-19], 'true,false': [5.337610695313253e-19, nan]}
{'': [3.469446951953614e-18, 0.19447716861573264], 'false': [nan, 0.19447716861573264], 'true': [nan, 3.469446951953614e-18], 'true,false': [nan, 3.469446951953614e-18], 'true,false,false': [nan, 3.469446951953614e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 2.366
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.14e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.14185106490048813;  // std dev = 0.000, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.12544463852839197;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360626;  // std dev = 4.94e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.1123163781936069;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783619;  // std dev = 4.83e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.10159632948783656;  // std dev = 0.000, 270.000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( director(B), actor(A) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926087;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return -0.09269127618926042;  // std dev = 1.70e-07, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839683;  // std dev = 1.29e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839686;  // std dev = 2.69e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else return -0.08518475138839676;  // std dev = 8.69e-08, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109172;  // std dev = 3.73e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109173;  // std dev = 2.69e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.07877675473109143;  // std dev = 4.47e-08, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( director(B), actor(A) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333703;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return -0.07324622576333704;  // std dev = 8.02e-08, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420271;  // std dev = 2.24e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.0641918400820262;  // std dev = 6.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202626;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.336', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.366 

Total Inference Time : 1.0842366218566895 

Total revision time: 5.704625869750977
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 31.935150409698487 

Total Inference Time : 1.0842366218566895 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.647
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19649479976116643;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15624872242609766;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14290917744726997;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08261834898511686;  // std dev = 5.628, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16367201745143622;  // std dev = 5.234, 115.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07565238111747648;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.046734007710636696;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04431125524097013;  // std dev = 0.469, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.028319538777498973;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07829535397482704;  // std dev = 5.303, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.162', 'seconds']
Parameter learned model CLL:-0.394096 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.516, 94, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.477, 90, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.628, 107, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.234, 70, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.477, 90, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.535, 96, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.469, 93, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.535, 96, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.303, 75, 45]}]
{'': [nan, 0.2238679405280127], 'false': [nan, 0.2238679405280127]}
{'': [nan, 0.21893276745509996], 'false': [nan, 0.21893276745509996]}
{'': [nan, 0.22222222222222268], 'false': [nan, 0.22222222222222268]}
{'': [nan, 0.2084054709141279], 'false': [nan, 0.2084054709141279]}
{'': [nan, 0.23818525519848865], 'false': [nan, 0.23818525519848865]}
{'': [nan, 0.22222222222222127], 'false': [nan, 0.22222222222222127]}
{'': [nan, 0.21729289271163488], 'false': [nan, 0.21729289271163488]}
{'': [nan, 0.21975425330812753]}
{'': [nan, 0.21729289271163277], 'false': [nan, 0.21729289271163277]}
{'': [nan, 0.23437500000000105], 'false': [nan, 0.23437500000000105]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.362
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048766;  // std dev = 6.32e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1254446385283914;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.11231637819360624;  // std dev = 6.66e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783616;  // std dev = 5.27e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.0977865355408927;  // std dev = 0.425, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.08478852475893371;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.0784364156061675;  // std dev = 2.58e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.072950902136787;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0681684132218094;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06842697784420272;  // std dev = 1.86e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06396365931399733;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.612', 'seconds']
Refined model CLL: -0.06499


******************************************
Best model found
******************************************
Results 

CLL : -0.069803 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.362 

Total Inference Time : 0.8783972263336182 

Total revision time: 3.609124597549439
Best scored revision CLL: -0.06499


Results 

CLL : -0.069803 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 29.83964913749695 

Total Inference Time : 0.8783972263336182 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.631
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2043027812533585;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.112666152688469;  // std dev = 5.687, 160.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16659246886061402;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09680774974785189;  // std dev = 5.579, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.118152425064316;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0446546619740554;  // std dev = 5.636, 153.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08559454443328719;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07692693879699078;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04559810851620516;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.014980556334806947;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.324', 'seconds']
Parameter learned model CLL:-0.378497 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.424, 85, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.687, 115, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.402, 83, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.579, 101, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.424, 85, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.636, 108, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.435, 86, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.477, 83, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.467, 89, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.553, 98, 45]}]
{'': [nan, 0.2263313609467465], 'false': [nan, 0.2263313609467465]}
{'': [nan, 0.20214843750000192], 'false': [nan, 0.20214843750000192]}
{'': [nan, 0.22796630859374944], 'false': [nan, 0.22796630859374944]}
{'': [nan, 0.21322011634453003], 'false': [nan, 0.21322011634453003]}
{'': [nan, 0.22633136094674544], 'false': [nan, 0.22633136094674544]}
{'': [nan, 0.2076124567474039], 'false': [nan, 0.2076124567474039]}
{'': [nan, 0.2255113338383542], 'false': [nan, 0.2255113338383542]}
{'': [nan, 0.22796630859374986]}
{'': [nan, 0.22304522165292973], 'false': [nan, 0.22304522165292973]}
{'': [nan, 0.21565846740671904], 'false': [nan, 0.21565846740671904]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.348
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 7.88e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.6842684934301482;  // std dev = 0.827, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.6827378447875044;  // std dev = 0.826, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return -0.12696504979565273;  // std dev = 0.154, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11216488037525654;  // std dev = 4.94e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.564225933826104;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.22121449606301335;  // std dev = 0.000305, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10147145070217964;  // std dev = 3.80e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4241170375354667;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.185435739576344;  // std dev = 0.000200, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32519209839811175;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.15914341766847592;  // std dev = 0.000177, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09242891026828542;  // std dev = 0.015, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08510828274782799;  // std dev = 5.27e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( female(A) )
%   | | | then return 0.24153732439273246;  // std dev = 0.389, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.24110632281195363;  // std dev = 0.388, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07871108851718761;  // std dev = 3.94e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else return 0.21474950390923528;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0731892575955868;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.18074917607577096;  // std dev = 0.000974, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.2028789733425159;  // std dev = 0.000366, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0683771102509117;  // std dev = 3.25e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else return 0.15550917450793558;  // std dev = 0.000864, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.10952289860963972;  // std dev = 0.450, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.13628012035179005;  // std dev = 1.29e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.06452219617247693;  // std dev = 0.039, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.367', 'seconds']
Refined model CLL: -0.072353


******************************************
Best model found
******************************************
Results 

CLL : -0.087964 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.348 

Total Inference Time : 0.8498151302337646 

Total revision time: 3.5751389541625977
Best scored revision CLL: -0.072353


Results 

CLL : -0.087964 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 29.805663494110107 

Total Inference Time : 0.8498151302337646 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.695
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23148226843284683;  // std dev = 5.924, 150.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1404213585146466;  // std dev = 6.203, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15228354768840752;  // std dev = 6.053, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1295622707208186;  // std dev = 6.043, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06993651033241235;  // std dev = 6.211, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1166567440558082;  // std dev = 5.936, 151.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05053856579677573;  // std dev = 6.137, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07411011729980421;  // std dev = 0.480, 155.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.049614190723484664;  // std dev = 6.023, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.003766164639565669;  // std dev = 6.219, 181.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.193', 'seconds']
Parameter learned model CLL:-0.387611 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.924, 94, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.203, 123, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.053, 106, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.043, 105, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.211, 124, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.936, 95, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.137, 115, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.48, 99, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.023, 103, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.219, 125, 56]}]
{'': [nan, 0.23395555555555575], 'false': [nan, 0.23395555555555575]}
{'': [nan, 0.21497456384008137], 'false': [nan, 0.21497456384008137]}
{'': [nan, 0.22618503276939472], 'false': [nan, 0.22618503276939472]}
{'': [nan, 0.2268431001890342], 'false': [nan, 0.2268431001890342]}
{'': [nan, 0.2143209876543196], 'false': [nan, 0.2143209876543196]}
{'': [nan, 0.2333230998640412], 'false': [nan, 0.2333230998640412]}
{'': [nan, 0.22023870592661113], 'false': [nan, 0.22023870592661113]}
{'': [nan, 0.23075962539021905]}
{'': [nan, 0.2281555318223163], 'false': [nan, 0.2281555318223163]}
{'': [nan, 0.21366869143188696], 'false': [nan, 0.21366869143188696]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.455
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.56e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839133;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1123163781936062;  // std dev = 8.69e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783633;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0926912761892609;  // std dev = 6.05e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839682;  // std dev = 5.16e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | | else return -0.17090992958106732;  // std dev = 0.470, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07852929905966986;  // std dev = 0.012, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527736;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07315798886530617;  // std dev = 0.008, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.1448448996673182;  // std dev = 0.217, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.14537149689574172;  // std dev = 0.217, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else return -0.06816349103619912;  // std dev = 0.013, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06408326516863273;  // std dev = 0.008, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13489452631827545;  // std dev = 0.000230, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.07829540047708301;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.532', 'seconds']
Refined model CLL: -0.064428


******************************************
Best model found
******************************************
Results 

CLL : -0.073778 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.455 

Total Inference Time : 1.0140087604522705 

Total revision time: 4.015261316299439
Best scored revision CLL: -0.064428


Results 

CLL : -0.073778 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.031135940551758 

Total Inference Time : 1.0140087604522705 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.724
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19148226843284694;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1957054912315464;  // std dev = 6.081, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15572428038702668;  // std dev = 6.133, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10995298043678636;  // std dev = 6.227, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11264575682918526;  // std dev = 6.123, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08930045067331559;  // std dev = 6.133, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.030307000447696783;  // std dev = 6.325, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04733141790451824;  // std dev = 0.471, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.030078418652315315;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.049447660817428046;  // std dev = 6.133, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.162', 'seconds']
Parameter learned model CLL:-0.387959 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.218, 116, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.081, 102, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.133, 107, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.227, 117, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.123, 106, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.133, 107, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.325, 129, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.471, 116, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.253, 120, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.133, 107, 58]}]
{'': [nan, 0.2222222222222225], 'false': [nan, 0.2222222222222225]}
{'': [nan, 0.23109374999999938], 'false': [nan, 0.23109374999999938]}
{'': [nan, 0.22795224977042977], 'false': [nan, 0.22795224977042977]}
{'': [nan, 0.22158367346938873], 'false': [nan, 0.22158367346938873]}
{'': [nan, 0.22858417608566173], 'false': [nan, 0.22858417608566173]}
{'': [nan, 0.22795224977043066], 'false': [nan, 0.22795224977043066]}
{'': [nan, 0.2139609368297634], 'false': [nan, 0.2139609368297634]}
{'': [nan, 0.22222222222222082]}
{'': [nan, 0.21966923368261568], 'false': [nan, 0.21966923368261568]}
{'': [nan, 0.227952249770432], 'false': [nan, 0.227952249770432]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.519
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.14185106490048768;  // std dev = 6.66e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839133;  // std dev = 0.000, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1123163781936062;  // std dev = 8.30e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783627;  // std dev = 3.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09269127618926096;  // std dev = 5.27e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839683;  // std dev = 5.27e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.2097577156325356;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.19533099211435406;  // std dev = 0.398, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | | else return -0.07994415845432704;  // std dev = 0.140, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07316702044744089;  // std dev = 4.34e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17848039067065835;  // std dev = 0.008, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.09458232222183433;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06835764350311699;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1537930216655243;  // std dev = 0.007, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.08640547779877104;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06413066281606915;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13482566758137696;  // std dev = 0.006, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06780966471878475;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.590', 'seconds']
Refined model CLL: -0.064437


******************************************
Best model found
******************************************
Results 

CLL : -0.06839 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.519 

Total Inference Time : 1.047421932220459 

Total revision time: 4.131850212097168
Best scored revision CLL: -0.064437


Results 

CLL : -0.06839 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 4.147724836349488 

Total Inference Time : 1.047421932220459 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.16
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1871692678166988;  // std dev = 10.929, 541.000 (wgt'ed) examples reached here.  /* #neg=363 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 1.86e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1828236333655328;  // std dev = 10.765, 510.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12306583214436125;  // std dev = 11.033, 563.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.10159632948783628;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13129487286048722;  // std dev = 10.804, 517.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10845811491885075;  // std dev = 10.804, 517.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06947317113079997;  // std dev = 10.958, 547.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0709532727085018;  // std dev = 10.836, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(B, I) )
%   | then return 0.5078289134330294;  // std dev = 5.187, 163.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=129 */
%   | else return -0.14933555416928854;  // std dev = 6.513, 365.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03783636511239938;  // std dev = 9.998, 525.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04270395496553623;  // std dev = 9.883, 504.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.547', 'seconds']
Parameter learned model CLL:-0.365195 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 10, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.929, 363, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.86e-09, 10, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.765, 332, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.18e-08, 14, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.033, 385, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.73e-09, 10, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.804, 339, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.27e-09, 13, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.804, 339, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.27e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.958, 369, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 8, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.836, 345, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 13, 0], 'false,true': [5.187, 34, 129], 'false,false': [6.513, 316, 49]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.998, 347, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.883, 326, 178]}]
{'': [-1.1102230246251566e-17, 0.22076595337586244], 'false': [nan, 0.22076595337586244], 'true': [nan, -1.1102230246251566e-17], 'true,false': [nan, -1.1102230246251566e-17], 'true,false,false': [nan, -1.1102230246251566e-17]}
{'': [2.7755575615628915e-18, 0.22720492118416194], 'false': [nan, 0.22720492118415941], 'true': [nan, 2.7755575615628915e-18], 'true,false': [nan, 2.7755575615628915e-18]}
{'': [9.912705577010326e-18, 0.21620410828819564], 'false': [nan, 0.21620410828819564], 'true': [nan, 9.912705577010326e-18], 'true,false': [nan, 9.912705577010326e-18], 'true,false,false': [nan, 9.912705577010326e-18]}
{'': [1.3877787807814458e-18, 0.22575564276868992], 'false': [nan, 0.22575564276868879], 'true': [nan, 1.3877787807814458e-18], 'true,false': [1.3877787807814458e-18, nan]}
{'': [2.135044278125301e-18, 0.22575564276868776], 'false': [nan, 0.22575564276868787], 'true': [nan, 2.135044278125301e-18], 'true,false': [nan, 2.135044278125301e-18], 'true,false,false': [nan, 2.135044278125301e-18]}
{'': [2.3129646346357427e-18, 0.21951879789711923], 'false': [nan, 0.21951879789711923], 'true': [nan, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan]}
{'': [0.0, 0.22451001539142357], 'false': [nan, 0.22451001539142357], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [0.0, 0.2234705004591381], 'false': [0.16507960404983596, 0.11622443235128618], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.19038808749004404], 'false': [nan, 0.19038808749004685], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [-5.782411586589357e-19, 0.1938084083451499], 'false': [nan, 0.1938084083451499], 'true': [nan, -5.782411586589357e-19], 'true,false': [nan, -5.782411586589357e-19], 'true,false,false': [nan, -5.782411586589357e-19]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 2.193
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.14e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.1418510649004881;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return -0.12544463852839183;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360629;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.11231637819360682;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783623;  // std dev = 3.80e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.10159632948783642;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.09269127618926071;  // std dev = 8.94e-08, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( director(B), actor(A) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839678;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return -0.08518475138839678;  // std dev = 9.88e-08, 276.000 (wgt'ed) examples reached here.  /* #neg=276 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109175;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else return -0.07877675473109144;  // std dev = 5.96e-08, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.07324622576333681;  // std dev = 1.06e-07, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 2.11e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.06842697784420283;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06419184008202618;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.550', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.193 

Total Inference Time : 1.0721478462219238 

Total revision time: 5.615474536895752
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.631349161148071 

Total Inference Time : 1.0721478462219238 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.638
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18188994229375685;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14065676770069607;  // std dev = 5.588, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12240678508782736;  // std dev = 5.579, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.141107291584684;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11714905136299271;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09581204178981523;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06959670992306091;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.023477908604982518;  // std dev = 0.461, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04103811612495398;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.006106454401614625;  // std dev = 5.604, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.243', 'seconds']
Parameter learned model CLL:-0.372663 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.516, 94, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.588, 102, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.579, 101, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.424, 85, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.424, 85, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.424, 85, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.461, 102, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.497, 92, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.604, 104, 45]}]
{'': [nan, 0.21893276745510165], 'false': [nan, 0.21893276745510165]}
{'': [nan, 0.21241149521032854], 'false': [nan, 0.21241149521032854]}
{'': [nan, 0.21322011634452945], 'false': [nan, 0.21322011634452945]}
{'': [nan, 0.22633136094674633], 'false': [nan, 0.22633136094674633]}
{'': [nan, 0.22633136094674625], 'false': [nan, 0.22633136094674625]}
{'': [nan, 0.22633136094674502], 'false': [nan, 0.22633136094674502]}
{'': [nan, 0.2238679405280105], 'false': [nan, 0.2238679405280105]}
{'': [nan, 0.21241149521033018]}
{'': [nan, 0.22057648249773462], 'false': [nan, 0.22057648249773462]}
{'': [nan, 0.21080131525606835], 'false': [nan, 0.21080131525606835]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.379
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.69e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.1254446385283914;  // std dev = 0.000, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360624;  // std dev = 6.14e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1015963294878362;  // std dev = 4.83e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08879137727002845;  // std dev = 0.243, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07851541567304854;  // std dev = 1.83e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( female(A) )
%   | | | then return 0.18571317643556665;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.2015138736221461;  // std dev = 0.284, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17886985770929492;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09424978885914226;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( actor(A) )
%   | | then return -0.07301946755990381;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( movie(E, A), movie(E, B) )
%   | | | then return -0.12958227094135882;  // std dev = 0.253, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.07301946755990375;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15408795235512435;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08654742609724114;  // std dev = 0.002, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06836473857867043;  // std dev = 0.021, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13505557420128295;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07979660052063377;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06447024738311123;  // std dev = 0.027, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.697', 'seconds']
Refined model CLL: -0.065216


******************************************
Best model found
******************************************
Results 

CLL : -0.067965 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.379 

Total Inference Time : 0.875136137008667 

Total revision time: 3.6326930923461913
Best scored revision CLL: -0.065216


Results 

CLL : -0.067965 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.6485677165985106 

Total Inference Time : 0.875136137008667 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.632
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2270013941159059;  // std dev = 5.329, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16911975408178823;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14631013275395383;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14151051819558383;  // std dev = 5.354, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07699782857054874;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08750587289919425;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08433091873094185;  // std dev = 5.354, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.025596226089093704;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08342322956230525;  // std dev = 5.262, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.004704710159950074;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.127', 'seconds']
Parameter learned model CLL:-0.401774 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.329, 77, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.446, 87, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.435, 86, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.354, 79, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.516, 94, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.413, 84, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.354, 79, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.467, 95, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.262, 72, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.516, 94, 45]}]
{'': [nan, 0.2328003224939541], 'false': [nan, 0.2328003224939541]}
{'': [nan, 0.22469008264462748], 'false': [nan, 0.22469008264462748]}
{'': [nan, 0.22551133383835475], 'false': [nan, 0.22551133383835475]}
{'': [nan, 0.23120447450572196], 'false': [nan, 0.23120447450572196]}
{'': [nan, 0.2189327674551011], 'false': [nan, 0.2189327674551011]}
{'': [nan, 0.22714981070849172], 'false': [nan, 0.22714981070849172]}
{'': [nan, 0.2312044745057224], 'false': [nan, 0.2312044745057224]}
{'': [nan, 0.21811224489795816]}
{'': [nan, 0.2366863905325452], 'false': [nan, 0.2366863905325452]}
{'': [nan, 0.21893276745509996], 'false': [nan, 0.21893276745509996]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.407
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.14185106490048766;  // std dev = 7.45e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839144;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360622;  // std dev = 6.83e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( female(A) )
%   | | | then return 0.5275463194571225;  // std dev = 0.654, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.5263367491402023;  // std dev = 0.653, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783615;  // std dev = 5.77e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.42443890881096535;  // std dev = 0.000991, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1765013916705758;  // std dev = 0.000193, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926101;  // std dev = 3.49e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3254106600776191;  // std dev = 0.000890, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.15226103305707633;  // std dev = 0.000171, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08518475138839682;  // std dev = 5.48e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2583759398349642;  // std dev = 0.000777, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1336089765937214;  // std dev = 0.000121, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2120182247892334;  // std dev = 0.000678, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11895931065275557;  // std dev = 0.000116, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109162;  // std dev = 4.94e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | | else return -0.1277511727765394;  // std dev = 0.473, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07306535092055731;  // std dev = 0.007, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17875270857579512;  // std dev = 0.000595, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.10701853451579846;  // std dev = 0.000127, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06821481659540886;  // std dev = 0.007, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15399910368959266;  // std dev = 0.000528, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.0972200658398983;  // std dev = 8.67e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.1255853029636496;  // std dev = 0.219, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.12531892948890144;  // std dev = 0.219, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return -0.06425606415516891;  // std dev = 0.025, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.561', 'seconds']
Refined model CLL: -0.06662


******************************************
Best model found
******************************************
Results 

CLL : -0.075953 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.407 

Total Inference Time : 0.8474869728088379 

Total revision time: 3.629057373046875
Best scored revision CLL: -0.06662


Results 

CLL : -0.075953 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.6449319972991945 

Total Inference Time : 0.8474869728088379 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.786
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21035019296114874;  // std dev = 6.023, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14874864584760625;  // std dev = 6.179, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13043324308162743;  // std dev = 6.163, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15601249760662242;  // std dev = 5.947, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08402319846769907;  // std dev = 6.154, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07604005056247105;  // std dev = 6.119, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06328791836326515;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then return 0.620525067249784;  // std dev = 2.328, 62.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=56 */
%   | else return -0.28270073920182903;  // std dev = 1.60e-07, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05052443270953596;  // std dev = 4.922, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0028959261485305265;  // std dev = 5.094, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.483', 'seconds']
Parameter learned model CLL:-0.291157 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.023, 103, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.179, 120, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.163, 118, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.947, 96, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.154, 117, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.119, 113, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.11, 112, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [2.328, 6, 56], 'false,false': [1.6e-07, 88, 0]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.922, 102, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.094, 124, 56]}]
{'': [0.0, 0.2281555318223174], 'false': [nan, 0.2281555318223174], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.21694214876032925], 'false': [nan, 0.21694214876033027], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [nan, 0.21825868674857957], 'false': [nan, 0.21825868674857957]}
{'': [nan, 0.23268698060941836], 'false': [nan, 0.23268698060941845]}
{'': [nan, 0.21891810618463722], 'false': [nan, 0.2189181061846369]}
{'': [nan, 0.22156086971744746], 'false': [nan, 0.22156086971744746]}
{'': [0.0, 0.22222222222222296], 'false': [nan, 0.22222222222222296], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [nan, 0.2339555555555548], 'false': [0.0874089490114456, 2.9269516103754126e-16]}
{'': [nan, 0.15332272560136526], 'false': [nan, 0.1533227256013653]}
{'': [nan, 0.14413242200771934], 'false': [nan, 0.14413242200771934]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true


Refining candidate
***************************
Model training time 1.251
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.94e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1254446385283913;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360622;  // std dev = 7.88e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783634;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926094;  // std dev = 5.16e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 5.37e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else return 0.24920106723689517;  // std dev = 0.337, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07877675473109157;  // std dev = 6.32e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return 0.205179586223983;  // std dev = 0.315, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then return 0.17863912354147152;  // std dev = 4.71e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12791520989239188;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.07324622576333707;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420265;  // std dev = 4.71e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.1539130899987224;  // std dev = 2.11e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11431189351285954;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13491917080483962;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.10323868124281749;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.06516881717784781;  // std dev = 0.063, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.213', 'seconds']
Refined model CLL: -0.065209


******************************************
Best model found
******************************************
Results 

CLL : -0.079781 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.251 

Total Inference Time : 0.882676362991333 

Total revision time: 3.9164786930084228
Best scored revision CLL: -0.065209


Results 

CLL : -0.079781 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 3.939458906173706 

Total Inference Time : 0.882676362991333 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.864
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20754652546095928;  // std dev = 6.143, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18247616130885969;  // std dev = 6.133, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1662623653103981;  // std dev = 6.081, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1095433260232687;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07704992420976035;  // std dev = 6.278, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07168556841995298;  // std dev = 6.236, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05402822714625169;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039583053216940875;  // std dev = 0.467, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05044308430701039;  // std dev = 6.182, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02097837398904467;  // std dev = 6.270, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.483', 'seconds']
Parameter learned model CLL:-0.377749 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.143, 108, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.133, 107, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.081, 102, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.218, 116, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.278, 123, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.236, 118, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.253, 120, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.467, 122, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.182, 112, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.27, 122, 58]}]
{'': [0.0, 0.22731891421106132], 'false': [nan, 0.22731891421106132], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22795224977043235], 'false': [nan, 0.2279522497704318]}
{'': [0.0, 0.23109374999999982], 'false': [nan, 0.23109374999999982], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22222222222222177], 'false': [nan, 0.2222222222222221]}
{'': [nan, 0.21775892066786917], 'false': [nan, 0.2177589206678675]}
{'': [nan, 0.2209452479338837], 'false': [nan, 0.2209452479338837]}
{'': [nan, 0.21966923368261393], 'false': [nan, 0.21966923368261393]}
{'': [nan, 0.21839506172839585]}
{'': [0.0, 0.22477508650518901], 'false': [nan, 0.2247750865051904], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [nan, 0.21839506172839454], 'false': [nan, 0.21839506172839454]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 1.473
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048774;  // std dev = 4.21e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839108;  // std dev = 7.88e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.11231637819360621;  // std dev = 8.82e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783633;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926108;  // std dev = 1.49e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.0883282357291283;  // std dev = 0.328, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( actor(A) )
%   | then return -0.07854893085045304;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.28883367597800147;  // std dev = 0.258, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0785489308504529;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.07322143165352775;  // std dev = 0.019, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06801876598600368;  // std dev = 0.017, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0637318533577688;  // std dev = 0.020, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.06419184008202619;  // std dev = 5.89e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.377', 'seconds']
Refined model CLL: -0.063562


******************************************
Best model found
******************************************
Results 

CLL : -0.071355 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.86631 

Recall : 1.0 

F1 : 0.928367 

Total Learning Time : 1.473 

Total Inference Time : 0.9123833179473877 

Total revision time: 4.2150417442321775
Best scored revision CLL: -0.063562


Results 

CLL : -0.071355 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.86631 

Recall : 1.0 

F1 : 0.928367 

Total Learning Time : 4.238021957397461 

Total Inference Time : 0.9123833179473877 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.285
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21920370183378846;  // std dev = 10.665, 493.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 1.86e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19482034373643364;  // std dev = 10.627, 487.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11894546583378235;  // std dev = 11.010, 558.000 (wgt'ed) examples reached here.  /* #neg=380 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11671792471614012;  // std dev = 10.868, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09797104521240957;  // std dev = 10.852, 526.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09793770833224677;  // std dev = 10.701, 499.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109173;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07170526139141645;  // std dev = 10.759, 509.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(B, I) )
%   | then return 0.47523825732347164;  // std dev = 5.472, 168.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=129 */
%   | else return -0.14413403704882422;  // std dev = 6.459, 330.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03054914614799535;  // std dev = 10.028, 526.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.007786899533534545;  // std dev = 10.157, 555.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.541', 'seconds']
Parameter learned model CLL:-0.365833 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 13, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.665, 315, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.86e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.627, 309, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 10, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.01, 380, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.73e-09, 8, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.868, 351, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.852, 348, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.27e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.701, 321, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 15, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.759, 331, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 11, 0], 'false,true': [5.472, 39, 129], 'false,false': [6.459, 281, 49]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.028, 348, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 5, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.157, 377, 178]}]
{'': [-1.2810265668751807e-17, 0.23069422215273755], 'false': [nan, 0.23069422215273755], 'true': [nan, -1.2810265668751807e-17], 'true,false': [nan, -1.2810265668751807e-17], 'true,false,false': [nan, -1.2810265668751807e-17]}
{'': [2.523234146875356e-18, 0.23191057853260733], 'false': [nan, 0.2319105785326072], 'true': [nan, 2.523234146875356e-18], 'true,false': [nan, 2.523234146875356e-18]}
{'': [0.0, 0.21723770249611568], 'false': [nan, 0.21723770249611568], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [1.734723475976807e-18, 0.22326249548850866], 'false': [nan, 0.2232624954885088], 'true': [nan, 1.734723475976807e-18], 'true,false': [1.734723475976807e-18, nan]}
{'': [0.0, 0.22388642310861412], 'false': [nan, 0.22388642310861762], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.22946895795599534], 'false': [nan, 0.22946895795599534], 'true': [nan, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan]}
{'': [-1.8503717077085942e-18, 0.22741150451017264], 'false': [nan, 0.22741150451017264], 'true': [nan, -1.8503717077085942e-18], 'true,false': [-1.8503717077085942e-18, nan]}
{'': [6.30808536718839e-19, 0.22967371494008434], 'false': [0.178252551020409, 0.1264370982552788], 'true': [nan, 6.30808536718839e-19], 'true,false': [nan, 6.30808536718839e-19], 'true,false,false': [nan, 6.30808536718839e-19]}
{'': [5.782411586589357e-19, 0.19119834960935936], 'false': [nan, 0.19119834960935883], 'true': [nan, 5.782411586589357e-19], 'true,false': [5.782411586589357e-19, nan]}
{'': [0.0, 0.18589308927957857], 'false': [nan, 0.18589308927957857], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 2.225
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.99e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return -0.14185106490048813;  // std dev = 0.000, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.12544463852839186;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360626;  // std dev = 5.16e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return -0.11231637819360688;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A), director(B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783621;  // std dev = 0.000, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.10159632948783662;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926103;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.0926912761892607;  // std dev = 5.96e-08, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839687;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.05e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else return -0.08518475138839678;  // std dev = 7.88e-08, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109166;  // std dev = 3.33e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return -0.07877675473109146;  // std dev = 5.37e-08, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.0732462257633368;  // std dev = 1.06e-07, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(B) )
%   | then return -0.06842697784420287;  // std dev = 0.000, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.14437523186899512;  // std dev = 0.574, 185.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=178 */
%   | | else return -0.06842697784420267;  // std dev = 3.07e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.134981179931837;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.06455562476457435;  // std dev = 0.037, 270.000 (wgt'ed) examples reached here.  /* #neg=270 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.425', 'seconds']
Refined model CLL: -0.065648


******************************************
Best model found
******************************************
Results 

CLL : -0.063552 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.225 

Total Inference Time : 1.0484580993652344 

Total revision time: 5.635897407531738
Best scored revision CLL: -0.065648


Results 

CLL : -0.063552 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.658877620697021 

Total Inference Time : 1.0484580993652344 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.705
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15814893509951225;  // std dev = 5.612, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16152766197722376;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13604999526689382;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1341009143045595;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10867533299638463;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12554052323145495;  // std dev = 5.303, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03665001604147086;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then return 0.6564595768308091;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | else return -0.2810404231691909;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04640472244616081;  // std dev = 4.382, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.005169321089717117;  // std dev = 4.502, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.510', 'seconds']
Parameter learned model CLL:-0.300457 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.612, 105, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.516, 94, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.446, 87, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'false': 'genre(A, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.303, 75, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.571, 100, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [1.677, 3, 45], 'false,false': [0.0, 98, 0]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.382, 83, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.502, 99, 45]}]
{'': [0.0, 0.2100000000000009], 'false': [nan, 0.2100000000000009], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.21893276745510046], 'false': [nan, 0.21893276745510065]}
{'': [nan, 0.2181122448979583], 'false': [nan, 0.2181122448979583]}
{'': [nan, 0.22469008264462845], 'false': [nan, 0.22469008264462828]}
{'': [nan, 0.22386794052801184], 'false': [nan, 0.22386794052801193]}
{'': [0.0, 0.23437499999999956], 'false': [nan, 0.23437499999999956], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [nan, 0.21403091557669357], 'false': [nan, 0.21403091557669357]}
{'': [nan, 0.2132201163445295], 'false': [0.05859375000000081, -2.0845003727656001e-16]}
{'': [0.0, 0.14998748006414112], 'false': [nan, 0.1499874800641416], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [0.0, 0.14072559464752993], 'false': [nan, 0.14072559464752993], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 1.324
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.14185106490048763;  // std dev = 8.30e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else return -0.12580922578110468;  // std dev = 0.023, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.1124690857210577;  // std dev = 0.015, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.10159632948783633;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.1017366992528918;  // std dev = 0.014, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926098;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else return -0.09278286532710589;  // std dev = 0.013, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.08512638145968703;  // std dev = 6.05e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.19372802283455617;  // std dev = 0.066, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   else return -0.07895596054553958;  // std dev = 0.018, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527736;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1717418380780489;  // std dev = 0.045, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return -0.09414759954622968;  // std dev = 0.001, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else return -0.0731871849516308;  // std dev = 1.05e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.0827237880477029;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.06837529585587719;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.15485035756461232;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08663144301152322;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07665945118602345;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.06414623906603809;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.13564959009509958;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07989075631717016;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.440', 'seconds']
Refined model CLL: -0.064866


******************************************
Best model found
******************************************
Results 

CLL : -0.066585 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.324 

Total Inference Time : 0.8510689735412598 

Total revision time: 3.7157554187774657
Best scored revision CLL: -0.064866


Results 

CLL : -0.066585 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.738735631942749 

Total Inference Time : 0.8510689735412598 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.69
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20971143509951243;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1453420129374123;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11956431239779247;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11854293048236868;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09116779490924479;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.057238998426194856;  // std dev = 5.596, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10529410889774472;  // std dev = 5.354, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then return 0.6939681210087831;  // std dev = 0.986, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else return -0.17724400020333858;  // std dev = 2.998, 99.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.007401920581329028;  // std dev = 4.848, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05619459784284518;  // std dev = 4.647, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.416', 'seconds']
Parameter learned model CLL:-0.316336 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.402, 83, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.553, 98, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.571, 100, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.497, 92, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.596, 103, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.354, 79, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.986, 1, 35], 'false,false': [2.998, 89, 10]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.848, 105, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.647, 80, 45]}]
{'': [nan, 0.22796630859375083], 'false': [nan, 0.22796630859375083]}
{'': [nan, 0.21565846740671796], 'false': [nan, 0.2156584674067195]}
{'': [nan, 0.21403091557669554], 'false': [nan, 0.21403091557669554]}
{'': [0.0, 0.22057648249773593], 'false': [nan, 0.22057648249773573], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [nan, 0.21811224489796002], 'false': [nan, 0.21811224489795897]}
{'': [nan, 0.21160518626734748], 'false': [nan, 0.21160518626734748]}
{'': [nan, 0.2312044745057226], 'false': [nan, 0.2312044745057226]}
{'': [nan, 0.22222222222222154], 'false': [0.027006172839505658, 0.09080706050403035]}
{'': [0.0, 0.15668362912186148], 'false': [nan, 0.15668362912186173], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [nan, 0.17272313028397737], 'false': [nan, 0.17272313028397737]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 1.375
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.14185106490048766;  // std dev = 7.45e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( female(A) )
%   | then return 0.6842684934301482;  // std dev = 0.169, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.6827378447875044;  // std dev = 0.172, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1123163781936062;  // std dev = 8.16e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.564225933826104;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.2213024079153121;  // std dev = 0.000215, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.10159632948783621;  // std dev = 5.05e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.424117037535467;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.185441731443587;  // std dev = 0.000189, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3251920983981113;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.15902278443531337;  // std dev = 0.000255, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else return -0.09378155116753838;  // std dev = 0.092, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25822703519883705;  // std dev = 0.000983, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1388951044278468;  // std dev = 0.000159, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.08572978307982271;  // std dev = 0.061, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07865816064481825;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( female(A) )
%   | then return 0.18498728673259288;  // std dev = 0.091, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.21204392741703829;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0731433360849738;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.18070265147536524;  // std dev = 0.013, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14676668422537545;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06833690906180914;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.15547455835111781;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12836852829111534;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( female(A) )
%   | then return 0.12712730495531896;  // std dev = 0.050, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.12368808831466187;  // std dev = 0.051, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( actor(A) )
%   | then return -0.06411236638037464;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( movie(C, A), movie(C, B) )
%   | | then return -0.143549798688547;  // std dev = 0.275, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06411236638037464;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.297', 'seconds']
Refined model CLL: -0.067475


******************************************
Best model found
******************************************
Results 

CLL : -0.075904 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.375 

Total Inference Time : 0.8100266456604004 

Total revision time: 3.6427432918548583
Best scored revision CLL: -0.067475


Results 

CLL : -0.075904 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.6657235050201415 

Total Inference Time : 0.8100266456604004 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.696
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2059750220560353;  // std dev = 6.043, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14229274703753964;  // std dev = 6.211, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1455942241737169;  // std dev = 6.101, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17307308363546245;  // std dev = 5.863, 145.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06925323819393234;  // std dev = 6.203, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07090366926913302;  // std dev = 6.137, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05907369179069486;  // std dev = 6.128, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06785253878542;  // std dev = 0.477, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.018515645309031537;  // std dev = 6.195, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03738473506694882;  // std dev = 6.092, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.172', 'seconds']
Parameter learned model CLL:-0.381471 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.043, 105, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.211, 124, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.101, 111, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.863, 89, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.203, 123, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.137, 115, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.128, 114, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.477, 104, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.195, 122, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.092, 110, 56]}]
{'': [nan, 0.22684310018903617], 'false': [nan, 0.22684310018903617]}
{'': [nan, 0.21432098765431917], 'false': [nan, 0.21432098765431917]}
{'': [nan, 0.22288357416902574], 'false': [nan, 0.22288357416902574]}
{'': [nan, 0.23705112960761007], 'false': [nan, 0.23705112960761007]}
{'': [nan, 0.21497456384008154], 'false': [nan, 0.21497456384008154]}
{'': [nan, 0.22023870592660896], 'false': [nan, 0.22023870592660896]}
{'': [nan, 0.22089965397923964], 'false': [nan, 0.22089965397923964]}
{'': [nan, 0.22750000000000026]}
{'': [nan, 0.21562933972983248], 'false': [nan, 0.21562933972983248]}
{'': [nan, 0.2235447815357825], 'false': [nan, 0.2235447815357825]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.474
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839105;  // std dev = 8.16e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360624;  // std dev = 7.60e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783666;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926104;  // std dev = 2.79e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( female(A) )
%   | | | then return 0.32071184716014955;  // std dev = 2.11e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.3069317430485025;  // std dev = 0.406, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08518475138839678;  // std dev = 4.59e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2565330997107309;  // std dev = 0.010, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.12256586307833628;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07877675473109158;  // std dev = 5.67e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21071890650241012;  // std dev = 0.009, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.10967407076689542;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17780139328662317;  // std dev = 0.008, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.09957943134375984;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.073475611557936;  // std dev = 0.026, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15327853287355647;  // std dev = 0.007, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.09153295342409515;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(A) )
%   | | | then return -0.06841235715691618;  // std dev = 4.71e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | | else return -0.13265323795021203;  // std dev = 0.584, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06404612693561645;  // std dev = 0.007, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1344244080367581;  // std dev = 0.006, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.08405963925330938;  // std dev = 0.000865, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.383', 'seconds']
Refined model CLL: -0.064846


******************************************
Best model found
******************************************
Results 

CLL : -0.077154 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.474 

Total Inference Time : 0.9745757579803467 

Total revision time: 3.982312602996826
Best scored revision CLL: -0.064846


Results 

CLL : -0.077154 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.003699703216553 

Total Inference Time : 0.9745757579803467 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.68
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20754652546095936;  // std dev = 6.143, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1782663990152668;  // std dev = 6.153, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11293615379206573;  // std dev = 6.333, 188.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12130555145216108;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07676593804171677;  // std dev = 6.318, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07853897711225742;  // std dev = 6.245, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10530226931930983;  // std dev = 6.048, 157.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04824057064134546;  // std dev = 0.471, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02019142884880776;  // std dev = 6.302, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05441573776314331;  // std dev = 6.123, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.092', 'seconds']
Parameter learned model CLL:-0.385461 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.143, 108, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.153, 109, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.333, 130, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.209, 115, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.318, 128, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.245, 119, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.048, 99, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.471, 116, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.302, 126, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.123, 106, 58]}]
{'': [nan, 0.22731891421106132], 'false': [nan, 0.22731891421106132]}
{'': [nan, 0.22668435583922067], 'false': [nan, 0.22668435583922067]}
{'': [nan, 0.2133318243549107], 'false': [nan, 0.2133318243549107]}
{'': [nan, 0.2228607704901588], 'false': [nan, 0.2228607704901588]}
{'': [nan, 0.21459128222915802], 'false': [nan, 0.21459128222915802]}
{'': [nan, 0.22030706374285816], 'false': [nan, 0.22030706374285816]}
{'': [nan, 0.23295062680027528], 'false': [nan, 0.23295062680027528]}
{'': [nan, 0.22222222222222102]}
{'': [nan, 0.21585538752362884], 'false': [nan, 0.21585538752362884]}
{'': [nan, 0.2285841760856626], 'false': [nan, 0.2285841760856626]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.428
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.69e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839136;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360618;  // std dev = 8.69e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783621;  // std dev = 5.05e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926087;  // std dev = 6.99e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0851847513883968;  // std dev = 6.50e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07877675473109153;  // std dev = 7.74e-08, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07324622576333707;  // std dev = 3.73e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06842697784420267;  // std dev = 4.77e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06419184008202626;  // std dev = 0.000, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.488', 'seconds']
Refined model CLL: -0.065545


******************************************
Best model found
******************************************
Results 

CLL : -0.083468 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.428 

Total Inference Time : 0.9746735095977783 

Total revision time: 3.9163252906799317
Best scored revision CLL: -0.065545


Results 

CLL : -0.083468 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 3.9377123908996583 

Total Inference Time : 0.9746735095977783 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.187
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2099275912259906;  // std dev = 10.742, 506.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17097045848922945;  // std dev = 10.836, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1379078723131758;  // std dev = 10.899, 535.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13723463966477856;  // std dev = 10.718, 502.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926096;  // std dev = 5.27e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10538441226500628;  // std dev = 10.781, 513.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08154220753327004;  // std dev = 10.814, 519.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05774390533102587;  // std dev = 10.878, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( genre(B, I) )
%   | then return 0.49262153396570685;  // std dev = 5.305, 165.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=129 */
%   | else return -0.1411603940760385;  // std dev = 6.461, 331.000 (wgt'ed) examples reached here.  /* #neg=282 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.01770146156818971;  // std dev = 10.144, 550.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02473877790954083;  // std dev = 10.044, 532.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.487', 'seconds']
Parameter learned model CLL:-0.363981 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 10, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.742, 328, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.836, 345, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 9, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.899, 357, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 6, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.718, 324, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [5.27e-09, 13, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.781, 335, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.73e-09, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.814, 341, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.73e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.878, 353, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.73e-09, 15, 0], 'false,true': [5.305, 36, 129], 'false,false': [6.461, 282, 49]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 16, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.144, 372, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.97e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.044, 354, 178]}]
{'': [-1.1102230246251566e-17, 0.22803043322033129], 'false': [nan, 0.22803043322033129], 'true': [nan, -1.1102230246251566e-17], 'true,false': [nan, -1.1102230246251566e-17], 'true,false,false': [nan, -1.1102230246251566e-17]}
{'': [0.0, 0.22451001539142468], 'false': [nan, 0.22451001539142096], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [-1.5419764230904951e-18, 0.22201414970739475], 'false': [nan, 0.22201414970739475], 'true': [nan, -1.5419764230904951e-18], 'true,false': [nan, -1.5419764230904951e-18], 'true,false,false': [nan, -1.5419764230904951e-18]}
{'': [0.0, 0.228853510261739], 'false': [nan, 0.22885351026174156], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [2.135044278125301e-18, 0.22658443813671506], 'false': [nan, 0.22658443813671056], 'true': [nan, 2.135044278125301e-18], 'true,false': [nan, 2.135044278125301e-18], 'true,false,false': [nan, 2.135044278125301e-18]}
{'': [1.5419764230904951e-18, 0.22534071376331546], 'false': [nan, 0.22534071376331546], 'true': [nan, 1.5419764230904951e-18], 'true,false': [1.5419764230904951e-18, nan]}
{'': [1.1564823173178713e-18, 0.22284642202290722], 'false': [nan, 0.22284642202290722], 'true': [nan, 1.1564823173178713e-18], 'true,false': [1.1564823173178713e-18, nan]}
{'': [9.251858538542971e-19, 0.23008259625390529], 'false': [0.17057851239669614, 0.12612152134427326], 'true': [nan, 9.251858538542971e-19], 'true,false': [nan, 9.251858538542971e-19], 'true,false,false': [nan, 9.251858538542971e-19]}
{'': [0.0, 0.18710932993809135], 'false': [nan, 0.1871093299380909], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [3.469446951953614e-18, 0.18961806279271193], 'false': [nan, 0.18961806279271193], 'true': [nan, 3.469446951953614e-18], 'true,false': [nan, 3.469446951953614e-18], 'true,false,false': [nan, 3.469446951953614e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 2.076
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048768;  // std dev = 5.37e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.14185106490048816;  // std dev = 0.000, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return -0.12544463852839183;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360638;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360629;  // std dev = 4.08e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else return -0.11231637819360689;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1015963294878362;  // std dev = 4.34e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.10159632948783644;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926097;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.09269127618926065;  // std dev = 2.98e-08, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.67e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.08518475138839678;  // std dev = 8.43e-08, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0787767547310917;  // std dev = 3.07e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.07877675473109143;  // std dev = 5.58e-08, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.07324622576333682;  // std dev = 1.04e-07, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0684269778442027;  // std dev = 1.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.06842697784420275;  // std dev = 0.000, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06419184008202619;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.345', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.076 

Total Inference Time : 1.106065273284912 

Total revision time: 5.444749820709228
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.466136920928955 

Total Inference Time : 1.106065273284912 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.643
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16849376268571906;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18793837372079517;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20374338969750774;  // std dev = 5.219, 114.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15368472043650364;  // std dev = 5.290, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05799894286335286;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0749011591188335;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08466945696916255;  // std dev = 5.354, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02134950659648221;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05712665067285929;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.011592529039096381;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.278', 'seconds']
Parameter learned model CLL:-0.395911 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.571, 100, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.402, 83, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.219, 69, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.29, 74, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.571, 100, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.354, 79, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.465, 97, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.379, 81, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.516, 94, 45]}]
{'': [nan, 0.21403091557669546], 'false': [nan, 0.21403091557669546]}
{'': [nan, 0.22796630859374878], 'false': [nan, 0.22796630859374878]}
{'': [nan, 0.2389196675900267], 'false': [nan, 0.2389196675900267]}
{'': [nan, 0.23515288468328616], 'false': [nan, 0.23515288468328616]}
{'': [nan, 0.21403091557669418], 'false': [nan, 0.21403091557669418]}
{'': [nan, 0.2238679405280114], 'false': [nan, 0.2238679405280114]}
{'': [nan, 0.23120447450572432], 'false': [nan, 0.23120447450572432]}
{'': [nan, 0.21647490577266426]}
{'': [nan, 0.22959183673469483], 'false': [nan, 0.22959183673469483]}
{'': [nan, 0.2189327674550996], 'false': [nan, 0.2189327674550996]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.412
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048768;  // std dev = 5.77e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839144;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360626;  // std dev = 5.48e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1015963294878362;  // std dev = 5.37e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926103;  // std dev = 3.16e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08518475138839679;  // std dev = 1.83e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return 0.24777317748344863;  // std dev = 0.337, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21098681425125518;  // std dev = 3.65e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1065832764337205;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07935008507547572;  // std dev = 0.039, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0732073169232166;  // std dev = 3.16e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.1779974596252114;  // std dev = 3.65e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.0968513537369759;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15342698502307137;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08870413241238491;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06888824718283562;  // std dev = 0.032, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13454011098182664;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08179044035098694;  // std dev = 4.56e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.0645489565921576;  // std dev = 0.030, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.515', 'seconds']
Refined model CLL: -0.065302


******************************************
Best model found
******************************************
Results 

CLL : -0.067434 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.412 

Total Inference Time : 0.8427138328552246 

Total revision time: 3.6315280723571775
Best scored revision CLL: -0.065302


Results 

CLL : -0.067434 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.652915172576904 

Total Inference Time : 0.8427138328552246 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.637
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19649479976116643;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16339006817302956;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1964035141480042;  // std dev = 5.248, 116.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09311082269199049;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0857075940623247;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07209168468355406;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02964091903780911;  // std dev = 5.612, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05708749625744546;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04066307942351497;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06093257941801746;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.116', 'seconds']
Parameter learned model CLL:-0.386823 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.487, 91, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.248, 71, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.544, 97, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.507, 93, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.497, 92, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.612, 105, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.471, 90, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.497, 92, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.379, 81, 45]}]
{'': [nan, 0.2238679405280127], 'false': [nan, 0.2238679405280127]}
{'': [nan, 0.2213992214532865], 'false': [nan, 0.2213992214532865]}
{'': [nan, 0.2374405469678944], 'false': [nan, 0.2374405469678944]}
{'': [nan, 0.21647490577266354], 'false': [nan, 0.21647490577266354]}
{'': [nan, 0.21975425330812776], 'false': [nan, 0.21975425330812776]}
{'': [nan, 0.22057648249773507], 'false': [nan, 0.22057648249773507]}
{'': [nan, 0.20999999999999913], 'false': [nan, 0.20999999999999913]}
{'': [nan, 0.2222222222222232]}
{'': [nan, 0.22057648249773545], 'false': [nan, 0.22057648249773545]}
{'': [nan, 0.2295918367346932], 'false': [nan, 0.2295918367346932]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.508
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.8164822684328453;  // std dev = 0.979, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.8146706742299468;  // std dev = 0.978, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return -0.14185106490048766;  // std dev = 6.83e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1254446385283914;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7279810357883602;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.27207476774042777;  // std dev = 0.000293, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5637566143049692;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.22165543562646506;  // std dev = 0.000271, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11216627513074423;  // std dev = 0.014, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10161003089148762;  // std dev = 5.58e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else return 0.4237655664118663;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09270274815205509;  // std dev = 3.16e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32495345812550414;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.2585569513742284;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08519448745298422;  // std dev = 2.79e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2580644391332503;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.21199447626033546;  // std dev = 0.000303, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07878511485121463;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( female(A) )
%   | | | then return 0.19537917282581252;  // std dev = 0.382, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.21195323263384133;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07325347808267775;  // std dev = 4.15e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17981781026864485;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.21020008695697692;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0684333258928913;  // std dev = 2.24e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( female(A) )
%   | | | then return 0.129153386369098;  // std dev = 0.451, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.15381820177918842;  // std dev = 1.49e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06419744094086707;  // std dev = 3.16e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( female(A) )
%   | | | then return 0.1395114357069911;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.1247124882152614;  // std dev = 0.228, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.444', 'seconds']
Refined model CLL: -0.072579


******************************************
Best model found
******************************************
Results 

CLL : -0.087721 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.508 

Total Inference Time : 0.8412702083587646 

Total revision time: 3.715162057876587
Best scored revision CLL: -0.072579


Results 

CLL : -0.087721 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.7365491580963135 

Total Inference Time : 0.8412702083587646 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.72
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23148226843284683;  // std dev = 5.924, 150.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14217893807650714;  // std dev = 6.195, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12816929678089367;  // std dev = 6.163, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0983759131598867;  // std dev = 6.203, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11631414808128726;  // std dev = 6.043, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05316279825325057;  // std dev = 6.234, 183.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11031061129028143;  // std dev = 5.924, 150.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.050372674840527744;  // std dev = 0.472, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06364375923294698;  // std dev = 5.991, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04345551072513443;  // std dev = 6.023, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.145', 'seconds']
Parameter learned model CLL:-0.395561 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.924, 94, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.195, 122, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.163, 118, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.203, 123, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.043, 105, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.234, 127, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.924, 94, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.472, 111, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.991, 100, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.023, 103, 56]}]
{'': [nan, 0.23395555555555575], 'false': [nan, 0.23395555555555575]}
{'': [nan, 0.21562933972983356], 'false': [nan, 0.21562933972983356]}
{'': [nan, 0.21825868674858107], 'false': [nan, 0.21825868674858107]}
{'': [nan, 0.21497456384008112], 'false': [nan, 0.21497456384008112]}
{'': [nan, 0.22684310018903764], 'false': [nan, 0.22684310018903764]}
{'': [nan, 0.2123682403177153], 'false': [nan, 0.2123682403177153]}
{'': [nan, 0.2339555555555557], 'false': [nan, 0.2339555555555557]}
{'': [nan, 0.2228835741690271]}
{'': [nan, 0.23011176857330623], 'false': [nan, 0.23011176857330623]}
{'': [nan, 0.22815553182231657], 'false': [nan, 0.22815553182231657]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.586
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.14185106490048763;  // std dev = 8.16e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1254446385283913;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | | else if ( female(A) )
%   | | | then return 0.6612032018151374;  // std dev = 1.153, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5622796962470953;  // std dev = 0.054, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.22079940826879138;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11355510852004783;  // std dev = 0.115, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10148332076359344;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4226895767676562;  // std dev = 0.053, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.18663180608622362;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09259664684793795;  // std dev = 3.65e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32424128480482584;  // std dev = 0.048, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.15915979480098924;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08510443447123707;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( female(A) )
%   | | | then return 0.2490928412953267;  // std dev = 0.392, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.2390346537852466;  // std dev = 0.389, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07870778366220503;  // std dev = 4.94e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21375190732840862;  // std dev = 0.030, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.1728108304816136;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07318639033747759;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.1800234435677716;  // std dev = 0.027, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.1474548991104768;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15496253961622827;  // std dev = 0.024, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.1316920020591081;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06902498339882035;  // std dev = 0.078, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13573805693086965;  // std dev = 0.021, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.11404189706658718;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06476637825541696;  // std dev = 0.074, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.377', 'seconds']
Refined model CLL: -0.065584


******************************************
Best model found
******************************************
Results 

CLL : -0.076145 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.586 

Total Inference Time : 0.970604419708252 

Total revision time: 4.112742429733276
Best scored revision CLL: -0.065584


Results 

CLL : -0.076145 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 30.34325814819336 

Total Inference Time : 0.970604419708252 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.759
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1973302216492212;  // std dev = 6.191, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1459047063094368;  // std dev = 6.310, 185.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11791570917149641;  // std dev = 6.340, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14595919248750489;  // std dev = 6.123, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13203744456845937;  // std dev = 6.070, 159.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.056366982100511574;  // std dev = 6.310, 185.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.038817921607378104;  // std dev = 6.340, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06745042751573707;  // std dev = 0.475, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0708314861625464;  // std dev = 6.091, 161.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.019824256731390332;  // std dev = 6.262, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.109', 'seconds']
Parameter learned model CLL:-0.382218 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.191, 113, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.31, 127, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.34, 131, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.123, 106, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.07, 101, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.31, 127, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.34, 131, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.475, 111, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.091, 103, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.262, 121, 58]}]
{'': [nan, 0.22413734140419297], 'false': [nan, 0.22413734140419297]}
{'': [nan, 0.21522279035792502], 'false': [nan, 0.21522279035792502]}
{'': [nan, 0.21270401164580813], 'false': [nan, 0.21270401164580813]}
{'': [nan, 0.2285841760856619], 'false': [nan, 0.2285841760856619]}
{'': [nan, 0.23171551758237433], 'false': [nan, 0.23171551758237433]}
{'': [nan, 0.21522279035792688], 'false': [nan, 0.21522279035792688]}
{'': [nan, 0.21270401164581124], 'false': [nan, 0.21270401164581124]}
{'': [nan, 0.22541227548054987]}
{'': [nan, 0.2304695034913782], 'false': [nan, 0.2304695034913782]}
{'': [nan, 0.21903186542242675], 'false': [nan, 0.21903186542242675]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.591
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1254446385283911;  // std dev = 7.45e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360622;  // std dev = 8.56e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09269127618926092;  // std dev = 6.32e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.08518475138839682;  // std dev = 5.77e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07877675473109155;  // std dev = 6.99e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.07324622576333707;  // std dev = 4.59e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06842697784420265;  // std dev = 5.58e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.0641918400820262;  // std dev = 1.32e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06419184008202626;  // std dev = 2.79e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.570', 'seconds']
Refined model CLL: -0.063467


******************************************
Best model found
******************************************
Results 

CLL : -0.064635 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.591 

Total Inference Time : 1.0439798831939697 

Total revision time: 4.221505260467529
Best scored revision CLL: -0.063467


Results 

CLL : -0.064635 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 30.452020978927614 

Total Inference Time : 1.0439798831939697 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.397
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19979960688453727;  // std dev = 10.825, 521.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 1.86e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19457184922065213;  // std dev = 10.652, 491.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1500540920596695;  // std dev = 10.781, 513.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13858722028627835;  // std dev = 10.671, 494.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09183249312991189;  // std dev = 10.852, 526.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09055713641757591;  // std dev = 10.718, 502.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109173;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06702671548423464;  // std dev = 10.765, 510.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( genre(B, I) )
%   | then return 0.48134843248374004;  // std dev = 5.362, 166.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=129 */
%   | else return -0.15576000125120262;  // std dev = 6.492, 350.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.032777942518471326;  // std dev = 9.992, 515.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 6.45e-09, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.022383463973946378;  // std dev = 9.998, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.706', 'seconds']
Parameter learned model CLL:-0.371157 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.825, 343, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.86e-09, 15, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.652, 313, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.781, 335, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.27e-09, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.671, 316, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.852, 348, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.27e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.718, 324, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 17, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.765, 332, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 9, 0], 'false,true': [5.362, 37, 129], 'false,false': [6.492, 301, 49]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 11, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.992, 337, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.45e-09, 19, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.998, 345, 178]}]
{'': [-6.938893903907228e-18, 0.22492549025387013], 'false': [nan, 0.22492549025387013], 'true': [nan, -6.938893903907228e-18], 'true,false': [nan, -6.938893903907228e-18], 'true,false,false': [nan, -6.938893903907228e-18]}
{'': [3.7007434154171884e-18, 0.23110075037020592], 'false': [nan, 0.23110075037020586], 'true': [nan, 3.7007434154171884e-18], 'true,false': [nan, 3.7007434154171884e-18]}
{'': [-1.734723475976807e-18, 0.22658443813670956], 'false': [nan, 0.22658443813670956], 'true': [nan, -1.734723475976807e-18], 'true,false': [nan, -1.734723475976807e-18], 'true,false,false': [nan, -1.734723475976807e-18]}
{'': [3.0839528461809902e-18, 0.2304905833565509], 'false': [nan, 0.23049058335655237], 'true': [nan, 3.0839528461809902e-18], 'true,false': [3.0839528461809902e-18, nan]}
{'': [0.0, 0.22388642310861978], 'false': [nan, 0.22388642310861895], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [2.3129646346357427e-18, 0.22885351026173995], 'false': [nan, 0.22885351026173995], 'true': [nan, 2.3129646346357427e-18], 'true,false': [2.3129646346357427e-18, nan]}
{'': [-2.44902137784961e-18, 0.22720492118416133], 'false': [nan, 0.22720492118416133], 'true': [nan, -2.44902137784961e-18], 'true,false': [-2.44902137784961e-18, nan]}
{'': [7.709882115452476e-19, 0.225962982993812], 'false': [0.1732109159529674, 0.12040000000000148], 'true': [nan, 7.709882115452476e-19], 'true,false': [nan, 7.709882115452476e-19], 'true,false,false': [nan, 7.709882115452476e-19]}
{'': [6.30808536718839e-19, 0.19386703057290328], 'false': [nan, 0.19386703057290097], 'true': [nan, 6.30808536718839e-19], 'true,false': [6.30808536718839e-19, nan]}
{'': [2.1912296538654404e-18, 0.19114662405136143], 'false': [nan, 0.19114662405136143], 'true': [nan, 2.1912296538654404e-18], 'true,false': [nan, 2.1912296538654404e-18], 'true,false,false': [nan, 2.1912296538654404e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 2.407
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 5.77e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.14185106490048813;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return -0.12544463852839186;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( director(B), actor(A) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360615;  // std dev = 2.98e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return -0.11231637819360679;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783619;  // std dev = 3.94e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.10159632948783644;  // std dev = 0.000, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( director(B), actor(A) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926101;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.09269127618926047;  // std dev = 1.50e-07, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839685;  // std dev = 9.13e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.67e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.08518475138839678;  // std dev = 7.88e-08, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(B) )
%   | then return -0.07877675473109144;  // std dev = 4.47e-08, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then if ( actor(A) )
%   | | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.0787767547310917;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07877675473109168;  // std dev = 3.33e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( director(B), actor(A) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return -0.07324622576333689;  // std dev = 1.10e-07, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0684269778442027;  // std dev = 1.39e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.0684269778442027;  // std dev = 0.000, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202626;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.06419184008202626;  // std dev = 0.000, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.455', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.407 

Total Inference Time : 1.0997636318206787 

Total revision time: 5.9698775806427005
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 32.200393299102785 

Total Inference Time : 1.0997636318206787 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.637
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17505034355021643;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17382248188715188;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11218526945045741;  // std dev = 5.604, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15231588427181808;  // std dev = 5.367, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11229093390010096;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06684902639304517;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04287270671473188;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08118738113553511;  // std dev = 0.479, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03361861994882611;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.049363938057334564;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.181', 'seconds']
Parameter learned model CLL:-0.389569 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.544, 97, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.604, 104, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.367, 80, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.424, 85, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.571, 100, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.479, 81, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.507, 93, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.413, 84, 45]}]
{'': [nan, 0.21647490577266518], 'false': [nan, 0.21647490577266518]}
{'': [nan, 0.22386794052801165], 'false': [nan, 0.22386794052801165]}
{'': [nan, 0.2108013152560696], 'false': [nan, 0.2108013152560696]}
{'': [nan, 0.23040000000000077], 'false': [nan, 0.23040000000000077]}
{'': [nan, 0.22633136094674636], 'false': [nan, 0.22633136094674636]}
{'': [nan, 0.21811224489795875], 'false': [nan, 0.21811224489795875]}
{'': [nan, 0.2140309155766939], 'false': [nan, 0.2140309155766939]}
{'': [nan, 0.22959183673469388]}
{'': [nan, 0.21975425330812842], 'false': [nan, 0.21975425330812842]}
{'': [nan, 0.22714981070849194], 'false': [nan, 0.22714981070849194]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.457
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.14185106490048768;  // std dev = 6.66e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360622;  // std dev = 6.66e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783619;  // std dev = 5.05e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926108;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( female(A) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.2977450069740712;  // std dev = 0.568, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25848879320571094;  // std dev = 0.013, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12095012096119391;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08556932525477096;  // std dev = 0.036, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07874885035024722;  // std dev = 3.16e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2120985092515286;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10941680183743945;  // std dev = 0.004, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07322201828976412;  // std dev = 4.71e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( female(A) )
%   | | then return 0.15320291500096458;  // std dev = 0.077, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.17168608140298702;  // std dev = 0.046, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06840578818468517;  // std dev = 5.48e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15556350564499966;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11496271911805861;  // std dev = 0.000395, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13620446407331;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10373853113060127;  // std dev = 0.000381, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( actor(A) )
%   | | | then return -0.0641731440997804;  // std dev = 2.98e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | | else return -0.09326666086458571;  // std dev = 0.218, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.661', 'seconds']
Refined model CLL: -0.066726


******************************************
Best model found
******************************************
Results 

CLL : -0.069891 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.457 

Total Inference Time : 0.8836119174957275 

Total revision time: 3.68573321723938
Best scored revision CLL: -0.066726


Results 

CLL : -0.069891 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 29.916248935699464 

Total Inference Time : 0.8836119174957275 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.649
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2043027812533585;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20641615268846902;  // std dev = 5.303, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.146631290793176;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1021118657214556;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07027838615379105;  // std dev = 5.562, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08555535777614204;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07155207813899157;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199060870496846;  // std dev = 0.473, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.026644270606921146;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.054452078822346726;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.215', 'seconds']
Parameter learned model CLL:-0.393913 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.424, 85, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.303, 75, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.424, 85, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.507, 93, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.562, 99, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.446, 87, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.435, 86, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.473, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.516, 94, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.379, 81, 45]}]
{'': [nan, 0.2263313609467465], 'false': [nan, 0.2263313609467465]}
{'': [nan, 0.23437500000000158], 'false': [nan, 0.23437500000000158]}
{'': [nan, 0.22633136094674544], 'false': [nan, 0.22633136094674544]}
{'': [nan, 0.2197542533081275], 'false': [nan, 0.2197542533081275]}
{'': [nan, 0.21484374999999986], 'false': [nan, 0.21484374999999986]}
{'': [nan, 0.2246900826446283], 'false': [nan, 0.2246900826446283]}
{'': [nan, 0.22551133383835342], 'false': [nan, 0.22551133383835342]}
{'': [nan, 0.22386794052801068]}
{'': [nan, 0.21893276745510032], 'false': [nan, 0.21893276745510032]}
{'': [nan, 0.22959183673469283], 'false': [nan, 0.22959183673469283]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.426
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.7781489350995119;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.14185106490048766;  // std dev = 7.30e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839147;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7275794276357728;  // std dev = 0.053, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.2725967900908539;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360622;  // std dev = 6.99e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5634213764231399;  // std dev = 0.066, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.22431030596932533;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783621;  // std dev = 5.27e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.42356920264965486;  // std dev = 0.065, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.18367554891514526;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926094;  // std dev = 5.37e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( female(A) )
%   | | | then return 0.31311283012050795;  // std dev = 0.477, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.2949885972253352;  // std dev = 0.470, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2619506878765066;  // std dev = 0.040, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.2035426330221069;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(A) )
%   | | | then return -0.08518475138839683;  // std dev = 4.08e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return -0.1468612756490523;  // std dev = 0.400, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07872084139736034;  // std dev = 0.004, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21454229042099518;  // std dev = 0.035, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1734153074244053;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07295571509875157;  // std dev = 0.010, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.18060268292866383;  // std dev = 0.031, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1512626185724956;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1554016418140397;  // std dev = 0.027, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12813597875166244;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06814574987127264;  // std dev = 0.013, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13608068740795168;  // std dev = 0.024, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11663130986524077;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( actor(A) )
%   | | | then return -0.06422955423402561;  // std dev = 1.29e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | | else return -0.2276291636804136;  // std dev = 0.409, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.532', 'seconds']
Refined model CLL: -0.065887


******************************************
Best model found
******************************************
Results 

CLL : -0.072446 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.426 

Total Inference Time : 0.8753876686096191 

Total revision time: 3.732686710357666
Best scored revision CLL: -0.065887


Results 

CLL : -0.072446 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 29.96320242881775 

Total Inference Time : 0.8753876686096191 

Run: 5
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.752
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16085163780221604;  // std dev = 6.249, 185.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1918494013551394;  // std dev = 6.013, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1732187569668718;  // std dev = 5.970, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11477374473156957;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07759085280596223;  // std dev = 6.187, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07239990394163501;  // std dev = 6.146, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04399732085512003;  // std dev = 6.211, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04788479109712014;  // std dev = 0.468, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07349325257238472;  // std dev = 5.991, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.009038886180638148;  // std dev = 6.298, 192.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.110', 'seconds']
Parameter learned model CLL:-0.369173 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.249, 129, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.013, 102, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.97, 98, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.11, 112, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.187, 121, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.146, 116, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.211, 124, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.468, 117, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.991, 100, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.298, 136, 56]}]
{'': [nan, 0.21107377647918235], 'false': [nan, 0.21107377647918235]}
{'': [nan, 0.22880948565934844], 'false': [nan, 0.22880948565934844]}
{'': [nan, 0.23140495867768382], 'false': [nan, 0.23140495867768382]}
{'': [nan, 0.22222222222222102], 'false': [nan, 0.22222222222222102]}
{'': [nan, 0.21628523093619512], 'false': [nan, 0.21628523093619512]}
{'': [nan, 0.21957815035153946], 'false': [nan, 0.21957815035153946]}
{'': [nan, 0.21432098765431995], 'false': [nan, 0.21432098765431995]}
{'': [nan, 0.2189181061846363]}
{'': [nan, 0.23011176857330745], 'false': [nan, 0.23011176857330745]}
{'': [nan, 0.20659722222222318], 'false': [nan, 0.20659722222222318]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.56
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.43e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( female(A) )
%   | | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.8248156017661784;  // std dev = 0.983, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1254446385283913;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7229317860663921;  // std dev = 0.025, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.27607442834296475;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360622;  // std dev = 8.16e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( female(A) )
%   | | | then return 0.5005251086973681;  // std dev = 1.068, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return 0.5627308676366218;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783631;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4264029586340533;  // std dev = 0.026, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.3311631543560211;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0926912761892609;  // std dev = 6.05e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3267493065953103;  // std dev = 0.024, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.2617356506133409;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08518475138839682;  // std dev = 5.27e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( female(A) )
%   | | | then return 0.24521270747216353;  // std dev = 0.466, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.24081881154193088;  // std dev = 0.466, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21541228025487902;  // std dev = 0.015, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.25868566401531684;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( actor(A) )
%   | | | then return -0.07877675473109154;  // std dev = 7.22e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | | | else return -0.19674443661351892;  // std dev = 0.646, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07285568380013967;  // std dev = 0.018, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.1812336354006762;  // std dev = 0.014, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.21428392416698136;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06780187136967585;  // std dev = 0.019, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( female(A) )
%   | | | then return 0.1575439910800496;  // std dev = 1.83e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.13272669415956173;  // std dev = 0.458, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13776419872149423;  // std dev = 0.000150, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.2008905132988715;  // std dev = 4.44e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( movie(G, A), movie(G, B) )
%   | | | then return -0.08217014470144478;  // std dev = 0.732, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return -0.06425287836295232;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.289', 'seconds']
Refined model CLL: -0.068577


******************************************
Best model found
******************************************
Results 

CLL : -0.093196 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.56 

Total Inference Time : 1.007547378540039 

Total revision time: 4.153715812683106
Best scored revision CLL: -0.068577


Results 

CLL : -0.093196 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.1697885627746585 

Total Inference Time : 1.007547378540039 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.694
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16502724197782043;  // std dev = 6.340, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1820878137226613;  // std dev = 6.162, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18706540930632753;  // std dev = 6.013, 154.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1192075679637547;  // std dev = 6.191, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1306864066974814;  // std dev = 6.036, 156.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07941628379422633;  // std dev = 6.162, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.055603310893723466;  // std dev = 6.200, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.036555378795506875;  // std dev = 0.470, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.028926162506004712;  // std dev = 6.236, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.028524325723967372;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.105', 'seconds']
Parameter learned model CLL:-0.388292 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.34, 131, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.162, 110, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.013, 96, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.191, 113, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.036, 98, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.162, 110, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.2, 114, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.47, 118, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.236, 118, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.209, 115, 58]}]
{'': [nan, 0.21270401164581096], 'false': [nan, 0.21270401164581096]}
{'': [nan, 0.2260487528344658], 'false': [nan, 0.2260487528344658]}
{'': [nan, 0.23477820880418418], 'false': [nan, 0.23477820880418418]}
{'': [nan, 0.224137341404195], 'false': [nan, 0.224137341404195]}
{'': [nan, 0.23356344510190938], 'false': [nan, 0.23356344510190938]}
{'': [nan, 0.22604875283446893], 'false': [nan, 0.22604875283446893]}
{'': [nan, 0.2234991887506751], 'false': [nan, 0.2234991887506751]}
{'': [nan, 0.22094524793388287]}
{'': [nan, 0.22094524793388534], 'false': [nan, 0.22094524793388534]}
{'': [nan, 0.2228607704901598], 'false': [nan, 0.2228607704901598]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.484
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048777;  // std dev = 2.98e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839105;  // std dev = 8.16e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360621;  // std dev = 8.82e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else if ( female(A) )
%   | | | then return 0.5235720169872421;  // std dev = 0.652, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.5382463645683382;  // std dev = 0.659, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783634;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4229182940318354;  // std dev = 0.013, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.17742008502339854;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32437929121443493;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.1531476308282157;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09325027556974892;  // std dev = 0.061, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0851411996116374;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25767378690682124;  // std dev = 0.010, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.13474769358672078;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2115235949009507;  // std dev = 0.009, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.11941117778764801;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0792242295289866;  // std dev = 0.047, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0731808882738664;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17839084371460656;  // std dev = 0.008, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.10776506675611619;  // std dev = 2.63e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06836978369875708;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15372519843005225;  // std dev = 0.007, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09680266343469521;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13477278968063225;  // std dev = 0.006, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.08961509904331318;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06446500723933216;  // std dev = 0.034, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.427', 'seconds']
Refined model CLL: -0.066098


******************************************
Best model found
******************************************
Results 

CLL : -0.080573 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.484 

Total Inference Time : 1.003283977508545 

Total revision time: 4.075501230239868
Best scored revision CLL: -0.066098


Results 

CLL : -0.080573 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.091573980331421 

Total Inference Time : 1.003283977508545 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.199
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19273540126492192;  // std dev = 10.883, 532.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 1.86e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17272592198652723;  // std dev = 10.841, 524.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.154586066790265;  // std dev = 10.781, 513.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.1015963294878363;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11765828198629649;  // std dev = 10.878, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1287596654783374;  // std dev = 10.615, 485.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839687;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08056783449848573;  // std dev = 10.814, 519.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.043592090502173074;  // std dev = 10.987, 553.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(B, I) )
%   | then return 0.4585369375496018;  // std dev = 5.728, 173.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=129 */
%   | else return -0.1446859418696733;  // std dev = 6.482, 344.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.024707611864015634;  // std dev = 10.176, 546.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03743687416134626;  // std dev = 10.031, 514.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.503', 'seconds']
Parameter learned model CLL:-0.364604 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.883, 354, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.86e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.841, 346, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.45e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.781, 335, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.878, 353, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.615, 307, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.73e-09, 8, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.814, 341, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 11, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.987, 375, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 6, 0], 'false,true': [5.728, 44, 129], 'false,false': [6.482, 295, 49]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.73e-09, 15, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.176, 368, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 6, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.031, 336, 178]}]
{'': [-6.938893903907228e-18, 0.2226383628243569], 'false': [nan, 0.2226383628243569], 'true': [nan, -6.938893903907228e-18], 'true,false': [nan, -6.938893903907228e-18], 'true,false,false': [nan, -6.938893903907228e-18]}
{'': [2.523234146875356e-18, 0.2243021968416779], 'false': [nan, 0.22430219684167393], 'true': [nan, 2.523234146875356e-18], 'true,false': [nan, 2.523234146875356e-18]}
{'': [5.046468293750712e-18, 0.22658443813671686], 'false': [nan, 0.22658443813671686], 'true': [nan, 5.046468293750712e-18], 'true,false': [nan, 5.046468293750712e-18], 'true,false,false': [nan, 5.046468293750712e-18]}
{'': [0.0, 0.22284642202290475], 'false': [nan, 0.2228464220229046], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [0.0, 0.23231374216176168], 'false': [nan, 0.23231374216176157], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [1.734723475976807e-18, 0.22534071376331755], 'false': [nan, 0.22534071376331755], 'true': [nan, 1.734723475976807e-18], 'true,false': [1.734723475976807e-18, nan]}
{'': [0.0, 0.21827349750988134], 'false': [nan, 0.21827349750988134], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [0.0, 0.2257556427686893], 'false': [0.1896488355775355, 0.1221521768523535], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [9.251858538542971e-19, 0.18966627205565612], 'false': [nan, 0.1896662720556528], 'true': [nan, 9.251858538542971e-19], 'true,false': [9.251858538542971e-19, nan]}
{'': [-5.782411586589357e-19, 0.19575759881863544], 'false': [nan, 0.19575759881863544], 'true': [nan, -5.782411586589357e-19], 'true,false': [nan, -5.782411586589357e-19], 'true,false,false': [nan, -5.782411586589357e-19]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 2.335
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 5.96e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.14185106490048813;  // std dev = 0.000, 267.000 (wgt'ed) examples reached here.  /* #neg=267 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.12544463852839177;  // std dev = 0.000, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360626;  // std dev = 4.94e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.11231637819360678;  // std dev = 0.000, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A), director(B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783621;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else return -0.1015963294878366;  // std dev = 0.000, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.092691276189261;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926103;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else return -0.09269127618926062;  // std dev = 6.99e-08, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 7.45e-09, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.08518475138839679;  // std dev = 7.88e-08, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109173;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A), director(B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109176;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.07877675473109144;  // std dev = 4.71e-08, 272.000 (wgt'ed) examples reached here.  /* #neg=272 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return -0.07324622576333682;  // std dev = 9.54e-08, 268.000 (wgt'ed) examples reached here.  /* #neg=268 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420267;  // std dev = 2.98e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else return -0.06842697784420294;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.0641918400820262;  // std dev = 6.45e-09, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.461', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.335 

Total Inference Time : 1.065018892288208 

Total revision time: 5.683478673934936
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.699551424026489 

Total Inference Time : 1.065018892288208 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.679
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20698614440183793;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18818256615760567;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14646087248947054;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11965454749296109;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09835288399201156;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03892003830230449;  // std dev = 5.612, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08848504179933736;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.007722707191520004;  // std dev = 0.456, 153.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0013516479724552575;  // std dev = 5.666, 157.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0584550646007502;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.217', 'seconds']
Parameter learned model CLL:-0.376139 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.413, 84, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.379, 81, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.435, 86, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.446, 87, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.446, 87, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.612, 105, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.379, 81, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.456, 108, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.666, 112, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.424, 85, 45]}]
{'': [nan, 0.227149810708492], 'false': [nan, 0.227149810708492]}
{'': [nan, 0.22959183673469466], 'false': [nan, 0.22959183673469466]}
{'': [nan, 0.22551133383835414], 'false': [nan, 0.22551133383835414]}
{'': [nan, 0.2246900826446292], 'false': [nan, 0.2246900826446292]}
{'': [nan, 0.2246900826446274], 'false': [nan, 0.2246900826446274]}
{'': [nan, 0.21000000000000024], 'false': [nan, 0.21000000000000024]}
{'': [nan, 0.22959183673469324], 'false': [nan, 0.22959183673469324]}
{'': [nan, 0.20761245674740542]}
{'': [nan, 0.20447076960525734], 'false': [nan, 0.20447076960525734]}
{'': [nan, 0.22633136094674491], 'false': [nan, 0.22633136094674491]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.485
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048766;  // std dev = 7.88e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839144;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11231637819360625;  // std dev = 6.14e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10159632948783626;  // std dev = 4.21e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0851847513883968;  // std dev = 2.58e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.07877675473109169;  // std dev = 3.25e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.06842697784420268;  // std dev = 2.69e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06419184008202625;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.635', 'seconds']
Refined model CLL: -0.064551


******************************************
Best model found
******************************************
Results 

CLL : -0.067178 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.485 

Total Inference Time : 0.8495132923126221 

Total revision time: 3.7201010837554933
Best scored revision CLL: -0.064551


Results 

CLL : -0.067178 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.736173833847046 

Total Inference Time : 0.8495132923126221 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.723
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18903128804068875;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17445492681315014;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13400116701112555;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15211120739016915;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08805138190779092;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08148524733642738;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.017602354833995262;  // std dev = 5.651, 155.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0319936996741904;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.027677439375925362;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.013700376681594507;  // std dev = 5.604, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.212', 'seconds']
Parameter learned model CLL:-0.363011 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.487, 91, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.446, 87, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.507, 93, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.342, 78, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.497, 92, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.651, 110, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.462, 101, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.571, 100, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.604, 104, 45]}]
{'': [nan, 0.2213992214532882], 'false': [nan, 0.2213992214532882]}
{'': [nan, 0.22469008264462986], 'false': [nan, 0.22469008264462986]}
{'': [nan, 0.21975425330812934], 'false': [nan, 0.21975425330812934]}
{'': [nan, 0.23200475907197995], 'false': [nan, 0.23200475907197995]}
{'': [nan, 0.22057648249773573], 'false': [nan, 0.22057648249773573]}
{'': [nan, 0.22386794052801187], 'false': [nan, 0.22386794052801187]}
{'': [nan, 0.20603537981269543], 'false': [nan, 0.20603537981269543]}
{'': [nan, 0.21322011634453056]}
{'': [nan, 0.21403091557669426], 'false': [nan, 0.21403091557669426]}
{'': [nan, 0.2108013152560704], 'false': [nan, 0.2108013152560704]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.418
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048766;  // std dev = 7.88e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839144;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11231637819360621;  // std dev = 7.45e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783617;  // std dev = 4.83e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926108;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0851847513883968;  // std dev = 5.37e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07877675473109164;  // std dev = 4.83e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then return 0.17165426462552502;  // std dev = 0.248, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | else return -0.07324622576333707;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06842697784420267;  // std dev = 3.41e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15344948653347498;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08578615119950496;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06419184008202626;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13455766246279935;  // std dev = 4.59e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07929292121393748;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.650', 'seconds']
Refined model CLL: -0.065361


******************************************
Best model found
******************************************
Results 

CLL : -0.072262 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.418 

Total Inference Time : 0.8739614486694336 

Total revision time: 3.7522847328186035
Best scored revision CLL: -0.065361


Results 

CLL : -0.072262 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.7683574829101563 

Total Inference Time : 0.8739614486694336 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.756
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21035019296114874;  // std dev = 6.023, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15426624963110608;  // std dev = 6.154, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14107208404857843;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1461663792955907;  // std dev = 5.981, 155.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10917194773255796;  // std dev = 6.033, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08433083773261052;  // std dev = 6.053, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0420478247600513;  // std dev = 6.171, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then return 0.662683323236872;  // std dev = 1.687, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | else return -0.2864692191360095;  // std dev = 1.95e-07, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.01909258927999555;  // std dev = 4.952, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.014280448684256803;  // std dev = 4.967, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.333', 'seconds']
Parameter learned model CLL:-0.290161 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.023, 103, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.154, 117, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.11, 112, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.981, 99, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.033, 104, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.053, 106, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.171, 119, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [1.687, 3, 56], 'false,false': [1.95e-07, 89, 0]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.952, 118, 56]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.967, 117, 56]}]
{'': [nan, 0.22815553182231735], 'false': [nan, 0.22815553182231735]}
{'': [nan, 0.2189181061846356], 'false': [nan, 0.21891810618463664]}
{'': [nan, 0.22222222222222054], 'false': [nan, 0.22222222222222054]}
{'': [0.0, 0.23075962539022093], 'false': [nan, 0.2307596253902187], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [0.0, 0.22749999999999782], 'false': [nan, 0.22749999999999995], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.22618503276939675], 'false': [nan, 0.22618503276939675]}
{'': [0.0, 0.21759999999999868], 'false': [nan, 0.21759999999999868], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [nan, 0.235208181154126], 'false': [0.048261993679976106, 4.2911991064163355e-16]}
{'': [nan, 0.1409046526839989], 'false': [nan, 0.1409046526839999]}
{'': [nan, 0.14262895570460402], 'false': [nan, 0.14262895570460402]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true


Refining candidate
***************************
Model training time 1.438
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839136;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360618;  // std dev = 9.06e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.10159632948783637;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.09269127618926086;  // std dev = 6.91e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( female(A) )
%   | | then return 0.30402472002671227;  // std dev = 0.087, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return 0.3207118471601495;  // std dev = 2.11e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.50e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( female(A) )
%   | then return 0.22752094181942686;  // std dev = 0.113, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.25517224256948956;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.127367284090357;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.07877675473109157;  // std dev = 6.50e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.21334683025510973;  // std dev = 0.028, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.2313193400616329;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( female(A) )
%   | then return 0.18311336879182882;  // std dev = 4.08e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.16418663165516026;  // std dev = 0.067, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else return -0.07324622576333707;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420264;  // std dev = 5.67e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15556392261035262;  // std dev = 0.012, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else return -0.21900720435574475;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202626;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( female(A) )
%   | then return 0.1377538782929042;  // std dev = 1.05e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return 0.1140310799665011;  // std dev = 0.079, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.233', 'seconds']
Refined model CLL: -0.070028


******************************************
Best model found
******************************************
Results 

CLL : -0.095309 

AUC ROC : 0.999249 

AUC PR : 0.976306 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.438 

Total Inference Time : 0.8219916820526123 

Total revision time: 3.908280843734741
Best scored revision CLL: -0.070028


Results 

CLL : -0.095309 

AUC ROC : 0.999249 

AUC PR : 0.976306 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 3.9311675968170166 

Total Inference Time : 0.8219916820526123 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.763
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19535823742509487;  // std dev = 6.200, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16409470745656;  // std dev = 6.227, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13076157398477695;  // std dev = 6.270, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08956059022802926;  // std dev = 6.362, 192.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.132351570832296;  // std dev = 6.091, 161.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07382373904020256;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0874704471375214;  // std dev = 6.123, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(B, I) )
%   | then return 0.7163807508492461;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.2836192491507541;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.11231637819360639;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.038318510340952704;  // std dev = 4.872, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0018612906016391112;  // std dev = 5.023, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.462', 'seconds']
Parameter learned model CLL:-0.293937 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.2, 114, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.227, 117, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.27, 122, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.362, 134, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.091, 103, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.253, 120, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.123, 106, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 58], 'false,false': [8.43e-08, 106, 0]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.872, 108, 58]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.023, 129, 58]}]
{'': [nan, 0.22349918875067623], 'false': [nan, 0.22349918875067623]}
{'': [nan, 0.22158367346938831], 'false': [nan, 0.22158367346938787]}
{'': [nan, 0.2183950617283932], 'false': [nan, 0.2183950617283932]}
{'': [0.0, 0.2108289930555567], 'false': [nan, 0.21082899305555558], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [nan, 0.2304695034913784], 'false': [nan, 0.2304695034913778]}
{'': [nan, 0.21966923368261743], 'false': [nan, 0.21966923368261743]}
{'': [nan, 0.22858417608566345], 'false': [nan, 0.22858417608566345]}
{'': [0.0, 0.22858417608566414], 'false': [-6.125368411725002e-16, 6.70323335622736e-17], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [0.0, 0.14300677762903502], 'false': [nan, 0.14300677762903435], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [0.0, 0.1349008412323987], 'false': [nan, 0.1349008412323987], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;false;genre(B, I).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 1.452
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.12544463852839133;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360617;  // std dev = 9.42e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1015963294878364;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else return -0.09269127618926092;  // std dev = 5.96e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0851847513883968;  // std dev = 6.32e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109155;  // std dev = 6.83e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then if ( movie(E, A), movie(E, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.07324622576333707;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.06842697784420265;  // std dev = 4.89e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.0804487928811284;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.565', 'seconds']
Refined model CLL: -0.064587


******************************************
Best model found
******************************************
Results 

CLL : -0.077147 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.452 

Total Inference Time : 0.9031083583831787 

Total revision time: 4.080219593048096
Best scored revision CLL: -0.064587


Results 

CLL : -0.077147 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 4.103106346130371 

Total Inference Time : 0.9031083583831787 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.213
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19979960688453727;  // std dev = 10.825, 521.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 1.86e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16663285713759313;  // std dev = 10.883, 532.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1517505745339485;  // std dev = 10.804, 517.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12772014503923249;  // std dev = 10.798, 516.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11343302460258395;  // std dev = 10.730, 504.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07802568389988053;  // std dev = 10.847, 525.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109172;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0775264268123124;  // std dev = 10.724, 503.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( genre(B, I) )
%   | then return 0.44925967636377906;  // std dev = 5.776, 174.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=129 */
%   | else return -0.16384738267215107;  // std dev = 6.536, 382.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.039230779005469556;  // std dev = 10.032, 517.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.024034307605662823;  // std dev = 10.085, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.655', 'seconds']
Parameter learned model CLL:-0.366327 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.825, 343, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.86e-09, 11, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.883, 354, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.804, 339, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.73e-09, 8, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.798, 338, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.73, 326, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [8.33e-09, 14, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.847, 347, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 11, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.724, 325, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 16, 0], 'false,true': [5.776, 45, 129], 'false,false': [6.536, 333, 49]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.73e-09, 15, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.032, 339, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.085, 350, 178]}]
{'': [-6.938893903907228e-18, 0.22492549025387013], 'false': [nan, 0.22492549025387013], 'true': [nan, -6.938893903907228e-18], 'true,false': [nan, -6.938893903907228e-18], 'true,false,false': [nan, -6.938893903907228e-18]}
{'': [2.523234146875356e-18, 0.22263836282435245], 'false': [nan, 0.22263836282435243], 'true': [nan, 2.523234146875356e-18], 'true,false': [nan, 2.523234146875356e-18]}
{'': [-1.734723475976807e-18, 0.22575564276869026], 'false': [nan, 0.22575564276869026], 'true': [nan, -1.734723475976807e-18], 'true,false': [nan, -1.734723475976807e-18], 'true,false,false': [nan, -1.734723475976807e-18]}
{'': [1.734723475976807e-18, 0.22596298299380715], 'false': [nan, 0.2259629829938099], 'true': [nan, 1.734723475976807e-18], 'true,false': [1.734723475976807e-18, nan]}
{'': [0.0, 0.2284423028470614], 'false': [nan, 0.22844230284706424], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [4.956352788505163e-18, 0.22409433106575893], 'false': [nan, 0.22409433106575893], 'true': [nan, 4.956352788505163e-18], 'true,false': [4.956352788505163e-18, nan]}
{'': [0.0, 0.2286479927591507], 'false': [nan, 0.2286479927591507], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [0.0, 0.217651777858293], 'false': [0.19173602853745625, 0.11181848085304569], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [9.251858538542971e-19, 0.19465903632545362], 'false': [nan, 0.1946590363254545], 'true': [nan, 9.251858538542971e-19], 'true,false': [9.251858538542971e-19, nan]}
{'': [0.0, 0.19261194396874956], 'false': [nan, 0.19261194396874956], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 2.411
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.32e-08, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.1418510649004881;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.12544463852839188;  // std dev = 0.000, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360626;  // std dev = 4.71e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.11231637819360686;  // std dev = 0.000, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1015963294878362;  // std dev = 4.59e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.10159632948783656;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926107;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.09269127618926071;  // std dev = 0.000, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839687;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.67e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.08518475138839678;  // std dev = 7.60e-08, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0787767547310917;  // std dev = 2.98e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.07877675473109146;  // std dev = 5.96e-08, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( director(B), actor(A) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333703;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.07324622576333698;  // std dev = 9.77e-08, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A), director(B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420264;  // std dev = 1.67e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.06842697784420299;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06419184008202619;  // std dev = 6.97e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( director(B), actor(A) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202618;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else return -0.06419184008202601;  // std dev = 1.00e-07, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.584', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.411 

Total Inference Time : 1.0738599300384521 

Total revision time: 5.709330724716187
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.7322174777984625 

Total Inference Time : 1.0738599300384521 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.748
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23950486730290244;  // std dev = 5.276, 118.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1622452853414396;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1480598650340235;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09201806097677014;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1268540432858811;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.029379106406355028;  // std dev = 5.644, 154.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06477292680357795;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D) )
%   | then return 0.6560268159531342;  // std dev = 1.677, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | else return -0.2814731840468658;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04940856498663379;  // std dev = 4.390, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0061616099910924635;  // std dev = 4.503, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.398', 'seconds']
Parameter learned model CLL:-0.301946 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.276, 73, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 1, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.467, 89, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.424, 85, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.553, 98, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.342, 78, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.644, 109, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.477, 90, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D)'}, {'true': [0.0, 0, 0], 'false,true': [1.677, 3, 45], 'false,false': [0.0, 98, 0]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.39, 80, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 2, 0], 'false,true': [0.0, 0, 0], 'false,false': [4.503, 97, 45]}]
{'': [nan, 0.23592358517667408], 'false': [nan, 0.23592358517667408]}
{'': [0.0, 0.22304522165292923], 'false': [nan, 0.22304522165292906], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [nan, 0.22633136094674602], 'false': [nan, 0.22633136094674602]}
{'': [nan, 0.21565846740671962], 'false': [nan, 0.2156584674067192]}
{'': [nan, 0.2320047590719811], 'false': [nan, 0.2320047590719811]}
{'': [nan, 0.20682239838083916], 'false': [nan, 0.20682239838083916]}
{'': [nan, 0.2222222222222217], 'false': [nan, 0.2222222222222217]}
{'': [nan, 0.21322011634453022], 'false': [0.05859375000000089, -1.2688263138573217e-16]}
{'': [nan, 0.15415564621952685], 'false': [nan, 0.15415564621952715]}
{'': [0.0, 0.14277953954123207], 'false': [nan, 0.14277953954123207], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(B, D).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 1.329
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.1254446385283914;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360624;  // std dev = 6.14e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783616;  // std dev = 5.58e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926108;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.08518475138839687;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else return -0.08531033750017467;  // std dev = 0.010, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.07877675473109173;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A) )
%   | then return -0.07876764130629164;  // std dev = 1.67e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return -0.20062982610508653;  // std dev = 0.422, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08068708631239685;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(B, C) )
%   then if ( movie(D, A), movie(D, B) )
%   | then if ( female(A) )
%   | | then return 0.17709649774527736;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.1572810484648244;  // std dev = 0.116, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.07323266008182487;  // std dev = 0.000221, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06825533827560948;  // std dev = 0.010, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15469475008235037;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07201603331570486;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else if ( actor(B) )
%   | then return -0.06396823941657312;  // std dev = 0.012, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.1355283867472994;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.325', 'seconds']
Refined model CLL: -0.065415


******************************************
Best model found
******************************************
Results 

CLL : -0.073175 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.329 

Total Inference Time : 0.7697889804840088 

Total revision time: 3.651342966079712
Best scored revision CLL: -0.065415


Results 

CLL : -0.073175 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 3.6742297191619873 

Total Inference Time : 0.7697889804840088 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.65
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18188994229375685;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15596289014967507;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12654617349802183;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1250989290337529;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07444182566630517;  // std dev = 5.596, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07610449623253226;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07850298318810466;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   else return 0.03561555862375222;  // std dev = 0.462, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.006901439320671398;  // std dev = 5.666, 157.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, D), movie(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07602749332402925;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.427', 'seconds']
Parameter learned model CLL:-0.369956 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.516, 94, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.553, 98, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.477, 90, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.596, 103, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.535, 96, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.467, 89, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 1, 0], 'false': [0.462, 101, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(B, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.666, 112, 45]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'false': 'genre(A, D), movie(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.379, 81, 45]}]
{'': [nan, 0.21893276745510165], 'false': [nan, 0.21893276745510165]}
{'': [nan, 0.2181122448979587], 'false': [nan, 0.21811224489795902]}
{'': [nan, 0.21565846740671846], 'false': [nan, 0.21565846740671846]}
{'': [nan, 0.22222222222222124], 'false': [nan, 0.22222222222222213]}
{'': [nan, 0.21160518626734773], 'false': [nan, 0.2116051862673481]}
{'': [nan, 0.21729289271163532], 'false': [nan, 0.21729289271163532]}
{'': [nan, 0.2230452216529301], 'false': [nan, 0.2230452216529301]}
{'': [0.0, 0.21322011634452998], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [nan, 0.2044707696052568], 'false': [nan, 0.2044707696052579]}
{'': [nan, 0.2295918367346941], 'false': [nan, 0.2295918367346941]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 1.479
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.14185106490048766;  // std dev = 7.45e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283914;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360621;  // std dev = 7.15e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( female(A) )
%   | then return 0.5275463194571225;  // std dev = 0.133, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.3992583584932079;  // std dev = 0.120, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.4175135841583099;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else return -0.10256043585885341;  // std dev = 0.079, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09261022705909383;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32588407901101624;  // std dev = 0.034, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.24394171340785373;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08511596143302545;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25870527391467846;  // std dev = 0.030, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | else return -0.20329094114079432;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07871768282235796;  // std dev = 5.27e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( female(A) )
%   | then return 0.199947522808731;  // std dev = 0.077, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.20831838204672512;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.0731949787011797;  // std dev = 3.16e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.18014799418287367;  // std dev = 0.027, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.20271170702843225;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0683821184817415;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( female(A) )
%   | then return 0.15854262219411097;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.13712973601494657;  // std dev = 0.067, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( female(A) )
%   | then return 0.13851792404668603;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.12016152000892481;  // std dev = 0.068, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else return -0.0651109485996388;  // std dev = 0.088, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.390', 'seconds']
Refined model CLL: -0.073066


******************************************
Best model found
******************************************
Results 

CLL : -0.09277 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.479 

Total Inference Time : 0.7648494243621826 

Total revision time: 3.640125087738037
Best scored revision CLL: -0.073066


Results 

CLL : -0.09277 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 3.6630118408203125 

Total Inference Time : 0.7648494243621826 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.748
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16584124279182108;  // std dev = 6.226, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2027516225277518;  // std dev = 5.958, 153.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15067875117875618;  // std dev = 6.063, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10441281836118387;  // std dev = 6.163, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08986608134545869;  // std dev = 6.146, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12104588015721002;  // std dev = 5.924, 150.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07863277089335996;  // std dev = 6.013, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.028223336572925237;  // std dev = 0.466, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.035690428696844;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.026203426191103343;  // std dev = 6.119, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.246', 'seconds']
Parameter learned model CLL:-0.385401 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.226, 126, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.958, 97, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.063, 107, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.163, 118, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.146, 116, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.924, 94, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.013, 102, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.466, 119, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.11, 112, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.119, 113, 56]}]
{'': [nan, 0.2130177514792904], 'false': [nan, 0.2130177514792904]}
{'': [nan, 0.232047503097102], 'false': [nan, 0.232047503097102]}
{'': [nan, 0.22552598893447065], 'false': [nan, 0.22552598893447065]}
{'': [nan, 0.2182586867485796], 'false': [nan, 0.2182586867485796]}
{'': [nan, 0.21957815035154293], 'false': [nan, 0.21957815035154293]}
{'': [nan, 0.23395555555555628], 'false': [nan, 0.23395555555555628]}
{'': [nan, 0.22880948565934953], 'false': [nan, 0.22880948565934953]}
{'': [nan, 0.21759999999999974]}
{'': [nan, 0.222222222222223], 'false': [nan, 0.222222222222223]}
{'': [nan, 0.22156086971744576], 'false': [nan, 0.22156086971744576]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.38
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12689400254017316;  // std dev = 0.154, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11217195573441739;  // std dev = 0.000, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( female(A) )
%   | | | then return 0.5093193460607749;  // std dev = 0.911, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4229324703304599;  // std dev = 0.042, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.17617582954471644;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10222220175648009;  // std dev = 0.079, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09252902316468761;  // std dev = 6.91e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32439929984574795;  // std dev = 0.038, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.1534675032977681;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08504703150601226;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2576935606626646;  // std dev = 0.033, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.13552808488884333;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07865848428343174;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2115412414372076;  // std dev = 0.029, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.12001679616225254;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17840610162398018;  // std dev = 0.025, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.10607309901860924;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.07720609543825871;  // std dev = 0.469, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.14783294920447693;  // std dev = 0.248, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.14250475548763147;  // std dev = 0.246, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else if ( actor(A) )
%   | | | then return -0.0680789614427117;  // std dev = 0.000, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | | else return -0.11886857245973216;  // std dev = 0.431, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06380139855132577;  // std dev = 0.005, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( female(A) )
%   | | | then return 0.12943877977803367;  // std dev = 0.243, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.1252722912986072;  // std dev = 0.242, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.531', 'seconds']
Refined model CLL: -0.066036


******************************************
Best model found
******************************************
Results 

CLL : -0.078013 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.38 

Total Inference Time : 0.9834742546081543 

Total revision time: 3.981342056274414
Best scored revision CLL: -0.066036


Results 

CLL : -0.078013 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 4.001412370681763 

Total Inference Time : 0.9834742546081543 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.701
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1839916317287271;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14112220596916583;  // std dev = 6.340, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16110431208301676;  // std dev = 6.153, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09830573596095388;  // std dev = 6.325, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13835505746371074;  // std dev = 6.059, 158.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07549423808885218;  // std dev = 6.236, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07457357661832689;  // std dev = 6.172, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0679922214854396;  // std dev = 0.477, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03200989185898163;  // std dev = 6.236, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.014412364391708017;  // std dev = 6.286, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.277', 'seconds']
Parameter learned model CLL:-0.380739 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.253, 120, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.34, 131, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.153, 109, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.325, 129, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.059, 100, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.236, 118, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.172, 111, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.477, 107, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.236, 118, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.286, 124, 58]}]
{'': [nan, 0.21966923368261612], 'false': [nan, 0.21966923368261612]}
{'': [nan, 0.2127040116458118], 'false': [nan, 0.2127040116458118]}
{'': [nan, 0.22668435583921884], 'false': [nan, 0.22668435583921884]}
{'': [nan, 0.21396093682976414], 'false': [nan, 0.21396093682976414]}
{'': [nan, 0.23233456176894923], 'false': [nan, 0.23233456176894923]}
{'': [nan, 0.22094524793388223], 'false': [nan, 0.22094524793388223]}
{'': [nan, 0.22541227548054943], 'false': [nan, 0.22541227548054943]}
{'': [nan, 0.22795224977043071]}
{'': [nan, 0.22094524793388384], 'false': [nan, 0.22094524793388384]}
{'': [nan, 0.21712353580485622], 'false': [nan, 0.21712353580485622]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.399
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048763;  // std dev = 8.56e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839133;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11231637819360621;  // std dev = 8.43e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1015963294878363;  // std dev = 1.49e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926074;  // std dev = 8.30e-08, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839682;  // std dev = 6.14e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07877675473109157;  // std dev = 6.32e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 4.59e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06842697784420265;  // std dev = 5.27e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06419184008202626;  // std dev = 2.36e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.450', 'seconds']
Refined model CLL: -0.064142


******************************************
Best model found
******************************************
Results 

CLL : -0.070753 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.399 

Total Inference Time : 0.9761395454406738 

Total revision time: 3.91492280960083
Best scored revision CLL: -0.064142


Results 

CLL : -0.070753 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.934993124008179 

Total Inference Time : 0.9761395454406738 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.259
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20378000306067348;  // std dev = 10.792, 515.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 1.86e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18466401750259373;  // std dev = 10.730, 504.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14566191823045935;  // std dev = 10.825, 521.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.10159632948783628;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14554214883058234;  // std dev = 10.627, 487.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08552512268693487;  // std dev = 10.909, 537.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07819476726508115;  // std dev = 10.836, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06149459247309635;  // std dev = 10.847, 525.000 (wgt'ed) examples reached here.  /* #neg=347 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( genre(B, I) )
%   | then return 0.48240430872891854;  // std dev = 5.418, 167.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=129 */
%   | else return -0.14066053718900343;  // std dev = 6.456, 328.000 (wgt'ed) examples reached here.  /* #neg=279 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0460624412652267;  // std dev = 9.933, 500.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.01624187140897246;  // std dev = 10.083, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.627', 'seconds']
Parameter learned model CLL:-0.369493 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 14, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.792, 337, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.86e-09, 12, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.73, 326, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [9.13e-09, 12, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.825, 343, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 11, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.627, 309, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 10, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.909, 359, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [8.33e-09, 14, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.836, 345, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.73e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.847, 347, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.73e-09, 12, 0], 'false,true': [5.418, 38, 129], 'false,false': [6.456, 279, 49]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 9, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.933, 322, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.73e-09, 10, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.083, 356, 178]}]
{'': [-1.1895246692412391e-17, 0.2261702328211924], 'false': [nan, 0.2261702328211924], 'true': [nan, -1.1895246692412391e-17], 'true,false': [nan, -1.1895246692412391e-17], 'true,false,false': [nan, -1.1895246692412391e-17]}
{'': [2.3129646346357427e-18, 0.2284423028470679], 'false': [nan, 0.22844230284706385], 'true': [nan, 2.3129646346357427e-18], 'true,false': [nan, 2.3129646346357427e-18]}
{'': [6.938893903907228e-18, 0.22492549025386704], 'false': [nan, 0.22492549025386704], 'true': [nan, 6.938893903907228e-18], 'true,false': [nan, 6.938893903907228e-18], 'true,false,false': [nan, 6.938893903907228e-18]}
{'': [0.0, 0.2319105785326068], 'false': [nan, 0.2319105785326075], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [0.0, 0.2215980219787851], 'false': [nan, 0.22159802197878484], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [4.956352788505163e-18, 0.22451001539142412], 'false': [nan, 0.22451001539142412], 'true': [nan, 4.956352788505163e-18], 'true,false': [4.956352788505163e-18, nan]}
{'': [1.1564823173178713e-18, 0.22409433106575968], 'false': [nan, 0.22409433106575968], 'true': [nan, 1.1564823173178713e-18], 'true,false': [1.1564823173178713e-18, nan]}
{'': [1.1564823173178713e-18, 0.2302867054382215], 'false': [0.17576822403097808, 0.12707279892921036], 'true': [nan, 1.1564823173178713e-18], 'true,false': [nan, 1.1564823173178713e-18], 'true,false,false': [nan, 1.1564823173178713e-18]}
{'': [0.0, 0.197331691017778], 'false': [nan, 0.19733169101777812], 'true': [nan, 0.0], 'true,false': [0.0, nan]}
{'': [1.3877787807814458e-18, 0.19037063459583015], 'false': [nan, 0.19037063459583015], 'true': [nan, 1.3877787807814458e-18], 'true,false': [nan, 1.3877787807814458e-18], 'true,false,false': [nan, 1.3877787807814458e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 2.132
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048766;  // std dev = 6.99e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return -0.14185106490048824;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.1254446385283918;  // std dev = 0.000, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360628;  // std dev = 4.47e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.11231637819360692;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( movie(D, A), movie(D, B) )
%   | then if ( actor(A), director(B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783619;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else return -0.1015963294878366;  // std dev = 0.000, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926097;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926103;  // std dev = 0.000, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else return -0.0926912761892607;  // std dev = 5.96e-08, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839685;  // std dev = 1.05e-08, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.08518475138839679;  // std dev = 1.05e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.08518475138839678;  // std dev = 7.45e-08, 266.000 (wgt'ed) examples reached here.  /* #neg=266 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109172;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109172;  // std dev = 2.24e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.07877675473109144;  // std dev = 5.77e-08, 277.000 (wgt'ed) examples reached here.  /* #neg=277 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else return -0.07324622576333693;  // std dev = 1.03e-07, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420262;  // std dev = 2.36e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else return -0.06842697784420261;  // std dev = 4.94e-08, 258.000 (wgt'ed) examples reached here.  /* #neg=258 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06419184008202619;  // std dev = 6.97e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.375', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.132 

Total Inference Time : 1.0354161262512207 

Total revision time: 5.594330039978027
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 5.614400354385376 

Total Inference Time : 1.0354161262512207 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.665
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18903128804068875;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16687916923739254;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14999623273383092;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13367642779560318;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07830986470810031;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06157782439178505;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08940637570879682;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.01531627029877331;  // std dev = 0.457, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0630241001143806;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.036971393819426754;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.231', 'seconds']
Parameter learned model CLL:-0.385188 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.487, 91, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.477, 90, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.446, 87, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.413, 84, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.544, 97, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.553, 98, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.39, 82, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.457, 106, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.413, 84, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.467, 89, 45]}]
{'': [nan, 0.2213992214532882], 'false': [nan, 0.2213992214532882]}
{'': [nan, 0.22222222222222401], 'false': [nan, 0.22222222222222401]}
{'': [nan, 0.22469008264462764], 'false': [nan, 0.22469008264462764]}
{'': [nan, 0.2271498107084902], 'false': [nan, 0.2271498107084902]}
{'': [nan, 0.21647490577266398], 'false': [nan, 0.21647490577266398]}
{'': [nan, 0.21565846740671868], 'false': [nan, 0.21565846740671868]}
{'': [nan, 0.22878045756091542], 'false': [nan, 0.22878045756091542]}
{'': [nan, 0.20920135081794602]}
{'': [nan, 0.22714981070849094], 'false': [nan, 0.22714981070849094]}
{'': [nan, 0.22304522165293003], 'false': [nan, 0.22304522165293003]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.338
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.14185106490048763;  // std dev = 8.16e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1254446385283915;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1123163781936062;  // std dev = 7.74e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.10420698962803597;  // std dev = 0.236, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926097;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.09247195404617099;  // std dev = 1.49e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08757870955510286;  // std dev = 0.210, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07843018035385457;  // std dev = 4.94e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07294549008989211;  // std dev = 5.27e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06816367364667932;  // std dev = 3.65e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06395884938362803;  // std dev = 5.42e-05, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.515', 'seconds']
Refined model CLL: -0.064515


******************************************
Best model found
******************************************
Results 

CLL : -0.067716 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.338 

Total Inference Time : 0.8707242012023926 

Total revision time: 3.586356857299805
Best scored revision CLL: -0.064515


Results 

CLL : -0.067716 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.6064271717071534 

Total Inference Time : 0.8707242012023926 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.645
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21814893509951241;  // std dev = 5.367, 125.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1627998475099491;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11340881221912175;  // std dev = 5.579, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12011639235742906;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12027064911843367;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07702690387203612;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05962022096164393;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.016792842045471445;  // std dev = 0.458, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06770221406107767;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.023071799214815506;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.188', 'seconds']
Parameter learned model CLL:-0.382085 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.367, 80, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.477, 90, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.579, 101, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.477, 90, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.39, 82, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.477, 90, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.487, 91, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.458, 105, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.39, 82, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.516, 94, 45]}]
{'': [nan, 0.23040000000000088], 'false': [nan, 0.23040000000000088]}
{'': [nan, 0.22222222222222215], 'false': [nan, 0.22222222222222215]}
{'': [nan, 0.2132201163445301], 'false': [nan, 0.2132201163445301]}
{'': [nan, 0.2222222222222221], 'false': [nan, 0.2222222222222221]}
{'': [nan, 0.22878045756091428], 'false': [nan, 0.22878045756091428]}
{'': [nan, 0.22222222222222096], 'false': [nan, 0.22222222222222096]}
{'': [nan, 0.22139922145328597], 'false': [nan, 0.22139922145328597]}
{'': [nan, 0.21000000000000038]}
{'': [nan, 0.22878045756091442], 'false': [nan, 0.22878045756091442]}
{'': [nan, 0.2189327674551011], 'false': [nan, 0.2189327674551011]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.33
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.16e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.28052658778904555;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1273592304945724;  // std dev = 0.154, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11212563231671362;  // std dev = 5.96e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( female(A) )
%   | | | then return 0.5227462394421614;  // std dev = 0.766, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.521327969994156;  // std dev = 0.766, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.42563689171829444;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.33164242327801474;  // std dev = 0.000281, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.10483546315393887;  // std dev = 0.263, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32622431531295376;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.26263119192392115;  // std dev = 0.000238, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.09570079768651568;  // std dev = 0.248, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then return 0.25893019887548685;  // std dev = 0.000913, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.0869798094199633;  // std dev = 0.235, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21240879695734904;  // std dev = 0.000796, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.26205221211502083;  // std dev = 0.000237, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0836124035894145;  // std dev = 0.313, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17903851406484309;  // std dev = 0.000699, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.21452238535023999;  // std dev = 0.000262, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07465321581912893;  // std dev = 0.212, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06741343691935307;  // std dev = 1.05e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else return 0.14693907266184275;  // std dev = 0.331, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1360076456788511;  // std dev = 0.000559, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.20337713018873943;  // std dev = 0.000230, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06587100672303123;  // std dev = 0.236, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.574', 'seconds']
Refined model CLL: -0.06903


******************************************
Best model found
******************************************
Results 

CLL : -0.08127 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.33 

Total Inference Time : 0.8663663864135742 

Total revision time: 3.5725756645202638
Best scored revision CLL: -0.06903


Results 

CLL : -0.08127 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 3.5926459789276124 

Total Inference Time : 0.8663663864135742 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.71
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1781489350995135;  // std dev = 6.171, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18505025609949985;  // std dev = 6.033, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11735101461391281;  // std dev = 6.219, 181.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10369689362116796;  // std dev = 6.195, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08242638643535911;  // std dev = 6.211, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06756338402676366;  // std dev = 6.211, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06937174101421892;  // std dev = 6.146, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07817457831855133;  // std dev = 0.476, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07365298829620219;  // std dev = 5.991, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.040888952910357705;  // std dev = 6.073, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.247', 'seconds']
Parameter learned model CLL:-0.383341 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.171, 119, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.033, 104, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.219, 125, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.195, 122, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.211, 124, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.211, 124, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.146, 116, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.476, 105, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.991, 100, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.073, 108, 56]}]
{'': [nan, 0.2176000000000004], 'false': [nan, 0.2176000000000004]}
{'': [nan, 0.22750000000000034], 'false': [nan, 0.22750000000000034]}
{'': [nan, 0.21366869143188322], 'false': [nan, 0.21366869143188322]}
{'': [nan, 0.2156293397298309], 'false': [nan, 0.2156293397298309]}
{'': [nan, 0.21432098765431923], 'false': [nan, 0.21432098765431923]}
{'': [nan, 0.21432098765432334], 'false': [nan, 0.21432098765432334]}
{'': [nan, 0.21957815035154227], 'false': [nan, 0.21957815035154227]}
{'': [nan, 0.22684310018903722]}
{'': [nan, 0.23011176857330662], 'false': [nan, 0.23011176857330662]}
{'': [nan, 0.22486615110053645], 'false': [nan, 0.22486615110053645]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.482
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048766;  // std dev = 7.60e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else if ( female(A) )
%   | | | then return 0.822434649385226;  // std dev = 0.982, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.8248156017661784;  // std dev = 0.983, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839133;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7263798063385708;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.27376948023921005;  // std dev = 0.000432, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360617;  // std dev = 9.66e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5621648003949383;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.22288128000000973;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783634;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.42257487269269206;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.18639293344609012;  // std dev = 0.000313, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32414516131455223;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.15978683726981155;  // std dev = 0.000261, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09335116561820535;  // std dev = 0.067, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08513334139516542;  // std dev = 4.34e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else if ( female(A) )
%   | | | then return 0.25774936877998306;  // std dev = 3.65e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.24406190865554203;  // std dev = 0.390, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07873260809995952;  // std dev = 5.37e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.212556409347162;  // std dev = 0.007, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.17294449155569924;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17914665796305465;  // std dev = 0.006, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14933574322278254;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( actor(A) )
%   | | then return -0.07320792739069244;  // std dev = 3.16e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else return -0.29884215104561246;  // std dev = 0.553, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06750654385574076;  // std dev = 0.033, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15429744118737793;  // std dev = 0.006, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.13053538981432575;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06383520192014314;  // std dev = 0.021, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13521879424318728;  // std dev = 0.005, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.11719965772445014;  // std dev = 0.000954, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.377', 'seconds']
Refined model CLL: -0.065714


******************************************
Best model found
******************************************
Results 

CLL : -0.081633 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.482 

Total Inference Time : 0.9514224529266357 

Total revision time: 3.942314474105835
Best scored revision CLL: -0.065714


Results 

CLL : -0.081633 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 30.173072902679444 

Total Inference Time : 0.9514224529266357 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.693
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19148226843284694;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18903371209044217;  // std dev = 6.112, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1464339847847956;  // std dev = 6.182, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12856980568011897;  // std dev = 6.153, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08992983596017638;  // std dev = 6.227, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07498107507001121;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08727119846163103;  // std dev = 6.091, 161.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06087934751081546;  // std dev = 0.477, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0358361246546953;  // std dev = 6.191, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.058455526071788715;  // std dev = 6.048, 157.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.188', 'seconds']
Parameter learned model CLL:-0.403301 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.218, 116, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.112, 105, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.182, 112, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.153, 109, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.227, 117, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.218, 116, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.091, 103, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.477, 107, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.191, 113, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.048, 99, 58]}]
{'': [nan, 0.2222222222222225], 'false': [nan, 0.2222222222222225]}
{'': [nan, 0.22921449809928798], 'false': [nan, 0.22921449809928798]}
{'': [nan, 0.22477508650518951], 'false': [nan, 0.22477508650518951]}
{'': [nan, 0.22668435583921964], 'false': [nan, 0.22668435583921964]}
{'': [nan, 0.22158367346939026], 'false': [nan, 0.22158367346939026]}
{'': [nan, 0.22222222222222454], 'false': [nan, 0.22222222222222454]}
{'': [nan, 0.23046950349137854], 'false': [nan, 0.23046950349137854]}
{'': [nan, 0.2279522497704332]}
{'': [nan, 0.224137341404192], 'false': [nan, 0.224137341404192]}
{'': [nan, 0.23295062680027645], 'false': [nan, 0.23295062680027645]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.424
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048782;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1254446385283911;  // std dev = 7.30e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360618;  // std dev = 1.00e-07, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.10159632948783633;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.092691276189261;  // std dev = 3.94e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0851847513883968;  // std dev = 6.14e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07877675473109157;  // std dev = 6.32e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06842697784420267;  // std dev = 4.01e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( actor(A) )
%   | | | then return -0.06419184008202626;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | | else return -0.24654842916148223;  // std dev = 0.893, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.481', 'seconds']
Refined model CLL: -0.06427


******************************************
Best model found
******************************************
Results 

CLL : -0.076691 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.424 

Total Inference Time : 1.001375436782837 

Total revision time: 3.9594673080444336
Best scored revision CLL: -0.06427


Results 

CLL : -0.076691 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 30.190225736618043 

Total Inference Time : 1.001375436782837 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.296
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21132353827411163;  // std dev = 10.730, 504.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839138;  // std dev = 1.86e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( genre(B, G), movie(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16755102113493428;  // std dev = 10.862, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15453439720275738;  // std dev = 10.765, 510.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.10159632948783631;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10676413688651162;  // std dev = 10.948, 545.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(B, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10895751142936108;  // std dev = 10.776, 512.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E) )
%   | | then return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08590305225909244;  // std dev = 10.798, 516.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.07877675473109172;  // std dev = 3.73e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(A, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06059897899008703;  // std dev = 10.868, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( genre(B, I) )
%   | then return 0.45751090959877033;  // std dev = 5.728, 173.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=129 */
%   | else return -0.14487897648445303;  // std dev = 6.479, 342.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=49 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(B, E) )
%   | | then return -0.06842697784420272;  // std dev = 2.63e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( genre(B, F), movie(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.060587321318293315;  // std dev = 9.887, 484.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then if ( movie(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( genre(A, E), movie(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( genre(B, G), movie(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( genre(A, I), movie(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.024497307604683816;  // std dev = 10.017, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.503', 'seconds']
Parameter learned model CLL:-0.371167 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 8, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.73, 326, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E), movie(F, E)', 'false': 'genre(B, G), movie(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [1.86e-09, 14, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.862, 350, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 7, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.765, 332, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 15, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.948, 367, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 10, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.776, 334, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [7.45e-09, 13, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.798, 338, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(A, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.73e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.868, 351, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.63e-09, 7, 0], 'false,true': [5.728, 44, 129], 'false,false': [6.479, 293, 49]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(B, E)', 'false': 'genre(B, F), movie(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [2.63e-09, 12, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.887, 306, 178]}]
['workedunder(A, B)', {'': 'genre(A, C), genre(B, C)', 'true': 'movie(D, C)', 'true,false': 'genre(A, E), movie(F, E)', 'true,false,false': 'genre(B, G), movie(H, G)', 'false': 'genre(A, I), movie(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.73e-09, 10, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.017, 350, 178]}]
{'': [-6.938893903907228e-18, 0.22844230284706765], 'false': [nan, 0.22844230284706765], 'true': [nan, -6.938893903907228e-18], 'true,false': [nan, -6.938893903907228e-18], 'true,false,false': [nan, -6.938893903907228e-18]}
{'': [3.96508223080413e-18, 0.2234705004591404], 'false': [nan, 0.22347050045913577], 'true': [nan, 3.96508223080413e-18], 'true,false': [nan, 3.96508223080413e-18]}
{'': [-1.982541115402065e-18, 0.227204921184157], 'false': [nan, 0.227204921184157], 'true': [nan, -1.982541115402065e-18], 'true,false': [nan, -1.982541115402065e-18], 'true,false,false': [nan, -1.982541115402065e-18]}
{'': [-5.551115123125783e-18, 0.2199343489605219], 'false': [nan, 0.21993434896052313], 'true': [nan, -5.551115123125783e-18], 'true,false': [-5.551115123125783e-18, nan]}
{'': [0.0, 0.2267913818359389], 'false': [nan, 0.22679138183593958], 'true': [nan, 0.0], 'true,false': [nan, 0.0], 'true,false,false': [nan, 0.0]}
{'': [4.270088556250602e-18, 0.22596298299380918], 'false': [nan, 0.22596298299380918], 'true': [nan, 4.270088556250602e-18], 'true,false': [4.270088556250602e-18, nan]}
{'': [1.1564823173178713e-18, 0.22326249548851249], 'false': [nan, 0.22326249548851249], 'true': [nan, 1.1564823173178713e-18], 'true,false': [1.1564823173178713e-18, nan]}
{'': [9.912705577010326e-19, 0.2261702328211887], 'false': [0.18964883557753318, 0.12274717006942222], 'true': [nan, 9.912705577010326e-19], 'true,false': [nan, 9.912705577010326e-19], 'true,false,false': [nan, 9.912705577010326e-19]}
{'': [5.782411586589357e-19, 0.2019555737593181], 'false': [nan, 0.20195557375931436], 'true': [nan, 5.782411586589357e-19], 'true,false': [5.782411586589357e-19, nan]}
{'': [1.3877787807814458e-18, 0.19002550456350453], 'false': [nan, 0.19002550456350453], 'true': [nan, 1.3877787807814458e-18], 'true,false': [nan, 1.3877787807814458e-18], 'true,false,false': [nan, 1.3877787807814458e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
1;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
2;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
3;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
4;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
5;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
6;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
7;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
8;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true
9;;workedunder(A, B) :- genre(A, C), genre(B, C).;true;true


Refining candidate
***************************
Model training time 2.179
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.14185106490048768;  // std dev = 5.37e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.1418510649004881;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.1254446385283916;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.12544463852839183;  // std dev = 0.000, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.11231637819360626;  // std dev = 4.71e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else return -0.11231637819360685;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.10159632948783626;  // std dev = 2.58e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.10159632948783656;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.09269127618926098;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.09269127618926104;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.09269127618926065;  // std dev = 2.11e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.08518475138839687;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.0851847513883968;  // std dev = 1.29e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return -0.08518475138839678;  // std dev = 7.74e-08, 274.000 (wgt'ed) examples reached here.  /* #neg=274 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07877675473109179;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07877675473109166;  // std dev = 3.33e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return -0.07877675473109143;  // std dev = 5.77e-08, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else return -0.07324622576333692;  // std dev = 1.04e-07, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.06842697784420272;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06842697784420268;  // std dev = 2.11e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.06842697784420285;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( genre(A, C), genre(B, C) )
%   then return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else return -0.06419184008202623;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.454', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.179 

Total Inference Time : 1.0192463397979736 

Total revision time: 5.528877115249633
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 31.759635543823244 

Total Inference Time : 1.0192463397979736 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.736
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18188994229375685;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14065676770069607;  // std dev = 5.588, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11824166105968963;  // std dev = 5.596, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11031685157223714;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1129293787360904;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.095283976087128;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11398146562388307;  // std dev = 5.303, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06524250825716145;  // std dev = 0.477, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.019866475624208207;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0011998125244668146;  // std dev = 5.612, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.094', 'seconds']
Parameter learned model CLL:-0.377619 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.516, 94, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.588, 102, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.596, 103, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.553, 98, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.467, 89, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.303, 75, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.477, 84, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.544, 97, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.612, 105, 45]}]
{'': [nan, 0.21893276745510165], 'false': [nan, 0.21893276745510165]}
{'': [nan, 0.21241149521032854], 'false': [nan, 0.21241149521032854]}
{'': [nan, 0.2116051862673479], 'false': [nan, 0.2116051862673479]}
{'': [nan, 0.21565846740671948], 'false': [nan, 0.21565846740671948]}
{'': [nan, 0.2230452216529292], 'false': [nan, 0.2230452216529292]}
{'': [nan, 0.22386794052801098], 'false': [nan, 0.22386794052801098]}
{'': [nan, 0.2343750000000005], 'false': [nan, 0.2343750000000005]}
{'': [nan, 0.22714981070849086]}
{'': [nan, 0.21647490577266315], 'false': [nan, 0.21647490577266315]}
{'': [nan, 0.20999999999999955], 'false': [nan, 0.20999999999999955]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.435
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.14185106490048766;  // std dev = 7.30e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1254446385283914;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.11387316090116123;  // std dev = 0.114, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10145432300581077;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09257236261350775;  // std dev = 0.000, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08508382127119181;  // std dev = 2.36e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08518475138839686;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07869008094510407;  // std dev = 2.98e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07317103138293214;  // std dev = 1.67e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06836077149256654;  // std dev = 3.32e-05, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.0641918400820262;  // std dev = 2.63e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( actor(A) )
%   | | | then return -0.06413378418192114;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | | else return -0.12553044025192112;  // std dev = 0.398, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.454', 'seconds']
Refined model CLL: -0.064631


******************************************
Best model found
******************************************
Results 

CLL : -0.068688 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.435 

Total Inference Time : 0.8573145866394043 

Total revision time: 3.770021911621094
Best scored revision CLL: -0.064631


Results 

CLL : -0.068688 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 30.0007803401947 

Total Inference Time : 0.8573145866394043 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.654
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18188994229375685;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1780457691027836;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14937369760869693;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08831810998485519;  // std dev = 5.596, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10227989911189936;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06717886070297364;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.047825218974032954;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03846154635033073;  // std dev = 0.463, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.026558774914963206;  // std dev = 5.588, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.045938350778159845;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.205', 'seconds']
Parameter learned model CLL:-0.36729 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.516, 94, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.435, 86, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.446, 87, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.596, 103, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.477, 90, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.544, 97, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.571, 100, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.463, 100, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.588, 102, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.487, 91, 45]}]
{'': [nan, 0.21893276745510165], 'false': [nan, 0.21893276745510165]}
{'': [nan, 0.22551133383835392], 'false': [nan, 0.22551133383835392]}
{'': [nan, 0.22469008264462845], 'false': [nan, 0.22469008264462845]}
{'': [nan, 0.21160518626734762], 'false': [nan, 0.21160518626734762]}
{'': [nan, 0.2222222222222214], 'false': [nan, 0.2222222222222214]}
{'': [nan, 0.2164749057726635], 'false': [nan, 0.2164749057726635]}
{'': [nan, 0.21403091557669388], 'false': [nan, 0.21403091557669388]}
{'': [nan, 0.21403091557669487]}
{'': [nan, 0.2124114952103299], 'false': [nan, 0.2124114952103299]}
{'': [nan, 0.2213992214532874], 'false': [nan, 0.2213992214532874]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.443
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.16e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839147;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360624;  // std dev = 5.77e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783624;  // std dev = 4.83e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.30348671702059077;  // std dev = 0.405, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.3027377983188709;  // std dev = 0.404, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return -0.092691276189261;  // std dev = 3.65e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2585300091043425;  // std dev = 0.000481, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12149529095069701;  // std dev = 7.30e-05, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08518475138839679;  // std dev = 2.36e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07877675473109158;  // std dev = 5.77e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21212680637775977;  // std dev = 0.000420, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10913654230831273;  // std dev = 7.28e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17883217353454905;  // std dev = 0.000369, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.09898058222900712;  // std dev = 5.45e-05, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15405927153963983;  // std dev = 0.000327, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09045573689768284;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420265;  // std dev = 4.71e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | | else return -0.11967198614957852;  // std dev = 0.435, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.13499035265589265;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.12558382552673636;  // std dev = 0.214, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return -0.0639717592022826;  // std dev = 0.008, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.436', 'seconds']
Refined model CLL: -0.065845


******************************************
Best model found
******************************************
Results 

CLL : -0.07214 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.443 

Total Inference Time : 0.8731851577758789 

Total revision time: 3.7105709285736084
Best scored revision CLL: -0.065845


Results 

CLL : -0.07214 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 29.941329357147218 

Total Inference Time : 0.8731851577758789 

